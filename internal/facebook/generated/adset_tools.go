// Code generated by codegen. DO NOT EDIT.

package generated

import (
	"context"
	"encoding/json"

	"github.com/mark3labs/mcp-go/mcp"
	"github.com/mark3labs/mcp-go/server"
)

// Tool schemas for AdSet
var (
	list_ad_set_activitiesSchema = json.RawMessage(`{"additionalProperties":true,"properties":{"after":{"description":"Cursor for pagination (next page)","type":"string"},"before":{"description":"Cursor for pagination (previous page)","type":"string"},"business_id":{"description":"business_id","type":"string"},"category":{"description":"category (enum: adcampaignactivities_category_enum_param)","type":"string"},"fields":{"description":"Fields to return","items":{"type":"string"},"type":"array"},"id":{"description":"AdSet ID","type":"string"},"limit":{"description":"Maximum number of results","type":"integer"},"since":{"description":"since","type":"string"},"uid":{"description":"uid","type":"integer"},"until":{"description":"until","type":"string"}},"required":["id"],"type":"object"}`)

	list_ad_set_ad_studiesSchema = json.RawMessage(`{"additionalProperties":true,"properties":{"after":{"description":"Cursor for pagination (next page)","type":"string"},"before":{"description":"Cursor for pagination (previous page)","type":"string"},"fields":{"description":"Fields to return","items":{"type":"string"},"type":"array"},"id":{"description":"AdSet ID","type":"string"},"limit":{"description":"Maximum number of results","type":"integer"}},"required":["id"],"type":"object"}`)

	list_ad_set_adcreativesSchema = json.RawMessage(`{"additionalProperties":true,"properties":{"after":{"description":"Cursor for pagination (next page)","type":"string"},"before":{"description":"Cursor for pagination (previous page)","type":"string"},"fields":{"description":"Fields to return","items":{"type":"string"},"type":"array"},"id":{"description":"AdSet ID","type":"string"},"limit":{"description":"Maximum number of results","type":"integer"}},"required":["id"],"type":"object"}`)

	remove_adlabels_from_ad_setSchema = json.RawMessage(`{"additionalProperties":true,"properties":{"adlabels":{"description":"adlabels","items":{"additionalProperties":true,"type":"object"},"type":"array"},"after":{"description":"Cursor for pagination (next page)","type":"string"},"before":{"description":"Cursor for pagination (previous page)","type":"string"},"execution_options":{"description":"execution_options","items":{"type":"string"},"type":"array"},"fields":{"description":"Fields to return","items":{"type":"string"},"type":"array"},"id":{"description":"AdSet ID","type":"string"},"limit":{"description":"Maximum number of results","type":"integer"}},"required":["id","adlabels"],"type":"object"}`)

	create_ad_set_adlabelSchema = json.RawMessage(`{"additionalProperties":false,"properties":{"adlabels":{"description":"adlabels","items":{"additionalProperties":true,"type":"object"},"type":"array"},"execution_options":{"description":"execution_options","items":{"type":"string"},"type":"array"},"id":{"description":"AdSet ID","type":"string"}},"required":["id","adlabels"],"type":"object"}`)

	get_ad_set_adrules_governedSchema = json.RawMessage(`{"additionalProperties":true,"properties":{"after":{"description":"Cursor for pagination (next page)","type":"string"},"before":{"description":"Cursor for pagination (previous page)","type":"string"},"fields":{"description":"Fields to return","items":{"type":"string"},"type":"array"},"id":{"description":"AdSet ID","type":"string"},"limit":{"description":"Maximum number of results","type":"integer"},"pass_evaluation":{"description":"pass_evaluation","type":"boolean"}},"required":["id"],"type":"object"}`)

	list_ad_set_adsSchema = json.RawMessage(`{"additionalProperties":true,"properties":{"after":{"description":"Cursor for pagination (next page)","type":"string"},"before":{"description":"Cursor for pagination (previous page)","type":"string"},"date_preset":{"description":"date_preset (enum: adcampaignads_date_preset_enum_param)","type":"string"},"effective_status":{"description":"effective_status","items":{"type":"string"},"type":"array"},"fields":{"description":"Fields to return","items":{"type":"string"},"type":"array"},"id":{"description":"AdSet ID","type":"string"},"limit":{"description":"Maximum number of results","type":"integer"},"time_range":{"description":"time_range","type":"string"},"updated_since":{"description":"updated_since","type":"integer"}},"required":["id"],"type":"object"}`)

	list_ad_set_asyncadrequestsSchema = json.RawMessage(`{"additionalProperties":true,"properties":{"after":{"description":"Cursor for pagination (next page)","type":"string"},"before":{"description":"Cursor for pagination (previous page)","type":"string"},"fields":{"description":"Fields to return","items":{"type":"string"},"type":"array"},"id":{"description":"AdSet ID","type":"string"},"limit":{"description":"Maximum number of results","type":"integer"},"statuses":{"description":"statuses","items":{"type":"string"},"type":"array"}},"required":["id"],"type":"object"}`)

	create_ad_set_budget_scheduleSchema = json.RawMessage(`{"additionalProperties":false,"properties":{"budget_value":{"description":"budget_value","type":"integer"},"budget_value_type":{"description":"budget_value_type (enum: adcampaignbudget_schedules_budget_value_type_enum_param)","type":"string"},"id":{"description":"AdSet ID","type":"string"},"time_end":{"description":"time_end","type":"integer"},"time_start":{"description":"time_start","type":"integer"}},"required":["id","budget_value","budget_value_type","time_end","time_start"],"type":"object"}`)

	list_ad_set_copiesSchema = json.RawMessage(`{"additionalProperties":true,"properties":{"after":{"description":"Cursor for pagination (next page)","type":"string"},"before":{"description":"Cursor for pagination (previous page)","type":"string"},"date_preset":{"description":"date_preset (enum: adcampaigncopies_date_preset_enum_param)","type":"string"},"effective_status":{"description":"effective_status","items":{"type":"string"},"type":"array"},"fields":{"description":"Fields to return","items":{"type":"string"},"type":"array"},"id":{"description":"AdSet ID","type":"string"},"is_completed":{"description":"is_completed","type":"boolean"},"limit":{"description":"Maximum number of results","type":"integer"},"time_range":{"description":"time_range","type":"string"}},"required":["id"],"type":"object"}`)

	create_ad_set_copieSchema = json.RawMessage(`{"additionalProperties":false,"properties":{"campaign_id":{"description":"campaign_id","type":"string"},"create_dco_adset":{"description":"create_dco_adset","type":"boolean"},"deep_copy":{"description":"deep_copy","type":"boolean"},"end_time":{"description":"end_time","type":"string"},"id":{"description":"AdSet ID","type":"string"},"rename_options":{"additionalProperties":true,"description":"rename_options","type":"object"},"start_time":{"description":"start_time","type":"string"},"status_option":{"description":"status_option (enum: adcampaigncopies_status_option_enum_param)","type":"string"}},"required":["id"],"type":"object"}`)

	get_ad_set_delivery_estimateSchema = json.RawMessage(`{"additionalProperties":true,"properties":{"after":{"description":"Cursor for pagination (next page)","type":"string"},"before":{"description":"Cursor for pagination (previous page)","type":"string"},"fields":{"description":"Fields to return","items":{"type":"string"},"type":"array"},"id":{"description":"AdSet ID","type":"string"},"limit":{"description":"Maximum number of results","type":"integer"},"optimization_goal":{"description":"optimization_goal (enum: adcampaigndelivery_estimate_optimization_goal_enum_param)","type":"string"},"promoted_object":{"additionalProperties":true,"description":"promoted_object","type":"object"},"targeting_spec":{"description":"targeting_spec","type":"string"}},"required":["id"],"type":"object"}`)

	get_ad_set_insightsSchema = json.RawMessage(`{"additionalProperties":true,"properties":{"action_attribution_windows":{"description":"action_attribution_windows","items":{"type":"string"},"type":"array"},"action_breakdowns":{"description":"action_breakdowns","items":{"type":"string"},"type":"array"},"action_report_time":{"description":"action_report_time (enum: adcampaigninsights_action_report_time_enum_param)","type":"string"},"after":{"description":"Cursor for pagination (next page)","type":"string"},"before":{"description":"Cursor for pagination (previous page)","type":"string"},"breakdowns":{"description":"breakdowns","items":{"type":"string"},"type":"array"},"date_preset":{"description":"date_preset (enum: adcampaigninsights_date_preset_enum_param)","type":"string"},"default_summary":{"description":"default_summary","type":"boolean"},"export_columns":{"description":"export_columns","items":{"type":"string"},"type":"array"},"export_format":{"description":"export_format","type":"string"},"export_name":{"description":"export_name","type":"string"},"fields":{"description":"Fields to return","items":{"type":"string"},"type":"array"},"filtering":{"description":"filtering","items":{"additionalProperties":true,"type":"object"},"type":"array"},"id":{"description":"AdSet ID","type":"string"},"level":{"description":"level (enum: adcampaigninsights_level_enum_param)","type":"string"},"limit":{"description":"Maximum number of results","type":"integer"},"product_id_limit":{"description":"product_id_limit","type":"integer"},"sort":{"description":"sort","items":{"type":"string"},"type":"array"},"summary":{"description":"summary","items":{"type":"string"},"type":"array"},"summary_action_breakdowns":{"description":"summary_action_breakdowns","items":{"type":"string"},"type":"array"},"time_increment":{"description":"time_increment","type":"string"},"time_range":{"description":"time_range","type":"string"},"time_ranges":{"description":"time_ranges","items":{"additionalProperties":true,"type":"object"},"type":"array"},"use_account_attribution_setting":{"description":"use_account_attribution_setting","type":"boolean"},"use_unified_attribution_setting":{"description":"use_unified_attribution_setting","type":"boolean"}},"required":["id"],"type":"object"}`)

	create_ad_set_insights_reportSchema = json.RawMessage(`{"additionalProperties":false,"properties":{"action_attribution_windows":{"description":"action_attribution_windows","items":{"type":"string"},"type":"array"},"action_breakdowns":{"description":"action_breakdowns","items":{"type":"string"},"type":"array"},"action_report_time":{"description":"action_report_time (enum: adcampaigninsights_action_report_time_enum_param)","type":"string"},"breakdowns":{"description":"breakdowns","items":{"type":"string"},"type":"array"},"date_preset":{"description":"date_preset (enum: adcampaigninsights_date_preset_enum_param)","type":"string"},"default_summary":{"description":"default_summary","type":"boolean"},"export_columns":{"description":"export_columns","items":{"type":"string"},"type":"array"},"export_format":{"description":"export_format","type":"string"},"export_name":{"description":"export_name","type":"string"},"fields":{"description":"fields","items":{"type":"string"},"type":"array"},"filtering":{"description":"filtering","items":{"additionalProperties":true,"type":"object"},"type":"array"},"id":{"description":"AdSet ID","type":"string"},"level":{"description":"level (enum: adcampaigninsights_level_enum_param)","type":"string"},"limit":{"description":"limit","type":"integer"},"product_id_limit":{"description":"product_id_limit","type":"integer"},"sort":{"description":"sort","items":{"type":"string"},"type":"array"},"summary":{"description":"summary","items":{"type":"string"},"type":"array"},"summary_action_breakdowns":{"description":"summary_action_breakdowns","items":{"type":"string"},"type":"array"},"time_increment":{"description":"time_increment","type":"string"},"time_range":{"description":"time_range","type":"string"},"time_ranges":{"description":"time_ranges","items":{"additionalProperties":true,"type":"object"},"type":"array"},"use_account_attribution_setting":{"description":"use_account_attribution_setting","type":"boolean"},"use_unified_attribution_setting":{"description":"use_unified_attribution_setting","type":"boolean"}},"required":["id"],"type":"object"}`)

	get_ad_set_message_delivery_estimateSchema = json.RawMessage(`{"additionalProperties":true,"properties":{"after":{"description":"Cursor for pagination (next page)","type":"string"},"before":{"description":"Cursor for pagination (previous page)","type":"string"},"bid_amount":{"description":"bid_amount","type":"integer"},"daily_budget":{"description":"daily_budget","type":"integer"},"fields":{"description":"Fields to return","items":{"type":"string"},"type":"array"},"is_direct_send_campaign":{"description":"is_direct_send_campaign","type":"boolean"},"lifetime_budget":{"description":"lifetime_budget","type":"integer"},"lifetime_in_days":{"description":"lifetime_in_days","type":"integer"},"limit":{"description":"Maximum number of results","type":"integer"},"optimization_goal":{"description":"optimization_goal (enum: adcampaignmessage_delivery_estimate_optimization_goal_enum_param)","type":"string"},"pacing_type":{"description":"pacing_type (enum: adcampaignmessage_delivery_estimate_pacing_type_enum_param)","type":"string"},"promoted_object":{"additionalProperties":true,"description":"promoted_object","type":"object"},"targeting_spec":{"description":"targeting_spec","type":"string"}},"type":"object"}`)

	list_ad_set_targetingsentencelinesSchema = json.RawMessage(`{"additionalProperties":true,"properties":{"after":{"description":"Cursor for pagination (next page)","type":"string"},"before":{"description":"Cursor for pagination (previous page)","type":"string"},"fields":{"description":"Fields to return","items":{"type":"string"},"type":"array"},"id":{"description":"AdSet ID","type":"string"},"limit":{"description":"Maximum number of results","type":"integer"}},"required":["id"],"type":"object"}`)

	delete_ad_setSchema = json.RawMessage(`{"additionalProperties":true,"properties":{"after":{"description":"Cursor for pagination (next page)","type":"string"},"before":{"description":"Cursor for pagination (previous page)","type":"string"},"fields":{"description":"Fields to return","items":{"type":"string"},"type":"array"},"id":{"description":"AdSet ID","type":"string"},"limit":{"description":"Maximum number of results","type":"integer"}},"required":["id"],"type":"object"}`)

	get_ad_setSchema = json.RawMessage(`{"additionalProperties":true,"properties":{"after":{"description":"Cursor for pagination (next page)","type":"string"},"am_call_tags":{"description":"am_call_tags","type":"string"},"before":{"description":"Cursor for pagination (previous page)","type":"string"},"date_preset":{"description":"date_preset (enum: adcampaign_date_preset)","type":"string"},"fields":{"description":"Fields to return","items":{"type":"string"},"type":"array"},"from_adtable":{"description":"from_adtable","type":"boolean"},"id":{"description":"AdSet ID","type":"string"},"limit":{"description":"Maximum number of results","type":"integer"},"time_range":{"description":"time_range","type":"string"}},"required":["id"],"type":"object"}`)

	update_ad_setSchema = json.RawMessage(`{"additionalProperties":false,"properties":{"account_id":{"description":"account_id","type":"string"},"adlabels":{"description":"adlabels","items":{"additionalProperties":true,"type":"object"},"type":"array"},"adset_schedule":{"description":"adset_schedule","items":{"additionalProperties":true,"type":"object"},"type":"array"},"attribution_spec":{"description":"attribution_spec","items":{"additionalProperties":true,"type":"object"},"type":"array"},"bid_adjustments":{"additionalProperties":true,"description":"bid_adjustments","type":"object"},"bid_amount":{"description":"bid_amount","type":"integer"},"bid_constraints":{"additionalProperties":true,"description":"bid_constraints","type":"object"},"bid_strategy":{"description":"bid_strategy (enum: adcampaign_bid_strategy)","type":"string"},"billing_event":{"description":"billing_event (enum: adcampaign_billing_event)","type":"string"},"campaign_attribution":{"additionalProperties":true,"description":"campaign_attribution","type":"object"},"campaign_spec":{"additionalProperties":true,"description":"campaign_spec","type":"object"},"creative_sequence":{"description":"creative_sequence","items":{"type":"string"},"type":"array"},"creative_sequence_repetition_pattern":{"description":"creative_sequence_repetition_pattern (enum: adcampaign_creative_sequence_repetition_pattern)","type":"string"},"daily_budget":{"description":"daily_budget","type":"integer"},"daily_imps":{"description":"daily_imps","type":"integer"},"daily_min_spend_target":{"description":"daily_min_spend_target","type":"integer"},"daily_spend_cap":{"description":"daily_spend_cap","type":"integer"},"date_format":{"description":"date_format","type":"string"},"destination_type":{"description":"destination_type (enum: adcampaign_destination_type)","type":"string"},"dsa_beneficiary":{"description":"dsa_beneficiary","type":"string"},"dsa_payor":{"description":"dsa_payor","type":"string"},"end_time":{"description":"end_time","type":"string"},"execution_options":{"description":"execution_options","items":{"type":"string"},"type":"array"},"existing_customer_budget_percentage":{"description":"existing_customer_budget_percentage","type":"integer"},"full_funnel_exploration_mode":{"description":"full_funnel_exploration_mode (enum: adcampaign_full_funnel_exploration_mode)","type":"string"},"id":{"description":"AdSet ID","type":"string"},"is_ba_skip_delayed_eligible":{"description":"is_ba_skip_delayed_eligible","type":"boolean"},"is_incremental_attribution_enabled":{"description":"is_incremental_attribution_enabled","type":"boolean"},"is_sac_cfca_terms_certified":{"description":"is_sac_cfca_terms_certified","type":"boolean"},"lifetime_budget":{"description":"lifetime_budget","type":"integer"},"lifetime_imps":{"description":"lifetime_imps","type":"integer"},"lifetime_min_spend_target":{"description":"lifetime_min_spend_target","type":"integer"},"lifetime_spend_cap":{"description":"lifetime_spend_cap","type":"integer"},"max_budget_spend_percentage":{"description":"max_budget_spend_percentage","type":"integer"},"min_budget_spend_percentage":{"description":"min_budget_spend_percentage","type":"integer"},"multi_optimization_goal_weight":{"description":"multi_optimization_goal_weight (enum: adcampaign_multi_optimization_goal_weight)","type":"string"},"name":{"description":"name","type":"string"},"optimization_goal":{"description":"optimization_goal (enum: adcampaign_optimization_goal)","type":"string"},"optimization_sub_event":{"description":"optimization_sub_event (enum: adcampaign_optimization_sub_event)","type":"string"},"pacing_type":{"description":"pacing_type","items":{"type":"string"},"type":"array"},"promoted_object":{"additionalProperties":true,"description":"promoted_object","type":"object"},"rb_prediction_id":{"description":"rb_prediction_id","type":"string"},"regional_regulated_categories":{"description":"regional_regulated_categories","items":{"type":"string"},"type":"array"},"regional_regulation_identities":{"description":"regional_regulation_identities","type":"string"},"rf_prediction_id":{"description":"rf_prediction_id","type":"string"},"start_time":{"description":"start_time","type":"string"},"status":{"description":"status (enum: adcampaign_status)","type":"string"},"targeting":{"description":"targeting","type":"string"},"time_based_ad_rotation_id_blocks":{"description":"time_based_ad_rotation_id_blocks","items":{"type":"string"},"type":"array"},"time_based_ad_rotation_intervals":{"description":"time_based_ad_rotation_intervals","items":{"type":"integer"},"type":"array"},"time_start":{"description":"time_start","type":"string"},"time_stop":{"description":"time_stop","type":"string"},"tune_for_category":{"description":"tune_for_category (enum: adcampaign_tune_for_category)","type":"string"}},"required":["id"],"type":"object"}`)
)

// ListAdSetActivitiesHandler handles list_ad_set_activities
func ListAdSetActivitiesHandler(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {

	// Use standard GET handler
	return StandardGETHandler(ctx, request, "activities", "AdSet", true)

}

// ListAdSetAdStudiesHandler handles list_ad_set_ad_studies
func ListAdSetAdStudiesHandler(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {

	// Use standard GET handler
	return StandardGETHandler(ctx, request, "ad_studies", "AdSet", true)

}

// ListAdSetAdcreativesHandler handles list_ad_set_adcreatives
func ListAdSetAdcreativesHandler(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {

	// Use standard GET handler
	return StandardGETHandler(ctx, request, "adcreatives", "AdSet", true)

}

// RemoveAdlabelsFromAdSetHandler handles remove_adlabels_from_ad_set
func RemoveAdlabelsFromAdSetHandler(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {

	// Use standard DELETE handler
	return StandardDELETEHandler(ctx, request, "adlabels")

}

// CreateAdSetAdlabelHandler handles create_ad_set_adlabel
func CreateAdSetAdlabelHandler(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {

	// Use standard POST handler
	return StandardPOSTHandler(ctx, request, "adlabels", true)

}

// GetAdSetAdrulesGovernedHandler handles get_ad_set_adrules_governed
func GetAdSetAdrulesGovernedHandler(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {

	// Use standard GET handler
	return StandardGETHandler(ctx, request, "adrules_governed", "AdSet", true)

}

// ListAdSetAdsHandler handles list_ad_set_ads
func ListAdSetAdsHandler(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {

	// Use standard GET handler
	return StandardGETHandler(ctx, request, "ads", "AdSet", true)

}

// ListAdSetAsyncadrequestsHandler handles list_ad_set_asyncadrequests
func ListAdSetAsyncadrequestsHandler(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {

	// Use standard GET handler
	return StandardGETHandler(ctx, request, "asyncadrequests", "AdSet", true)

}

// CreateAdSetBudgetScheduleHandler handles create_ad_set_budget_schedule
func CreateAdSetBudgetScheduleHandler(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {

	// Use standard POST handler
	return StandardPOSTHandler(ctx, request, "budget_schedules", true)

}

// ListAdSetCopiesHandler handles list_ad_set_copies
func ListAdSetCopiesHandler(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {

	// Use standard GET handler
	return StandardGETHandler(ctx, request, "copies", "AdSet", true)

}

// CreateAdSetCopieHandler handles create_ad_set_copie
func CreateAdSetCopieHandler(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {

	// Use standard POST handler
	return StandardPOSTHandler(ctx, request, "copies", true)

}

// GetAdSetDeliveryEstimateHandler handles get_ad_set_delivery_estimate
func GetAdSetDeliveryEstimateHandler(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {

	// Use standard GET handler
	return StandardGETHandler(ctx, request, "delivery_estimate", "AdSet", true)

}

// GetAdSetInsightsHandler handles get_ad_set_insights
func GetAdSetInsightsHandler(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {

	// Use standard GET handler
	return StandardGETHandler(ctx, request, "insights", "AdSet", true)

}

// CreateAdSetInsightsReportHandler handles create_ad_set_insights_report
func CreateAdSetInsightsReportHandler(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {

	// Use standard POST handler
	return StandardPOSTHandler(ctx, request, "insights", true)

}

// GetAdSetMessageDeliveryEstimateHandler handles get_ad_set_message_delivery_estimate
func GetAdSetMessageDeliveryEstimateHandler(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {

	// Use standard GET handler
	return StandardGETHandler(ctx, request, "message_delivery_estimate", "AdSet", false)

}

// ListAdSetTargetingsentencelinesHandler handles list_ad_set_targetingsentencelines
func ListAdSetTargetingsentencelinesHandler(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {

	// Use standard GET handler
	return StandardGETHandler(ctx, request, "targetingsentencelines", "AdSet", true)

}

// DeleteAdSetHandler handles delete_ad_set
func DeleteAdSetHandler(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {

	// Use standard DELETE handler
	return StandardDELETEHandler(ctx, request, "")

}

// GetAdSetHandler handles get_ad_set
func GetAdSetHandler(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {

	// Use standard GET handler
	return StandardGETHandler(ctx, request, "", "AdSet", true)

}

// UpdateAdSetHandler handles update_ad_set
func UpdateAdSetHandler(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {

	// Use standard POST handler
	return StandardPOSTHandler(ctx, request, "", true)

}

// RegisterAdSetTools registers all AdSet tools with the MCP server
func RegisterAdSetTools(s *server.MCPServer) error {

	s.AddTool(
		mcp.NewToolWithRawSchema(
			"list_ad_set_activities",
			"List activities for this AdSet Returns AdActivity.",
			list_ad_set_activitiesSchema,
		),
		ListAdSetActivitiesHandler,
	)

	s.AddTool(
		mcp.NewToolWithRawSchema(
			"list_ad_set_ad_studies",
			"List ad_studies for this AdSet Returns AdStudy.",
			list_ad_set_ad_studiesSchema,
		),
		ListAdSetAdStudiesHandler,
	)

	s.AddTool(
		mcp.NewToolWithRawSchema(
			"list_ad_set_adcreatives",
			"List adcreatives for this AdSet Returns AdCreative.",
			list_ad_set_adcreativesSchema,
		),
		ListAdSetAdcreativesHandler,
	)

	s.AddTool(
		mcp.NewToolWithRawSchema(
			"remove_adlabels_from_ad_set",
			"Remove adlabels from this AdSet Required: adlabels",
			remove_adlabels_from_ad_setSchema,
		),
		RemoveAdlabelsFromAdSetHandler,
	)

	s.AddTool(
		mcp.NewToolWithRawSchema(
			"create_ad_set_adlabel",
			"Associate adlabels with this AdSet Returns AdSet. Required: adlabels",
			create_ad_set_adlabelSchema,
		),
		CreateAdSetAdlabelHandler,
	)

	s.AddTool(
		mcp.NewToolWithRawSchema(
			"get_ad_set_adrules_governed",
			"Get adrules_governed data for this AdSet Returns AdRule.",
			get_ad_set_adrules_governedSchema,
		),
		GetAdSetAdrulesGovernedHandler,
	)

	s.AddTool(
		mcp.NewToolWithRawSchema(
			"list_ad_set_ads",
			"List ads for this AdSet Returns Ad.",
			list_ad_set_adsSchema,
		),
		ListAdSetAdsHandler,
	)

	s.AddTool(
		mcp.NewToolWithRawSchema(
			"list_ad_set_asyncadrequests",
			"List asyncadrequests for this AdSet Returns AdAsyncRequest.",
			list_ad_set_asyncadrequestsSchema,
		),
		ListAdSetAsyncadrequestsHandler,
	)

	s.AddTool(
		mcp.NewToolWithRawSchema(
			"create_ad_set_budget_schedule",
			"Create or update budget_schedules for this AdSet Returns HighDemandPeriod. Required: budget_value, budget_value_type (enum), time_end, time_start",
			create_ad_set_budget_scheduleSchema,
		),
		CreateAdSetBudgetScheduleHandler,
	)

	s.AddTool(
		mcp.NewToolWithRawSchema(
			"list_ad_set_copies",
			"List copies for this AdSet Returns AdSet.",
			list_ad_set_copiesSchema,
		),
		ListAdSetCopiesHandler,
	)

	s.AddTool(
		mcp.NewToolWithRawSchema(
			"create_ad_set_copie",
			"Create a copy of this AdSet Returns AdSet.",
			create_ad_set_copieSchema,
		),
		CreateAdSetCopieHandler,
	)

	s.AddTool(
		mcp.NewToolWithRawSchema(
			"get_ad_set_delivery_estimate",
			"Get delivery_estimate data for this AdSet Returns AdCampaignDeliveryEstimate.",
			get_ad_set_delivery_estimateSchema,
		),
		GetAdSetDeliveryEstimateHandler,
	)

	s.AddTool(
		mcp.NewToolWithRawSchema(
			"get_ad_set_insights",
			"List insights for this AdSet Returns AdsInsights.",
			get_ad_set_insightsSchema,
		),
		GetAdSetInsightsHandler,
	)

	s.AddTool(
		mcp.NewToolWithRawSchema(
			"create_ad_set_insights_report",
			"Generate an insights report for this AdSet Returns AdReportRun.",
			create_ad_set_insights_reportSchema,
		),
		CreateAdSetInsightsReportHandler,
	)

	s.AddTool(
		mcp.NewToolWithRawSchema(
			"get_ad_set_message_delivery_estimate",
			"Get message_delivery_estimate data for this AdSet Returns MessageDeliveryEstimate.",
			get_ad_set_message_delivery_estimateSchema,
		),
		GetAdSetMessageDeliveryEstimateHandler,
	)

	s.AddTool(
		mcp.NewToolWithRawSchema(
			"list_ad_set_targetingsentencelines",
			"List targetingsentencelines for this AdSet Returns TargetingSentenceLine.",
			list_ad_set_targetingsentencelinesSchema,
		),
		ListAdSetTargetingsentencelinesHandler,
	)

	s.AddTool(
		mcp.NewToolWithRawSchema(
			"delete_ad_set",
			"Delete a AdSet",
			delete_ad_setSchema,
		),
		DeleteAdSetHandler,
	)

	s.AddTool(
		mcp.NewToolWithRawSchema(
			"get_ad_set",
			"Get details of a specific AdSet Returns AdSet.",
			get_ad_setSchema,
		),
		GetAdSetHandler,
	)

	s.AddTool(
		mcp.NewToolWithRawSchema(
			"update_ad_set",
			"Update a AdSet Returns AdSet.",
			update_ad_setSchema,
		),
		UpdateAdSetHandler,
	)

	return nil
}

// AdSet tools: 19 endpoints
