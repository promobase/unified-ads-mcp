// Code generated by codegen. DO NOT EDIT.

package tools

import (
	"context"
	"encoding/json"
	"fmt"

	"unified-ads-mcp/internal/facebook/generated/common"

	"github.com/mark3labs/mcp-go/mcp"
	"github.com/mark3labs/mcp-go/server"
)

// ad_set_create_budget_scheduleArgs defines the typed arguments for ad_set_create_budget_schedule
type ad_set_create_budget_scheduleArgs struct {
	ID              string `json:"id" jsonschema:"required,description=AdSet ID,pattern=^[0-9]+$"`
	BudgetValue     int    `json:"budget_value" jsonschema:"description=Budget Value,required,minimum=1"`
	BudgetValueType string `json:"budget_value_type" jsonschema:"description=Budget Value Type,required"`
	TimeEnd         int    `json:"time_end" jsonschema:"description=Time End,required"`
	TimeStart       int    `json:"time_start" jsonschema:"description=Time Start,required"`
}

// RegisterAdSetCreateBudgetScheduleHandler registers the ad_set_create_budget_schedule tool
func RegisterAdSetCreateBudgetScheduleHandler(s *server.MCPServer) error {
	tool := mcp.NewToolWithRawSchema(
		"ad_set_create_budget_schedule",
		"Create or update budget_schedules for this AdSet Returns HighDemandPeriod. Required: budget_value, budget_value_type (enum), time_end, time_start",
		json.RawMessage(`{"additionalProperties":false,"properties":{"budget_value":{"description":"Budget Value","type":"integer"},"budget_value_type":{"description":"Budget Value Type (enum: adcampaignbudget_schedules_budget_value_type_enum_param)","enum":["ABSOLUTE","MULTIPLIER"],"type":"string"},"id":{"description":"AdSet ID","pattern":"^[0-9]+$","type":"string"},"time_end":{"description":"Time End","type":"integer"},"time_start":{"description":"Time Start","type":"integer"}},"required":["id","budget_value","budget_value_type","time_end","time_start"],"type":"object"}`),
	)

	s.AddTool(tool, AdSetCreateBudgetScheduleHandler)
	return nil
}

// AdSetCreateBudgetScheduleHandler handles the ad_set_create_budget_schedule tool
func AdSetCreateBudgetScheduleHandler(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {
	var args ad_set_create_budget_scheduleArgs
	if err := request.BindArguments(&args); err != nil {
		return common.HandleBindError(err)
	}
	endpoint := fmt.Sprintf("/%s/budget_schedules", args.ID)
	// Prepare request body
	body := make(map[string]interface{})
	if args.BudgetValue > 0 {
		body["budget_value"] = args.BudgetValue
	}
	if args.BudgetValueType != "" {
		body["budget_value_type"] = args.BudgetValueType
	}
	if args.TimeEnd > 0 {
		body["time_end"] = args.TimeEnd
	}
	if args.TimeStart > 0 {
		body["time_start"] = args.TimeStart
	}

	result, err := common.MakeGraphAPIRequest(ctx, "POST", endpoint, nil, body)

	if err != nil {
		return common.HandleAPIError(err)
	}

	return &mcp.CallToolResult{
		Content: []mcp.Content{
			mcp.NewTextContent(string(result)),
		},
	}, nil
}
