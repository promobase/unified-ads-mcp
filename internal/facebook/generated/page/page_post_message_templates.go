// Code generated by Facebook Business API codegen. DO NOT EDIT.

package page

import (
	"context"
	"encoding/json"
	"fmt"

	"github.com/mark3labs/mcp-go/mcp"
	"unified-ads-mcp/internal/facebook/utils"
	"unified-ads-mcp/internal/shared"
)

// ToolPage_post_message_templates returns the MCP tool definition for page_post_message_templates
func ToolPage_post_message_templates() mcp.Tool {

	// Params object accepts: category (pagemessage_templates_category_enum_param), components (list<map>), language (string), library_template_button_inputs (list<map>), library_template_name (string), name (string)
	return mcp.NewTool("page_post_message_templates",
		mcp.WithDescription("POST message_templates for Page"),
		mcp.WithObject("params",
			mcp.Required(),
			mcp.Properties(map[string]any{
				"category": map[string]any{
					"type":        "string",
					"description": "category parameter",
					"required":    true,
					"enum":        []string{"UTILITY"},
				},
				"components": map[string]any{
					"type":        "array",
					"description": "components parameter",
					"items":       map[string]any{"type": "object"},
				},
				"language": map[string]any{
					"type":        "string",
					"description": "language parameter",
					"required":    true,
				},
				"library_template_button_inputs": map[string]any{
					"type":        "array",
					"description": "library_template_button_inputs parameter",
					"items":       map[string]any{"type": "object"},
				},
				"library_template_name": map[string]any{
					"type":        "string",
					"description": "library_template_name parameter",
				},
				"name": map[string]any{
					"type":        "string",
					"description": "name parameter",
					"required":    true,
				},
			}),
			mcp.Description("Parameters object containing: category (enum) [UTILITY] [required], components (array<object>), language (string) [required], library_template_button_inputs (array<object>), library_template_name (string), name (string) [required]"),
		),
	)
}

// HandlePage_post_message_templates handles the page_post_message_templates tool with context-based auth
func HandlePage_post_message_templates(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {
	// Get access token from context
	accessToken, ok := shared.FacebookAccessTokenFromContext(ctx)
	if !ok {
		return mcp.NewToolResultError("Facebook access token not found in context"), nil
	}

	// Build arguments map
	args := make(map[string]interface{})

	// Required: params
	// Parse required params object and expand into args
	val, err := request.RequireString("params")
	if err != nil {
		return mcp.NewToolResultError(fmt.Sprintf("missing required parameter params: %v", err)), nil
	}
	var paramsObj map[string]interface{}
	if err := json.Unmarshal([]byte(val), &paramsObj); err != nil {
		return mcp.NewToolResultError(fmt.Sprintf("invalid params object: %v", err)), nil
	}
	for key, value := range paramsObj {
		args[key] = value
	}

	// Call the API method
	result, err := Page_post_message_templates(accessToken, args)
	if err != nil {
		return mcp.NewToolResultError(fmt.Sprintf("failed to execute page_post_message_templates: %v", err)), nil
	}

	// Return the result as JSON
	resultJSON, err := json.Marshal(result)
	if err != nil {
		return mcp.NewToolResultError(fmt.Sprintf("failed to marshal result: %v", err)), nil
	}

	return mcp.NewToolResultText(string(resultJSON)), nil
}

// Page_post_message_templates performs POST message_templates for Page
func Page_post_message_templates(accessToken string, args map[string]interface{}) (interface{}, error) {
	var baseURL string

	baseURL = FacebookGraphAPIBaseURL + "/message_templates"

	// Build URL parameters, skipping ID parameters that are in the path
	skipParams := []string{}
	urlParams := utils.BuildURLParams(accessToken, args, skipParams...)

	// Execute the API request
	return utils.ExecuteAPIRequest("POST", baseURL, urlParams)
}
