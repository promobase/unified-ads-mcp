// Code generated by codegen. DO NOT EDIT.

package generated

import (
	"time"
)

// AIGeneratedProductImage represents the Facebook AIGeneratedProductImage object
type AIGeneratedProductImage struct {
	FlaggedForManualReview bool `json:"flagged_for_manual_review,omitempty"`
	TransformedImageURL string `json:"transformed_image_url,omitempty"`
}

// ALMAdAccountInfo represents the Facebook ALMAdAccountInfo object
type ALMAdAccountInfo struct {
	AdAccountID string `json:"ad_account_id,omitempty"`
	ID string `json:"id,omitempty"`
	ManagedBy string `json:"managed_by,omitempty"`
	OwnedBy string `json:"owned_by,omitempty"`
	ParentAdvertiserID string `json:"parent_advertiser_id,omitempty"`
	SubVertical string `json:"sub_vertical,omitempty"`
	Tag []string `json:"tag,omitempty"`
	UserIDs []string `json:"user_ids,omitempty"`
	Vertical string `json:"vertical,omitempty"`
}

// ALMEndAdvertiserInfo represents the Facebook ALMEndAdvertiserInfo object
type ALMEndAdvertiserInfo struct {
	EstimatedAdBudget int `json:"estimated_ad_budget,omitempty"`
	ID string `json:"id,omitempty"`
	ParentAdvertiserID string `json:"parent_advertiser_id,omitempty"`
	ParentAdvertiserName string `json:"parent_advertiser_name,omitempty"`
	Tag []string `json:"tag,omitempty"`
}

// ALMEvent represents the Facebook ALMEvent object
type ALMEvent struct {
	AdAccountIDs []string `json:"ad_account_ids,omitempty"`
	CampaignIDs []string `json:"campaign_ids,omitempty"`
	Channel string `json:"channel,omitempty"`
	Event string `json:"event,omitempty"`
	EventTime time.Time `json:"event_time,omitempty"`
	Guidance string `json:"guidance,omitempty"`
	GuidanceDetail string `json:"guidance_detail,omitempty"`
	ID string `json:"id,omitempty"`
	ParentAdvertiserIDs []string `json:"parent_advertiser_ids,omitempty"`
	ResellerBusinessID string `json:"reseller_business_id,omitempty"`
	SubChannel string `json:"sub_channel,omitempty"`
	UserID string `json:"user_id,omitempty"`
}

// ALMGuidance represents the Facebook ALMGuidance object
type ALMGuidance struct {
	AdAccountID string `json:"ad_account_id,omitempty"`
	Guidances []map[string]interface{} `json:"guidances,omitempty"`
	OpportunityScore float64 `json:"opportunity_score,omitempty"`
	ParentAdvertiserID string `json:"parent_advertiser_id,omitempty"`
	ParentAdvertiserName string `json:"parent_advertiser_name,omitempty"`
}

// ALMGuidanceMetrics represents the Facebook ALMGuidanceMetrics object
type ALMGuidanceMetrics struct {
	AdAccountID string `json:"ad_account_id,omitempty"`
	AdoptedObjects []map[string]interface{} `json:"adopted_objects,omitempty"`
	GuidanceName string `json:"guidance_name,omitempty"`
	GuidanceType string `json:"guidance_type,omitempty"`
	L28Adoption int `json:"l28_adoption,omitempty"`
	L28Available int `json:"l28_available,omitempty"`
	L28Click int `json:"l28_click,omitempty"`
	L28Conversion int `json:"l28_conversion,omitempty"`
	L28HasClick bool `json:"l28_has_click,omitempty"`
	L28HasImpression bool `json:"l28_has_impression,omitempty"`
	L28Impression int `json:"l28_impression,omitempty"`
	L28IsActioned bool `json:"l28_is_actioned,omitempty"`
	L28IsAdopted bool `json:"l28_is_adopted,omitempty"`
	L28IsAvailable bool `json:"l28_is_available,omitempty"`
	L28IsPitched bool `json:"l28_is_pitched,omitempty"`
	L28Pitch int `json:"l28_pitch,omitempty"`
	L28dAdoptedRevenue float64 `json:"l28d_adopted_revenue,omitempty"`
	LastActionedDs string `json:"last_actioned_ds,omitempty"`
	LastAdoptedDs string `json:"last_adopted_ds,omitempty"`
	LastPitchDs string `json:"last_pitch_ds,omitempty"`
	ParentAdvertiserID string `json:"parent_advertiser_id,omitempty"`
	ReportDs string `json:"report_ds,omitempty"`
}

// AMOneshopSettings represents the Facebook AMOneshopSettings object
type AMOneshopSettings struct {
}

// ANBlockedBICategory represents the Facebook ANBlockedBICategory object
type ANBlockedBICategory struct {
	Key string `json:"key,omitempty"`
}

// AREffect represents the Facebook AREffect object
type AREffect struct {
	CreationTime time.Time `json:"creation_time,omitempty"`
	ID string `json:"id,omitempty"`
	LastModifiedTime time.Time `json:"last_modified_time,omitempty"`
	Name string `json:"name,omitempty"`
	Status string `json:"status,omitempty"`
	Surfaces []string `json:"surfaces,omitempty"`
}

// Ad represents the Facebook Ad object
type Ad struct {
	AccountID string `json:"account_id,omitempty"`
	AdActiveTime string `json:"ad_active_time,omitempty"`
	AdReviewFeedback *AdgroupReviewFeedback `json:"ad_review_feedback,omitempty"`
	AdScheduleEndTime time.Time `json:"ad_schedule_end_time,omitempty"`
	AdScheduleStartTime time.Time `json:"ad_schedule_start_time,omitempty"`
	Adlabels []*AdLabel `json:"adlabels,omitempty"`
	Adset *AdSet `json:"adset,omitempty"`
	AdsetID string `json:"adset_id,omitempty"`
	BidAmount int `json:"bid_amount,omitempty"`
	BidInfo map[string]uint `json:"bid_info,omitempty"`
	BidType AdBidType `json:"bid_type,omitempty"`
	Campaign *Campaign `json:"campaign,omitempty"`
	CampaignID string `json:"campaign_id,omitempty"`
	ConfiguredStatus AdConfiguredStatus `json:"configured_status,omitempty"`
	ConversionDomain string `json:"conversion_domain,omitempty"`
	ConversionSpecs []*ConversionActionQuery `json:"conversion_specs,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	Creative *AdCreative `json:"creative,omitempty"`
	CreativeAssetGroupsSpec *AdCreativeAssetGroupsSpec `json:"creative_asset_groups_spec,omitempty"`
	DemolinkHash string `json:"demolink_hash,omitempty"`
	DisplaySequence int `json:"display_sequence,omitempty"`
	EffectiveStatus AdEffectiveStatus `json:"effective_status,omitempty"`
	EngagementAudience bool `json:"engagement_audience,omitempty"`
	FailedDeliveryChecks []*DeliveryCheck `json:"failed_delivery_checks,omitempty"`
	ID string `json:"id,omitempty"`
	IssuesInfo []*AdgroupIssuesInfo `json:"issues_info,omitempty"`
	LastUpdatedByAppID string `json:"last_updated_by_app_id,omitempty"`
	Name string `json:"name,omitempty"`
	Placement *Placement `json:"placement,omitempty"`
	PreviewShareableLink string `json:"preview_shareable_link,omitempty"`
	Priority uint `json:"priority,omitempty"`
	Recommendations []*AdRecommendation `json:"recommendations,omitempty"`
	SourceAd *Ad `json:"source_ad,omitempty"`
	SourceAdID string `json:"source_ad_id,omitempty"`
	Status AdStatus `json:"status,omitempty"`
	Targeting *Targeting `json:"targeting,omitempty"`
	TrackingAndConversionWithDefaults *TrackingAndConversionWithDefaults `json:"tracking_and_conversion_with_defaults,omitempty"`
	TrackingSpecs []*ConversionActionQuery `json:"tracking_specs,omitempty"`
	UpdatedTime time.Time `json:"updated_time,omitempty"`
}

// AdAccount represents the Facebook AdAccount object
type AdAccount struct {
	AccountID string `json:"account_id,omitempty"`
	AccountStatus uint `json:"account_status,omitempty"`
	AdAccountPromotableObjects *AdAccountPromotableObjects `json:"ad_account_promotable_objects,omitempty"`
	Age float64 `json:"age,omitempty"`
	AgencyClientDeclaration *AgencyClientDeclaration `json:"agency_client_declaration,omitempty"`
	AllCapabilities []string `json:"all_capabilities,omitempty"`
	AmountSpent string `json:"amount_spent,omitempty"`
	AttributionSpec []*AttributionSpec `json:"attribution_spec,omitempty"`
	Balance string `json:"balance,omitempty"`
	BrandSafetyContentFilterLevels []string `json:"brand_safety_content_filter_levels,omitempty"`
	Business *Business `json:"business,omitempty"`
	BusinessCity string `json:"business_city,omitempty"`
	BusinessCountryCode string `json:"business_country_code,omitempty"`
	BusinessName string `json:"business_name,omitempty"`
	BusinessState string `json:"business_state,omitempty"`
	BusinessStreet string `json:"business_street,omitempty"`
	BusinessStreet2 string `json:"business_street2,omitempty"`
	BusinessZip string `json:"business_zip,omitempty"`
	CanCreateBrandLiftStudy bool `json:"can_create_brand_lift_study,omitempty"`
	Capabilities []string `json:"capabilities,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	Currency string `json:"currency,omitempty"`
	CustomAudienceInfo *CustomAudienceGroup `json:"custom_audience_info,omitempty"`
	DefaultDsaBeneficiary string `json:"default_dsa_beneficiary,omitempty"`
	DefaultDsaPayor string `json:"default_dsa_payor,omitempty"`
	DisableReason uint `json:"disable_reason,omitempty"`
	EndAdvertiser string `json:"end_advertiser,omitempty"`
	EndAdvertiserName string `json:"end_advertiser_name,omitempty"`
	ExistingCustomers []string `json:"existing_customers,omitempty"`
	ExpiredFundingSourceDetails *FundingSourceDetails `json:"expired_funding_source_details,omitempty"`
	ExtendedCreditInvoiceGroup *ExtendedCreditInvoiceGroup `json:"extended_credit_invoice_group,omitempty"`
	FailedDeliveryChecks []*DeliveryCheck `json:"failed_delivery_checks,omitempty"`
	FbEntity uint `json:"fb_entity,omitempty"`
	FundingSource string `json:"funding_source,omitempty"`
	FundingSourceDetails *FundingSourceDetails `json:"funding_source_details,omitempty"`
	HasMigratedPermissions bool `json:"has_migrated_permissions,omitempty"`
	HasPageAuthorizedAdaccount bool `json:"has_page_authorized_adaccount,omitempty"`
	ID string `json:"id,omitempty"`
	IoNumber string `json:"io_number,omitempty"`
	IsAttributionSpecSystemDefault bool `json:"is_attribution_spec_system_default,omitempty"`
	IsBaSkipDelayedEligible bool `json:"is_ba_skip_delayed_eligible,omitempty"`
	IsDirectDealsEnabled bool `json:"is_direct_deals_enabled,omitempty"`
	IsIn3dsAuthorizationEnabledMarket bool `json:"is_in_3ds_authorization_enabled_market,omitempty"`
	IsNotificationsEnabled bool `json:"is_notifications_enabled,omitempty"`
	IsPersonal uint `json:"is_personal,omitempty"`
	IsPrepayAccount bool `json:"is_prepay_account,omitempty"`
	IsTaxIDRequired bool `json:"is_tax_id_required,omitempty"`
	LiableAddress *CRMAddress `json:"liable_address,omitempty"`
	LineNumbers []int `json:"line_numbers,omitempty"`
	MediaAgency string `json:"media_agency,omitempty"`
	MinCampaignGroupSpendCap string `json:"min_campaign_group_spend_cap,omitempty"`
	MinDailyBudget uint `json:"min_daily_budget,omitempty"`
	Name string `json:"name,omitempty"`
	OffsitePixelsTosAccepted bool `json:"offsite_pixels_tos_accepted,omitempty"`
	Owner string `json:"owner,omitempty"`
	OwnerBusiness *Business `json:"owner_business,omitempty"`
	Partner string `json:"partner,omitempty"`
	RfSpec *ReachFrequencySpec `json:"rf_spec,omitempty"`
	SendBillToAddress *CRMAddress `json:"send_bill_to_address,omitempty"`
	ShowCheckoutExperience bool `json:"show_checkout_experience,omitempty"`
	SoldToAddress *CRMAddress `json:"sold_to_address,omitempty"`
	SpendCap string `json:"spend_cap,omitempty"`
	TaxID string `json:"tax_id,omitempty"`
	TaxIDStatus uint `json:"tax_id_status,omitempty"`
	TaxIDType string `json:"tax_id_type,omitempty"`
	TimezoneID uint `json:"timezone_id,omitempty"`
	TimezoneName string `json:"timezone_name,omitempty"`
	TimezoneOffsetHoursUtc float64 `json:"timezone_offset_hours_utc,omitempty"`
	TosAccepted map[string]int `json:"tos_accepted,omitempty"`
	UserAccessExpireTime time.Time `json:"user_access_expire_time,omitempty"`
	UserTasks []string `json:"user_tasks,omitempty"`
	UserTosAccepted map[string]int `json:"user_tos_accepted,omitempty"`
	ViewableBusiness *Business `json:"viewable_business,omitempty"`
}

// AdAccountAAACompatibleAdObjects represents the Facebook AdAccountAAACompatibleAdObjects object
type AdAccountAAACompatibleAdObjects struct {
	AdgroupIDs []string `json:"adgroup_ids,omitempty"`
	CampaignGroupIDs []string `json:"campaign_group_ids,omitempty"`
	CampaignIDs []string `json:"campaign_ids,omitempty"`
}

// AdAccountAAASimilarCampaigns represents the Facebook AdAccountAAASimilarCampaigns object
type AdAccountAAASimilarCampaigns struct {
	SimilarCampaignLimit uint `json:"similar_campaign_limit,omitempty"`
	SimilarCampaignsInfo []map[string]map[string]interface{} `json:"similar_campaigns_info,omitempty"`
	UsedCampaignSlots uint `json:"used_campaign_slots,omitempty"`
}

// AdAccountASLSchedule represents the Facebook AdAccountASLSchedule object
type AdAccountASLSchedule struct {
	AdAccount *AdAccount `json:"ad_account,omitempty"`
	ID string `json:"id,omitempty"`
	TimeCreated time.Time `json:"time_created,omitempty"`
	TimeUpdated time.Time `json:"time_updated,omitempty"`
}

// AdAccountAdLimitsInsights represents the Facebook AdAccountAdLimitsInsights object
type AdAccountAdLimitsInsights struct {
	DateStart string `json:"date_start,omitempty"`
	DateStop string `json:"date_stop,omitempty"`
}

// AdAccountAdRulesCountByType represents the Facebook AdAccountAdRulesCountByType object
type AdAccountAdRulesCountByType struct {
	Count int `json:"count,omitempty"`
	EvaluationType string `json:"evaluation_type,omitempty"`
}

// AdAccountAdRulesHistory represents the Facebook AdAccountAdRulesHistory object
type AdAccountAdRulesHistory struct {
	EvaluationSpec *AdRuleEvaluationSpec `json:"evaluation_spec,omitempty"`
	ExceptionCode int `json:"exception_code,omitempty"`
	ExceptionMessage string `json:"exception_message,omitempty"`
	ExecutionSpec *AdRuleExecutionSpec `json:"execution_spec,omitempty"`
	IsManual bool `json:"is_manual,omitempty"`
	Results []*AdRuleHistoryResult `json:"results,omitempty"`
	RuleID int `json:"rule_id,omitempty"`
	ScheduleSpec *AdRuleScheduleSpec `json:"schedule_spec,omitempty"`
	Timestamp time.Time `json:"timestamp,omitempty"`
}

// AdAccountAdVolume represents the Facebook AdAccountAdVolume object
type AdAccountAdVolume struct {
	ActorID string `json:"actor_id,omitempty"`
	ActorName string `json:"actor_name,omitempty"`
	AdLimitScopeBusiness *Business `json:"ad_limit_scope_business,omitempty"`
	AdLimitScopeBusinessManagerID string `json:"ad_limit_scope_business_manager_id,omitempty"`
	AdLimitSetByPageAdmin uint `json:"ad_limit_set_by_page_admin,omitempty"`
	AdsRunningOrInReviewCount uint `json:"ads_running_or_in_review_count,omitempty"`
	AdsRunningOrInReviewCountSubjectToLimitSetByPage uint `json:"ads_running_or_in_review_count_subject_to_limit_set_by_page,omitempty"`
	CurrentAccountAdsRunningOrInReviewCount uint `json:"current_account_ads_running_or_in_review_count,omitempty"`
	FutureLimitActivationDate string `json:"future_limit_activation_date,omitempty"`
	FutureLimitOnAdsRunningOrInReview uint `json:"future_limit_on_ads_running_or_in_review,omitempty"`
	LimitOnAdsRunningOrInReview uint `json:"limit_on_ads_running_or_in_review,omitempty"`
	Recommendations []map[string]interface{} `json:"recommendations,omitempty"`
}

// AdAccountAdsRecommendedAudios represents the Facebook AdAccountAdsRecommendedAudios object
type AdAccountAdsRecommendedAudios struct {
	AudioAssets []int `json:"audio_assets,omitempty"`
}

// AdAccountAgencyFeeConfig represents the Facebook AdAccountAgencyFeeConfig object
type AdAccountAgencyFeeConfig struct {
	CanAddAgencyFeeToInvoice bool `json:"can_add_agency_fee_to_invoice,omitempty"`
	DefaultAgencyFeePct float64 `json:"default_agency_fee_pct,omitempty"`
	ID string `json:"id,omitempty"`
	IsAgencyFeeDisabled bool `json:"is_agency_fee_disabled,omitempty"`
	Status AdaccountagencyfeeconfigStatus `json:"status,omitempty"`
}

// AdAccountAllPaymentMethods represents the Facebook AdAccountAllPaymentMethods object
type AdAccountAllPaymentMethods struct {
}

// AdAccountAmountSpentHistory represents the Facebook AdAccountAmountSpentHistory object
type AdAccountAmountSpentHistory struct {
	AmountSpent int `json:"amount_spent,omitempty"`
	SpendCap int `json:"spend_cap,omitempty"`
	TimeStart string `json:"time_start,omitempty"`
	TimeStop string `json:"time_stop,omitempty"`
}

// AdAccountAppSetupRequirements represents the Facebook AdAccountAppSetupRequirements object
type AdAccountAppSetupRequirements struct {
}

// AdAccountBankInfoList represents the Facebook AdAccountBankInfoList object
type AdAccountBankInfoList struct {
	Banks []map[string]interface{} `json:"banks,omitempty"`
}

// AdAccountBillingDatePreference represents the Facebook AdAccountBillingDatePreference object
type AdAccountBillingDatePreference struct {
	AdAccount *AdAccount `json:"ad_account,omitempty"`
	DayOfMonth int `json:"day_of_month,omitempty"`
	ID string `json:"id,omitempty"`
	NextBillDate time.Time `json:"next_bill_date,omitempty"`
	TimeCreated time.Time `json:"time_created,omitempty"`
	TimeEffective time.Time `json:"time_effective,omitempty"`
}

// AdAccountBusinessConstraints represents the Facebook AdAccountBusinessConstraints object
type AdAccountBusinessConstraints struct {
	AudienceControls map[string]interface{} `json:"audience_controls,omitempty"`
	CampaignsWithError []string `json:"campaigns_with_error,omitempty"`
	PlacementControls map[string]interface{} `json:"placement_controls,omitempty"`
	Status AdaccountbusinessconstraintsStatus `json:"status,omitempty"`
}

// AdAccountCampaignAttributionOptionInfo represents the Facebook AdAccountCampaignAttributionOptionInfo object
type AdAccountCampaignAttributionOptionInfo struct {
	IsEligible bool `json:"is_eligible,omitempty"`
	Value string `json:"value,omitempty"`
}

// AdAccountCreationRequest represents the Facebook AdAccountCreationRequest object
type AdAccountCreationRequest struct {
	AdAccountsCurrency string `json:"ad_accounts_currency,omitempty"`
	AdAccountsInfo []map[string]interface{} `json:"ad_accounts_info,omitempty"`
	AdditionalComment string `json:"additional_comment,omitempty"`
	AddressInChinese string `json:"address_in_chinese,omitempty"`
	AddressInEnglish map[string]interface{} `json:"address_in_english,omitempty"`
	AddressInLocalLanguage string `json:"address_in_local_language,omitempty"`
	AdvertiserBusiness *Business `json:"advertiser_business,omitempty"`
	AppealReason map[string]interface{} `json:"appeal_reason,omitempty"`
	Business *Business `json:"business,omitempty"`
	BusinessRegistrationID string `json:"business_registration_id,omitempty"`
	ChineseLegalEntityName string `json:"chinese_legal_entity_name,omitempty"`
	Contact map[string]interface{} `json:"contact,omitempty"`
	Creator *User `json:"creator,omitempty"`
	CreditCardID string `json:"credit_card_id,omitempty"`
	DisapprovalReasons []map[string]interface{} `json:"disapproval_reasons,omitempty"`
	EnglishLegalEntityName string `json:"english_legal_entity_name,omitempty"`
	ExtendedCreditID string `json:"extended_credit_id,omitempty"`
	ID string `json:"id,omitempty"`
	IsSmb bool `json:"is_smb,omitempty"`
	IsTest bool `json:"is_test,omitempty"`
	LegalEntityNameInLocalLanguage string `json:"legal_entity_name_in_local_language,omitempty"`
	OeRequestID string `json:"oe_request_id,omitempty"`
	OfficialWebsiteURL string `json:"official_website_url,omitempty"`
	PlanningAgencyBusiness *Business `json:"planning_agency_business,omitempty"`
	PlanningAgencyBusinessID string `json:"planning_agency_business_id,omitempty"`
	PromotableAppIDs []string `json:"promotable_app_ids,omitempty"`
	PromotablePageIDs []string `json:"promotable_page_ids,omitempty"`
	PromotableURLs []string `json:"promotable_urls,omitempty"`
	RequestChangeReasons []map[string]interface{} `json:"request_change_reasons,omitempty"`
	Status string `json:"status,omitempty"`
	Subvertical string `json:"subvertical,omitempty"`
	SubverticalV2 string `json:"subvertical_v2,omitempty"`
	TimeCreated time.Time `json:"time_created,omitempty"`
	Vertical string `json:"vertical,omitempty"`
	VerticalV2 string `json:"vertical_v2,omitempty"`
}

// AdAccountCustomAudienceLimits represents the Facebook AdAccountCustomAudienceLimits object
type AdAccountCustomAudienceLimits struct {
	AudienceUpdateQuotaInTotal int `json:"audience_update_quota_in_total,omitempty"`
	AudienceUpdateQuotaLeft float64 `json:"audience_update_quota_left,omitempty"`
	HasHitAudienceUpdateLimit bool `json:"has_hit_audience_update_limit,omitempty"`
	NextAudienceUpdateAvailableTime string `json:"next_audience_update_available_time,omitempty"`
	RateLimitResetTime string `json:"rate_limit_reset_time,omitempty"`
}

// AdAccountDefaultDestination represents the Facebook AdAccountDefaultDestination object
type AdAccountDefaultDestination struct {
	DestinationID string `json:"destination_id,omitempty"`
	DestinationURL string `json:"destination_url,omitempty"`
}

// AdAccountDefaultObjective represents the Facebook AdAccountDefaultObjective object
type AdAccountDefaultObjective struct {
	DefaultObjectiveForUser AdaccountdefaultobjectiveDefaultObjectiveForUser `json:"default_objective_for_user,omitempty"`
	ObjectiveForLevel AdaccountdefaultobjectiveObjectiveForLevel `json:"objective_for_level,omitempty"`
}

// AdAccountDeliveryEstimate represents the Facebook AdAccountDeliveryEstimate object
type AdAccountDeliveryEstimate struct {
	DailyOutcomesCurve []*OutcomePredictionPoint `json:"daily_outcomes_curve,omitempty"`
	EstimateDau int `json:"estimate_dau,omitempty"`
	EstimateMauLowerBound int `json:"estimate_mau_lower_bound,omitempty"`
	EstimateMauUpperBound int `json:"estimate_mau_upper_bound,omitempty"`
	EstimateReady bool `json:"estimate_ready,omitempty"`
	TargetingOptimizationTypes []map[string]int `json:"targeting_optimization_types,omitempty"`
}

// AdAccountDsaRecommendations represents the Facebook AdAccountDsaRecommendations object
type AdAccountDsaRecommendations struct {
	Recommendations []string `json:"recommendations,omitempty"`
}

// AdAccountIosFourteenCampaignLimits represents the Facebook AdAccountIosFourteenCampaignLimits object
type AdAccountIosFourteenCampaignLimits struct {
	CampaignGroupLimit int `json:"campaign_group_limit,omitempty"`
	CampaignGroupLimitsDetails []map[string]interface{} `json:"campaign_group_limits_details,omitempty"`
	CampaignLimit int `json:"campaign_limit,omitempty"`
}

// AdAccountLiveVideoAdvertiser represents the Facebook AdAccountLiveVideoAdvertiser object
type AdAccountLiveVideoAdvertiser struct {
	IsLvaToggleOn bool `json:"is_lva_toggle_on,omitempty"`
	LvaDefaultBudget int `json:"lva_default_budget,omitempty"`
	ShouldDefaultCurrentLive bool `json:"should_default_current_live,omitempty"`
	ShouldDefaultScheduledLive bool `json:"should_default_scheduled_live,omitempty"`
	ShouldShowLvaToggle bool `json:"should_show_lva_toggle,omitempty"`
}

// AdAccountMatchedSearchApplicationsEdgeData represents the Facebook AdAccountMatchedSearchApplicationsEdgeData object
type AdAccountMatchedSearchApplicationsEdgeData struct {
	AppID string `json:"app_id,omitempty"`
	AreAppEventsUnavailable bool `json:"are_app_events_unavailable,omitempty"`
	IconURL string `json:"icon_url,omitempty"`
	Name string `json:"name,omitempty"`
	SearchSourceStore string `json:"search_source_store,omitempty"`
	Store string `json:"store,omitempty"`
	UniqueID string `json:"unique_id,omitempty"`
	URL string `json:"url,omitempty"`
}

// AdAccountMaxBid represents the Facebook AdAccountMaxBid object
type AdAccountMaxBid struct {
	MaxBid int `json:"max_bid,omitempty"`
}

// AdAccountOptimizationGoalsAEMv2Eligibility represents the Facebook AdAccountOptimizationGoalsAEMv2Eligibility object
type AdAccountOptimizationGoalsAEMv2Eligibility struct {
	IsDisabled bool `json:"is_disabled,omitempty"`
	OptimizationGoal Adaccountoptimizationgoalsaemv2eligibilityOptimizationGoal `json:"optimization_goal,omitempty"`
}

// AdAccountPaymentDetails represents the Facebook AdAccountPaymentDetails object
type AdAccountPaymentDetails struct {
	Amount *CurrencyAmount `json:"amount,omitempty"`
	CreateDate int `json:"create_date,omitempty"`
	ID string `json:"id,omitempty"`
	LastActionStatus string `json:"last_action_status,omitempty"`
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	PaymentDetailsID string `json:"payment_details_id,omitempty"`
}

// AdAccountPaymentOptions represents the Facebook AdAccountPaymentOptions object
type AdAccountPaymentOptions struct {
	AvailableAltpayOptions []map[string]interface{} `json:"available_altpay_options,omitempty"`
	AvailableCardTypes []string `json:"available_card_types,omitempty"`
	AvailablePaymentOptions []string `json:"available_payment_options,omitempty"`
	ExistingPaymentMethods []map[string]interface{} `json:"existing_payment_methods,omitempty"`
}

// AdAccountPrepayDetails represents the Facebook AdAccountPrepayDetails object
type AdAccountPrepayDetails struct {
	DefaultFundingAmount *CurrencyAmount `json:"default_funding_amount,omitempty"`
	MaxAcceptableAmount *CurrencyAmount `json:"max_acceptable_amount,omitempty"`
	MinAcceptableAmount *CurrencyAmount `json:"min_acceptable_amount,omitempty"`
	ShouldCollectBusinessDetails bool `json:"should_collect_business_details,omitempty"`
}

// AdAccountPromotableObjects represents the Facebook AdAccountPromotableObjects object
type AdAccountPromotableObjects struct {
	PromotableAppIDs []string `json:"promotable_app_ids,omitempty"`
	PromotablePageIDs []string `json:"promotable_page_ids,omitempty"`
	PromotableURLs []string `json:"promotable_urls,omitempty"`
}

// AdAccountPromotionProgressBar represents the Facebook AdAccountPromotionProgressBar object
type AdAccountPromotionProgressBar struct {
	AdaccountPermission bool `json:"adaccount_permission,omitempty"`
	CouponCurrency string `json:"coupon_currency,omitempty"`
	CouponValue int `json:"coupon_value,omitempty"`
	ExpirationTime time.Time `json:"expiration_time,omitempty"`
	ProgressCompleted bool `json:"progress_completed,omitempty"`
	PromotionType string `json:"promotion_type,omitempty"`
	SpendRequirementInCent int `json:"spend_requirement_in_cent,omitempty"`
	SpendSinceEnrollment int `json:"spend_since_enrollment,omitempty"`
}

// AdAccountReachEstimate represents the Facebook AdAccountReachEstimate object
type AdAccountReachEstimate struct {
	EstimateReady bool `json:"estimate_ready,omitempty"`
	UsersLowerBound int `json:"users_lower_bound,omitempty"`
	UsersUpperBound int `json:"users_upper_bound,omitempty"`
}

// AdAccountRecommendations represents the Facebook AdAccountRecommendations object
type AdAccountRecommendations struct {
	Recommendations []map[string]interface{} `json:"recommendations,omitempty"`
}

// AdAccountRecommendedCamapaignBudget represents the Facebook AdAccountRecommendedCamapaignBudget object
type AdAccountRecommendedCamapaignBudget struct {
	Daily string `json:"daily,omitempty"`
	Lifetime string `json:"lifetime,omitempty"`
	Objective string `json:"objective,omitempty"`
}

// AdAccountRelatedIcoStudy represents the Facebook AdAccountRelatedIcoStudy object
type AdAccountRelatedIcoStudy struct {
}

// AdAccountSmartSuggestedAds represents the Facebook AdAccountSmartSuggestedAds object
type AdAccountSmartSuggestedAds struct {
	AdCreativeSpec string `json:"ad_creative_spec,omitempty"`
	Description string `json:"description,omitempty"`
	GuidanceSpec []string `json:"guidance_spec,omitempty"`
	ThumbnailURL string `json:"thumbnail_url,omitempty"`
}

// AdAccountSpendCapChangeHistory represents the Facebook AdAccountSpendCapChangeHistory object
type AdAccountSpendCapChangeHistory struct {
	Action string `json:"action,omitempty"`
	SpendCap int `json:"spend_cap,omitempty"`
	TimeStart string `json:"time_start,omitempty"`
	TimeStop string `json:"time_stop,omitempty"`
}

// AdAccountSpendLimit represents the Facebook AdAccountSpendLimit object
type AdAccountSpendLimit struct {
	AmountSpent string `json:"amount_spent,omitempty"`
	GroupID string `json:"group_id,omitempty"`
	LimitID string `json:"limit_id,omitempty"`
	LimitValue string `json:"limit_value,omitempty"`
	TimeCreated uint `json:"time_created,omitempty"`
	TimeStart uint `json:"time_start,omitempty"`
	TimeStop uint `json:"time_stop,omitempty"`
}

// AdAccountSubscribedApps represents the Facebook AdAccountSubscribedApps object
type AdAccountSubscribedApps struct {
	AppID string `json:"app_id,omitempty"`
	AppName string `json:"app_name,omitempty"`
}

// AdAccountSubsidyAmountDetails represents the Facebook AdAccountSubsidyAmountDetails object
type AdAccountSubsidyAmountDetails struct {
	EnteredAmount *CurrencyAmount `json:"entered_amount,omitempty"`
	FeeAmount *CurrencyAmount `json:"fee_amount,omitempty"`
	TotalAmount *CurrencyAmount `json:"total_amount,omitempty"`
}

// AdAccountTargetingUnified represents the Facebook AdAccountTargetingUnified object
type AdAccountTargetingUnified struct {
	AudienceSizeLowerBound uint `json:"audience_size_lower_bound,omitempty"`
	AudienceSizeUpperBound uint `json:"audience_size_upper_bound,omitempty"`
	ConversionLift float64 `json:"conversion_lift,omitempty"`
	Description string `json:"description,omitempty"`
	ID string `json:"id,omitempty"`
	Img string `json:"img,omitempty"`
	Info string `json:"info,omitempty"`
	InfoTitle string `json:"info_title,omitempty"`
	IsRecommendation bool `json:"is_recommendation,omitempty"`
	Key string `json:"key,omitempty"`
	Link string `json:"link,omitempty"`
	Name string `json:"name,omitempty"`
	Parent string `json:"parent,omitempty"`
	Partner string `json:"partner,omitempty"`
	Path []string `json:"path,omitempty"`
	PerformanceRating uint `json:"performance_rating,omitempty"`
	RawName string `json:"raw_name,omitempty"`
	RecommendationModel string `json:"recommendation_model,omitempty"`
	SearchInterestID string `json:"search_interest_id,omitempty"`
	Source string `json:"source,omitempty"`
	Spend float64 `json:"spend,omitempty"`
	Type string `json:"type,omitempty"`
	Valid bool `json:"valid,omitempty"`
}

// AdAccountTrackingData represents the Facebook AdAccountTrackingData object
type AdAccountTrackingData struct {
	TrackingSpecs *ConversionActionQuery `json:"tracking_specs,omitempty"`
}

// AdAccountURLForAssetExtraction represents the Facebook AdAccountURLForAssetExtraction object
type AdAccountURLForAssetExtraction struct {
	SourceType string `json:"source_type,omitempty"`
	SourceURL string `json:"source_url,omitempty"`
}

// AdAccountUser represents the Facebook AdAccountUser object
type AdAccountUser struct {
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	Tasks []string `json:"tasks,omitempty"`
}

// AdAccountUserPermissions represents the Facebook AdAccountUserPermissions object
type AdAccountUserPermissions struct {
	Business *Business `json:"business,omitempty"`
	BusinessPersona map[string]interface{} `json:"business_persona,omitempty"`
	CreatedBy *User `json:"created_by,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	Email string `json:"email,omitempty"`
	Status string `json:"status,omitempty"`
	Tasks []string `json:"tasks,omitempty"`
	UpdatedBy *User `json:"updated_by,omitempty"`
	UpdatedTime time.Time `json:"updated_time,omitempty"`
	User *User `json:"user,omitempty"`
}

// AdAccountUserSettings represents the Facebook AdAccountUserSettings object
type AdAccountUserSettings struct {
	AcfShouldOptOutVideoAdjustments bool `json:"acf_should_opt_out_video_adjustments,omitempty"`
	AcoStickySettings []map[string]string `json:"aco_sticky_settings,omitempty"`
	ActionsQuickViewCreated bool `json:"actions_quick_view_created,omitempty"`
	ActiveAdsQuickViewCreated bool `json:"active_ads_quick_view_created,omitempty"`
	AdAccount *AdAccount `json:"ad_account,omitempty"`
	AdObjectExportFormat string `json:"ad_object_export_format,omitempty"`
	AdsManagerFooterRowToastImpressions int `json:"ads_manager_footer_row_toast_impressions,omitempty"`
	AutoReviewVideoCaption bool `json:"auto_review_video_caption,omitempty"`
	CampaignOverviewColumns []string `json:"campaign_overview_columns,omitempty"`
	ColumnSuggestionStatus string `json:"column_suggestion_status,omitempty"`
	ConditionalFormattingRules []string `json:"conditional_formatting_rules,omitempty"`
	DefaultAccountOverviewAgegenderMetrics []string `json:"default_account_overview_agegender_metrics,omitempty"`
	DefaultAccountOverviewLocationMetrics []string `json:"default_account_overview_location_metrics,omitempty"`
	DefaultAccountOverviewMetrics []string `json:"default_account_overview_metrics,omitempty"`
	DefaultAccountOverviewTimeMetrics []string `json:"default_account_overview_time_metrics,omitempty"`
	DefaultBuiltinColumnPreset string `json:"default_builtin_column_preset,omitempty"`
	DefaultNamTimeRange string `json:"default_nam_time_range,omitempty"`
	DraftModeEnabled bool `json:"draft_mode_enabled,omitempty"`
	ExportDeletedItemsWithDelivery bool `json:"export_deleted_items_with_delivery,omitempty"`
	ExportSummaryRow bool `json:"export_summary_row,omitempty"`
	HadDeliveryQuickViewCreated bool `json:"had_delivery_quick_view_created,omitempty"`
	HasSeenGroupsColumnFlexingExperience bool `json:"has_seen_groups_column_flexing_experience,omitempty"`
	HasSeenInstagramColumnFlexingExperience bool `json:"has_seen_instagram_column_flexing_experience,omitempty"`
	HasSeenLeadsColumnFlexingExperience bool `json:"has_seen_leads_column_flexing_experience,omitempty"`
	HasSeenShopsAdsMetricsOnboardingTour bool `json:"has_seen_shops_ads_metrics_onboarding_tour,omitempty"`
	HasSeenShopsColumnFlexingExperience bool `json:"has_seen_shops_column_flexing_experience,omitempty"`
	HiddenOptimizationTips []map[string]bool `json:"hidden_optimization_tips,omitempty"`
	HighPerformingQuickViewCreated bool `json:"high_performing_quick_view_created,omitempty"`
	ID string `json:"id,omitempty"`
	Is3pAuthSettingSet bool `json:"is_3p_auth_setting_set,omitempty"`
	IsAdsManagerFooterRowPreferenceSet bool `json:"is_ads_manager_footer_row_preference_set,omitempty"`
	IsAdsManagerFooterRowShown bool `json:"is_ads_manager_footer_row_shown,omitempty"`
	IsTextVariationNuxClose bool `json:"is_text_variation_nux_close,omitempty"`
	LastUsedColumns map[string]interface{} `json:"last_used_columns,omitempty"`
	LastUsedPeFilters []map[string]interface{} `json:"last_used_pe_filters,omitempty"`
	LastUsedWebsiteURLs []string `json:"last_used_website_urls,omitempty"`
	OutlierPreferences map[string]interface{} `json:"outlier_preferences,omitempty"`
	PinnedAdObjectIDs []string `json:"pinned_ad_object_ids,omitempty"`
	RbExportFormat string `json:"rb_export_format,omitempty"`
	RbExportRawData bool `json:"rb_export_raw_data,omitempty"`
	RbExportSummaryRow bool `json:"rb_export_summary_row,omitempty"`
	SaipAdvertiserSetupOptimisationGuidanceOverallState string `json:"saip_advertiser_setup_optimisation_guidance_overall_state,omitempty"`
	SaipAdvertiserSetupOptimisationGuidanceState []map[string]string `json:"saip_advertiser_setup_optimisation_guidance_state,omitempty"`
	ShopsAdsMetricsOnboardingTourCloseCount int `json:"shops_ads_metrics_onboarding_tour_close_count,omitempty"`
	ShopsAdsMetricsOnboardingTourLastActionTime time.Time `json:"shops_ads_metrics_onboarding_tour_last_action_time,omitempty"`
	ShouldDefaultImageAutoCrop bool `json:"should_default_image_auto_crop,omitempty"`
	ShouldDefaultImageAutoCropForTail bool `json:"should_default_image_auto_crop_for_tail,omitempty"`
	ShouldDefaultImageAutoCropOptimization bool `json:"should_default_image_auto_crop_optimization,omitempty"`
	ShouldDefaultImageDofToggle bool `json:"should_default_image_dof_toggle,omitempty"`
	ShouldDefaultImageLppAdsToSquare bool `json:"should_default_image_lpp_ads_to_square,omitempty"`
	ShouldDefaultInstagramProfileCardOptimization bool `json:"should_default_instagram_profile_card_optimization,omitempty"`
	ShouldDefaultTextSwappingOptimization bool `json:"should_default_text_swapping_optimization,omitempty"`
	ShouldLogoutOf3pSourcing bool `json:"should_logout_of_3p_sourcing,omitempty"`
	ShouldShowShopsAdsMetricsOnboardingTour bool `json:"should_show_shops_ads_metrics_onboarding_tour,omitempty"`
	ShowArchivedData bool `json:"show_archived_data,omitempty"`
	ShowTextVariationNuxTooltip bool `json:"show_text_variation_nux_tooltip,omitempty"`
	SydCampaignTrendsActivemetric string `json:"syd_campaign_trends_activemetric,omitempty"`
	SydCampaignTrendsAttribution string `json:"syd_campaign_trends_attribution,omitempty"`
	SydCampaignTrendsMetrics []string `json:"syd_campaign_trends_metrics,omitempty"`
	SydCampaignTrendsObjective AdaccountusersettingsSydCampaignTrendsObjective `json:"syd_campaign_trends_objective,omitempty"`
	SydCampaignTrendsTimeRange string `json:"syd_campaign_trends_time_range,omitempty"`
	SydLandingPageOptInStatus string `json:"syd_landing_page_opt_in_status,omitempty"`
	TextGenPersonaOptInType string `json:"text_gen_persona_opt_in_type,omitempty"`
	TextVariationsOptInOutTs time.Time `json:"text_variations_opt_in_out_ts,omitempty"`
	TextVariationsOptInType string `json:"text_variations_opt_in_type,omitempty"`
	User *User `json:"user,omitempty"`
}

// AdAccountYouthAdsAdvertiser represents the Facebook AdAccountYouthAdsAdvertiser object
type AdAccountYouthAdsAdvertiser struct {
	IsYouthAdsAdvertiser bool `json:"is_youth_ads_advertiser,omitempty"`
}

// AdActivity represents the Facebook AdActivity object
type AdActivity struct {
	ActorID string `json:"actor_id,omitempty"`
	ActorName string `json:"actor_name,omitempty"`
	ApplicationID string `json:"application_id,omitempty"`
	ApplicationName string `json:"application_name,omitempty"`
	DateTimeInTimezone string `json:"date_time_in_timezone,omitempty"`
	EventTime time.Time `json:"event_time,omitempty"`
	EventType AdactivityEventType `json:"event_type,omitempty"`
	ExtraData string `json:"extra_data,omitempty"`
	ObjectID string `json:"object_id,omitempty"`
	ObjectName string `json:"object_name,omitempty"`
	ObjectType string `json:"object_type,omitempty"`
	TranslatedEventType string `json:"translated_event_type,omitempty"`
}

// AdAssetBody represents the Facebook AdAssetBody object
type AdAssetBody struct {
	ID string `json:"id,omitempty"`
	Text string `json:"text,omitempty"`
	URLTags string `json:"url_tags,omitempty"`
}

// AdAssetCallToActionType represents the Facebook AdAssetCallToActionType object
type AdAssetCallToActionType struct {
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
}

// AdAssetCustomizationRuleCustomizationSpec represents the Facebook AdAssetCustomizationRuleCustomizationSpec object
type AdAssetCustomizationRuleCustomizationSpec struct {
	AgeMax uint `json:"age_max,omitempty"`
	AgeMin uint `json:"age_min,omitempty"`
	AudienceNetworkPositions []string `json:"audience_network_positions,omitempty"`
	DevicePlatforms []AdassetcustomizationrulecustomizationspecDevicePlatforms `json:"device_platforms,omitempty"`
	FacebookPositions []string `json:"facebook_positions,omitempty"`
	GeoLocations *TargetingGeoLocation `json:"geo_locations,omitempty"`
	InstagramPositions []string `json:"instagram_positions,omitempty"`
	Locales []uint `json:"locales,omitempty"`
	MessengerPositions []string `json:"messenger_positions,omitempty"`
	PublisherPlatforms []string `json:"publisher_platforms,omitempty"`
}

// AdAssetDescription represents the Facebook AdAssetDescription object
type AdAssetDescription struct {
	ID string `json:"id,omitempty"`
	Text string `json:"text,omitempty"`
	URLTags string `json:"url_tags,omitempty"`
}

// AdAssetFeedAdditionalData represents the Facebook AdAssetFeedAdditionalData object
type AdAssetFeedAdditionalData struct {
	AutomatedProductTags bool `json:"automated_product_tags,omitempty"`
	BrandPageID string `json:"brand_page_id,omitempty"`
	IsClickToMessage bool `json:"is_click_to_message,omitempty"`
	MultiShareEndCard bool `json:"multi_share_end_card,omitempty"`
	PageWelcomeMessage string `json:"page_welcome_message,omitempty"`
	PartnerAppWelcomeMessageFlowID string `json:"partner_app_welcome_message_flow_id,omitempty"`
}

// AdAssetFeedAdditionalDataPageNudgeMessage represents the Facebook AdAssetFeedAdditionalDataPageNudgeMessage object
type AdAssetFeedAdditionalDataPageNudgeMessage struct {
	Enabled bool `json:"enabled,omitempty"`
	QuickReplies []map[string]interface{} `json:"quick_replies,omitempty"`
	Text string `json:"text,omitempty"`
}

// AdAssetFeedSpec represents the Facebook AdAssetFeedSpec object
type AdAssetFeedSpec struct {
	AdFormats []string `json:"ad_formats,omitempty"`
	AdditionalData *AdAssetFeedAdditionalData `json:"additional_data,omitempty"`
	AppProductPageID string `json:"app_product_page_id,omitempty"`
	AssetCustomizationRules []*AdAssetFeedSpecAssetCustomizationRule `json:"asset_customization_rules,omitempty"`
	Audios []map[string]interface{} `json:"audios,omitempty"`
	Autotranslate []string `json:"autotranslate,omitempty"`
	Bodies []*AdAssetFeedSpecBody `json:"bodies,omitempty"`
	CallAdsConfiguration map[string]interface{} `json:"call_ads_configuration,omitempty"`
	CallToActionTypes []AdassetfeedspecCallToActionTypes `json:"call_to_action_types,omitempty"`
	CallToActions []*AdAssetFeedSpecCallToAction `json:"call_to_actions,omitempty"`
	Captions []*AdAssetFeedSpecCaption `json:"captions,omitempty"`
	Carousels []*AdAssetFeedSpecCarousel `json:"carousels,omitempty"`
	CtwaConsentData []map[string]interface{} `json:"ctwa_consent_data,omitempty"`
	Descriptions []*AdAssetFeedSpecDescription `json:"descriptions,omitempty"`
	Events []*AdAssetFeedSpecEvents `json:"events,omitempty"`
	Groups []*AdAssetFeedSpecGroupRule `json:"groups,omitempty"`
	Images []*AdAssetFeedSpecImage `json:"images,omitempty"`
	LinkURLs []*AdAssetFeedSpecLinkURL `json:"link_urls,omitempty"`
	MessageExtensions []*AdAssetMessageExtensions `json:"message_extensions,omitempty"`
	OnsiteDestinations []*AdAssetOnsiteDestinations `json:"onsite_destinations,omitempty"`
	OptimizationType string `json:"optimization_type,omitempty"`
	PromotionalMetadata map[string]interface{} `json:"promotional_metadata,omitempty"`
	ReasonsToShop bool `json:"reasons_to_shop,omitempty"`
	ShopsBundle bool `json:"shops_bundle,omitempty"`
	Titles []*AdAssetFeedSpecTitle `json:"titles,omitempty"`
	Translations []map[string]interface{} `json:"translations,omitempty"`
	UpcomingEvents []map[string]interface{} `json:"upcoming_events,omitempty"`
	Videos []*AdAssetFeedSpecVideo `json:"videos,omitempty"`
}

// AdAssetFeedSpecAssetCustomizationRule represents the Facebook AdAssetFeedSpecAssetCustomizationRule object
type AdAssetFeedSpecAssetCustomizationRule struct {
	BodyLabel *AdAssetFeedSpecAssetLabel `json:"body_label,omitempty"`
	CallToActionLabel *AdAssetFeedSpecAssetLabel `json:"call_to_action_label,omitempty"`
	CallToActionTypeLabel *AdAssetFeedSpecAssetLabel `json:"call_to_action_type_label,omitempty"`
	CaptionLabel *AdAssetFeedSpecAssetLabel `json:"caption_label,omitempty"`
	CarouselLabel *AdAssetFeedSpecAssetLabel `json:"carousel_label,omitempty"`
	CustomizationSpec *AdAssetCustomizationRuleCustomizationSpec `json:"customization_spec,omitempty"`
	DescriptionLabel *AdAssetFeedSpecAssetLabel `json:"description_label,omitempty"`
	ImageLabel *AdAssetFeedSpecAssetLabel `json:"image_label,omitempty"`
	IsDefault bool `json:"is_default,omitempty"`
	LinkURLLabel *AdAssetFeedSpecAssetLabel `json:"link_url_label,omitempty"`
	Priority int `json:"priority,omitempty"`
	TitleLabel *AdAssetFeedSpecAssetLabel `json:"title_label,omitempty"`
	VideoLabel *AdAssetFeedSpecAssetLabel `json:"video_label,omitempty"`
}

// AdAssetFeedSpecAssetLabel represents the Facebook AdAssetFeedSpecAssetLabel object
type AdAssetFeedSpecAssetLabel struct {
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
}

// AdAssetFeedSpecBody represents the Facebook AdAssetFeedSpecBody object
type AdAssetFeedSpecBody struct {
	Adlabels []*AdAssetFeedSpecAssetLabel `json:"adlabels,omitempty"`
	Text string `json:"text,omitempty"`
	URLTags string `json:"url_tags,omitempty"`
}

// AdAssetFeedSpecCallToAction represents the Facebook AdAssetFeedSpecCallToAction object
type AdAssetFeedSpecCallToAction struct {
	Adlabels []*AdAssetFeedSpecAssetLabel `json:"adlabels,omitempty"`
	Type string `json:"type,omitempty"`
	Value *AdCreativeLinkDataCallToActionValue `json:"value,omitempty"`
}

// AdAssetFeedSpecCaption represents the Facebook AdAssetFeedSpecCaption object
type AdAssetFeedSpecCaption struct {
	Adlabels []*AdAssetFeedSpecAssetLabel `json:"adlabels,omitempty"`
	Text string `json:"text,omitempty"`
	URLTags string `json:"url_tags,omitempty"`
}

// AdAssetFeedSpecCarousel represents the Facebook AdAssetFeedSpecCarousel object
type AdAssetFeedSpecCarousel struct {
	Adlabels []*AdAssetFeedSpecAssetLabel `json:"adlabels,omitempty"`
	ChildAttachments []*AdAssetFeedSpecCarouselChildAttachment `json:"child_attachments,omitempty"`
	MultiShareEndCard bool `json:"multi_share_end_card,omitempty"`
	MultiShareOptimized bool `json:"multi_share_optimized,omitempty"`
}

// AdAssetFeedSpecCarouselChildAttachment represents the Facebook AdAssetFeedSpecCarouselChildAttachment object
type AdAssetFeedSpecCarouselChildAttachment struct {
	BodyLabel *AdAssetFeedSpecAssetLabel `json:"body_label,omitempty"`
	CallToActionTypeLabel *AdAssetFeedSpecAssetLabel `json:"call_to_action_type_label,omitempty"`
	CaptionLabel *AdAssetFeedSpecAssetLabel `json:"caption_label,omitempty"`
	DescriptionLabel *AdAssetFeedSpecAssetLabel `json:"description_label,omitempty"`
	ImageLabel *AdAssetFeedSpecAssetLabel `json:"image_label,omitempty"`
	LinkURLLabel *AdAssetFeedSpecAssetLabel `json:"link_url_label,omitempty"`
	PhoneDataIDsLabel *AdAssetFeedSpecAssetLabel `json:"phone_data_ids_label,omitempty"`
	StaticCard bool `json:"static_card,omitempty"`
	TitleLabel *AdAssetFeedSpecAssetLabel `json:"title_label,omitempty"`
	VideoLabel *AdAssetFeedSpecAssetLabel `json:"video_label,omitempty"`
}

// AdAssetFeedSpecDescription represents the Facebook AdAssetFeedSpecDescription object
type AdAssetFeedSpecDescription struct {
	Adlabels []*AdAssetFeedSpecAssetLabel `json:"adlabels,omitempty"`
	Text string `json:"text,omitempty"`
	URLTags string `json:"url_tags,omitempty"`
}

// AdAssetFeedSpecEvents represents the Facebook AdAssetFeedSpecEvents object
type AdAssetFeedSpecEvents struct {
	ID string `json:"id,omitempty"`
}

// AdAssetFeedSpecGroupRule represents the Facebook AdAssetFeedSpecGroupRule object
type AdAssetFeedSpecGroupRule struct {
	BodyLabel *AdAssetFeedSpecAssetLabel `json:"body_label,omitempty"`
	CaptionLabel *AdAssetFeedSpecAssetLabel `json:"caption_label,omitempty"`
	DescriptionLabel *AdAssetFeedSpecAssetLabel `json:"description_label,omitempty"`
	ImageLabel *AdAssetFeedSpecAssetLabel `json:"image_label,omitempty"`
	LinkURLLabel *AdAssetFeedSpecAssetLabel `json:"link_url_label,omitempty"`
	TitleLabel *AdAssetFeedSpecAssetLabel `json:"title_label,omitempty"`
	VideoLabel *AdAssetFeedSpecAssetLabel `json:"video_label,omitempty"`
}

// AdAssetFeedSpecImage represents the Facebook AdAssetFeedSpecImage object
type AdAssetFeedSpecImage struct {
	Adlabels []*AdAssetFeedSpecAssetLabel `json:"adlabels,omitempty"`
	Hash string `json:"hash,omitempty"`
	ImageCrops *AdsImageCrops `json:"image_crops,omitempty"`
	URL string `json:"url,omitempty"`
	URLTags string `json:"url_tags,omitempty"`
}

// AdAssetFeedSpecLinkURL represents the Facebook AdAssetFeedSpecLinkURL object
type AdAssetFeedSpecLinkURL struct {
	Adlabels []*AdAssetFeedSpecAssetLabel `json:"adlabels,omitempty"`
	CarouselSeeMoreURL string `json:"carousel_see_more_url,omitempty"`
	DeeplinkURL string `json:"deeplink_url,omitempty"`
	DisplayURL string `json:"display_url,omitempty"`
	ObjectStoreURLs []string `json:"object_store_urls,omitempty"`
	URLTags string `json:"url_tags,omitempty"`
	WebsiteURL string `json:"website_url,omitempty"`
}

// AdAssetFeedSpecTitle represents the Facebook AdAssetFeedSpecTitle object
type AdAssetFeedSpecTitle struct {
	Adlabels []*AdAssetFeedSpecAssetLabel `json:"adlabels,omitempty"`
	Text string `json:"text,omitempty"`
	URLTags string `json:"url_tags,omitempty"`
}

// AdAssetFeedSpecVideo represents the Facebook AdAssetFeedSpecVideo object
type AdAssetFeedSpecVideo struct {
	Adlabels []*AdAssetFeedSpecAssetLabel `json:"adlabels,omitempty"`
	CaptionIDs []string `json:"caption_ids,omitempty"`
	ThumbnailHash string `json:"thumbnail_hash,omitempty"`
	ThumbnailURL string `json:"thumbnail_url,omitempty"`
	URLTags string `json:"url_tags,omitempty"`
	VideoID string `json:"video_id,omitempty"`
}

// AdAssetImage represents the Facebook AdAssetImage object
type AdAssetImage struct {
	Hash string `json:"hash,omitempty"`
	ID string `json:"id,omitempty"`
	ImageCrops *AdsImageCrops `json:"image_crops,omitempty"`
	Name string `json:"name,omitempty"`
	Tag string `json:"tag,omitempty"`
	URL string `json:"url,omitempty"`
	URLTags string `json:"url_tags,omitempty"`
}

// AdAssetLinkURL represents the Facebook AdAssetLinkURL object
type AdAssetLinkURL struct {
	AndroidDeeplinkURL string `json:"android_deeplink_url,omitempty"`
	CarouselSeeMoreURL string `json:"carousel_see_more_url,omitempty"`
	DeeplinkURL string `json:"deeplink_url,omitempty"`
	DisplayURL string `json:"display_url,omitempty"`
	ID string `json:"id,omitempty"`
	IpadDeeplinkURL string `json:"ipad_deeplink_url,omitempty"`
	IphoneDeeplinkURL string `json:"iphone_deeplink_url,omitempty"`
	URLTags string `json:"url_tags,omitempty"`
	WebsiteURL string `json:"website_url,omitempty"`
}

// AdAssetMessageExtensions represents the Facebook AdAssetMessageExtensions object
type AdAssetMessageExtensions struct {
	Type string `json:"type,omitempty"`
}

// AdAssetOnsiteDestinations represents the Facebook AdAssetOnsiteDestinations object
type AdAssetOnsiteDestinations struct {
	AutoOptimization string `json:"auto_optimization,omitempty"`
	DetailsPageProductID string `json:"details_page_product_id,omitempty"`
	ShopCollectionProductSetID string `json:"shop_collection_product_set_id,omitempty"`
	Source string `json:"source,omitempty"`
	StorefrontShopID string `json:"storefront_shop_id,omitempty"`
}

// AdAssetTargetRuleTargeting represents the Facebook AdAssetTargetRuleTargeting object
type AdAssetTargetRuleTargeting struct {
	AgeMax uint `json:"age_max,omitempty"`
	AgeMin uint `json:"age_min,omitempty"`
	AudienceNetworkPositions []string `json:"audience_network_positions,omitempty"`
	DevicePlatforms []AdassettargetruletargetingDevicePlatforms `json:"device_platforms,omitempty"`
	FacebookPositions []string `json:"facebook_positions,omitempty"`
	GeoLocations *TargetingGeoLocation `json:"geo_locations,omitempty"`
	InstagramPositions []string `json:"instagram_positions,omitempty"`
	PublisherPlatforms []string `json:"publisher_platforms,omitempty"`
	ThreadsPositions []string `json:"threads_positions,omitempty"`
}

// AdAssetTitle represents the Facebook AdAssetTitle object
type AdAssetTitle struct {
	ID string `json:"id,omitempty"`
	Text string `json:"text,omitempty"`
	URLTags string `json:"url_tags,omitempty"`
}

// AdAssetVideo represents the Facebook AdAssetVideo object
type AdAssetVideo struct {
	CaptionIDs []string `json:"caption_ids,omitempty"`
	ID string `json:"id,omitempty"`
	SourceImageURL string `json:"source_image_url,omitempty"`
	Tag string `json:"tag,omitempty"`
	ThumbnailHash string `json:"thumbnail_hash,omitempty"`
	ThumbnailSource string `json:"thumbnail_source,omitempty"`
	ThumbnailURL string `json:"thumbnail_url,omitempty"`
	URL string `json:"url,omitempty"`
	URLTags string `json:"url_tags,omitempty"`
	VideoID string `json:"video_id,omitempty"`
	VideoName string `json:"video_name,omitempty"`
}

// AdAsyncRequest represents the Facebook AdAsyncRequest object
type AdAsyncRequest struct {
	AsyncRequestSet *AdAsyncRequestSet `json:"async_request_set,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	ID string `json:"id,omitempty"`
	Input map[string]interface{} `json:"input,omitempty"`
	Result map[string]interface{} `json:"result,omitempty"`
	ScopeObjectID string `json:"scope_object_id,omitempty"`
	Status string `json:"status,omitempty"`
	Type string `json:"type,omitempty"`
	UpdatedTime time.Time `json:"updated_time,omitempty"`
}

// AdAsyncRequestSet represents the Facebook AdAsyncRequestSet object
type AdAsyncRequestSet struct {
	CanceledCount int `json:"canceled_count,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	ErrorCount int `json:"error_count,omitempty"`
	ID string `json:"id,omitempty"`
	InProgressCount int `json:"in_progress_count,omitempty"`
	InitialCount uint `json:"initial_count,omitempty"`
	IsCompleted bool `json:"is_completed,omitempty"`
	Name string `json:"name,omitempty"`
	NotificationMode AdasyncrequestsetNotificationMode `json:"notification_mode,omitempty"`
	NotificationResult *AdAsyncRequestSetNotificationResult `json:"notification_result,omitempty"`
	NotificationStatus string `json:"notification_status,omitempty"`
	NotificationUri string `json:"notification_uri,omitempty"`
	OwnerID string `json:"owner_id,omitempty"`
	SuccessCount int `json:"success_count,omitempty"`
	TotalCount uint `json:"total_count,omitempty"`
	UpdatedTime time.Time `json:"updated_time,omitempty"`
}

// AdAsyncRequestSetNotificationResult represents the Facebook AdAsyncRequestSetNotificationResult object
type AdAsyncRequestSetNotificationResult struct {
	Response string `json:"response,omitempty"`
	Status string `json:"status,omitempty"`
}

// AdBidAdjustments represents the Facebook AdBidAdjustments object
type AdBidAdjustments struct {
	AgeRange map[string]float64 `json:"age_range,omitempty"`
	PageTypes map[string]interface{} `json:"page_types,omitempty"`
	UserGroups string `json:"user_groups,omitempty"`
}

// AdCampaignBidConstraint represents the Facebook AdCampaignBidConstraint object
type AdCampaignBidConstraint struct {
	RoasAverageFloor int `json:"roas_average_floor,omitempty"`
}

// AdCampaignConversionValueExpressionSpec represents the Facebook AdCampaignConversionValueExpressionSpec object
type AdCampaignConversionValueExpressionSpec struct {
	AdjustmentSign string `json:"adjustment_sign,omitempty"`
	AdjustmentWeight uint `json:"adjustment_weight,omitempty"`
	DestinationType string `json:"destination_type,omitempty"`
}

// AdCampaignDeliveryEstimate represents the Facebook AdCampaignDeliveryEstimate object
type AdCampaignDeliveryEstimate struct {
	DailyOutcomesCurve []*OutcomePredictionPoint `json:"daily_outcomes_curve,omitempty"`
	EstimateDau int `json:"estimate_dau,omitempty"`
	EstimateMauLowerBound int `json:"estimate_mau_lower_bound,omitempty"`
	EstimateMauUpperBound int `json:"estimate_mau_upper_bound,omitempty"`
	EstimateReady bool `json:"estimate_ready,omitempty"`
	TargetingOptimizationTypes []map[string]int `json:"targeting_optimization_types,omitempty"`
}

// AdCampaignDeliveryStats represents the Facebook AdCampaignDeliveryStats object
type AdCampaignDeliveryStats struct {
	BidRecommendation int `json:"bid_recommendation,omitempty"`
	CurrentAverageCost float64 `json:"current_average_cost,omitempty"`
	LastSignificantEditTs int `json:"last_significant_edit_ts,omitempty"`
	LearningStageExitInfo map[string]interface{} `json:"learning_stage_exit_info,omitempty"`
	LearningStageInfo *AdCampaignLearningStageInfo `json:"learning_stage_info,omitempty"`
	UnsupportedFeatures []map[string]*AdCampaignDeliveryStatsUnsupportedReasons `json:"unsupported_features,omitempty"`
}

// AdCampaignDeliveryStatsUnsupportedReasons represents the Facebook AdCampaignDeliveryStatsUnsupportedReasons object
type AdCampaignDeliveryStatsUnsupportedReasons struct {
	ReasonData []map[string]string `json:"reason_data,omitempty"`
	ReasonType string `json:"reason_type,omitempty"`
}

// AdCampaignFrequencyControlSpecs represents the Facebook AdCampaignFrequencyControlSpecs object
type AdCampaignFrequencyControlSpecs struct {
	Event string `json:"event,omitempty"`
	IntervalDays uint `json:"interval_days,omitempty"`
	MaxFrequency uint `json:"max_frequency,omitempty"`
}

// AdCampaignGroupAdvantageState represents the Facebook AdCampaignGroupAdvantageState object
type AdCampaignGroupAdvantageState struct {
	AdvantageAudienceState string `json:"advantage_audience_state,omitempty"`
	AdvantageBudgetState string `json:"advantage_budget_state,omitempty"`
	AdvantagePlacementState string `json:"advantage_placement_state,omitempty"`
	AdvantageState string `json:"advantage_state,omitempty"`
}

// AdCampaignGroupAgencyFeeConfigForApi represents the Facebook AdCampaignGroupAgencyFeeConfigForApi object
type AdCampaignGroupAgencyFeeConfigForApi struct {
	AgencyFeePct float64 `json:"agency_fee_pct,omitempty"`
	IsAgencyFeeDisabled bool `json:"is_agency_fee_disabled,omitempty"`
	IsDefaultAgencyFee bool `json:"is_default_agency_fee,omitempty"`
}

// AdCampaignGroupIncrementalConversionOptimizationConfig represents the Facebook AdCampaignGroupIncrementalConversionOptimizationConfig object
type AdCampaignGroupIncrementalConversionOptimizationConfig struct {
	ActionType string `json:"action_type,omitempty"`
	AdStudyEndTime time.Time `json:"ad_study_end_time,omitempty"`
	AdStudyID string `json:"ad_study_id,omitempty"`
	AdStudyName string `json:"ad_study_name,omitempty"`
	AdStudyStartTime time.Time `json:"ad_study_start_time,omitempty"`
	CellID string `json:"cell_id,omitempty"`
	CellName string `json:"cell_name,omitempty"`
	HoldoutSize float64 `json:"holdout_size,omitempty"`
	IcoType string `json:"ico_type,omitempty"`
	Objectives []map[string]interface{} `json:"objectives,omitempty"`
}

// AdCampaignGroupMetricsMetadata represents the Facebook AdCampaignGroupMetricsMetadata object
type AdCampaignGroupMetricsMetadata struct {
	BudgetOptimization []string `json:"budget_optimization,omitempty"`
	DuplicationFlowTips []string `json:"duplication_flow_tips,omitempty"`
}

// AdCampaignGroupStats represents the Facebook AdCampaignGroupStats object
type AdCampaignGroupStats struct {
	Actions map[string]int `json:"actions,omitempty"`
	CampaignGroupID string `json:"campaign_group_id,omitempty"`
	Clicks uint `json:"clicks,omitempty"`
	EndTime time.Time `json:"end_time,omitempty"`
	Impressions uint `json:"impressions,omitempty"`
	InlineActions map[string]int `json:"inline_actions,omitempty"`
	SocialClicks uint `json:"social_clicks,omitempty"`
	SocialImpressions uint `json:"social_impressions,omitempty"`
	SocialSpent uint `json:"social_spent,omitempty"`
	SocialUniqueClicks uint `json:"social_unique_clicks,omitempty"`
	SocialUniqueImpressions uint `json:"social_unique_impressions,omitempty"`
	Spent uint `json:"spent,omitempty"`
	StartTime time.Time `json:"start_time,omitempty"`
	UniqueClicks uint `json:"unique_clicks,omitempty"`
	UniqueImpressions uint `json:"unique_impressions,omitempty"`
}

// AdCampaignGroupStructureTree represents the Facebook AdCampaignGroupStructureTree object
type AdCampaignGroupStructureTree struct {
	Children []*AdCampaignGroupStructureTree `json:"children,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	TimeUpdated int `json:"time_updated,omitempty"`
}

// AdCampaignIssuesInfo represents the Facebook AdCampaignIssuesInfo object
type AdCampaignIssuesInfo struct {
	ErrorCode int `json:"error_code,omitempty"`
	ErrorMessage string `json:"error_message,omitempty"`
	ErrorSummary string `json:"error_summary,omitempty"`
	ErrorType string `json:"error_type,omitempty"`
	Level string `json:"level,omitempty"`
	Mid string `json:"mid,omitempty"`
}

// AdCampaignLearningStageInfo represents the Facebook AdCampaignLearningStageInfo object
type AdCampaignLearningStageInfo struct {
	AttributionWindows []string `json:"attribution_windows,omitempty"`
	Conversions uint `json:"conversions,omitempty"`
	LastSigEditTs int `json:"last_sig_edit_ts,omitempty"`
	Status string `json:"status,omitempty"`
}

// AdCampaignMetricsMetadata represents the Facebook AdCampaignMetricsMetadata object
type AdCampaignMetricsMetadata struct {
	BoostedComponentOptimization []string `json:"boosted_component_optimization,omitempty"`
	CreationFlowTips []string `json:"creation_flow_tips,omitempty"`
	DefaultOptedInPlacements []map[string]interface{} `json:"default_opted_in_placements,omitempty"`
	DeliveryGrowthOptimizations []map[string]interface{} `json:"delivery_growth_optimizations,omitempty"`
	DuplicationFlowTips []string `json:"duplication_flow_tips,omitempty"`
	EditFlowTips []string `json:"edit_flow_tips,omitempty"`
}

// AdCampaignMultiAds represents the Facebook AdCampaignMultiAds object
type AdCampaignMultiAds struct {
	EnrollStatus string `json:"enroll_status,omitempty"`
	SourceType string `json:"source_type,omitempty"`
}

// AdCampaignOptimizationEvent represents the Facebook AdCampaignOptimizationEvent object
type AdCampaignOptimizationEvent struct {
	CustomConversionID string `json:"custom_conversion_id,omitempty"`
	EventSequence uint `json:"event_sequence,omitempty"`
	EventType string `json:"event_type,omitempty"`
}

// AdCampaignPacedBidInfo represents the Facebook AdCampaignPacedBidInfo object
type AdCampaignPacedBidInfo struct {
	BiddingStatus string `json:"bidding_status,omitempty"`
}

// AdCampaignStats represents the Facebook AdCampaignStats object
type AdCampaignStats struct {
	AccountID string `json:"account_id,omitempty"`
	Actions map[string]interface{} `json:"actions,omitempty"`
	AdgroupID string `json:"adgroup_id,omitempty"`
	CampaignID string `json:"campaign_id,omitempty"`
	CampaignIDs []string `json:"campaign_ids,omitempty"`
	Clicks uint `json:"clicks,omitempty"`
	EndTime map[string]interface{} `json:"end_time,omitempty"`
	ID string `json:"id,omitempty"`
	Impressions string `json:"impressions,omitempty"`
	InlineActions map[string]interface{} `json:"inline_actions,omitempty"`
	IoNumber uint `json:"io_number,omitempty"`
	IsCompleted bool `json:"is_completed,omitempty"`
	LineNumber uint `json:"line_number,omitempty"`
	NewsfeedPosition map[string]interface{} `json:"newsfeed_position,omitempty"`
	SocialClicks uint `json:"social_clicks,omitempty"`
	SocialImpressions string `json:"social_impressions,omitempty"`
	SocialSpent uint `json:"social_spent,omitempty"`
	SocialUniqueClicks uint `json:"social_unique_clicks,omitempty"`
	SocialUniqueImpressions string `json:"social_unique_impressions,omitempty"`
	Spent int `json:"spent,omitempty"`
	StartTime map[string]interface{} `json:"start_time,omitempty"`
	ToplineID string `json:"topline_id,omitempty"`
	UniqueClicks uint `json:"unique_clicks,omitempty"`
	UniqueImpressions string `json:"unique_impressions,omitempty"`
}

// AdColumnSizes represents the Facebook AdColumnSizes object
type AdColumnSizes struct {
	AdmarketAccount *AdAccount `json:"admarket_account,omitempty"`
	AppID string `json:"app_id,omitempty"`
	Columns []map[string]string `json:"columns,omitempty"`
	ID string `json:"id,omitempty"`
	Owner *User `json:"owner,omitempty"`
	Page string `json:"page,omitempty"`
	Report string `json:"report,omitempty"`
	Tab string `json:"tab,omitempty"`
	View string `json:"view,omitempty"`
}

// AdContract represents the Facebook AdContract object
type AdContract struct {
	AccountID string `json:"account_id,omitempty"`
	AccountMgrFbid string `json:"account_mgr_fbid,omitempty"`
	AccountMgrName string `json:"account_mgr_name,omitempty"`
	AdopsPersonName string `json:"adops_person_name,omitempty"`
	AdvertiserAddressFbid string `json:"advertiser_address_fbid,omitempty"`
	AdvertiserFbid string `json:"advertiser_fbid,omitempty"`
	AdvertiserName string `json:"advertiser_name,omitempty"`
	AgencyDiscount float64 `json:"agency_discount,omitempty"`
	AgencyName string `json:"agency_name,omitempty"`
	BillToAddressFbid string `json:"bill_to_address_fbid,omitempty"`
	BillToFbid string `json:"bill_to_fbid,omitempty"`
	CampaignName string `json:"campaign_name,omitempty"`
	CreatedBy string `json:"created_by,omitempty"`
	CreatedDate uint `json:"created_date,omitempty"`
	CustomerIo string `json:"customer_io,omitempty"`
	IoNumber uint `json:"io_number,omitempty"`
	IoTerms string `json:"io_terms,omitempty"`
	IoType string `json:"io_type,omitempty"`
	LastUpdatedBy string `json:"last_updated_by,omitempty"`
	LastUpdatedDate uint `json:"last_updated_date,omitempty"`
	MaxEndDate uint `json:"max_end_date,omitempty"`
	MdcFbid string `json:"mdc_fbid,omitempty"`
	MediaPlanNumber string `json:"media_plan_number,omitempty"`
	MinStartDate uint `json:"min_start_date,omitempty"`
	MsaContract string `json:"msa_contract,omitempty"`
	PaymentTerms string `json:"payment_terms,omitempty"`
	RevHoldFlag bool `json:"rev_hold_flag,omitempty"`
	RevHoldReleasedBy int `json:"rev_hold_released_by,omitempty"`
	RevHoldReleasedOn uint `json:"rev_hold_released_on,omitempty"`
	SalesrepFbid string `json:"salesrep_fbid,omitempty"`
	SalesrepName string `json:"salesrep_name,omitempty"`
	SoldToAddressFbid string `json:"sold_to_address_fbid,omitempty"`
	SoldToFbid string `json:"sold_to_fbid,omitempty"`
	Status string `json:"status,omitempty"`
	Subvertical string `json:"subvertical,omitempty"`
	ThirdpartyBilled uint `json:"thirdparty_billed,omitempty"`
	ThirdpartyUid string `json:"thirdparty_uid,omitempty"`
	ThirdpartyURL string `json:"thirdparty_url,omitempty"`
	VatCountry string `json:"vat_country,omitempty"`
	Version uint `json:"version,omitempty"`
	Vertical string `json:"vertical,omitempty"`
}

// AdConversionValues represents the Facebook AdConversionValues object
type AdConversionValues struct {
	AdgroupID string `json:"adgroup_id,omitempty"`
	CampaignID string `json:"campaign_id,omitempty"`
	Values interface{} `json:"values,omitempty"`
}

// AdConversions represents the Facebook AdConversions object
type AdConversions struct {
	AccountID string `json:"account_id,omitempty"`
	AdgroupID string `json:"adgroup_id,omitempty"`
	CampaignID string `json:"campaign_id,omitempty"`
	Values interface{} `json:"values,omitempty"`
}

// AdCreationPackageConfig represents the Facebook AdCreationPackageConfig object
type AdCreationPackageConfig struct {
	APIVersion string `json:"api_version,omitempty"`
	ID string `json:"id,omitempty"`
	IsEligibleForDefaultOptIn bool `json:"is_eligible_for_default_opt_in,omitempty"`
	Objective string `json:"objective,omitempty"`
	PackageID string `json:"package_id,omitempty"`
	Status string `json:"status,omitempty"`
}

// AdCreative represents the Facebook AdCreative object
type AdCreative struct {
	AccountID string `json:"account_id,omitempty"`
	ActorID string `json:"actor_id,omitempty"`
	AdDisclaimerSpec *AdCreativeAdDisclaimer `json:"ad_disclaimer_spec,omitempty"`
	Adlabels []*AdLabel `json:"adlabels,omitempty"`
	ApplinkTreatment string `json:"applink_treatment,omitempty"`
	AssetFeedSpec *AdAssetFeedSpec `json:"asset_feed_spec,omitempty"`
	AuthorizationCategory string `json:"authorization_category,omitempty"`
	AutoUpdate bool `json:"auto_update,omitempty"`
	Body string `json:"body,omitempty"`
	BrandedContent *AdCreativeBrandedContentAds `json:"branded_content,omitempty"`
	BrandedContentSponsorPageID string `json:"branded_content_sponsor_page_id,omitempty"`
	BundleFolderID string `json:"bundle_folder_id,omitempty"`
	CallToAction *AdCreativeLinkDataCallToAction `json:"call_to_action,omitempty"`
	CallToActionType AdcreativeCallToActionType `json:"call_to_action_type,omitempty"`
	CategorizationCriteria string `json:"categorization_criteria,omitempty"`
	CategoryMediaSource string `json:"category_media_source,omitempty"`
	CollaborativeAdsLsbImageBankID string `json:"collaborative_ads_lsb_image_bank_id,omitempty"`
	ContextualMultiAds *AdCreativeContextualMultiAds `json:"contextual_multi_ads,omitempty"`
	CreativeSourcingSpec *AdCreativeSourcingSpec `json:"creative_sourcing_spec,omitempty"`
	DegreesOfFreedomSpec *AdCreativeDegreesOfFreedomSpec `json:"degrees_of_freedom_spec,omitempty"`
	DestinationSetID string `json:"destination_set_id,omitempty"`
	DynamicAdVoice string `json:"dynamic_ad_voice,omitempty"`
	EffectiveAuthorizationCategory string `json:"effective_authorization_category,omitempty"`
	EffectiveInstagramMediaID string `json:"effective_instagram_media_id,omitempty"`
	EffectiveObjectStoryID string `json:"effective_object_story_id,omitempty"`
	EnableDirectInstall bool `json:"enable_direct_install,omitempty"`
	EnableLaunchInstantApp bool `json:"enable_launch_instant_app,omitempty"`
	FacebookBrandedContent *AdCreativeFacebookBrandedContent `json:"facebook_branded_content,omitempty"`
	ID string `json:"id,omitempty"`
	ImageCrops *AdsImageCrops `json:"image_crops,omitempty"`
	ImageHash string `json:"image_hash,omitempty"`
	ImageURL string `json:"image_url,omitempty"`
	InstagramBrandedContent *AdCreativeInstagramBrandedContent `json:"instagram_branded_content,omitempty"`
	InstagramPermalinkURL string `json:"instagram_permalink_url,omitempty"`
	InstagramUserID string `json:"instagram_user_id,omitempty"`
	InteractiveComponentsSpec *AdCreativeInteractiveComponentsSpec `json:"interactive_components_spec,omitempty"`
	LinkDeepLinkURL string `json:"link_deep_link_url,omitempty"`
	LinkDestinationDisplayURL string `json:"link_destination_display_url,omitempty"`
	LinkOgID string `json:"link_og_id,omitempty"`
	LinkURL string `json:"link_url,omitempty"`
	MessengerSponsoredMessage string `json:"messenger_sponsored_message,omitempty"`
	Name string `json:"name,omitempty"`
	ObjectID string `json:"object_id,omitempty"`
	ObjectStoreURL string `json:"object_store_url,omitempty"`
	ObjectStoryID string `json:"object_story_id,omitempty"`
	ObjectStorySpec *AdCreativeObjectStorySpec `json:"object_story_spec,omitempty"`
	ObjectType AdcreativeObjectType `json:"object_type,omitempty"`
	ObjectURL string `json:"object_url,omitempty"`
	OmnichannelLinkSpec *AdCreativeOmnichannelLinkSpec `json:"omnichannel_link_spec,omitempty"`
	PageWelcomeMessage string `json:"page_welcome_message,omitempty"`
	PhotoAlbumSourceObjectStoryID string `json:"photo_album_source_object_story_id,omitempty"`
	PlacePageSetID string `json:"place_page_set_id,omitempty"`
	PlatformCustomizations *AdCreativePlatformCustomization `json:"platform_customizations,omitempty"`
	PlayableAssetID string `json:"playable_asset_id,omitempty"`
	PortraitCustomizations *AdCreativePortraitCustomizations `json:"portrait_customizations,omitempty"`
	ProductData []*AdCreativeProductData `json:"product_data,omitempty"`
	ProductSetID string `json:"product_set_id,omitempty"`
	RecommenderSettings *AdCreativeRecommenderSettings `json:"recommender_settings,omitempty"`
	RegionalRegulationDisclaimerSpec *AdCreativeRegionalRegulationDisclaimer `json:"regional_regulation_disclaimer_spec,omitempty"`
	SourceFacebookPostID string `json:"source_facebook_post_id,omitempty"`
	SourceInstagramMediaID string `json:"source_instagram_media_id,omitempty"`
	Status AdcreativeStatus `json:"status,omitempty"`
	TemplateURL string `json:"template_url,omitempty"`
	TemplateURLSpec *AdCreativeTemplateURLSpec `json:"template_url_spec,omitempty"`
	ThumbnailID string `json:"thumbnail_id,omitempty"`
	ThumbnailURL string `json:"thumbnail_url,omitempty"`
	Title string `json:"title,omitempty"`
	URLTags string `json:"url_tags,omitempty"`
	UsePageActorOverride bool `json:"use_page_actor_override,omitempty"`
	VideoID string `json:"video_id,omitempty"`
}

// AdCreativeAdDisclaimer represents the Facebook AdCreativeAdDisclaimer object
type AdCreativeAdDisclaimer struct {
	Text string `json:"text,omitempty"`
	Title string `json:"title,omitempty"`
	URL string `json:"url,omitempty"`
}

// AdCreativeAssetGroupsSpec represents the Facebook AdCreativeAssetGroupsSpec object
type AdCreativeAssetGroupsSpec struct {
	Groups []map[string]interface{} `json:"groups,omitempty"`
	Origin string `json:"origin,omitempty"`
}

// AdCreativeBrandedContentAds represents the Facebook AdCreativeBrandedContentAds object
type AdCreativeBrandedContentAds struct {
	AdFormat int `json:"ad_format,omitempty"`
	ContentSearchInput string `json:"content_search_input,omitempty"`
	CreatorAdPermissionType string `json:"creator_ad_permission_type,omitempty"`
	FacebookBoostPostAccessToken string `json:"facebook_boost_post_access_token,omitempty"`
	InstagramBoostPostAccessToken string `json:"instagram_boost_post_access_token,omitempty"`
	IsMcaInternal bool `json:"is_mca_internal,omitempty"`
	ParentSourceFacebookPostID string `json:"parent_source_facebook_post_id,omitempty"`
	ParentSourceInstagramMediaID string `json:"parent_source_instagram_media_id,omitempty"`
	Partners []*AdCreativeBrandedContentAdsPartners `json:"partners,omitempty"`
	ProductSetPartnerSelectionStatus string `json:"product_set_partner_selection_status,omitempty"`
	PromotedPageID string `json:"promoted_page_id,omitempty"`
	Testimonial string `json:"testimonial,omitempty"`
	TestimonialLocale string `json:"testimonial_locale,omitempty"`
	UiVersion int `json:"ui_version,omitempty"`
}

// AdCreativeBrandedContentAdsPartners represents the Facebook AdCreativeBrandedContentAdsPartners object
type AdCreativeBrandedContentAdsPartners struct {
	FbPageID string `json:"fb_page_id,omitempty"`
	HasCreateAdsAccess bool `json:"has_create_ads_access,omitempty"`
	IDentityType string `json:"identity_type,omitempty"`
	IgAssetID string `json:"ig_asset_id,omitempty"`
	IgUserID string `json:"ig_user_id,omitempty"`
}

// AdCreativeCollectionThumbnailInfo represents the Facebook AdCreativeCollectionThumbnailInfo object
type AdCreativeCollectionThumbnailInfo struct {
	ElementChildIndex int `json:"element_child_index,omitempty"`
	ElementCrops *AdsImageCrops `json:"element_crops,omitempty"`
	ElementID string `json:"element_id,omitempty"`
}

// AdCreativeContextualMultiAds represents the Facebook AdCreativeContextualMultiAds object
type AdCreativeContextualMultiAds struct {
	EnrollStatus string `json:"enroll_status,omitempty"`
}

// AdCreativeDegreesOfFreedomSpec represents the Facebook AdCreativeDegreesOfFreedomSpec object
type AdCreativeDegreesOfFreedomSpec struct {
	AdHandleType string `json:"ad_handle_type,omitempty"`
	CreativeFeaturesSpec *AdCreativeFeaturesSpec `json:"creative_features_spec,omitempty"`
	DegreesOfFreedomType string `json:"degrees_of_freedom_type,omitempty"`
	ImageTransformationTypes []string `json:"image_transformation_types,omitempty"`
	MultiMediaTransformationType string `json:"multi_media_transformation_type,omitempty"`
	StoriesTransformationTypes []string `json:"stories_transformation_types,omitempty"`
	TextTransformationTypes []string `json:"text_transformation_types,omitempty"`
	VideoTransformationTypes []string `json:"video_transformation_types,omitempty"`
}

// AdCreativeDestinationSpec represents the Facebook AdCreativeDestinationSpec object
type AdCreativeDestinationSpec struct {
	DestinationType string `json:"destination_type,omitempty"`
}

// AdCreativeFacebookBrandedContent represents the Facebook AdCreativeFacebookBrandedContent object
type AdCreativeFacebookBrandedContent struct {
	SharedToSponsorStatus string `json:"shared_to_sponsor_status,omitempty"`
	SponsorPageID string `json:"sponsor_page_id,omitempty"`
	SponsorRelationship string `json:"sponsor_relationship,omitempty"`
}

// AdCreativeFeatureActionMetadata represents the Facebook AdCreativeFeatureActionMetadata object
type AdCreativeFeatureActionMetadata struct {
	Type string `json:"type,omitempty"`
}

// AdCreativeFeatureCustomizations represents the Facebook AdCreativeFeatureCustomizations object
type AdCreativeFeatureCustomizations struct {
	BackgroundColor string `json:"background_color,omitempty"`
	CatalogFeedTagName string `json:"catalog_feed_tag_name,omitempty"`
	FontName string `json:"font_name,omitempty"`
	ImageCropStyle string `json:"image_crop_style,omitempty"`
	PeCarousel map[string]interface{} `json:"pe_carousel,omitempty"`
	ShowcaseCardDisplay string `json:"showcase_card_display,omitempty"`
	TextExtraction map[string]interface{} `json:"text_extraction,omitempty"`
	TextStyle string `json:"text_style,omitempty"`
}

// AdCreativeFeatureDetails represents the Facebook AdCreativeFeatureDetails object
type AdCreativeFeatureDetails struct {
	Customizations *AdCreativeFeatureCustomizations `json:"customizations,omitempty"`
	EnrollStatus string `json:"enroll_status,omitempty"`
}

// AdCreativeFeaturesSpec represents the Facebook AdCreativeFeaturesSpec object
type AdCreativeFeaturesSpec struct {
	AdaptToPlacement *AdCreativeFeatureDetails `json:"adapt_to_placement,omitempty"`
	AddTextOverlay *AdCreativeFeatureDetails `json:"add_text_overlay,omitempty"`
	AdsWithBenefits *AdCreativeFeatureDetails `json:"ads_with_benefits,omitempty"`
	AdvantagePlusCreative *AdCreativeFeatureDetails `json:"advantage_plus_creative,omitempty"`
	AppHighlights *AdCreativeFeatureDetails `json:"app_highlights,omitempty"`
	Audio *AdCreativeFeatureDetails `json:"audio,omitempty"`
	BizAi *AdCreativeFeatureDetails `json:"biz_ai,omitempty"`
	CarouselToVideo *AdCreativeFeatureDetails `json:"carousel_to_video,omitempty"`
	CatalogFeedTag *AdCreativeFeatureDetails `json:"catalog_feed_tag,omitempty"`
	CustomizeProductRecommendation *AdCreativeFeatureDetails `json:"customize_product_recommendation,omitempty"`
	CvTransformation *AdCreativeFeatureDetails `json:"cv_transformation,omitempty"`
	DescriptionAutomation *AdCreativeFeatureDetails `json:"description_automation,omitempty"`
	DhaOptimization *AdCreativeFeatureDetails `json:"dha_optimization,omitempty"`
	DynamicPartnerContent *AdCreativeFeatureDetails `json:"dynamic_partner_content,omitempty"`
	EnhanceCta *AdCreativeFeatureDetails `json:"enhance_cta,omitempty"`
	FbFeedTag *AdCreativeFeatureDetails `json:"fb_feed_tag,omitempty"`
	FbReelsTag *AdCreativeFeatureDetails `json:"fb_reels_tag,omitempty"`
	FbStoryTag *AdCreativeFeatureDetails `json:"fb_story_tag,omitempty"`
	FeedCaptionOptimization *AdCreativeFeatureDetails `json:"feed_caption_optimization,omitempty"`
	HidePrice *AdCreativeFeatureDetails `json:"hide_price,omitempty"`
	IgFeedTag *AdCreativeFeatureDetails `json:"ig_feed_tag,omitempty"`
	IgGladosFeed *AdCreativeFeatureDetails `json:"ig_glados_feed,omitempty"`
	IgReelsTag *AdCreativeFeatureDetails `json:"ig_reels_tag,omitempty"`
	IgStreamTag *AdCreativeFeatureDetails `json:"ig_stream_tag,omitempty"`
	ImageAnimation *AdCreativeFeatureDetails `json:"image_animation,omitempty"`
	ImageAutoCrop *AdCreativeFeatureDetails `json:"image_auto_crop,omitempty"`
	ImageBackgroundGen *AdCreativeFeatureDetails `json:"image_background_gen,omitempty"`
	ImageBrightnessAndContrast *AdCreativeFeatureDetails `json:"image_brightness_and_contrast,omitempty"`
	ImageEnhancement *AdCreativeFeatureDetails `json:"image_enhancement,omitempty"`
	ImageTemplates *AdCreativeFeatureDetails `json:"image_templates,omitempty"`
	ImageTouchups *AdCreativeFeatureDetails `json:"image_touchups,omitempty"`
	ImageUncrop *AdCreativeFeatureDetails `json:"image_uncrop,omitempty"`
	InlineComment *AdCreativeFeatureDetails `json:"inline_comment,omitempty"`
	LocalStoreExtension *AdCreativeFeatureDetails `json:"local_store_extension,omitempty"`
	MediaLiquidityAnimatedImage *AdCreativeFeatureDetails `json:"media_liquidity_animated_image,omitempty"`
	MediaOrder *AdCreativeFeatureDetails `json:"media_order,omitempty"`
	MediaTypeAutomation *AdCreativeFeatureDetails `json:"media_type_automation,omitempty"`
	MultiPhotoToVideo *AdCreativeFeatureDetails `json:"multi_photo_to_video,omitempty"`
	MusicGeneration *AdCreativeFeatureDetails `json:"music_generation,omitempty"`
	PacRelaxation *AdCreativeFeatureDetails `json:"pac_relaxation,omitempty"`
	ProductExtensions *AdCreativeFeatureDetails `json:"product_extensions,omitempty"`
	ProductMetadataAutomation *AdCreativeFeatureDetails `json:"product_metadata_automation,omitempty"`
	ProductTags *AdCreativeFeatureDetails `json:"product_tags,omitempty"`
	ProfileCard *AdCreativeFeatureDetails `json:"profile_card,omitempty"`
	ProfileExtension *AdCreativeFeatureDetails `json:"profile_extension,omitempty"`
	ShowSummary *AdCreativeFeatureDetails `json:"show_summary,omitempty"`
	SiteExtensions *AdCreativeFeatureDetails `json:"site_extensions,omitempty"`
	StandardEnhancements *AdCreativeFeatureDetails `json:"standard_enhancements,omitempty"`
	StandardEnhancementsCatalog *AdCreativeFeatureDetails `json:"standard_enhancements_catalog,omitempty"`
	TextGeneration *AdCreativeFeatureDetails `json:"text_generation,omitempty"`
	TextOptimizations *AdCreativeFeatureDetails `json:"text_optimizations,omitempty"`
	TextTranslation *AdCreativeFeatureDetails `json:"text_translation,omitempty"`
	VideoAutoCrop *AdCreativeFeatureDetails `json:"video_auto_crop,omitempty"`
	VideoFiltering *AdCreativeFeatureDetails `json:"video_filtering,omitempty"`
	VideoHighlight *AdCreativeFeatureDetails `json:"video_highlight,omitempty"`
	VideoToImage *AdCreativeFeatureDetails `json:"video_to_image,omitempty"`
	VideoUncrop *AdCreativeFeatureDetails `json:"video_uncrop,omitempty"`
}

// AdCreativeFormatTransformationSpec represents the Facebook AdCreativeFormatTransformationSpec object
type AdCreativeFormatTransformationSpec struct {
	DataSource []string `json:"data_source,omitempty"`
	Format string `json:"format,omitempty"`
}

// AdCreativeGenerativeAssetSpec represents the Facebook AdCreativeGenerativeAssetSpec object
type AdCreativeGenerativeAssetSpec struct {
}

// AdCreativeHouseShopsAdsSellerContent represents the Facebook AdCreativeHouseShopsAdsSellerContent object
type AdCreativeHouseShopsAdsSellerContent struct {
}

// AdCreativeImageDataMediaElements represents the Facebook AdCreativeImageDataMediaElements object
type AdCreativeImageDataMediaElements struct {
	ElementID string `json:"element_id,omitempty"`
	ElementType string `json:"element_type,omitempty"`
	X float64 `json:"x,omitempty"`
	Y float64 `json:"y,omitempty"`
}

// AdCreativeInsights represents the Facebook AdCreativeInsights object
type AdCreativeInsights struct {
	Aesthetics []map[string]string `json:"aesthetics,omitempty"`
}

// AdCreativeInstagramBrandedContent represents the Facebook AdCreativeInstagramBrandedContent object
type AdCreativeInstagramBrandedContent struct {
	SponsorID string `json:"sponsor_id,omitempty"`
}

// AdCreativeInteractiveComponentsSpec represents the Facebook AdCreativeInteractiveComponentsSpec object
type AdCreativeInteractiveComponentsSpec struct {
	ChildAttachments []map[string]interface{} `json:"child_attachments,omitempty"`
	Components []map[string]interface{} `json:"components,omitempty"`
}

// AdCreativeLinkData represents the Facebook AdCreativeLinkData object
type AdCreativeLinkData struct {
	AdContext string `json:"ad_context,omitempty"`
	AdditionalImageIndex int `json:"additional_image_index,omitempty"`
	AppLinkSpec *AdCreativeLinkDataAppLinkSpec `json:"app_link_spec,omitempty"`
	AttachmentStyle string `json:"attachment_style,omitempty"`
	AutomatedProductTags bool `json:"automated_product_tags,omitempty"`
	BoostedProductSetID string `json:"boosted_product_set_id,omitempty"`
	BrandedContentSharedToSponsorStatus string `json:"branded_content_shared_to_sponsor_status,omitempty"`
	BrandedContentSponsorPageID string `json:"branded_content_sponsor_page_id,omitempty"`
	CallToAction *AdCreativeLinkDataCallToAction `json:"call_to_action,omitempty"`
	Caption string `json:"caption,omitempty"`
	ChildAttachments []*AdCreativeLinkDataChildAttachment `json:"child_attachments,omitempty"`
	CollectionThumbnails []*AdCreativeCollectionThumbnailInfo `json:"collection_thumbnails,omitempty"`
	CustomizationRulesSpec []*AdCustomizationRuleSpec `json:"customization_rules_spec,omitempty"`
	Description string `json:"description,omitempty"`
	EventID string `json:"event_id,omitempty"`
	ForceSingleLink bool `json:"force_single_link,omitempty"`
	FormatOption AdcreativelinkdataFormatOption `json:"format_option,omitempty"`
	ImageCrops *AdsImageCrops `json:"image_crops,omitempty"`
	ImageHash string `json:"image_hash,omitempty"`
	ImageLayerSpecs []*AdCreativeLinkDataImageLayerSpec `json:"image_layer_specs,omitempty"`
	ImageOverlaySpec *AdCreativeLinkDataImageOverlaySpec `json:"image_overlay_spec,omitempty"`
	Link string `json:"link,omitempty"`
	Message string `json:"message,omitempty"`
	MultiShareEndCard bool `json:"multi_share_end_card,omitempty"`
	MultiShareOptimized bool `json:"multi_share_optimized,omitempty"`
	Name string `json:"name,omitempty"`
	OfferID string `json:"offer_id,omitempty"`
	PageWelcomeMessage string `json:"page_welcome_message,omitempty"`
	Picture string `json:"picture,omitempty"`
	PostClickConfiguration *AdCreativePostClickConfiguration `json:"post_click_configuration,omitempty"`
	PreferredImageTags []string `json:"preferred_image_tags,omitempty"`
	PreferredVideoTags []string `json:"preferred_video_tags,omitempty"`
	RetailerItemIDs []string `json:"retailer_item_ids,omitempty"`
	ShowMultipleImages bool `json:"show_multiple_images,omitempty"`
	StaticFallbackSpec *AdCreativeStaticFallbackSpec `json:"static_fallback_spec,omitempty"`
	UseFlexibleImageAspectRatio bool `json:"use_flexible_image_aspect_ratio,omitempty"`
}

// AdCreativeLinkDataAppLinkSpec represents the Facebook AdCreativeLinkDataAppLinkSpec object
type AdCreativeLinkDataAppLinkSpec struct {
	Android []*AndroidAppLink `json:"android,omitempty"`
	IOS []*IosAppLink `json:"ios,omitempty"`
	Ipad []*IosAppLink `json:"ipad,omitempty"`
	Iphone []*IosAppLink `json:"iphone,omitempty"`
}

// AdCreativeLinkDataCallToAction represents the Facebook AdCreativeLinkDataCallToAction object
type AdCreativeLinkDataCallToAction struct {
	Type AdcreativelinkdatacalltoactionType `json:"type,omitempty"`
	Value *AdCreativeLinkDataCallToActionValue `json:"value,omitempty"`
}

// AdCreativeLinkDataCallToActionValue represents the Facebook AdCreativeLinkDataCallToActionValue object
type AdCreativeLinkDataCallToActionValue struct {
	AppDestination string `json:"app_destination,omitempty"`
	AppLink string `json:"app_link,omitempty"`
	Application string `json:"application,omitempty"`
	EventID string `json:"event_id,omitempty"`
	LeadGenFormID string `json:"lead_gen_form_id,omitempty"`
	Link string `json:"link,omitempty"`
	LinkCaption string `json:"link_caption,omitempty"`
	LinkFormat string `json:"link_format,omitempty"`
	ObjectStoreURLs []string `json:"object_store_urls,omitempty"`
	Page string `json:"page,omitempty"`
	ProductLink string `json:"product_link,omitempty"`
	WhatsappNumber string `json:"whatsapp_number,omitempty"`
}

// AdCreativeLinkDataChildAttachment represents the Facebook AdCreativeLinkDataChildAttachment object
type AdCreativeLinkDataChildAttachment struct {
	CallToAction *AdCreativeLinkDataCallToAction `json:"call_to_action,omitempty"`
	Caption string `json:"caption,omitempty"`
	Description string `json:"description,omitempty"`
	ImageCrops *AdsImageCrops `json:"image_crops,omitempty"`
	ImageHash string `json:"image_hash,omitempty"`
	Link string `json:"link,omitempty"`
	Name string `json:"name,omitempty"`
	Picture string `json:"picture,omitempty"`
	PlaceData *AdCreativePlaceData `json:"place_data,omitempty"`
	StaticCard bool `json:"static_card,omitempty"`
	VideoID string `json:"video_id,omitempty"`
}

// AdCreativeLinkDataCustomOverlaySpec represents the Facebook AdCreativeLinkDataCustomOverlaySpec object
type AdCreativeLinkDataCustomOverlaySpec struct {
	BackgroundColor AdcreativelinkdatacustomoverlayspecBackgroundColor `json:"background_color,omitempty"`
	FloatWithMargin bool `json:"float_with_margin,omitempty"`
	Font AdcreativelinkdatacustomoverlayspecFont `json:"font,omitempty"`
	Option AdcreativelinkdatacustomoverlayspecOption `json:"option,omitempty"`
	Position AdcreativelinkdatacustomoverlayspecPosition `json:"position,omitempty"`
	RenderWithIcon bool `json:"render_with_icon,omitempty"`
	Template AdcreativelinkdatacustomoverlayspecTemplate `json:"template,omitempty"`
	TextColor AdcreativelinkdatacustomoverlayspecTextColor `json:"text_color,omitempty"`
}

// AdCreativeLinkDataImageLayerSpec represents the Facebook AdCreativeLinkDataImageLayerSpec object
type AdCreativeLinkDataImageLayerSpec struct {
	BlendingMode AdcreativelinkdataimagelayerspecBlendingMode `json:"blending_mode,omitempty"`
	Content map[string]interface{} `json:"content,omitempty"`
	FrameAutoShowEnrollStatus string `json:"frame_auto_show_enroll_status,omitempty"`
	FrameImageHash string `json:"frame_image_hash,omitempty"`
	FrameSource AdcreativelinkdataimagelayerspecFrameSource `json:"frame_source,omitempty"`
	ImageSource AdcreativelinkdataimagelayerspecImageSource `json:"image_source,omitempty"`
	LayerType AdcreativelinkdataimagelayerspecLayerType `json:"layer_type,omitempty"`
	Opacity int `json:"opacity,omitempty"`
	OverlayPosition AdcreativelinkdataimagelayerspecOverlayPosition `json:"overlay_position,omitempty"`
	OverlayShape AdcreativelinkdataimagelayerspecOverlayShape `json:"overlay_shape,omitempty"`
	Scale int `json:"scale,omitempty"`
	ShapeColor string `json:"shape_color,omitempty"`
	TextColor string `json:"text_color,omitempty"`
	TextFont AdcreativelinkdataimagelayerspecTextFont `json:"text_font,omitempty"`
}

// AdCreativeLinkDataImageOverlaySpec represents the Facebook AdCreativeLinkDataImageOverlaySpec object
type AdCreativeLinkDataImageOverlaySpec struct {
	CustomTextType AdcreativelinkdataimageoverlayspecCustomTextType `json:"custom_text_type,omitempty"`
	FloatWithMargin bool `json:"float_with_margin,omitempty"`
	OverlayTemplate AdcreativelinkdataimageoverlayspecOverlayTemplate `json:"overlay_template,omitempty"`
	Position AdcreativelinkdataimageoverlayspecPosition `json:"position,omitempty"`
	TextFont AdcreativelinkdataimageoverlayspecTextFont `json:"text_font,omitempty"`
	TextTemplateTags []string `json:"text_template_tags,omitempty"`
	TextType AdcreativelinkdataimageoverlayspecTextType `json:"text_type,omitempty"`
	ThemeColor AdcreativelinkdataimageoverlayspecThemeColor `json:"theme_color,omitempty"`
}

// AdCreativeLinkDataMoment represents the Facebook AdCreativeLinkDataMoment object
type AdCreativeLinkDataMoment struct {
	ID string `json:"id,omitempty"`
	Type AdcreativelinkdatamomentType `json:"type,omitempty"`
}

// AdCreativeLinkDataSponsorshipInfoSpec represents the Facebook AdCreativeLinkDataSponsorshipInfoSpec object
type AdCreativeLinkDataSponsorshipInfoSpec struct {
	SponsorImageURL string `json:"sponsor_image_url,omitempty"`
	SponsorName string `json:"sponsor_name,omitempty"`
}

// AdCreativeLinkDataTemplateVideoSpec represents the Facebook AdCreativeLinkDataTemplateVideoSpec object
type AdCreativeLinkDataTemplateVideoSpec struct {
	CategorizationCriteria string `json:"categorization_criteria,omitempty"`
	Customization []map[string]string `json:"customization,omitempty"`
	TemplateID string `json:"template_id,omitempty"`
}

// AdCreativeMarketingMessageStructuredSpec represents the Facebook AdCreativeMarketingMessageStructuredSpec object
type AdCreativeMarketingMessageStructuredSpec struct {
	Buttons []map[string]interface{} `json:"buttons,omitempty"`
	Footer string `json:"footer,omitempty"`
	Greeting string `json:"greeting,omitempty"`
	IsOptimizedText bool `json:"is_optimized_text,omitempty"`
	Language string `json:"language,omitempty"`
	ReferencedAdgroupID string `json:"referenced_adgroup_id,omitempty"`
	WhatsAppBusinessPhoneNumberID string `json:"whats_app_business_phone_number_id,omitempty"`
}

// AdCreativeMediaSourcingSpec represents the Facebook AdCreativeMediaSourcingSpec object
type AdCreativeMediaSourcingSpec struct {
}

// AdCreativeObjectStorySpec represents the Facebook AdCreativeObjectStorySpec object
type AdCreativeObjectStorySpec struct {
	InstagramUserID string `json:"instagram_user_id,omitempty"`
	LinkData *AdCreativeLinkData `json:"link_data,omitempty"`
	PageID string `json:"page_id,omitempty"`
	PhotoData *AdCreativePhotoData `json:"photo_data,omitempty"`
	ProductData []*AdCreativeProductData `json:"product_data,omitempty"`
	TemplateData *AdCreativeLinkData `json:"template_data,omitempty"`
	TextData *AdCreativeTextData `json:"text_data,omitempty"`
	VideoData *AdCreativeVideoData `json:"video_data,omitempty"`
}

// AdCreativeOmnichannelLinkSpec represents the Facebook AdCreativeOmnichannelLinkSpec object
type AdCreativeOmnichannelLinkSpec struct {
	App map[string]interface{} `json:"app,omitempty"`
	Web map[string]interface{} `json:"web,omitempty"`
}

// AdCreativePhotoData represents the Facebook AdCreativePhotoData object
type AdCreativePhotoData struct {
	BrandedContentSharedToSponsorStatus string `json:"branded_content_shared_to_sponsor_status,omitempty"`
	BrandedContentSponsorPageID string `json:"branded_content_sponsor_page_id,omitempty"`
	Caption string `json:"caption,omitempty"`
	ImageHash string `json:"image_hash,omitempty"`
	PageWelcomeMessage string `json:"page_welcome_message,omitempty"`
	URL string `json:"url,omitempty"`
}

// AdCreativePhotoDataMediaElements represents the Facebook AdCreativePhotoDataMediaElements object
type AdCreativePhotoDataMediaElements struct {
	ElementID string `json:"element_id,omitempty"`
	ElementType string `json:"element_type,omitempty"`
	X float64 `json:"x,omitempty"`
	Y float64 `json:"y,omitempty"`
}

// AdCreativePlaceData represents the Facebook AdCreativePlaceData object
type AdCreativePlaceData struct {
	AddressString string `json:"address_string,omitempty"`
	Label string `json:"label,omitempty"`
	Latitude float64 `json:"latitude,omitempty"`
	LocationSourceID string `json:"location_source_id,omitempty"`
	Longitude float64 `json:"longitude,omitempty"`
	Type string `json:"type,omitempty"`
}

// AdCreativePlatformCustomization represents the Facebook AdCreativePlatformCustomization object
type AdCreativePlatformCustomization struct {
	Instagram map[string]interface{} `json:"instagram,omitempty"`
}

// AdCreativePortraitCustomizations represents the Facebook AdCreativePortraitCustomizations object
type AdCreativePortraitCustomizations struct {
	CarouselDeliveryMode string `json:"carousel_delivery_mode,omitempty"`
	Specifications []map[string]interface{} `json:"specifications,omitempty"`
}

// AdCreativePostClickConfiguration represents the Facebook AdCreativePostClickConfiguration object
type AdCreativePostClickConfiguration struct {
	PostClickItemDescription string `json:"post_click_item_description,omitempty"`
	PostClickItemHeadline string `json:"post_click_item_headline,omitempty"`
}

// AdCreativeProductData represents the Facebook AdCreativeProductData object
type AdCreativeProductData struct {
	ProductID string `json:"product_id,omitempty"`
	ProductSource string `json:"product_source,omitempty"`
}

// AdCreativePromotionMetadataSpec represents the Facebook AdCreativePromotionMetadataSpec object
type AdCreativePromotionMetadataSpec struct {
	EndDate int `json:"end_date,omitempty"`
	ID string `json:"id,omitempty"`
	PromotionSource string `json:"promotion_source,omitempty"`
	PromotionType string `json:"promotion_type,omitempty"`
	PromotionValue float64 `json:"promotion_value,omitempty"`
	RequiredCode string `json:"required_code,omitempty"`
	StartDate int `json:"start_date,omitempty"`
}

// AdCreativeRecommenderSettings represents the Facebook AdCreativeRecommenderSettings object
type AdCreativeRecommenderSettings struct {
	PreferredEvents []string `json:"preferred_events,omitempty"`
	ProductSalesChannel string `json:"product_sales_channel,omitempty"`
}

// AdCreativeRegionalRegulationDisclaimer represents the Facebook AdCreativeRegionalRegulationDisclaimer object
type AdCreativeRegionalRegulationDisclaimer struct {
	AustraliaFinserv map[string]interface{} `json:"australia_finserv,omitempty"`
	IndiaFinserv map[string]interface{} `json:"india_finserv,omitempty"`
	SingaporeUniversal map[string]interface{} `json:"singapore_universal,omitempty"`
	TaiwanFinserv map[string]interface{} `json:"taiwan_finserv,omitempty"`
	TaiwanUniversal map[string]interface{} `json:"taiwan_universal,omitempty"`
}

// AdCreativeRewardInfo represents the Facebook AdCreativeRewardInfo object
type AdCreativeRewardInfo struct {
	RewardOfferID string `json:"reward_offer_id,omitempty"`
	RewardProgramID string `json:"reward_program_id,omitempty"`
}

// AdCreativeShopSpec represents the Facebook AdCreativeShopSpec object
type AdCreativeShopSpec struct {
	CollectionID string `json:"collection_id,omitempty"`
	LandingView string `json:"landing_view,omitempty"`
	ShopID string `json:"shop_id,omitempty"`
}

// AdCreativeSiteLinksSpec represents the Facebook AdCreativeSiteLinksSpec object
type AdCreativeSiteLinksSpec struct {
	IsSiteLinkSticky bool `json:"is_site_link_sticky,omitempty"`
	SiteLinkHash string `json:"site_link_hash,omitempty"`
	SiteLinkID string `json:"site_link_id,omitempty"`
	SiteLinkImageHash string `json:"site_link_image_hash,omitempty"`
	SiteLinkImageURL string `json:"site_link_image_url,omitempty"`
	SiteLinkRecommendationType string `json:"site_link_recommendation_type,omitempty"`
	SiteLinkTitle string `json:"site_link_title,omitempty"`
	SiteLinkURL string `json:"site_link_url,omitempty"`
}

// AdCreativeSourcingSpec represents the Facebook AdCreativeSourcingSpec object
type AdCreativeSourcingSpec struct {
	AssociatedProductSetID string `json:"associated_product_set_id,omitempty"`
	Brand map[string]interface{} `json:"brand,omitempty"`
	DynamicSiteLinksSpec map[string]interface{} `json:"dynamic_site_links_spec,omitempty"`
	EnableSocialFeedbackPreservation bool `json:"enable_social_feedback_preservation,omitempty"`
	PromotionMetadataSpec []*AdCreativePromotionMetadataSpec `json:"promotion_metadata_spec,omitempty"`
	SiteLinksSpec []*AdCreativeSiteLinksSpec `json:"site_links_spec,omitempty"`
	SourceURL string `json:"source_url,omitempty"`
}

// AdCreativeStaticFallbackSpec represents the Facebook AdCreativeStaticFallbackSpec object
type AdCreativeStaticFallbackSpec struct {
	CallToAction *AdCreativeLinkDataCallToAction `json:"call_to_action,omitempty"`
	Description string `json:"description,omitempty"`
	ImageHash string `json:"image_hash,omitempty"`
	Link string `json:"link,omitempty"`
	Message string `json:"message,omitempty"`
	Name string `json:"name,omitempty"`
}

// AdCreativeTemplateURLSpec represents the Facebook AdCreativeTemplateURLSpec object
type AdCreativeTemplateURLSpec struct {
	Android map[string]interface{} `json:"android,omitempty"`
	Config map[string]interface{} `json:"config,omitempty"`
	IOS map[string]interface{} `json:"ios,omitempty"`
	Ipad map[string]interface{} `json:"ipad,omitempty"`
	Iphone map[string]interface{} `json:"iphone,omitempty"`
	Web map[string]interface{} `json:"web,omitempty"`
	WindowsPhone map[string]interface{} `json:"windows_phone,omitempty"`
}

// AdCreativeTextData represents the Facebook AdCreativeTextData object
type AdCreativeTextData struct {
	Message string `json:"message,omitempty"`
}

// AdCreativeVideoData represents the Facebook AdCreativeVideoData object
type AdCreativeVideoData struct {
	AdditionalImageIndex int `json:"additional_image_index,omitempty"`
	BrandedContentSharedToSponsorStatus string `json:"branded_content_shared_to_sponsor_status,omitempty"`
	BrandedContentSponsorPageID string `json:"branded_content_sponsor_page_id,omitempty"`
	CallToAction *AdCreativeLinkDataCallToAction `json:"call_to_action,omitempty"`
	CollectionThumbnails []*AdCreativeCollectionThumbnailInfo `json:"collection_thumbnails,omitempty"`
	CustomizationRulesSpec []*AdCustomizationRuleSpec `json:"customization_rules_spec,omitempty"`
	ImageHash string `json:"image_hash,omitempty"`
	ImageURL string `json:"image_url,omitempty"`
	LinkDescription string `json:"link_description,omitempty"`
	Message string `json:"message,omitempty"`
	OfferID string `json:"offer_id,omitempty"`
	PageWelcomeMessage string `json:"page_welcome_message,omitempty"`
	PostClickConfiguration *AdCreativePostClickConfiguration `json:"post_click_configuration,omitempty"`
	RetailerItemIDs []string `json:"retailer_item_ids,omitempty"`
	Targeting *Targeting `json:"targeting,omitempty"`
	Title string `json:"title,omitempty"`
	VideoID string `json:"video_id,omitempty"`
}

// AdCreativeVideoDataCustomOverlaySpec represents the Facebook AdCreativeVideoDataCustomOverlaySpec object
type AdCreativeVideoDataCustomOverlaySpec struct {
	BackgroundColor string `json:"background_color,omitempty"`
	BackgroundOpacity AdcreativevideodatacustomoverlayspecBackgroundOpacity `json:"background_opacity,omitempty"`
	Duration int `json:"duration,omitempty"`
	FloatWithMargin bool `json:"float_with_margin,omitempty"`
	FullWidth bool `json:"full_width,omitempty"`
	Option AdcreativevideodatacustomoverlayspecOption `json:"option,omitempty"`
	Position AdcreativevideodatacustomoverlayspecPosition `json:"position,omitempty"`
	Start int `json:"start,omitempty"`
	Template AdcreativevideodatacustomoverlayspecTemplate `json:"template,omitempty"`
	TextColor string `json:"text_color,omitempty"`
}

// AdCreativeVideoDataMediaElements represents the Facebook AdCreativeVideoDataMediaElements object
type AdCreativeVideoDataMediaElements struct {
	ElementID string `json:"element_id,omitempty"`
	ElementType string `json:"element_type,omitempty"`
}

// AdCreativeWhatsAppChannelSpec represents the Facebook AdCreativeWhatsAppChannelSpec object
type AdCreativeWhatsAppChannelSpec struct {
	ChannelID string `json:"channel_id,omitempty"`
	ChannelURL string `json:"channel_url,omitempty"`
}

// AdCustomDerivedMetrics represents the Facebook AdCustomDerivedMetrics object
type AdCustomDerivedMetrics struct {
	AdAccountID string `json:"ad_account_id,omitempty"`
	Business *Business `json:"business,omitempty"`
	CreationTime time.Time `json:"creation_time,omitempty"`
	Creator *Profile `json:"creator,omitempty"`
	CustomDerivedMetricType string `json:"custom_derived_metric_type,omitempty"`
	DeletionTime time.Time `json:"deletion_time,omitempty"`
	Deletor *Profile `json:"deletor,omitempty"`
	Description string `json:"description,omitempty"`
	FormatType string `json:"format_type,omitempty"`
	Formula string `json:"formula,omitempty"`
	HasAttributionWindows bool `json:"has_attribution_windows,omitempty"`
	HasInlineAttributionWindow bool `json:"has_inline_attribution_window,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	Permission string `json:"permission,omitempty"`
	SavedReportID string `json:"saved_report_id,omitempty"`
	Scope string `json:"scope,omitempty"`
}

// AdCustomizationRuleSpec represents the Facebook AdCustomizationRuleSpec object
type AdCustomizationRuleSpec struct {
	Caption string `json:"caption,omitempty"`
	CustomizationSpec map[string]interface{} `json:"customization_spec,omitempty"`
	Description string `json:"description,omitempty"`
	ImageHash string `json:"image_hash,omitempty"`
	Link string `json:"link,omitempty"`
	Message string `json:"message,omitempty"`
	Name string `json:"name,omitempty"`
	Priority int `json:"priority,omitempty"`
	TemplateURLSpec *AdCreativeTemplateURLSpec `json:"template_url_spec,omitempty"`
	VideoID int `json:"video_id,omitempty"`
}

// AdDefaultValues represents the Facebook AdDefaultValues object
type AdDefaultValues struct {
	CampaignGroup map[string]interface{} `json:"campaign_group,omitempty"`
}

// AdDraft represents the Facebook AdDraft object
type AdDraft struct {
	AccountID string `json:"account_id,omitempty"`
	APIVersion string `json:"api_version,omitempty"`
	AsyncRequestSet *AdAsyncRequestSet `json:"async_request_set,omitempty"`
	AuthorID string `json:"author_id,omitempty"`
	CreatedBy string `json:"created_by,omitempty"`
	DraftVersion string `json:"draft_version,omitempty"`
	ID string `json:"id,omitempty"`
	IsActive bool `json:"is_active,omitempty"`
	Name string `json:"name,omitempty"`
	OwnershipType string `json:"ownership_type,omitempty"`
	PublishStatus map[string]interface{} `json:"publish_status,omitempty"`
	State string `json:"state,omitempty"`
	Summary string `json:"summary,omitempty"`
	TimeCreated time.Time `json:"time_created,omitempty"`
	TimeUpdated time.Time `json:"time_updated,omitempty"`
}

// AdDynamicCreative represents the Facebook AdDynamicCreative object
type AdDynamicCreative struct {
	PreviewURL string `json:"preview_url,omitempty"`
}

// AdEntityTargetSpend represents the Facebook AdEntityTargetSpend object
type AdEntityTargetSpend struct {
	Amount string `json:"amount,omitempty"`
	HasError bool `json:"has_error,omitempty"`
	IsAccurate bool `json:"is_accurate,omitempty"`
	IsProrated bool `json:"is_prorated,omitempty"`
	IsUpdating bool `json:"is_updating,omitempty"`
}

// AdExportPreset represents the Facebook AdExportPreset object
type AdExportPreset struct {
	CreatedTime time.Time `json:"created_time,omitempty"`
	Fields []string `json:"fields,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	Owner *User `json:"owner,omitempty"`
	UpdatedTime time.Time `json:"updated_time,omitempty"`
}

// AdImage represents the Facebook AdImage object
type AdImage struct {
	AccountID string `json:"account_id,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	Creatives []string `json:"creatives,omitempty"`
	Hash string `json:"hash,omitempty"`
	Height uint `json:"height,omitempty"`
	ID string `json:"id,omitempty"`
	IsAssociatedCreativesInAdgroups bool `json:"is_associated_creatives_in_adgroups,omitempty"`
	Name string `json:"name,omitempty"`
	OriginalHeight uint `json:"original_height,omitempty"`
	OriginalWidth uint `json:"original_width,omitempty"`
	OwnerBusiness *Business `json:"owner_business,omitempty"`
	PermalinkURL string `json:"permalink_url,omitempty"`
	Status AdimageStatus `json:"status,omitempty"`
	UpdatedTime time.Time `json:"updated_time,omitempty"`
	URL string `json:"url,omitempty"`
	URL128 string `json:"url_128,omitempty"`
	Width uint `json:"width,omitempty"`
}

// AdKeywordStats represents the Facebook AdKeywordStats object
type AdKeywordStats struct {
	Actions []*AdsActionStats `json:"actions,omitempty"`
	Clicks uint `json:"clicks,omitempty"`
	CostPerTotalAction float64 `json:"cost_per_total_action,omitempty"`
	CostPerUniqueClick float64 `json:"cost_per_unique_click,omitempty"`
	Cpc float64 `json:"cpc,omitempty"`
	Cpm float64 `json:"cpm,omitempty"`
	Cpp float64 `json:"cpp,omitempty"`
	Ctr float64 `json:"ctr,omitempty"`
	Frequency float64 `json:"frequency,omitempty"`
	ID string `json:"id,omitempty"`
	Impressions uint `json:"impressions,omitempty"`
	Name string `json:"name,omitempty"`
	Reach uint `json:"reach,omitempty"`
	Spend float64 `json:"spend,omitempty"`
	TotalActions uint `json:"total_actions,omitempty"`
	TotalUniqueActions uint `json:"total_unique_actions,omitempty"`
	UniqueActions []*AdsActionStats `json:"unique_actions,omitempty"`
	UniqueClicks uint `json:"unique_clicks,omitempty"`
	UniqueCtr float64 `json:"unique_ctr,omitempty"`
	UniqueImpressions uint `json:"unique_impressions,omitempty"`
}

// AdKeywords represents the Facebook AdKeywords object
type AdKeywords struct {
	Brands []string `json:"brands,omitempty"`
	ProductCategories []string `json:"product_categories,omitempty"`
	ProductNames []string `json:"product_names,omitempty"`
	SearchTerms []string `json:"search_terms,omitempty"`
}

// AdKpiShift represents the Facebook AdKpiShift object
type AdKpiShift struct {
	AdSet *AdSet `json:"ad_set,omitempty"`
	CostPerResultShift float64 `json:"cost_per_result_shift,omitempty"`
	EnoughEffectiveDays bool `json:"enough_effective_days,omitempty"`
	ResultIndicator string `json:"result_indicator,omitempty"`
	ResultShift float64 `json:"result_shift,omitempty"`
	SpendShift float64 `json:"spend_shift,omitempty"`
}

// AdLabel represents the Facebook AdLabel object
type AdLabel struct {
	Account *AdAccount `json:"account,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	UpdatedTime time.Time `json:"updated_time,omitempty"`
}

// AdLightAdgroup represents the Facebook AdLightAdgroup object
type AdLightAdgroup struct {
	AdsetID string `json:"adset_id,omitempty"`
	ID string `json:"id,omitempty"`
}

// AdLightCampaign represents the Facebook AdLightCampaign object
type AdLightCampaign struct {
	CampaignID string `json:"campaign_id,omitempty"`
	ID string `json:"id,omitempty"`
}

// AdLightCampaignGroup represents the Facebook AdLightCampaignGroup object
type AdLightCampaignGroup struct {
	ID string `json:"id,omitempty"`
}

// AdLimitSetting represents the Facebook AdLimitSetting object
type AdLimitSetting struct {
	LimitAllocationByPageAdvertisers []map[string]int `json:"limit_allocation_by_page_advertisers,omitempty"`
}

// AdLimitsEnforcementData represents the Facebook AdLimitsEnforcementData object
type AdLimitsEnforcementData struct {
	AdLimitOnPage int `json:"ad_limit_on_page,omitempty"`
	AdLimitOnScope int `json:"ad_limit_on_scope,omitempty"`
	AdVolumeOnPage int `json:"ad_volume_on_page,omitempty"`
	AdVolumeOnScope int `json:"ad_volume_on_scope,omitempty"`
	IsAdmin bool `json:"is_admin,omitempty"`
	PageName string `json:"page_name,omitempty"`
}

// AdMonetizationProperty represents the Facebook AdMonetizationProperty object
type AdMonetizationProperty struct {
	OwnerBusiness *Business `json:"owner_business,omitempty"`
}

// AdNetworkAnalyticsAsyncQueryExport represents the Facebook AdNetworkAnalyticsAsyncQueryExport object
type AdNetworkAnalyticsAsyncQueryExport struct {
	ExportLink string `json:"export_link,omitempty"`
	QueryID string `json:"query_id,omitempty"`
	Status string `json:"status,omitempty"`
}

// AdNetworkAnalyticsAsyncQueryResult represents the Facebook AdNetworkAnalyticsAsyncQueryResult object
type AdNetworkAnalyticsAsyncQueryResult struct {
	Data map[string]interface{} `json:"data,omitempty"`
	OmittedResults []map[string]interface{} `json:"omitted_results,omitempty"`
	QueryID string `json:"query_id,omitempty"`
	Results []map[string]interface{} `json:"results,omitempty"`
	Status string `json:"status,omitempty"`
}

// AdNetworkAnalyticsSyncQueryResult represents the Facebook AdNetworkAnalyticsSyncQueryResult object
type AdNetworkAnalyticsSyncQueryResult struct {
	OmittedResults []map[string]interface{} `json:"omitted_results,omitempty"`
	QueryID string `json:"query_id,omitempty"`
	Results []map[string]interface{} `json:"results,omitempty"`
}

// AdPlacePageSet represents the Facebook AdPlacePageSet object
type AdPlacePageSet struct {
	AccountID string `json:"account_id,omitempty"`
	ID string `json:"id,omitempty"`
	LocationTypes []string `json:"location_types,omitempty"`
	Name string `json:"name,omitempty"`
	PagesCount int `json:"pages_count,omitempty"`
	ParentPage *Page `json:"parent_page,omitempty"`
}

// AdPlacePageSetMetadata represents the Facebook AdPlacePageSetMetadata object
type AdPlacePageSetMetadata struct {
	Audience map[string]interface{} `json:"audience,omitempty"`
	Custom map[string]interface{} `json:"custom,omitempty"`
	ExtraData string `json:"extra_data,omitempty"`
	FixedRadius map[string]interface{} `json:"fixed_radius,omitempty"`
}

// AdPlacement represents the Facebook AdPlacement object
type AdPlacement struct {
	BundleID string `json:"bundle_id,omitempty"`
	DisplayFormat string `json:"display_format,omitempty"`
	ExternalPlacementID string `json:"external_placement_id,omitempty"`
	GoogleDisplayFormat string `json:"google_display_format,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	PlacementGroup map[string]interface{} `json:"placement_group,omitempty"`
	Platform string `json:"platform,omitempty"`
	Status string `json:"status,omitempty"`
}

// AdPreview represents the Facebook AdPreview object
type AdPreview struct {
	Body string `json:"body,omitempty"`
	TransformationSpec map[string]interface{} `json:"transformation_spec,omitempty"`
}

// AdPromotedObject represents the Facebook AdPromotedObject object
type AdPromotedObject struct {
	ApplicationID string `json:"application_id,omitempty"`
	BoostedProductSetID string `json:"boosted_product_set_id,omitempty"`
	ConversionGoalID string `json:"conversion_goal_id,omitempty"`
	CustomConversionID string `json:"custom_conversion_id,omitempty"`
	CustomEventStr string `json:"custom_event_str,omitempty"`
	CustomEventType AdpromotedobjectCustomEventType `json:"custom_event_type,omitempty"`
	EventID string `json:"event_id,omitempty"`
	FundraiserCampaignID string `json:"fundraiser_campaign_id,omitempty"`
	LeadAdsCustomEventStr string `json:"lead_ads_custom_event_str,omitempty"`
	LeadAdsCustomEventType AdpromotedobjectLeadAdsCustomEventType `json:"lead_ads_custom_event_type,omitempty"`
	LeadAdsFormEventSourceType string `json:"lead_ads_form_event_source_type,omitempty"`
	LeadAdsOffsiteConversionType string `json:"lead_ads_offsite_conversion_type,omitempty"`
	McmeConversionID string `json:"mcme_conversion_id,omitempty"`
	ObjectStoreURL string `json:"object_store_url,omitempty"`
	OfferID string `json:"offer_id,omitempty"`
	OfflineConversionDataSetID string `json:"offline_conversion_data_set_id,omitempty"`
	OffsiteConversionEventID string `json:"offsite_conversion_event_id,omitempty"`
	OmnichannelObject map[string]interface{} `json:"omnichannel_object,omitempty"`
	PageID string `json:"page_id,omitempty"`
	PixelAggregationRule string `json:"pixel_aggregation_rule,omitempty"`
	PixelID string `json:"pixel_id,omitempty"`
	PixelRule string `json:"pixel_rule,omitempty"`
	PlacePageSet *AdPlacePageSet `json:"place_page_set,omitempty"`
	PlacePageSetID string `json:"place_page_set_id,omitempty"`
	ProductCatalogID string `json:"product_catalog_id,omitempty"`
	ProductItemID string `json:"product_item_id,omitempty"`
	ProductSet *ProductSet `json:"product_set,omitempty"`
	ProductSetID string `json:"product_set_id,omitempty"`
	ProductSetOptimization string `json:"product_set_optimization,omitempty"`
	RetentionDays string `json:"retention_days,omitempty"`
	ValueSemanticType string `json:"value_semantic_type,omitempty"`
	Variation string `json:"variation,omitempty"`
	WhatsAppBusinessPhoneNumberID string `json:"whats_app_business_phone_number_id,omitempty"`
	WhatsappPhoneNumber string `json:"whatsapp_phone_number,omitempty"`
}

// AdProposal represents the Facebook AdProposal object
type AdProposal struct {
	AdProposalTypeName string `json:"ad_proposal_type_name,omitempty"`
	Adaccount *AdAccount `json:"adaccount,omitempty"`
	CreationTime time.Time `json:"creation_time,omitempty"`
	Creator *User `json:"creator,omitempty"`
	DeliveryInterface string `json:"delivery_interface,omitempty"`
	ExpirationTime time.Time `json:"expiration_time,omitempty"`
	HasConflict bool `json:"has_conflict,omitempty"`
	ID string `json:"id,omitempty"`
	KpiMetric string `json:"kpi_metric,omitempty"`
	Message string `json:"message,omitempty"`
	Name string `json:"name,omitempty"`
	ProposalDtsTemplate string `json:"proposal_dts_template,omitempty"`
	ProposalTemplateName string `json:"proposal_template_name,omitempty"`
	Recommendation string `json:"recommendation,omitempty"`
	ReviewTime time.Time `json:"review_time,omitempty"`
	ReviewedBy *User `json:"reviewed_by,omitempty"`
	SendTime time.Time `json:"send_time,omitempty"`
	Status string `json:"status,omitempty"`
	UseTesting bool `json:"use_testing,omitempty"`
}

// AdRecommendation represents the Facebook AdRecommendation object
type AdRecommendation struct {
	BlameField string `json:"blame_field,omitempty"`
	Code int `json:"code,omitempty"`
	Confidence AdrecommendationConfidence `json:"confidence,omitempty"`
	Importance AdrecommendationImportance `json:"importance,omitempty"`
	Message string `json:"message,omitempty"`
	RecommendationData *AdRecommendationData `json:"recommendation_data,omitempty"`
	Title string `json:"title,omitempty"`
	Value string `json:"value,omitempty"`
}

// AdRecommendationData represents the Facebook AdRecommendationData object
type AdRecommendationData struct {
	Link string `json:"link,omitempty"`
}

// AdReportRun represents the Facebook AdReportRun object
type AdReportRun struct {
	AccountID string `json:"account_id,omitempty"`
	AsyncPercentCompletion uint `json:"async_percent_completion,omitempty"`
	AsyncReportURL string `json:"async_report_url,omitempty"`
	AsyncStatus string `json:"async_status,omitempty"`
	DateStart string `json:"date_start,omitempty"`
	DateStop string `json:"date_stop,omitempty"`
	Emails []string `json:"emails,omitempty"`
	ErrorCode uint `json:"error_code,omitempty"`
	FriendlyName string `json:"friendly_name,omitempty"`
	ID string `json:"id,omitempty"`
	IsAsyncExport int `json:"is_async_export,omitempty"`
	IsBookmarked bool `json:"is_bookmarked,omitempty"`
	IsRunning bool `json:"is_running,omitempty"`
	ScheduleID string `json:"schedule_id,omitempty"`
	TimeCompleted uint `json:"time_completed,omitempty"`
	TimeRef uint `json:"time_ref,omitempty"`
}

// AdRule represents the Facebook AdRule object
type AdRule struct {
	AccountID string `json:"account_id,omitempty"`
	CreatedBy *User `json:"created_by,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	DisableErrorCode int `json:"disable_error_code,omitempty"`
	EvaluationSpec *AdRuleEvaluationSpec `json:"evaluation_spec,omitempty"`
	ExecutionSpec *AdRuleExecutionSpec `json:"execution_spec,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	ScheduleSpec *AdRuleScheduleSpec `json:"schedule_spec,omitempty"`
	Status string `json:"status,omitempty"`
	UpdatedTime time.Time `json:"updated_time,omitempty"`
}

// AdRuleEvaluationSpec represents the Facebook AdRuleEvaluationSpec object
type AdRuleEvaluationSpec struct {
	EvaluationType AdruleevaluationspecEvaluationType `json:"evaluation_type,omitempty"`
	Filters []*AdRuleFilters `json:"filters,omitempty"`
	Trigger *AdRuleTrigger `json:"trigger,omitempty"`
}

// AdRuleExecutionOptions represents the Facebook AdRuleExecutionOptions object
type AdRuleExecutionOptions struct {
	Field string `json:"field,omitempty"`
	Operator AdruleexecutionoptionsOperator `json:"operator,omitempty"`
	Value map[string]interface{} `json:"value,omitempty"`
}

// AdRuleExecutionSpec represents the Facebook AdRuleExecutionSpec object
type AdRuleExecutionSpec struct {
	ExecutionOptions []*AdRuleExecutionOptions `json:"execution_options,omitempty"`
	ExecutionType AdruleexecutionspecExecutionType `json:"execution_type,omitempty"`
	IsOnceOff bool `json:"is_once_off,omitempty"`
}

// AdRuleFilters represents the Facebook AdRuleFilters object
type AdRuleFilters struct {
	Field string `json:"field,omitempty"`
	Operator AdrulefiltersOperator `json:"operator,omitempty"`
	Value map[string]interface{} `json:"value,omitempty"`
}

// AdRuleHistory represents the Facebook AdRuleHistory object
type AdRuleHistory struct {
	EvaluationSpec *AdRuleEvaluationSpec `json:"evaluation_spec,omitempty"`
	ExceptionCode int `json:"exception_code,omitempty"`
	ExceptionMessage string `json:"exception_message,omitempty"`
	ExecutionSpec *AdRuleExecutionSpec `json:"execution_spec,omitempty"`
	IsManual bool `json:"is_manual,omitempty"`
	Results []*AdRuleHistoryResult `json:"results,omitempty"`
	ScheduleSpec *AdRuleScheduleSpec `json:"schedule_spec,omitempty"`
	Timestamp time.Time `json:"timestamp,omitempty"`
}

// AdRuleHistoryResult represents the Facebook AdRuleHistoryResult object
type AdRuleHistoryResult struct {
	Actions []*AdRuleHistoryResultAction `json:"actions,omitempty"`
	ObjectID string `json:"object_id,omitempty"`
	ObjectType AdrulehistoryresultObjectType `json:"object_type,omitempty"`
}

// AdRuleHistoryResultAction represents the Facebook AdRuleHistoryResultAction object
type AdRuleHistoryResultAction struct {
	Action string `json:"action,omitempty"`
	Field string `json:"field,omitempty"`
	NewValue string `json:"new_value,omitempty"`
	OldValue string `json:"old_value,omitempty"`
}

// AdRuleSchedule represents the Facebook AdRuleSchedule object
type AdRuleSchedule struct {
	Days []int `json:"days,omitempty"`
	EndMinute int `json:"end_minute,omitempty"`
	StartMinute int `json:"start_minute,omitempty"`
}

// AdRuleScheduleSpec represents the Facebook AdRuleScheduleSpec object
type AdRuleScheduleSpec struct {
	Schedule []*AdRuleSchedule `json:"schedule,omitempty"`
	ScheduleType string `json:"schedule_type,omitempty"`
}

// AdRuleTrigger represents the Facebook AdRuleTrigger object
type AdRuleTrigger struct {
	Field string `json:"field,omitempty"`
	Operator AdruletriggerOperator `json:"operator,omitempty"`
	Type AdruletriggerType `json:"type,omitempty"`
	Value map[string]interface{} `json:"value,omitempty"`
}

// AdSavedKeywords represents the Facebook AdSavedKeywords object
type AdSavedKeywords struct {
	Account *AdAccount `json:"account,omitempty"`
	ID string `json:"id,omitempty"`
	Keywords *AdKeywords `json:"keywords,omitempty"`
	Name string `json:"name,omitempty"`
	RunStatus string `json:"run_status,omitempty"`
	TimeCreated time.Time `json:"time_created,omitempty"`
	TimeUpdated time.Time `json:"time_updated,omitempty"`
}

// AdSavedLocation represents the Facebook AdSavedLocation object
type AdSavedLocation struct {
	Cities []*TargetingGeoLocationCity `json:"cities,omitempty"`
	Countries []string `json:"countries,omitempty"`
	CountryGroups []string `json:"country_groups,omitempty"`
	CustomLocations []*TargetingGeoLocationCustomLocation `json:"custom_locations,omitempty"`
	GeoMarkets []*TargetingGeoLocationMarket `json:"geo_markets,omitempty"`
	ID string `json:"id,omitempty"`
	LocationSentences []string `json:"location_sentences,omitempty"`
	Name string `json:"name,omitempty"`
	Regions []*TargetingGeoLocationRegion `json:"regions,omitempty"`
	Zips []*TargetingGeoLocationZip `json:"zips,omitempty"`
}

// AdSavedReport represents the Facebook AdSavedReport object
type AdSavedReport struct {
	AppOwner *Application `json:"app_owner,omitempty"`
	Breakdowns []string `json:"breakdowns,omitempty"`
	BuiltinColumnSet string `json:"builtin_column_set,omitempty"`
	CreationSource string `json:"creation_source,omitempty"`
	DateInterval map[string]interface{} `json:"date_interval,omitempty"`
	DatePreset string `json:"date_preset,omitempty"`
	FormatVersion int `json:"format_version,omitempty"`
	ID string `json:"id,omitempty"`
	InsightsSection map[string]interface{} `json:"insights_section,omitempty"`
	IsSharedUnread bool `json:"is_shared_unread,omitempty"`
	Level string `json:"level,omitempty"`
	Name string `json:"name,omitempty"`
	NormalizedFilter interface{} `json:"normalized_filter,omitempty"`
	Sort []map[string]interface{} `json:"sort,omitempty"`
	UserAttributionWindows []string `json:"user_attribution_windows,omitempty"`
	UserColumns []string `json:"user_columns,omitempty"`
	UserFilter interface{} `json:"user_filter,omitempty"`
	UserOwner *User `json:"user_owner,omitempty"`
}

// AdSet represents the Facebook AdSet object
type AdSet struct {
	AccountID string `json:"account_id,omitempty"`
	Adlabels []*AdLabel `json:"adlabels,omitempty"`
	AdsetSchedule []*DayPart `json:"adset_schedule,omitempty"`
	AssetFeedID string `json:"asset_feed_id,omitempty"`
	AttributionSpec []*AttributionSpec `json:"attribution_spec,omitempty"`
	BidAdjustments *AdBidAdjustments `json:"bid_adjustments,omitempty"`
	BidAmount uint `json:"bid_amount,omitempty"`
	BidConstraints *AdCampaignBidConstraint `json:"bid_constraints,omitempty"`
	BidInfo map[string]uint `json:"bid_info,omitempty"`
	BidStrategy AdsetBidStrategy `json:"bid_strategy,omitempty"`
	BillingEvent AdsetBillingEvent `json:"billing_event,omitempty"`
	BrandSafetyConfig *BrandSafetyCampaignConfig `json:"brand_safety_config,omitempty"`
	BudgetRemaining string `json:"budget_remaining,omitempty"`
	Campaign *Campaign `json:"campaign,omitempty"`
	CampaignActiveTime string `json:"campaign_active_time,omitempty"`
	CampaignAttribution string `json:"campaign_attribution,omitempty"`
	CampaignID string `json:"campaign_id,omitempty"`
	ConfiguredStatus AdsetConfiguredStatus `json:"configured_status,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	CreativeSequence []string `json:"creative_sequence,omitempty"`
	CreativeSequenceRepetitionPattern string `json:"creative_sequence_repetition_pattern,omitempty"`
	DailyBudget string `json:"daily_budget,omitempty"`
	DailyMinSpendTarget string `json:"daily_min_spend_target,omitempty"`
	DailySpendCap string `json:"daily_spend_cap,omitempty"`
	DestinationType string `json:"destination_type,omitempty"`
	DsaBeneficiary string `json:"dsa_beneficiary,omitempty"`
	DsaPayor string `json:"dsa_payor,omitempty"`
	EffectiveStatus AdsetEffectiveStatus `json:"effective_status,omitempty"`
	EndTime time.Time `json:"end_time,omitempty"`
	ExistingCustomerBudgetPercentage uint `json:"existing_customer_budget_percentage,omitempty"`
	FrequencyControlSpecs []*AdCampaignFrequencyControlSpecs `json:"frequency_control_specs,omitempty"`
	FullFunnelExplorationMode string `json:"full_funnel_exploration_mode,omitempty"`
	ID string `json:"id,omitempty"`
	InstagramUserID string `json:"instagram_user_id,omitempty"`
	IsBaSkipDelayedEligible bool `json:"is_ba_skip_delayed_eligible,omitempty"`
	IsBudgetScheduleEnabled bool `json:"is_budget_schedule_enabled,omitempty"`
	IsDynamicCreative bool `json:"is_dynamic_creative,omitempty"`
	IsIncrementalAttributionEnabled bool `json:"is_incremental_attribution_enabled,omitempty"`
	IssuesInfo []*AdCampaignIssuesInfo `json:"issues_info,omitempty"`
	LearningStageInfo *AdCampaignLearningStageInfo `json:"learning_stage_info,omitempty"`
	LifetimeBudget string `json:"lifetime_budget,omitempty"`
	LifetimeImps int `json:"lifetime_imps,omitempty"`
	LifetimeMinSpendTarget string `json:"lifetime_min_spend_target,omitempty"`
	LifetimeSpendCap string `json:"lifetime_spend_cap,omitempty"`
	MaxBudgetSpendPercentage string `json:"max_budget_spend_percentage,omitempty"`
	MinBudgetSpendPercentage string `json:"min_budget_spend_percentage,omitempty"`
	MultiOptimizationGoalWeight string `json:"multi_optimization_goal_weight,omitempty"`
	Name string `json:"name,omitempty"`
	OptimizationGoal AdsetOptimizationGoal `json:"optimization_goal,omitempty"`
	OptimizationSubEvent string `json:"optimization_sub_event,omitempty"`
	PacingType []string `json:"pacing_type,omitempty"`
	PromotedObject *AdPromotedObject `json:"promoted_object,omitempty"`
	Recommendations []*AdRecommendation `json:"recommendations,omitempty"`
	RecurringBudgetSemantics bool `json:"recurring_budget_semantics,omitempty"`
	RegionalRegulatedCategories []string `json:"regional_regulated_categories,omitempty"`
	RegionalRegulationIDentities *RegionalRegulationIdentities `json:"regional_regulation_identities,omitempty"`
	ReviewFeedback string `json:"review_feedback,omitempty"`
	RfPredictionID string `json:"rf_prediction_id,omitempty"`
	SourceAdset *AdSet `json:"source_adset,omitempty"`
	SourceAdsetID string `json:"source_adset_id,omitempty"`
	StartTime time.Time `json:"start_time,omitempty"`
	Status AdsetStatus `json:"status,omitempty"`
	Targeting *Targeting `json:"targeting,omitempty"`
	TargetingOptimizationTypes []map[string]int `json:"targeting_optimization_types,omitempty"`
	TimeBasedAdRotationIDBlocks [][]int `json:"time_based_ad_rotation_id_blocks,omitempty"`
	TimeBasedAdRotationIntervals []uint `json:"time_based_ad_rotation_intervals,omitempty"`
	UpdatedTime time.Time `json:"updated_time,omitempty"`
	UseNewAppClick bool `json:"use_new_app_click,omitempty"`
}

// AdStudy represents the Facebook AdStudy object
type AdStudy struct {
	Business *Business `json:"business,omitempty"`
	CanceledTime time.Time `json:"canceled_time,omitempty"`
	ClientBusiness *Business `json:"client_business,omitempty"`
	CooldownStartTime time.Time `json:"cooldown_start_time,omitempty"`
	CreatedBy *User `json:"created_by,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	Description string `json:"description,omitempty"`
	EndTime time.Time `json:"end_time,omitempty"`
	ID string `json:"id,omitempty"`
	MeasurementContact *User `json:"measurement_contact,omitempty"`
	Name string `json:"name,omitempty"`
	ObservationEndTime time.Time `json:"observation_end_time,omitempty"`
	ResultsFirstAvailableDate string `json:"results_first_available_date,omitempty"`
	SalesContact *User `json:"sales_contact,omitempty"`
	StartTime time.Time `json:"start_time,omitempty"`
	Type string `json:"type,omitempty"`
	UpdatedBy *User `json:"updated_by,omitempty"`
	UpdatedTime time.Time `json:"updated_time,omitempty"`
}

// AdStudyCell represents the Facebook AdStudyCell object
type AdStudyCell struct {
	AdEntitiesCount uint `json:"ad_entities_count,omitempty"`
	ControlPercentage float64 `json:"control_percentage,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	TreatmentPercentage float64 `json:"treatment_percentage,omitempty"`
}

// AdStudyObjective represents the Facebook AdStudyObjective object
type AdStudyObjective struct {
	ID string `json:"id,omitempty"`
	IsPrimary bool `json:"is_primary,omitempty"`
	LastUpdatedResults string `json:"last_updated_results,omitempty"`
	Name string `json:"name,omitempty"`
	Results []string `json:"results,omitempty"`
	Type string `json:"type,omitempty"`
}

// AdStudyObjectiveID represents the Facebook AdStudyObjectiveID object
type AdStudyObjectiveID struct {
	EventNames []string `json:"event_names,omitempty"`
	ID string `json:"id,omitempty"`
	Type string `json:"type,omitempty"`
}

// AdStudyObjectiveOffsiteDatasets represents the Facebook AdStudyObjectiveOffsiteDatasets object
type AdStudyObjectiveOffsiteDatasets struct {
	EventNames []string `json:"event_names,omitempty"`
	ID string `json:"id,omitempty"`
}

// AdTopline represents the Facebook AdTopline object
type AdTopline struct {
	AccountID string `json:"account_id,omitempty"`
	ClientApprovalDate time.Time `json:"client_approval_date,omitempty"`
	CreatedBy string `json:"created_by,omitempty"`
	CreatedDate time.Time `json:"created_date,omitempty"`
	Description string `json:"description,omitempty"`
	FlightEndDate time.Time `json:"flight_end_date,omitempty"`
	FlightStartDate time.Time `json:"flight_start_date,omitempty"`
	FuncCapAmount string `json:"func_cap_amount,omitempty"`
	FuncCapAmountWithOffset string `json:"func_cap_amount_with_offset,omitempty"`
	FuncLineAmount string `json:"func_line_amount,omitempty"`
	FuncLineAmountWithOffset string `json:"func_line_amount_with_offset,omitempty"`
	FuncPrice string `json:"func_price,omitempty"`
	FuncPriceWithOffset string `json:"func_price_with_offset,omitempty"`
	Gender string `json:"gender,omitempty"`
	ID string `json:"id,omitempty"`
	Impressions int `json:"impressions,omitempty"`
	IoNumber int `json:"io_number,omitempty"`
	IsBonusLine int `json:"is_bonus_line,omitempty"`
	Keywords string `json:"keywords,omitempty"`
	LastUpdatedBy string `json:"last_updated_by,omitempty"`
	LastUpdatedDate time.Time `json:"last_updated_date,omitempty"`
	LineNumber int `json:"line_number,omitempty"`
	LinePosition int `json:"line_position,omitempty"`
	LineType string `json:"line_type,omitempty"`
	Location string `json:"location,omitempty"`
	MaxAge string `json:"max_age,omitempty"`
	MaxBudget string `json:"max_budget,omitempty"`
	MinAge string `json:"min_age,omitempty"`
	PricePerTrp string `json:"price_per_trp,omitempty"`
	ProductType string `json:"product_type,omitempty"`
	RevAssuranceApprovalDate time.Time `json:"rev_assurance_approval_date,omitempty"`
	Targets string `json:"targets,omitempty"`
	TrpUpdatedTime int `json:"trp_updated_time,omitempty"`
	TrpValue string `json:"trp_value,omitempty"`
	Uom string `json:"uom,omitempty"`
}

// AdToplineDetail represents the Facebook AdToplineDetail object
type AdToplineDetail struct {
	ActiveStatus int `json:"active_status,omitempty"`
	AdAccountID string `json:"ad_account_id,omitempty"`
	FlightEndDate time.Time `json:"flight_end_date,omitempty"`
	FlightStartDate time.Time `json:"flight_start_date,omitempty"`
	ID string `json:"id,omitempty"`
	IoNumber int `json:"io_number,omitempty"`
	LineNumber int `json:"line_number,omitempty"`
	Price float64 `json:"price,omitempty"`
	Quantity float64 `json:"quantity,omitempty"`
	SfDetailLineID string `json:"sf_detail_line_id,omitempty"`
	SublineID string `json:"subline_id,omitempty"`
	Targets string `json:"targets,omitempty"`
	TimeCreated time.Time `json:"time_created,omitempty"`
	TimeUpdated time.Time `json:"time_updated,omitempty"`
}

// AdVideo represents the Facebook AdVideo object
type AdVideo struct {
	AdBreaks []int `json:"ad_breaks,omitempty"`
	AdminCreator *User `json:"admin_creator,omitempty"`
	AudioIsrc *AudioIsrc `json:"audio_isrc,omitempty"`
	BackdatedTime time.Time `json:"backdated_time,omitempty"`
	BackdatedTimeGranularity string `json:"backdated_time_granularity,omitempty"`
	BoostEligibilityInfo map[string]interface{} `json:"boost_eligibility_info,omitempty"`
	ContentCategory string `json:"content_category,omitempty"`
	ContentTags []string `json:"content_tags,omitempty"`
	Copyright *VideoCopyright `json:"copyright,omitempty"`
	CopyrightCheckInformation map[string]interface{} `json:"copyright_check_information,omitempty"`
	CopyrightMonitoringStatus string `json:"copyright_monitoring_status,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	CustomLabels []string `json:"custom_labels,omitempty"`
	Description string `json:"description,omitempty"`
	EmbedHtml map[string]interface{} `json:"embed_html,omitempty"`
	Embeddable bool `json:"embeddable,omitempty"`
	Event *Event `json:"event,omitempty"`
	Expiration map[string]interface{} `json:"expiration,omitempty"`
	Format []map[string]interface{} `json:"format,omitempty"`
	From map[string]interface{} `json:"from,omitempty"`
	Icon string `json:"icon,omitempty"`
	ID string `json:"id,omitempty"`
	IsCrosspostVideo bool `json:"is_crosspost_video,omitempty"`
	IsCrosspostingEligible bool `json:"is_crossposting_eligible,omitempty"`
	IsEpisode bool `json:"is_episode,omitempty"`
	IsInstagramEligible bool `json:"is_instagram_eligible,omitempty"`
	IsReferenceOnly bool `json:"is_reference_only,omitempty"`
	Length float64 `json:"length,omitempty"`
	LiveAudienceCount uint `json:"live_audience_count,omitempty"`
	LiveStatus string `json:"live_status,omitempty"`
	MusicVideoCopyright *MusicVideoCopyright `json:"music_video_copyright,omitempty"`
	PermalinkURL string `json:"permalink_url,omitempty"`
	Picture string `json:"picture,omitempty"`
	Place *Place `json:"place,omitempty"`
	PostID string `json:"post_id,omitempty"`
	PostViews uint `json:"post_views,omitempty"`
	PremiereLivingRoomStatus string `json:"premiere_living_room_status,omitempty"`
	Privacy *Privacy `json:"privacy,omitempty"`
	Published bool `json:"published,omitempty"`
	ScheduledPublishTime time.Time `json:"scheduled_publish_time,omitempty"`
	Source string `json:"source,omitempty"`
	Spherical bool `json:"spherical,omitempty"`
	Status *VideoStatus `json:"status,omitempty"`
	Title string `json:"title,omitempty"`
	UniversalVideoID string `json:"universal_video_id,omitempty"`
	UpdatedTime time.Time `json:"updated_time,omitempty"`
	Views uint `json:"views,omitempty"`
}

// AdVolume represents the Facebook AdVolume object
type AdVolume struct {
	AdVolumeBreakDown []map[string]interface{} `json:"ad_volume_break_down,omitempty"`
	AdsRunningOrInReviewCount uint `json:"ads_running_or_in_review_count,omitempty"`
	FutureLimitActivationDate string `json:"future_limit_activation_date,omitempty"`
	FutureLimitOnAdsRunningOrInReview uint `json:"future_limit_on_ads_running_or_in_review,omitempty"`
	IndividualAccountsAdVolume int `json:"individual_accounts_ad_volume,omitempty"`
	IsGpaPage bool `json:"is_gpa_page,omitempty"`
	LimitOnAdsRunningOrInReview uint `json:"limit_on_ads_running_or_in_review,omitempty"`
	OwningBusinessAdVolume int `json:"owning_business_ad_volume,omitempty"`
	PartnerBusinessAdVolume int `json:"partner_business_ad_volume,omitempty"`
	UserRole string `json:"user_role,omitempty"`
}

// AdgroupFacebookFeedback represents the Facebook AdgroupFacebookFeedback object
type AdgroupFacebookFeedback struct {
	ID string `json:"id,omitempty"`
	Preview string `json:"preview,omitempty"`
}

// AdgroupIssuesInfo represents the Facebook AdgroupIssuesInfo object
type AdgroupIssuesInfo struct {
	ErrorCode int `json:"error_code,omitempty"`
	ErrorMessage string `json:"error_message,omitempty"`
	ErrorSummary string `json:"error_summary,omitempty"`
	ErrorType string `json:"error_type,omitempty"`
	Level string `json:"level,omitempty"`
	Mid string `json:"mid,omitempty"`
}

// AdgroupMetadata represents the Facebook AdgroupMetadata object
type AdgroupMetadata struct {
	AdStandardEnhancementsEditSource int `json:"ad_standard_enhancements_edit_source,omitempty"`
	AdgroupCreationSource string `json:"adgroup_creation_source,omitempty"`
	AdgroupEditSource string `json:"adgroup_edit_source,omitempty"`
	CarouselStyle string `json:"carousel_style,omitempty"`
	CarouselWithStaticCardStyle string `json:"carousel_with_static_card_style,omitempty"`
}

// AdgroupPlacementSpecificReviewFeedback represents the Facebook AdgroupPlacementSpecificReviewFeedback object
type AdgroupPlacementSpecificReviewFeedback struct {
	AccountAdmin map[string]string `json:"account_admin,omitempty"`
	Ad map[string]string `json:"ad,omitempty"`
	AdsConversionExperiences map[string]string `json:"ads_conversion_experiences,omitempty"`
	B2c map[string]string `json:"b2c,omitempty"`
	B2cCommerceUnified map[string]string `json:"b2c_commerce_unified,omitempty"`
	Bsg map[string]string `json:"bsg,omitempty"`
	CityCommunity map[string]string `json:"city_community,omitempty"`
	Commerce map[string]string `json:"commerce,omitempty"`
	Compromise map[string]string `json:"compromise,omitempty"`
	DailyDeals map[string]string `json:"daily_deals,omitempty"`
	DailyDealsLegacy map[string]string `json:"daily_deals_legacy,omitempty"`
	Dpa map[string]string `json:"dpa,omitempty"`
	DriCopyright map[string]string `json:"dri_copyright,omitempty"`
	DriCounterfeit map[string]string `json:"dri_counterfeit,omitempty"`
	Facebook map[string]string `json:"facebook,omitempty"`
	FacebookPagesLiveShopping map[string]string `json:"facebook_pages_live_shopping,omitempty"`
	IndependentWork map[string]string `json:"independent_work,omitempty"`
	Instagram map[string]string `json:"instagram,omitempty"`
	InstagramShop map[string]string `json:"instagram_shop,omitempty"`
	JobSearch map[string]string `json:"job_search,omitempty"`
	LeadGenHoneypot map[string]string `json:"lead_gen_honeypot,omitempty"`
	Marketplace map[string]string `json:"marketplace,omitempty"`
	MarketplaceHomeRentals map[string]string `json:"marketplace_home_rentals,omitempty"`
	MarketplaceHomeSales map[string]string `json:"marketplace_home_sales,omitempty"`
	MarketplaceMotors map[string]string `json:"marketplace_motors,omitempty"`
	MarketplaceShops map[string]string `json:"marketplace_shops,omitempty"`
	MaxReviewPlacements map[string]string `json:"max_review_placements,omitempty"`
	Neighborhoods map[string]string `json:"neighborhoods,omitempty"`
	PageAdmin map[string]string `json:"page_admin,omitempty"`
	Product map[string]string `json:"product,omitempty"`
	ProductService map[string]string `json:"product_service,omitempty"`
	Profile map[string]string `json:"profile,omitempty"`
	Seller map[string]string `json:"seller,omitempty"`
	Shops map[string]string `json:"shops,omitempty"`
	TrafficQuality map[string]string `json:"traffic_quality,omitempty"`
	UnifiedCommerceContent map[string]string `json:"unified_commerce_content,omitempty"`
	Whatsapp map[string]string `json:"whatsapp,omitempty"`
}

// AdgroupReviewFeedback represents the Facebook AdgroupReviewFeedback object
type AdgroupReviewFeedback struct {
	Global map[string]string `json:"global,omitempty"`
	PlacementSpecific *AdgroupPlacementSpecificReviewFeedback `json:"placement_specific,omitempty"`
}

// AdjacentContentDeliveryReport represents the Facebook AdjacentContentDeliveryReport object
type AdjacentContentDeliveryReport struct {
	AdID string `json:"ad_id,omitempty"`
	Content []map[string]interface{} `json:"content,omitempty"`
	ImpressionID string `json:"impression_id,omitempty"`
}

// AdsActionStats represents the Facebook AdsActionStats object
type AdsActionStats struct {
	X1dClick string `json:"1d_click,omitempty"`
	X1dClickAllConversions string `json:"1d_click_all_conversions,omitempty"`
	X1dClickFirstConversion string `json:"1d_click_first_conversion,omitempty"`
	X1dEv string `json:"1d_ev,omitempty"`
	X1dEvAllConversions string `json:"1d_ev_all_conversions,omitempty"`
	X1dEvFirstConversion string `json:"1d_ev_first_conversion,omitempty"`
	X1dView string `json:"1d_view,omitempty"`
	X1dViewAllConversions string `json:"1d_view_all_conversions,omitempty"`
	X1dViewFirstConversion string `json:"1d_view_first_conversion,omitempty"`
	X28dClick string `json:"28d_click,omitempty"`
	X28dClickAllConversions string `json:"28d_click_all_conversions,omitempty"`
	X28dClickFirstConversion string `json:"28d_click_first_conversion,omitempty"`
	X28dView string `json:"28d_view,omitempty"`
	X28dViewAllConversions string `json:"28d_view_all_conversions,omitempty"`
	X28dViewFirstConversion string `json:"28d_view_first_conversion,omitempty"`
	X7dClick string `json:"7d_click,omitempty"`
	X7dClickAllConversions string `json:"7d_click_all_conversions,omitempty"`
	X7dClickFirstConversion string `json:"7d_click_first_conversion,omitempty"`
	X7dView string `json:"7d_view,omitempty"`
	X7dViewAllConversions string `json:"7d_view_all_conversions,omitempty"`
	X7dViewFirstConversion string `json:"7d_view_first_conversion,omitempty"`
	ActionBrand string `json:"action_brand,omitempty"`
	ActionCanvasComponentID string `json:"action_canvas_component_id,omitempty"`
	ActionCanvasComponentName string `json:"action_canvas_component_name,omitempty"`
	ActionCarouselCardID string `json:"action_carousel_card_id,omitempty"`
	ActionCarouselCardName string `json:"action_carousel_card_name,omitempty"`
	ActionCategory string `json:"action_category,omitempty"`
	ActionConvertedProductID string `json:"action_converted_product_id,omitempty"`
	ActionDestination string `json:"action_destination,omitempty"`
	ActionDevice string `json:"action_device,omitempty"`
	ActionEventChannel string `json:"action_event_channel,omitempty"`
	ActionLinkClickDestination string `json:"action_link_click_destination,omitempty"`
	ActionLocationCode string `json:"action_location_code,omitempty"`
	ActionReaction string `json:"action_reaction,omitempty"`
	ActionTargetID string `json:"action_target_id,omitempty"`
	ActionType string `json:"action_type,omitempty"`
	ActionVideoAssetID string `json:"action_video_asset_id,omitempty"`
	ActionVideoSound string `json:"action_video_sound,omitempty"`
	ActionVideoType string `json:"action_video_type,omitempty"`
	Dda string `json:"dda,omitempty"`
	Incrementality string `json:"incrementality,omitempty"`
	IncrementalityAllConversions string `json:"incrementality_all_conversions,omitempty"`
	IncrementalityFirstConversion string `json:"incrementality_first_conversion,omitempty"`
	Inline string `json:"inline,omitempty"`
	InteractiveComponentStickerID string `json:"interactive_component_sticker_id,omitempty"`
	InteractiveComponentStickerResponse string `json:"interactive_component_sticker_response,omitempty"`
	SkanClick string `json:"skan_click,omitempty"`
	SkanClickSecondPostback string `json:"skan_click_second_postback,omitempty"`
	SkanClickThirdPostback string `json:"skan_click_third_postback,omitempty"`
	SkanView string `json:"skan_view,omitempty"`
	SkanViewSecondPostback string `json:"skan_view_second_postback,omitempty"`
	SkanViewThirdPostback string `json:"skan_view_third_postback,omitempty"`
	Value string `json:"value,omitempty"`
}

// AdsAnomalyDetection represents the Facebook AdsAnomalyDetection object
type AdsAnomalyDetection struct {
	AnomalyData []map[string]interface{} `json:"anomaly_data,omitempty"`
	Day uint `json:"day,omitempty"`
}

// AdsConversionGoal represents the Facebook AdsConversionGoal object
type AdsConversionGoal struct {
	AdAccountID string `json:"ad_account_id,omitempty"`
	ConversionEventValueSource string `json:"conversion_event_value_source,omitempty"`
	Description string `json:"description,omitempty"`
	GoalCreationMethod string `json:"goal_creation_method,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	PerformanceGoal string `json:"performance_goal,omitempty"`
	UpdateStatus string `json:"update_status,omitempty"`
}

// AdsCreationSavedState represents the Facebook AdsCreationSavedState object
type AdsCreationSavedState struct {
	AdAccount *AdAccount `json:"ad_account,omitempty"`
	ID string `json:"id,omitempty"`
	SerializedStoreData string `json:"serialized_store_data,omitempty"`
	TimeUpdated time.Time `json:"time_updated,omitempty"`
	User map[string]interface{} `json:"user,omitempty"`
}

// AdsCustomPivotsPreview represents the Facebook AdsCustomPivotsPreview object
type AdsCustomPivotsPreview struct {
	AccountID string `json:"account_id,omitempty"`
	AccountName string `json:"account_name,omitempty"`
	AdID string `json:"ad_id,omitempty"`
	AdName string `json:"ad_name,omitempty"`
	AdsetID string `json:"adset_id,omitempty"`
	AdsetName string `json:"adset_name,omitempty"`
	CampaignID string `json:"campaign_id,omitempty"`
	CampaignName string `json:"campaign_name,omitempty"`
	CustomBreakdown []string `json:"custom_breakdown,omitempty"`
}

// AdsDataset represents the Facebook AdsDataset object
type AdsDataset struct {
	CanProxy bool `json:"can_proxy,omitempty"`
	CollectionRate float64 `json:"collection_rate,omitempty"`
	Config string `json:"config,omitempty"`
	CreationTime time.Time `json:"creation_time,omitempty"`
	Creator *User `json:"creator,omitempty"`
	DatasetID string `json:"dataset_id,omitempty"`
	Description string `json:"description,omitempty"`
	DuplicateEntries int `json:"duplicate_entries,omitempty"`
	EnableAutoAssignToAccounts bool `json:"enable_auto_assign_to_accounts,omitempty"`
	EnableAutomaticEvents bool `json:"enable_automatic_events,omitempty"`
	EnableAutomaticMatching bool `json:"enable_automatic_matching,omitempty"`
	EnableRealTimeEventLog bool `json:"enable_real_time_event_log,omitempty"`
	EventStats string `json:"event_stats,omitempty"`
	EventTimeMax int `json:"event_time_max,omitempty"`
	EventTimeMin int `json:"event_time_min,omitempty"`
	FirstPartyCookieStatus string `json:"first_party_cookie_status,omitempty"`
	HasBapiDomains bool `json:"has_bapi_domains,omitempty"`
	HasCatalogMicrodataActivity bool `json:"has_catalog_microdata_activity,omitempty"`
	HasOfaRedactedKeys bool `json:"has_ofa_redacted_keys,omitempty"`
	HasSentPii bool `json:"has_sent_pii,omitempty"`
	ID string `json:"id,omitempty"`
	IsConsolidatedContainer bool `json:"is_consolidated_container,omitempty"`
	IsCreatedByBusiness bool `json:"is_created_by_business,omitempty"`
	IsCrm bool `json:"is_crm,omitempty"`
	IsEligibleForSharingToAdAccount bool `json:"is_eligible_for_sharing_to_ad_account,omitempty"`
	IsEligibleForSharingToBusiness bool `json:"is_eligible_for_sharing_to_business,omitempty"`
	IsEligibleForValueOptimization bool `json:"is_eligible_for_value_optimization,omitempty"`
	IsMtaUse bool `json:"is_mta_use,omitempty"`
	IsRestrictedUse bool `json:"is_restricted_use,omitempty"`
	IsUnavailable bool `json:"is_unavailable,omitempty"`
	LastFiredTime time.Time `json:"last_fired_time,omitempty"`
	LastUploadApp string `json:"last_upload_app,omitempty"`
	LastUploadAppChangedTime int `json:"last_upload_app_changed_time,omitempty"`
	LastUploadTime int `json:"last_upload_time,omitempty"`
	LateUploadReminderEligibility bool `json:"late_upload_reminder_eligibility,omitempty"`
	MatchRateApprox int `json:"match_rate_approx,omitempty"`
	MatchedEntries int `json:"matched_entries,omitempty"`
	Name string `json:"name,omitempty"`
	NoAdsTrackedForWeeklyUploadedEventsReminderEligibility bool `json:"no_ads_tracked_for_weekly_uploaded_events_reminder_eligibility,omitempty"`
	NumActiveAdSetTracked int `json:"num_active_ad_set_tracked,omitempty"`
	NumRecentOfflineConversionsUploaded int `json:"num_recent_offline_conversions_uploaded,omitempty"`
	NumUploads int `json:"num_uploads,omitempty"`
	OwnerAdAccount *AdAccount `json:"owner_ad_account,omitempty"`
	OwnerBusiness *Business `json:"owner_business,omitempty"`
	PercentageOfLateUploadsInExternalSuboptimalWindow int `json:"percentage_of_late_uploads_in_external_suboptimal_window,omitempty"`
	Permissions *OfflineConversionDataSetPermissions `json:"permissions,omitempty"`
	ServerLastFiredTime time.Time `json:"server_last_fired_time,omitempty"`
	ShowAutomaticEvents bool `json:"show_automatic_events,omitempty"`
	UploadRate float64 `json:"upload_rate,omitempty"`
	UploadReminderEligibility bool `json:"upload_reminder_eligibility,omitempty"`
	Usage *OfflineConversionDataSetUsage `json:"usage,omitempty"`
	ValidEntries int `json:"valid_entries,omitempty"`
}

// AdsEligibility represents the Facebook AdsEligibility object
type AdsEligibility struct {
	LiveShopping map[string]interface{} `json:"live_shopping,omitempty"`
}

// AdsGuidanceQEExposure represents the Facebook AdsGuidanceQEExposure object
type AdsGuidanceQEExposure struct {
	AccountExposed bool `json:"account_exposed,omitempty"`
}

// AdsHistogramStats represents the Facebook AdsHistogramStats object
type AdsHistogramStats struct {
	X1dClick []int `json:"1d_click,omitempty"`
	X1dClickAllConversions []int `json:"1d_click_all_conversions,omitempty"`
	X1dClickFirstConversion []int `json:"1d_click_first_conversion,omitempty"`
	X1dEv []int `json:"1d_ev,omitempty"`
	X1dEvAllConversions []int `json:"1d_ev_all_conversions,omitempty"`
	X1dEvFirstConversion []int `json:"1d_ev_first_conversion,omitempty"`
	X1dView []int `json:"1d_view,omitempty"`
	X1dViewAllConversions []int `json:"1d_view_all_conversions,omitempty"`
	X1dViewFirstConversion []int `json:"1d_view_first_conversion,omitempty"`
	X28dClick []int `json:"28d_click,omitempty"`
	X28dClickAllConversions []int `json:"28d_click_all_conversions,omitempty"`
	X28dClickFirstConversion []int `json:"28d_click_first_conversion,omitempty"`
	X28dView []int `json:"28d_view,omitempty"`
	X28dViewAllConversions []int `json:"28d_view_all_conversions,omitempty"`
	X28dViewFirstConversion []int `json:"28d_view_first_conversion,omitempty"`
	X7dClick []int `json:"7d_click,omitempty"`
	X7dClickAllConversions []int `json:"7d_click_all_conversions,omitempty"`
	X7dClickFirstConversion []int `json:"7d_click_first_conversion,omitempty"`
	X7dView []int `json:"7d_view,omitempty"`
	X7dViewAllConversions []int `json:"7d_view_all_conversions,omitempty"`
	X7dViewFirstConversion []int `json:"7d_view_first_conversion,omitempty"`
	ActionBrand string `json:"action_brand,omitempty"`
	ActionCanvasComponentID string `json:"action_canvas_component_id,omitempty"`
	ActionCanvasComponentName string `json:"action_canvas_component_name,omitempty"`
	ActionCarouselCardID string `json:"action_carousel_card_id,omitempty"`
	ActionCarouselCardName string `json:"action_carousel_card_name,omitempty"`
	ActionCategory string `json:"action_category,omitempty"`
	ActionConvertedProductID string `json:"action_converted_product_id,omitempty"`
	ActionDestination string `json:"action_destination,omitempty"`
	ActionDevice string `json:"action_device,omitempty"`
	ActionEventChannel string `json:"action_event_channel,omitempty"`
	ActionLinkClickDestination string `json:"action_link_click_destination,omitempty"`
	ActionLocationCode string `json:"action_location_code,omitempty"`
	ActionReaction string `json:"action_reaction,omitempty"`
	ActionTargetID string `json:"action_target_id,omitempty"`
	ActionType string `json:"action_type,omitempty"`
	ActionVideoAssetID string `json:"action_video_asset_id,omitempty"`
	ActionVideoSound string `json:"action_video_sound,omitempty"`
	ActionVideoType string `json:"action_video_type,omitempty"`
	Dda []int `json:"dda,omitempty"`
	Incrementality []int `json:"incrementality,omitempty"`
	IncrementalityAllConversions []int `json:"incrementality_all_conversions,omitempty"`
	IncrementalityFirstConversion []int `json:"incrementality_first_conversion,omitempty"`
	Inline []int `json:"inline,omitempty"`
	InteractiveComponentStickerID string `json:"interactive_component_sticker_id,omitempty"`
	InteractiveComponentStickerResponse string `json:"interactive_component_sticker_response,omitempty"`
	SkanClick []int `json:"skan_click,omitempty"`
	SkanClickSecondPostback []int `json:"skan_click_second_postback,omitempty"`
	SkanClickThirdPostback []int `json:"skan_click_third_postback,omitempty"`
	SkanView []int `json:"skan_view,omitempty"`
	SkanViewSecondPostback []int `json:"skan_view_second_postback,omitempty"`
	SkanViewThirdPostback []int `json:"skan_view_third_postback,omitempty"`
	Value []int `json:"value,omitempty"`
}

// AdsImageCrops represents the Facebook AdsImageCrops object
type AdsImageCrops struct {
	X100x100 []interface{} `json:"100x100,omitempty"`
	X100x72 []interface{} `json:"100x72,omitempty"`
	X191x100 []interface{} `json:"191x100,omitempty"`
	X400x150 []interface{} `json:"400x150,omitempty"`
	X400x500 []interface{} `json:"400x500,omitempty"`
	X600x360 []interface{} `json:"600x360,omitempty"`
	X90x160 []interface{} `json:"90x160,omitempty"`
}

// AdsInsights represents the Facebook AdsInsights object
type AdsInsights struct {
	AccountCurrency string `json:"account_currency,omitempty"`
	AccountID string `json:"account_id,omitempty"`
	AccountName string `json:"account_name,omitempty"`
	ActionValues []*AdsActionStats `json:"action_values,omitempty"`
	Actions []*AdsActionStats `json:"actions,omitempty"`
	AdClickActions []*AdsActionStats `json:"ad_click_actions,omitempty"`
	AdID string `json:"ad_id,omitempty"`
	AdImpressionActions []*AdsActionStats `json:"ad_impression_actions,omitempty"`
	AdName string `json:"ad_name,omitempty"`
	AdsetEnd string `json:"adset_end,omitempty"`
	AdsetID string `json:"adset_id,omitempty"`
	AdsetName string `json:"adset_name,omitempty"`
	AdsetStart string `json:"adset_start,omitempty"`
	AgeTargeting string `json:"age_targeting,omitempty"`
	AttributionSetting string `json:"attribution_setting,omitempty"`
	AuctionBid string `json:"auction_bid,omitempty"`
	AuctionCompetitiveness string `json:"auction_competitiveness,omitempty"`
	AuctionMaxCompetitorBid string `json:"auction_max_competitor_bid,omitempty"`
	AveragePurchasesConversionValue []*AdsActionStats `json:"average_purchases_conversion_value,omitempty"`
	BuyingType string `json:"buying_type,omitempty"`
	CampaignID string `json:"campaign_id,omitempty"`
	CampaignName string `json:"campaign_name,omitempty"`
	CanvasAvgViewPercent string `json:"canvas_avg_view_percent,omitempty"`
	CanvasAvgViewTime string `json:"canvas_avg_view_time,omitempty"`
	CatalogSegmentActions []*AdsActionStats `json:"catalog_segment_actions,omitempty"`
	CatalogSegmentValue []*AdsActionStats `json:"catalog_segment_value,omitempty"`
	CatalogSegmentValueMobilePurchaseRoas []*AdsActionStats `json:"catalog_segment_value_mobile_purchase_roas,omitempty"`
	CatalogSegmentValueOmniPurchaseRoas []*AdsActionStats `json:"catalog_segment_value_omni_purchase_roas,omitempty"`
	CatalogSegmentValueWebsitePurchaseRoas []*AdsActionStats `json:"catalog_segment_value_website_purchase_roas,omitempty"`
	Clicks string `json:"clicks,omitempty"`
	ConversionLeadRate []*AdsActionStats `json:"conversion_lead_rate,omitempty"`
	ConversionLeads []*AdsActionStats `json:"conversion_leads,omitempty"`
	ConversionRateRanking string `json:"conversion_rate_ranking,omitempty"`
	ConversionValues []*AdsActionStats `json:"conversion_values,omitempty"`
	Conversions []*AdsActionStats `json:"conversions,omitempty"`
	ConvertedProductAppCustomEventFbMobilePurchase []*AdsActionStats `json:"converted_product_app_custom_event_fb_mobile_purchase,omitempty"`
	ConvertedProductAppCustomEventFbMobilePurchaseValue []*AdsActionStats `json:"converted_product_app_custom_event_fb_mobile_purchase_value,omitempty"`
	ConvertedProductOfflinePurchase []*AdsActionStats `json:"converted_product_offline_purchase,omitempty"`
	ConvertedProductOfflinePurchaseValue []*AdsActionStats `json:"converted_product_offline_purchase_value,omitempty"`
	ConvertedProductOmniPurchase []*AdsActionStats `json:"converted_product_omni_purchase,omitempty"`
	ConvertedProductOmniPurchaseValues []*AdsActionStats `json:"converted_product_omni_purchase_values,omitempty"`
	ConvertedProductQuantity []*AdsActionStats `json:"converted_product_quantity,omitempty"`
	ConvertedProductValue []*AdsActionStats `json:"converted_product_value,omitempty"`
	ConvertedProductWebsitePixelPurchase []*AdsActionStats `json:"converted_product_website_pixel_purchase,omitempty"`
	ConvertedProductWebsitePixelPurchaseValue []*AdsActionStats `json:"converted_product_website_pixel_purchase_value,omitempty"`
	ConvertedPromotedProductAppCustomEventFbMobilePurchase []*AdsActionStats `json:"converted_promoted_product_app_custom_event_fb_mobile_purchase,omitempty"`
	ConvertedPromotedProductAppCustomEventFbMobilePurchaseValue []*AdsActionStats `json:"converted_promoted_product_app_custom_event_fb_mobile_purchase_value,omitempty"`
	ConvertedPromotedProductOfflinePurchase []*AdsActionStats `json:"converted_promoted_product_offline_purchase,omitempty"`
	ConvertedPromotedProductOfflinePurchaseValue []*AdsActionStats `json:"converted_promoted_product_offline_purchase_value,omitempty"`
	ConvertedPromotedProductOmniPurchase []*AdsActionStats `json:"converted_promoted_product_omni_purchase,omitempty"`
	ConvertedPromotedProductOmniPurchaseValues []*AdsActionStats `json:"converted_promoted_product_omni_purchase_values,omitempty"`
	ConvertedPromotedProductQuantity []*AdsActionStats `json:"converted_promoted_product_quantity,omitempty"`
	ConvertedPromotedProductValue []*AdsActionStats `json:"converted_promoted_product_value,omitempty"`
	ConvertedPromotedProductWebsitePixelPurchase []*AdsActionStats `json:"converted_promoted_product_website_pixel_purchase,omitempty"`
	ConvertedPromotedProductWebsitePixelPurchaseValue []*AdsActionStats `json:"converted_promoted_product_website_pixel_purchase_value,omitempty"`
	CostPer15SecVideoView []*AdsActionStats `json:"cost_per_15_sec_video_view,omitempty"`
	CostPer2SecContinuousVideoView []*AdsActionStats `json:"cost_per_2_sec_continuous_video_view,omitempty"`
	CostPerActionType []*AdsActionStats `json:"cost_per_action_type,omitempty"`
	CostPerAdClick []*AdsActionStats `json:"cost_per_ad_click,omitempty"`
	CostPerConversion []*AdsActionStats `json:"cost_per_conversion,omitempty"`
	CostPerConversionLead []*AdsActionStats `json:"cost_per_conversion_lead,omitempty"`
	CostPerDdaCountbyConvs string `json:"cost_per_dda_countby_convs,omitempty"`
	CostPerEstimatedAdRecallers string `json:"cost_per_estimated_ad_recallers,omitempty"`
	CostPerInlineLinkClick string `json:"cost_per_inline_link_click,omitempty"`
	CostPerInlinePostEngagement string `json:"cost_per_inline_post_engagement,omitempty"`
	CostPerObjectiveResult []map[string]interface{} `json:"cost_per_objective_result,omitempty"`
	CostPerOneThousandAdImpression []*AdsActionStats `json:"cost_per_one_thousand_ad_impression,omitempty"`
	CostPerOutboundClick []*AdsActionStats `json:"cost_per_outbound_click,omitempty"`
	CostPerResult []map[string]interface{} `json:"cost_per_result,omitempty"`
	CostPerThruplay []*AdsActionStats `json:"cost_per_thruplay,omitempty"`
	CostPerUniqueActionType []*AdsActionStats `json:"cost_per_unique_action_type,omitempty"`
	CostPerUniqueClick string `json:"cost_per_unique_click,omitempty"`
	CostPerUniqueConversion []*AdsActionStats `json:"cost_per_unique_conversion,omitempty"`
	CostPerUniqueInlineLinkClick string `json:"cost_per_unique_inline_link_click,omitempty"`
	CostPerUniqueOutboundClick []*AdsActionStats `json:"cost_per_unique_outbound_click,omitempty"`
	Cpc string `json:"cpc,omitempty"`
	Cpm string `json:"cpm,omitempty"`
	Cpp string `json:"cpp,omitempty"`
	CreatedTime string `json:"created_time,omitempty"`
	CreativeMediaType string `json:"creative_media_type,omitempty"`
	Ctr string `json:"ctr,omitempty"`
	DateStart string `json:"date_start,omitempty"`
	DateStop string `json:"date_stop,omitempty"`
	DdaCountbyConvs string `json:"dda_countby_convs,omitempty"`
	DdaResults []map[string]interface{} `json:"dda_results,omitempty"`
	EngagementRateRanking string `json:"engagement_rate_ranking,omitempty"`
	EstimatedAdRecallRate string `json:"estimated_ad_recall_rate,omitempty"`
	EstimatedAdRecallRateLowerBound string `json:"estimated_ad_recall_rate_lower_bound,omitempty"`
	EstimatedAdRecallRateUpperBound string `json:"estimated_ad_recall_rate_upper_bound,omitempty"`
	EstimatedAdRecallers string `json:"estimated_ad_recallers,omitempty"`
	EstimatedAdRecallersLowerBound string `json:"estimated_ad_recallers_lower_bound,omitempty"`
	EstimatedAdRecallersUpperBound string `json:"estimated_ad_recallers_upper_bound,omitempty"`
	Frequency string `json:"frequency,omitempty"`
	FullViewImpressions string `json:"full_view_impressions,omitempty"`
	FullViewReach string `json:"full_view_reach,omitempty"`
	GenderTargeting string `json:"gender_targeting,omitempty"`
	Impressions string `json:"impressions,omitempty"`
	InlineLinkClickCtr string `json:"inline_link_click_ctr,omitempty"`
	InlineLinkClicks string `json:"inline_link_clicks,omitempty"`
	InlinePostEngagement string `json:"inline_post_engagement,omitempty"`
	InstagramUpcomingEventRemindersSet string `json:"instagram_upcoming_event_reminders_set,omitempty"`
	InstantExperienceClicksToOpen string `json:"instant_experience_clicks_to_open,omitempty"`
	InstantExperienceClicksToStart string `json:"instant_experience_clicks_to_start,omitempty"`
	InstantExperienceOutboundClicks []*AdsActionStats `json:"instant_experience_outbound_clicks,omitempty"`
	InteractiveComponentTap []*AdsActionStats `json:"interactive_component_tap,omitempty"`
	Labels string `json:"labels,omitempty"`
	LandingPageViewActionsPerLinkClick string `json:"landing_page_view_actions_per_link_click,omitempty"`
	LandingPageViewPerLinkClick string `json:"landing_page_view_per_link_click,omitempty"`
	LandingPageViewPerPurchaseRate string `json:"landing_page_view_per_purchase_rate,omitempty"`
	Location string `json:"location,omitempty"`
	MarketingMessagesClickRateBenchmark string `json:"marketing_messages_click_rate_benchmark,omitempty"`
	MarketingMessagesCostPerDelivered string `json:"marketing_messages_cost_per_delivered,omitempty"`
	MarketingMessagesCostPerLinkBtnClick string `json:"marketing_messages_cost_per_link_btn_click,omitempty"`
	MarketingMessagesDelivered string `json:"marketing_messages_delivered,omitempty"`
	MarketingMessagesDeliveryRate string `json:"marketing_messages_delivery_rate,omitempty"`
	MarketingMessagesLinkBtnClick string `json:"marketing_messages_link_btn_click,omitempty"`
	MarketingMessagesLinkBtnClickRate string `json:"marketing_messages_link_btn_click_rate,omitempty"`
	MarketingMessagesMediaViewRate string `json:"marketing_messages_media_view_rate,omitempty"`
	MarketingMessagesPhoneCallBtnClickRate string `json:"marketing_messages_phone_call_btn_click_rate,omitempty"`
	MarketingMessagesQuickReplyBtnClick string `json:"marketing_messages_quick_reply_btn_click,omitempty"`
	MarketingMessagesQuickReplyBtnClickRate string `json:"marketing_messages_quick_reply_btn_click_rate,omitempty"`
	MarketingMessagesRead string `json:"marketing_messages_read,omitempty"`
	MarketingMessagesReadRate string `json:"marketing_messages_read_rate,omitempty"`
	MarketingMessagesReadRateBenchmark string `json:"marketing_messages_read_rate_benchmark,omitempty"`
	MarketingMessagesSent string `json:"marketing_messages_sent,omitempty"`
	MarketingMessagesSpend string `json:"marketing_messages_spend,omitempty"`
	MarketingMessagesSpendCurrency string `json:"marketing_messages_spend_currency,omitempty"`
	MarketingMessagesWebsiteAddToCart string `json:"marketing_messages_website_add_to_cart,omitempty"`
	MarketingMessagesWebsiteInitiateCheckout string `json:"marketing_messages_website_initiate_checkout,omitempty"`
	MarketingMessagesWebsitePurchase string `json:"marketing_messages_website_purchase,omitempty"`
	MarketingMessagesWebsitePurchaseValues string `json:"marketing_messages_website_purchase_values,omitempty"`
	MobileAppPurchaseRoas []*AdsActionStats `json:"mobile_app_purchase_roas,omitempty"`
	Objective string `json:"objective,omitempty"`
	ObjectiveResultRate []map[string]interface{} `json:"objective_result_rate,omitempty"`
	ObjectiveResults []map[string]interface{} `json:"objective_results,omitempty"`
	OnsiteConversionMessagingDetectedPurchaseDeduped []*AdsActionStats `json:"onsite_conversion_messaging_detected_purchase_deduped,omitempty"`
	OptimizationGoal string `json:"optimization_goal,omitempty"`
	OutboundClicks []*AdsActionStats `json:"outbound_clicks,omitempty"`
	OutboundClicksCtr []*AdsActionStats `json:"outbound_clicks_ctr,omitempty"`
	PlacePageName string `json:"place_page_name,omitempty"`
	ProductBrand string `json:"product_brand,omitempty"`
	ProductCategory string `json:"product_category,omitempty"`
	ProductContentID string `json:"product_content_id,omitempty"`
	ProductCustomLabel0 string `json:"product_custom_label_0,omitempty"`
	ProductCustomLabel1 string `json:"product_custom_label_1,omitempty"`
	ProductCustomLabel2 string `json:"product_custom_label_2,omitempty"`
	ProductCustomLabel3 string `json:"product_custom_label_3,omitempty"`
	ProductCustomLabel4 string `json:"product_custom_label_4,omitempty"`
	ProductGroupContentID string `json:"product_group_content_id,omitempty"`
	ProductGroupRetailerID string `json:"product_group_retailer_id,omitempty"`
	ProductName string `json:"product_name,omitempty"`
	ProductRetailerID string `json:"product_retailer_id,omitempty"`
	PurchasePerLandingPageView string `json:"purchase_per_landing_page_view,omitempty"`
	PurchaseRoas []*AdsActionStats `json:"purchase_roas,omitempty"`
	PurchasesPerLinkClick string `json:"purchases_per_link_click,omitempty"`
	QualifyingQuestionQualifyAnswerRate string `json:"qualifying_question_qualify_answer_rate,omitempty"`
	QualityRanking string `json:"quality_ranking,omitempty"`
	Reach string `json:"reach,omitempty"`
	ResultRate []map[string]interface{} `json:"result_rate,omitempty"`
	ResultValuesPerformanceIndicator string `json:"result_values_performance_indicator,omitempty"`
	Results []map[string]interface{} `json:"results,omitempty"`
	ShopsAssistedPurchases string `json:"shops_assisted_purchases,omitempty"`
	SocialSpend string `json:"social_spend,omitempty"`
	Spend string `json:"spend,omitempty"`
	TotalPostbacks string `json:"total_postbacks,omitempty"`
	TotalPostbacksDetailed []*AdsActionStats `json:"total_postbacks_detailed,omitempty"`
	TotalPostbacksDetailedV4 []*AdsActionStats `json:"total_postbacks_detailed_v4,omitempty"`
	UniqueActions []*AdsActionStats `json:"unique_actions,omitempty"`
	UniqueClicks string `json:"unique_clicks,omitempty"`
	UniqueConversions []*AdsActionStats `json:"unique_conversions,omitempty"`
	UniqueCtr string `json:"unique_ctr,omitempty"`
	UniqueInlineLinkClickCtr string `json:"unique_inline_link_click_ctr,omitempty"`
	UniqueInlineLinkClicks string `json:"unique_inline_link_clicks,omitempty"`
	UniqueLinkClicksCtr string `json:"unique_link_clicks_ctr,omitempty"`
	UniqueOutboundClicks []*AdsActionStats `json:"unique_outbound_clicks,omitempty"`
	UniqueOutboundClicksCtr []*AdsActionStats `json:"unique_outbound_clicks_ctr,omitempty"`
	UniqueVideoContinuous2SecWatchedActions []*AdsActionStats `json:"unique_video_continuous_2_sec_watched_actions,omitempty"`
	UniqueVideoView15Sec []*AdsActionStats `json:"unique_video_view_15_sec,omitempty"`
	UpdatedTime string `json:"updated_time,omitempty"`
	Video15SecWatchedActions []*AdsActionStats `json:"video_15_sec_watched_actions,omitempty"`
	Video30SecWatchedActions []*AdsActionStats `json:"video_30_sec_watched_actions,omitempty"`
	VideoAvgTimeWatchedActions []*AdsActionStats `json:"video_avg_time_watched_actions,omitempty"`
	VideoContinuous2SecWatchedActions []*AdsActionStats `json:"video_continuous_2_sec_watched_actions,omitempty"`
	VideoP100WatchedActions []*AdsActionStats `json:"video_p100_watched_actions,omitempty"`
	VideoP25WatchedActions []*AdsActionStats `json:"video_p25_watched_actions,omitempty"`
	VideoP50WatchedActions []*AdsActionStats `json:"video_p50_watched_actions,omitempty"`
	VideoP75WatchedActions []*AdsActionStats `json:"video_p75_watched_actions,omitempty"`
	VideoP95WatchedActions []*AdsActionStats `json:"video_p95_watched_actions,omitempty"`
	VideoPlayActions []*AdsActionStats `json:"video_play_actions,omitempty"`
	VideoPlayCurveActions []*AdsHistogramStats `json:"video_play_curve_actions,omitempty"`
	VideoPlayRetention0To15sActions []*AdsHistogramStats `json:"video_play_retention_0_to_15s_actions,omitempty"`
	VideoPlayRetention20To60sActions []*AdsHistogramStats `json:"video_play_retention_20_to_60s_actions,omitempty"`
	VideoPlayRetentionGraphActions []*AdsHistogramStats `json:"video_play_retention_graph_actions,omitempty"`
	VideoThruplayWatchedActions []*AdsActionStats `json:"video_thruplay_watched_actions,omitempty"`
	VideoTimeWatchedActions []*AdsActionStats `json:"video_time_watched_actions,omitempty"`
	VideoViewPerImpression []*AdsActionStats `json:"video_view_per_impression,omitempty"`
	WebsiteCtr []*AdsActionStats `json:"website_ctr,omitempty"`
	WebsitePurchaseRoas []*AdsActionStats `json:"website_purchase_roas,omitempty"`
	WishBid string `json:"wish_bid,omitempty"`
}

// AdsMcmeConversion represents the Facebook AdsMcmeConversion object
type AdsMcmeConversion struct {
	CreationTime time.Time `json:"creation_time,omitempty"`
	Description string `json:"description,omitempty"`
	ID string `json:"id,omitempty"`
	IsArchived bool `json:"is_archived,omitempty"`
	McmeConversionType string `json:"mcme_conversion_type,omitempty"`
	Name string `json:"name,omitempty"`
	OmnichannelObjectID string `json:"omnichannel_object_id,omitempty"`
}

// AdsNamingTemplate represents the Facebook AdsNamingTemplate object
type AdsNamingTemplate struct {
	APIFields [][]map[string][]map[string]string `json:"api_fields,omitempty"`
	APIVersion string `json:"api_version,omitempty"`
	FieldOrder []string `json:"field_order,omitempty"`
	ID string `json:"id,omitempty"`
	Level AdsnamingtemplateLevel `json:"level,omitempty"`
	Separator string `json:"separator,omitempty"`
	TemplateVersion string `json:"template_version,omitempty"`
	UserDefinedFields [][]map[string][]string `json:"user_defined_fields,omitempty"`
	ValueSeparator string `json:"value_separator,omitempty"`
}

// AdsOptimalDeliveryGrowthOpportunity represents the Facebook AdsOptimalDeliveryGrowthOpportunity object
type AdsOptimalDeliveryGrowthOpportunity struct {
	ChildMetadata []map[string]map[string]interface{} `json:"child_metadata,omitempty"`
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	OptimizationType string `json:"optimization_type,omitempty"`
}

// AdsPaymentCycle represents the Facebook AdsPaymentCycle object
type AdsPaymentCycle struct {
	AccountID string `json:"account_id,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	Multiplier uint `json:"multiplier,omitempty"`
	RequestedThresholdAmount uint `json:"requested_threshold_amount,omitempty"`
	ThresholdAmount uint `json:"threshold_amount,omitempty"`
	UpdatedTime time.Time `json:"updated_time,omitempty"`
}

// AdsPivotRules represents the Facebook AdsPivotRules object
type AdsPivotRules struct {
	CreationTime time.Time `json:"creation_time,omitempty"`
	Creator *Profile `json:"creator,omitempty"`
	Description string `json:"description,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	Permission string `json:"permission,omitempty"`
	Rules []map[string]interface{} `json:"rules,omitempty"`
	Scope string `json:"scope,omitempty"`
	UpdateBy *Profile `json:"update_by,omitempty"`
	UpdateTime time.Time `json:"update_time,omitempty"`
}

// AdsPixel represents the Facebook AdsPixel object
type AdsPixel struct {
	AutomaticMatchingFields []string `json:"automatic_matching_fields,omitempty"`
	CanProxy bool `json:"can_proxy,omitempty"`
	Code string `json:"code,omitempty"`
	Config string `json:"config,omitempty"`
	CreationTime time.Time `json:"creation_time,omitempty"`
	Creator *User `json:"creator,omitempty"`
	DataUseSetting string `json:"data_use_setting,omitempty"`
	Description string `json:"description,omitempty"`
	DuplicateEntries int `json:"duplicate_entries,omitempty"`
	EnableAutoAssignToAccounts bool `json:"enable_auto_assign_to_accounts,omitempty"`
	EnableAutomaticMatching bool `json:"enable_automatic_matching,omitempty"`
	EventStats string `json:"event_stats,omitempty"`
	EventTimeMax int `json:"event_time_max,omitempty"`
	EventTimeMin int `json:"event_time_min,omitempty"`
	FirstPartyCookieStatus string `json:"first_party_cookie_status,omitempty"`
	Has1pPixelEvent bool `json:"has_1p_pixel_event,omitempty"`
	ID string `json:"id,omitempty"`
	IsConsolidatedContainer bool `json:"is_consolidated_container,omitempty"`
	IsCreatedByBusiness bool `json:"is_created_by_business,omitempty"`
	IsCrm bool `json:"is_crm,omitempty"`
	IsMtaUse bool `json:"is_mta_use,omitempty"`
	IsRestrictedUse bool `json:"is_restricted_use,omitempty"`
	IsUnavailable bool `json:"is_unavailable,omitempty"`
	LastFiredTime time.Time `json:"last_fired_time,omitempty"`
	LastUploadApp string `json:"last_upload_app,omitempty"`
	LastUploadAppChangedTime int `json:"last_upload_app_changed_time,omitempty"`
	MatchRateApprox int `json:"match_rate_approx,omitempty"`
	MatchedEntries int `json:"matched_entries,omitempty"`
	Name string `json:"name,omitempty"`
	OwnerAdAccount *AdAccount `json:"owner_ad_account,omitempty"`
	OwnerBusiness *Business `json:"owner_business,omitempty"`
	Usage *OfflineConversionDataSetUsage `json:"usage,omitempty"`
	UserAccessExpireTime time.Time `json:"user_access_expire_time,omitempty"`
	ValidEntries int `json:"valid_entries,omitempty"`
}

// AdsPixelCAPIIntegrationQuality represents the Facebook AdsPixelCAPIIntegrationQuality object
type AdsPixelCAPIIntegrationQuality struct {
	Acr map[string]interface{} `json:"acr,omitempty"`
	DataFreshness map[string]interface{} `json:"data_freshness,omitempty"`
	DedupeKeyFeedback []map[string]interface{} `json:"dedupe_key_feedback,omitempty"`
	EventCoverage map[string]interface{} `json:"event_coverage,omitempty"`
	EventMatchQuality map[string]interface{} `json:"event_match_quality,omitempty"`
	EventName string `json:"event_name,omitempty"`
	EventPotentialAlyAcrIncrease map[string]interface{} `json:"event_potential_aly_acr_increase,omitempty"`
}

// AdsPixelCapabilityOverride represents the Facebook AdsPixelCapabilityOverride object
type AdsPixelCapabilityOverride struct {
	Capability string `json:"capability,omitempty"`
	ID string `json:"id,omitempty"`
	OverrideValue string `json:"override_value,omitempty"`
	Reason string `json:"reason,omitempty"`
}

// AdsPixelDeliveryRecommendations represents the Facebook AdsPixelDeliveryRecommendations object
type AdsPixelDeliveryRecommendations struct {
	CustomEventType string `json:"custom_event_type,omitempty"`
	OptimizationGoal string `json:"optimization_goal,omitempty"`
}

// AdsPixelDomainControlRule represents the Facebook AdsPixelDomainControlRule object
type AdsPixelDomainControlRule struct {
	DomainList []map[string]interface{} `json:"domain_list,omitempty"`
	Type string `json:"type,omitempty"`
}

// AdsPixelDomainLastFiredTime represents the Facebook AdsPixelDomainLastFiredTime object
type AdsPixelDomainLastFiredTime struct {
	DomainName string `json:"domain_name,omitempty"`
	LastFiredTime int `json:"last_fired_time,omitempty"`
}

// AdsPixelEventLastFiredTime represents the Facebook AdsPixelEventLastFiredTime object
type AdsPixelEventLastFiredTime struct {
	Event string `json:"event,omitempty"`
	LastFiredTime int `json:"last_fired_time,omitempty"`
}

// AdsPixelEventPrediction represents the Facebook AdsPixelEventPrediction object
type AdsPixelEventPrediction struct {
	Dismissed bool `json:"dismissed,omitempty"`
	EventType string `json:"event_type,omitempty"`
	Rule string `json:"rule,omitempty"`
}

// AdsPixelEventSuggestionRule represents the Facebook AdsPixelEventSuggestionRule object
type AdsPixelEventSuggestionRule struct {
	X7dVolume int `json:"7d_volume,omitempty"`
	Dismissed bool `json:"dismissed,omitempty"`
	EndTime time.Time `json:"end_time,omitempty"`
	EventType string `json:"event_type,omitempty"`
	Rank int `json:"rank,omitempty"`
	Rule string `json:"rule,omitempty"`
	SampleURLs []string `json:"sample_urls,omitempty"`
	StartTime time.Time `json:"start_time,omitempty"`
}

// AdsPixelItemPrice represents the Facebook AdsPixelItemPrice object
type AdsPixelItemPrice struct {
	Date string `json:"date,omitempty"`
	ItemPriceCoverage string `json:"item_price_coverage,omitempty"`
}

// AdsPixelMicrodataStats represents the Facebook AdsPixelMicrodataStats object
type AdsPixelMicrodataStats struct {
	AllowedDomains []string `json:"allowed_domains,omitempty"`
	ErrorsStatsForTimeRanges []map[string]interface{} `json:"errors_stats_for_time_ranges,omitempty"`
	HasValidEvents bool `json:"has_valid_events,omitempty"`
	SuggestedAllowedDomainsCountMax int `json:"suggested_allowed_domains_count_max,omitempty"`
	SuggestedTrustedDomains []string `json:"suggested_trusted_domains,omitempty"`
}

// AdsPixelRawFiresResult represents the Facebook AdsPixelRawFiresResult object
type AdsPixelRawFiresResult struct {
	DataJson string `json:"data_json,omitempty"`
	DeviceType string `json:"device_type,omitempty"`
	Event string `json:"event,omitempty"`
	EventDetectionMethod string `json:"event_detection_method,omitempty"`
	EventSrc string `json:"event_src,omitempty"`
	PlacedURL string `json:"placed_url,omitempty"`
	Timestamp time.Time `json:"timestamp,omitempty"`
	UserPiiKeys string `json:"user_pii_keys,omitempty"`
}

// AdsPixelRealTimeEventLogResult represents the Facebook AdsPixelRealTimeEventLogResult object
type AdsPixelRealTimeEventLogResult struct {
	DataJson string `json:"data_json,omitempty"`
	DedupData string `json:"dedup_data,omitempty"`
	DeviceType string `json:"device_type,omitempty"`
	DomainControlRuleRejection string `json:"domain_control_rule_rejection,omitempty"`
	Event string `json:"event,omitempty"`
	EventDetectionMethod string `json:"event_detection_method,omitempty"`
	InIframe bool `json:"in_iframe,omitempty"`
	MatchedRuleConditions string `json:"matched_rule_conditions,omitempty"`
	ResolvedLink string `json:"resolved_link,omitempty"`
	SourceRuleCondition string `json:"source_rule_condition,omitempty"`
	Timestamp string `json:"timestamp,omitempty"`
	TraceID string `json:"trace_id,omitempty"`
	URL string `json:"url,omitempty"`
}

// AdsPixelRecentEventsResult represents the Facebook AdsPixelRecentEventsResult object
type AdsPixelRecentEventsResult struct {
	Count int `json:"count,omitempty"`
	Event string `json:"event,omitempty"`
}

// AdsPixelSignalsIWLFeedbackNux represents the Facebook AdsPixelSignalsIWLFeedbackNux object
type AdsPixelSignalsIWLFeedbackNux struct {
	ShouldAskToRate bool `json:"should_ask_to_rate,omitempty"`
}

// AdsPixelSignalsIWLNux represents the Facebook AdsPixelSignalsIWLNux object
type AdsPixelSignalsIWLNux struct {
	BackgroundColor string `json:"background_color,omitempty"`
	Content string `json:"content,omitempty"`
	ContentColor string `json:"content_color,omitempty"`
	ContentSize string `json:"content_size,omitempty"`
	ImgURL string `json:"img_url,omitempty"`
}

// AdsPixelStats represents the Facebook AdsPixelStats object
type AdsPixelStats struct {
	Count int `json:"count,omitempty"`
	DiagnosticsHourlyLastTimestamp time.Time `json:"diagnostics_hourly_last_timestamp,omitempty"`
	Event string `json:"event,omitempty"`
	Value string `json:"value,omitempty"`
}

// AdsPixelStatsResult represents the Facebook AdsPixelStatsResult object
type AdsPixelStatsResult struct {
	Aggregation string `json:"aggregation,omitempty"`
	Data []*AdsPixelStats `json:"data,omitempty"`
	StartTime time.Time `json:"start_time,omitempty"`
}

// AdsQuickViews represents the Facebook AdsQuickViews object
type AdsQuickViews struct {
	AttributionWindows []string `json:"attribution_windows,omitempty"`
	Breakdowns []string `json:"breakdowns,omitempty"`
	ColumnFields []string `json:"column_fields,omitempty"`
	Description string `json:"description,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	Owner *Profile `json:"owner,omitempty"`
	Permission string `json:"permission,omitempty"`
	QuickViewType string `json:"quick_view_type,omitempty"`
	Sort []map[string]interface{} `json:"sort,omitempty"`
}

// AdsReportBuilder represents the Facebook AdsReportBuilder object
type AdsReportBuilder struct {
	Headers map[string]interface{} `json:"headers,omitempty"`
	Rows []map[string]interface{} `json:"rows,omitempty"`
	SkanReadinessStatus []map[string]string `json:"skan_readiness_status,omitempty"`
}

// AdsReportBuilderExportCore represents the Facebook AdsReportBuilderExportCore object
type AdsReportBuilderExportCore struct {
	AsyncPercentCompletion int `json:"async_percent_completion,omitempty"`
	AsyncReportURL string `json:"async_report_url,omitempty"`
	AsyncStatus string `json:"async_status,omitempty"`
	ClientCreationValue string `json:"client_creation_value,omitempty"`
	ExpiryTime time.Time `json:"expiry_time,omitempty"`
	ExportDownloadTime time.Time `json:"export_download_time,omitempty"`
	ExportFormat string `json:"export_format,omitempty"`
	ExportName string `json:"export_name,omitempty"`
	ExportType string `json:"export_type,omitempty"`
	HasSeen bool `json:"has_seen,omitempty"`
	ID string `json:"id,omitempty"`
	IsSharing bool `json:"is_sharing,omitempty"`
	LinkSharingExpirationTime time.Time `json:"link_sharing_expiration_time,omitempty"`
	LinkSharingUri string `json:"link_sharing_uri,omitempty"`
	TimeCompleted time.Time `json:"time_completed,omitempty"`
	TimeStart time.Time `json:"time_start,omitempty"`
}

// AdsReportBuilderMMMReport represents the Facebook AdsReportBuilderMMMReport object
type AdsReportBuilderMMMReport struct {
	AsyncStatus string `json:"async_status,omitempty"`
	ExportFormat string `json:"export_format,omitempty"`
	ExportName string `json:"export_name,omitempty"`
	ExportType string `json:"export_type,omitempty"`
	HasSeen bool `json:"has_seen,omitempty"`
	ID string `json:"id,omitempty"`
	MmmStatus string `json:"mmm_status,omitempty"`
	TimeStart time.Time `json:"time_start,omitempty"`
}

// AdsReportBuilderMMMReportScheduler represents the Facebook AdsReportBuilderMMMReportScheduler object
type AdsReportBuilderMMMReportScheduler struct {
	AdAccountIDs []string `json:"ad_account_ids,omitempty"`
	Filtering []map[string]interface{} `json:"filtering,omitempty"`
	ID string `json:"id,omitempty"`
	ReportName string `json:"report_name,omitempty"`
	ScheduleFrequency string `json:"schedule_frequency,omitempty"`
}

// AdsReportBuilderSavedReport represents the Facebook AdsReportBuilderSavedReport object
type AdsReportBuilderSavedReport struct {
	ActionReportTime string `json:"action_report_time,omitempty"`
	AdAccountID string `json:"ad_account_id,omitempty"`
	AttributionWindows []string `json:"attribution_windows,omitempty"`
	ComparisonDateInterval map[string]interface{} `json:"comparison_date_interval,omitempty"`
	CreationSource string `json:"creation_source,omitempty"`
	CreationTime time.Time `json:"creation_time,omitempty"`
	Currency string `json:"currency,omitempty"`
	DateInterval map[string]interface{} `json:"date_interval,omitempty"`
	DatePreset string `json:"date_preset,omitempty"`
	DefaultAttributionWindows []string `json:"default_attribution_windows,omitempty"`
	DimensionGroups [][]string `json:"dimension_groups,omitempty"`
	Dimensions []string `json:"dimensions,omitempty"`
	Filtering interface{} `json:"filtering,omitempty"`
	Formatting []map[string][]map[string]interface{} `json:"formatting,omitempty"`
	ID string `json:"id,omitempty"`
	LastAccessBy *Profile `json:"last_access_by,omitempty"`
	LastAccessTime time.Time `json:"last_access_time,omitempty"`
	LastReportSnapshotID string `json:"last_report_snapshot_id,omitempty"`
	LastReportSnapshotTime time.Time `json:"last_report_snapshot_time,omitempty"`
	LastSharedReportExpiration time.Time `json:"last_shared_report_expiration,omitempty"`
	Limit int `json:"limit,omitempty"`
	LockedDimensions int `json:"locked_dimensions,omitempty"`
	Metrics []string `json:"metrics,omitempty"`
	ReportName string `json:"report_name,omitempty"`
	ReportSnapshotAsyncPercentCompletion int `json:"report_snapshot_async_percent_completion,omitempty"`
	ReportSnapshotAsyncStatus string `json:"report_snapshot_async_status,omitempty"`
	ScheduleFrequency string `json:"schedule_frequency,omitempty"`
	Scope string `json:"scope,omitempty"`
	ShowDeprecateAwBanner bool `json:"show_deprecate_aw_banner,omitempty"`
	Sorting []map[string]interface{} `json:"sorting,omitempty"`
	StartDate string `json:"start_date,omitempty"`
	Status string `json:"status,omitempty"`
	Subscribers []string `json:"subscribers,omitempty"`
	UpdateBy *Profile `json:"update_by,omitempty"`
	UpdateTime time.Time `json:"update_time,omitempty"`
	User *Profile `json:"user,omitempty"`
	UserDimensions []string `json:"user_dimensions,omitempty"`
	UserMetrics []string `json:"user_metrics,omitempty"`
	ViewType string `json:"view_type,omitempty"`
}

// AdsSegments represents the Facebook AdsSegments object
type AdsSegments struct {
	DailyAudienceSize int `json:"daily_audience_size,omitempty"`
	DailyImpressions int `json:"daily_impressions,omitempty"`
	Description string `json:"description,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	Path []string `json:"path,omitempty"`
	Popularity float64 `json:"popularity,omitempty"`
	ProjectedCpm int `json:"projected_cpm,omitempty"`
	ProjectedDailyRevenue int `json:"projected_daily_revenue,omitempty"`
}

// AdsSignalDiagnosticIssue represents the Facebook AdsSignalDiagnosticIssue object
type AdsSignalDiagnosticIssue struct {
	DataSourceID *AdsPixel `json:"data_source_id,omitempty"`
	DataSourceType string `json:"data_source_type,omitempty"`
	DiagnosticType string `json:"diagnostic_type,omitempty"`
	EventName string `json:"event_name,omitempty"`
	TrafficAnomalyDropPercentage float64 `json:"traffic_anomaly_drop_percentage,omitempty"`
	TrafficAnomalyDropTimestamp time.Time `json:"traffic_anomaly_drop_timestamp,omitempty"`
}

// AdsStartYourDayWidget represents the Facebook AdsStartYourDayWidget object
type AdsStartYourDayWidget struct {
	ID string `json:"id,omitempty"`
	WidgetID string `json:"widget_id,omitempty"`
}

// AdsTabular represents the Facebook AdsTabular object
type AdsTabular struct {
	Rows []map[string]interface{} `json:"rows,omitempty"`
}

// AdsTargetingInsights represents the Facebook AdsTargetingInsights object
type AdsTargetingInsights struct {
	AudienceSize int `json:"audience_size,omitempty"`
	Clicks uint `json:"clicks,omitempty"`
	ConversionCost float64 `json:"conversion_cost,omitempty"`
	Conversions uint `json:"conversions,omitempty"`
	Description string `json:"description,omitempty"`
	ID string `json:"id,omitempty"`
	Impressions string `json:"impressions,omitempty"`
	Name string `json:"name,omitempty"`
	Revenue float64 `json:"revenue,omitempty"`
	Spend float64 `json:"spend,omitempty"`
	Type string `json:"type,omitempty"`
}

// AdsTextSuggestions represents the Facebook AdsTextSuggestions object
type AdsTextSuggestions struct {
	AdAccountID string `json:"ad_account_id,omitempty"`
	Bodies []map[string]interface{} `json:"bodies,omitempty"`
	Descriptions []map[string]interface{} `json:"descriptions,omitempty"`
	InactiveSessionTally int `json:"inactive_session_tally,omitempty"`
	Long []map[string]interface{} `json:"long,omitempty"`
	Short []map[string]interface{} `json:"short,omitempty"`
	Titles []map[string]interface{} `json:"titles,omitempty"`
}

// AdsUserSettings represents the Facebook AdsUserSettings object
type AdsUserSettings struct {
	APlusCSurveySeen bool `json:"a_plus_c_survey_seen,omitempty"`
	AddOverlaysOptInStatus string `json:"add_overlays_opt_in_status,omitempty"`
	AdgroupNameTemplate map[string]interface{} `json:"adgroup_name_template,omitempty"`
	AdsCsCatalogOptOutTimestamp []map[string]int `json:"ads_cs_catalog_opt_out_timestamp,omitempty"`
	AdsToolVisits []map[string]interface{} `json:"ads_tool_visits,omitempty"`
	ApluscCarouselCdaOptInStatus string `json:"aplusc_carousel_cda_opt_in_status,omitempty"`
	ApluscCarouselInlineCommentOptInStatus string `json:"aplusc_carousel_inline_comment_opt_in_status,omitempty"`
	ApluscEnhanceCtaOptInStatus string `json:"aplusc_enhance_cta_opt_in_status,omitempty"`
	ApluscEpaOptInStatus string `json:"aplusc_epa_opt_in_status,omitempty"`
	ApluscLocalStoreExtensionOptInStatus string `json:"aplusc_local_store_extension_opt_in_status,omitempty"`
	ApluscOptOutFriction []string `json:"aplusc_opt_out_friction,omitempty"`
	ApluscVideofilterOptInStatus string `json:"aplusc_videofilter_opt_in_status,omitempty"`
	ApluscVideouncropOptInStatus string `json:"aplusc_videouncrop_opt_in_status,omitempty"`
	AutoflowLiteOptInStatus string `json:"autoflow_lite_opt_in_status,omitempty"`
	AutoflowLiteShouldOptIn bool `json:"autoflow_lite_should_opt_in,omitempty"`
	BlendedAdsCreationDefaultingOptInStatus string `json:"blended_ads_creation_defaulting_opt_in_status,omitempty"`
	BlendedAdsCreationDefaultingOptOutCampaignGroupIDs []int `json:"blended_ads_creation_defaulting_opt_out_campaign_group_ids,omitempty"`
	BookmarkedPages []*Page `json:"bookmarked_pages,omitempty"`
	CampaignGroupNameTemplate map[string]interface{} `json:"campaign_group_name_template,omitempty"`
	CampaignNameTemplate map[string]interface{} `json:"campaign_name_template,omitempty"`
	CarouselToVideoOptInStatus string `json:"carousel_to_video_opt_in_status,omitempty"`
	ConnectedSourcesCatalogOptInStatus string `json:"connected_sources_catalog_opt_in_status,omitempty"`
	DaAddOverlaysOptInStatus string `json:"da_add_overlays_opt_in_status,omitempty"`
	DaHidePriceOptInStatus string `json:"da_hide_price_opt_in_status,omitempty"`
	DefaultCreationMode string `json:"default_creation_mode,omitempty"`
	DynamicPartnershipAdsOptInStatus string `json:"dynamic_partnership_ads_opt_in_status,omitempty"`
	EnhanceCtaTextExtractionOptInStatus string `json:"enhance_cta_text_extraction_opt_in_status,omitempty"`
	ExportFormatDefault string `json:"export_format_default,omitempty"`
	FocusModeDefault string `json:"focus_mode_default,omitempty"`
	GenAiAlphaTestStatus int `json:"gen_ai_alpha_test_status,omitempty"`
	ID string `json:"id,omitempty"`
	ImageBackgroundGenerationOptInStatus string `json:"image_background_generation_opt_in_status,omitempty"`
	ImageBrightnessAndContrastOptInStatus string `json:"image_brightness_and_contrast_opt_in_status,omitempty"`
	ImageExpansionOptInStatus string `json:"image_expansion_opt_in_status,omitempty"`
	IsAdsAiConsented bool `json:"is_ads_ai_consented,omitempty"`
	IsCboDefaultOn bool `json:"is_cbo_default_on,omitempty"`
	IsSeRemovalGuidanceDismissed bool `json:"is_se_removal_guidance_dismissed,omitempty"`
	LastUsedPostFormat string `json:"last_used_post_format,omitempty"`
	LastVisitedTime time.Time `json:"last_visited_time,omitempty"`
	MetadataBrandKitOptInStatus string `json:"metadata_brand_kit_opt_in_status,omitempty"`
	MusicOnReelsOptIn []map[string]string `json:"music_on_reels_opt_in,omitempty"`
	MutedCboMidflightEducationMessages []string `json:"muted_cbo_midflight_education_messages,omitempty"`
	OnsiteDestinationOptimizationOptIn string `json:"onsite_destination_optimization_opt_in,omitempty"`
	OpenTabs []string `json:"open_tabs,omitempty"`
	PacRelaxationOptInStatus string `json:"pac_relaxation_opt_in_status,omitempty"`
	PlacementGroupSquareOptInStatus string `json:"placement_group_square_opt_in_status,omitempty"`
	PlacementGroupVerticalOptInStatus string `json:"placement_group_vertical_opt_in_status,omitempty"`
	PreviouslySeenRecommendations []string `json:"previously_seen_recommendations,omitempty"`
	ProductExtensionsOptIn string `json:"product_extensions_opt_in,omitempty"`
	SaOffConvLocSeen string `json:"sa_off_conv_loc_seen,omitempty"`
	SaoffPublishedL2ConvLocSeen string `json:"saoff_published_l2_conv_loc_seen,omitempty"`
	SaonMigrL1SeenStatus string `json:"saon_migr_l1_seen_status,omitempty"`
	SelectedAdAccount *AdAccount `json:"selected_ad_account,omitempty"`
	SelectedComparisonTimerange map[string]interface{} `json:"selected_comparison_timerange,omitempty"`
	SelectedMetricCic string `json:"selected_metric_cic,omitempty"`
	SelectedMetricsCic []string `json:"selected_metrics_cic,omitempty"`
	SelectedPage *Page `json:"selected_page,omitempty"`
	SelectedPageSection string `json:"selected_page_section,omitempty"`
	SelectedPowerEditorPane string `json:"selected_power_editor_pane,omitempty"`
	SelectedStatRange map[string]interface{} `json:"selected_stat_range,omitempty"`
	ShouldExportFilterEmptyCols string `json:"should_export_filter_empty_cols,omitempty"`
	ShouldExportRowsWithoutUnsupportedFeature string `json:"should_export_rows_without_unsupported_feature,omitempty"`
	ShouldNotAutoExpandTreeTable bool `json:"should_not_auto_expand_tree_table,omitempty"`
	ShouldNotShowCboCampaignToggleOffConfirmationMessage bool `json:"should_not_show_cbo_campaign_toggle_off_confirmation_message,omitempty"`
	ShouldNotShowPublishMessageOnEditorClose bool `json:"should_not_show_publish_message_on_editor_close,omitempty"`
	ShowOriginalVideosOptIn string `json:"show_original_videos_opt_in,omitempty"`
	StaticAdProductExtensionsOptIn string `json:"static_ad_product_extensions_opt_in,omitempty"`
	StickySettingAfterDefaultOn string `json:"sticky_setting_after_default_on,omitempty"`
	SydCampaignTrendsMetric string `json:"syd_campaign_trends_metric,omitempty"`
	TextOptimizationsTextExtractionOptInStatus string `json:"text_optimizations_text_extraction_opt_in_status,omitempty"`
	TextTranslationOptInStatus string `json:"text_translation_opt_in_status,omitempty"`
	TextVariationsStickyOptInStatus string `json:"text_variations_sticky_opt_in_status,omitempty"`
	TotalCouponSydDismissals int `json:"total_coupon_syd_dismissals,omitempty"`
	TotalCouponUpsellDismissals int `json:"total_coupon_upsell_dismissals,omitempty"`
	URLPrefillRemovalTimestamp int `json:"url_prefill_removal_timestamp,omitempty"`
	UsePeCreateFlow bool `json:"use_pe_create_flow,omitempty"`
	UseStepperPrimaryEntry bool `json:"use_stepper_primary_entry,omitempty"`
	User *User `json:"user,omitempty"`
}

// AdsValueAdjustmentRuleCollection represents the Facebook AdsValueAdjustmentRuleCollection object
type AdsValueAdjustmentRuleCollection struct {
	ID string `json:"id,omitempty"`
	IsDefaultSetting bool `json:"is_default_setting,omitempty"`
	Name string `json:"name,omitempty"`
	ProductType string `json:"product_type,omitempty"`
	Status string `json:"status,omitempty"`
}

// AdvAInstance represents the Facebook AdvAInstance object
type AdvAInstance struct {
	ID string `json:"id,omitempty"`
	InstanceType string `json:"instance_type,omitempty"`
	Name string `json:"name,omitempty"`
	OwnerBusiness *Business `json:"owner_business,omitempty"`
}

// AdvertiserVerificationStatus represents the Facebook AdvertiserVerificationStatus object
type AdvertiserVerificationStatus struct {
	BannerType string `json:"banner_type,omitempty"`
	GracePeriodEndsAt time.Time `json:"grace_period_ends_at,omitempty"`
	UfacRedirectUri string `json:"ufac_redirect_uri,omitempty"`
	VerificationStatus string `json:"verification_status,omitempty"`
}

// AgeRange represents the Facebook AgeRange object
type AgeRange struct {
	Max uint `json:"max,omitempty"`
	Min uint `json:"min,omitempty"`
}

// AgencyClientDeclaration represents the Facebook AgencyClientDeclaration object
type AgencyClientDeclaration struct {
	AgencyRepresentingClient uint `json:"agency_representing_client,omitempty"`
	ClientBasedInFrance uint `json:"client_based_in_france,omitempty"`
	ClientCity string `json:"client_city,omitempty"`
	ClientCountryCode string `json:"client_country_code,omitempty"`
	ClientEmailAddress string `json:"client_email_address,omitempty"`
	ClientName string `json:"client_name,omitempty"`
	ClientPostalCode string `json:"client_postal_code,omitempty"`
	ClientProvince string `json:"client_province,omitempty"`
	ClientStreet string `json:"client_street,omitempty"`
	ClientStreet2 string `json:"client_street2,omitempty"`
	HasWrittenMandateFromAdvertiser uint `json:"has_written_mandate_from_advertiser,omitempty"`
	IsClientPayingInvoices uint `json:"is_client_paying_invoices,omitempty"`
}

// Album represents the Facebook Album object
type Album struct {
	BackdatedTime time.Time `json:"backdated_time,omitempty"`
	BackdatedTimeGranularity string `json:"backdated_time_granularity,omitempty"`
	CanBackdate bool `json:"can_backdate,omitempty"`
	CanUpload bool `json:"can_upload,omitempty"`
	Count uint `json:"count,omitempty"`
	CoverPhoto *Photo `json:"cover_photo,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	Description string `json:"description,omitempty"`
	EditLink string `json:"edit_link,omitempty"`
	Event *Event `json:"event,omitempty"`
	From map[string]interface{} `json:"from,omitempty"`
	ID string `json:"id,omitempty"`
	IsUserFacing bool `json:"is_user_facing,omitempty"`
	Link string `json:"link,omitempty"`
	Location string `json:"location,omitempty"`
	ModifiedMajor time.Time `json:"modified_major,omitempty"`
	Name string `json:"name,omitempty"`
	PhotoCount uint `json:"photo_count,omitempty"`
	Place *Place `json:"place,omitempty"`
	Privacy string `json:"privacy,omitempty"`
	Type string `json:"type,omitempty"`
	UpdatedTime time.Time `json:"updated_time,omitempty"`
	VideoCount uint `json:"video_count,omitempty"`
}

// AnalyticsConfig represents the Facebook AnalyticsConfig object
type AnalyticsConfig struct {
	AnalyticsAccessForAuthorizedAdAccount bool `json:"analytics_access_for_authorized_ad_account,omitempty"`
	BreakdownsConfig []map[string]interface{} `json:"breakdowns_config,omitempty"`
	BuiltinFieldsConfig []map[string]interface{} `json:"builtin_fields_config,omitempty"`
	DeprecatedEventsConfig []map[string]interface{} `json:"deprecated_events_config,omitempty"`
	EventsConfig []map[string]interface{} `json:"events_config,omitempty"`
	IOSPurchaseValidationSecret string `json:"ios_purchase_validation_secret,omitempty"`
	IsAnyRoleAbleToSeeRestrictedInsights bool `json:"is_any_role_able_to_see_restricted_insights,omitempty"`
	IsImplicitPurchaseLoggingOnAndroidSupported bool `json:"is_implicit_purchase_logging_on_android_supported,omitempty"`
	IsImplicitPurchaseLoggingOnIOSSupported bool `json:"is_implicit_purchase_logging_on_ios_supported,omitempty"`
	IsTrackIOSAppUninstallSupported bool `json:"is_track_ios_app_uninstall_supported,omitempty"`
	JourneyBackfillStatus string `json:"journey_backfill_status,omitempty"`
	JourneyConversionEvents []string `json:"journey_conversion_events,omitempty"`
	JourneyEnabled bool `json:"journey_enabled,omitempty"`
	JourneyImpactingChangeTime time.Time `json:"journey_impacting_change_time,omitempty"`
	JourneyTimeout string `json:"journey_timeout,omitempty"`
	LatestSdkVersions map[string]string `json:"latest_sdk_versions,omitempty"`
	LogAndroidImplicitPurchaseEvents bool `json:"log_android_implicit_purchase_events,omitempty"`
	LogAutomaticAnalyticsEvents bool `json:"log_automatic_analytics_events,omitempty"`
	LogImplicitPurchaseEvents bool `json:"log_implicit_purchase_events,omitempty"`
	PrevJourneyConversionEvents []string `json:"prev_journey_conversion_events,omitempty"`
	QueryApproximationAccuracyLevel string `json:"query_approximation_accuracy_level,omitempty"`
	QueryCurrency string `json:"query_currency,omitempty"`
	QueryTimezone string `json:"query_timezone,omitempty"`
	RecentEventsUpdateTime time.Time `json:"recent_events_update_time,omitempty"`
	SessionTimeoutInterval uint `json:"session_timeout_interval,omitempty"`
	TrackIOSAppUninstall bool `json:"track_ios_app_uninstall,omitempty"`
}

// AnalyticsEntityUserConfig represents the Facebook AnalyticsEntityUserConfig object
type AnalyticsEntityUserConfig struct {
	DismissedNotices []string `json:"dismissed_notices,omitempty"`
}

// AnalyticsFunnelQueryResult represents the Facebook AnalyticsFunnelQueryResult object
type AnalyticsFunnelQueryResult struct {
	QueryID string `json:"query_id,omitempty"`
	Status string `json:"status,omitempty"`
}

// AnalyticsPlatformMetricsConfig represents the Facebook AnalyticsPlatformMetricsConfig object
type AnalyticsPlatformMetricsConfig struct {
	HasA2u bool `json:"has_a2u,omitempty"`
	HasAPICalls bool `json:"has_api_calls,omitempty"`
	HasAppInvites bool `json:"has_app_invites,omitempty"`
	HasFbLogin bool `json:"has_fb_login,omitempty"`
	HasGameRequests bool `json:"has_game_requests,omitempty"`
	HasPayments bool `json:"has_payments,omitempty"`
	HasReferrals bool `json:"has_referrals,omitempty"`
	HasStories bool `json:"has_stories,omitempty"`
	HasStructuredRequests bool `json:"has_structured_requests,omitempty"`
}

// AnalyticsQueryResult represents the Facebook AnalyticsQueryResult object
type AnalyticsQueryResult struct {
	QueryID string `json:"query_id,omitempty"`
	Status string `json:"status,omitempty"`
}

// AnalyticsSegment represents the Facebook AnalyticsSegment object
type AnalyticsSegment struct {
	CustomAudienceIneligiblityReasons []string `json:"custom_audience_ineligiblity_reasons,omitempty"`
	Description string `json:"description,omitempty"`
	EstimatedCustomAudienceSize uint `json:"estimated_custom_audience_size,omitempty"`
	EventInfoRules []map[string]interface{} `json:"event_info_rules,omitempty"`
	EventRules []map[string]interface{} `json:"event_rules,omitempty"`
	FilterSet string `json:"filter_set,omitempty"`
	HasDemographicRules bool `json:"has_demographic_rules,omitempty"`
	ID string `json:"id,omitempty"`
	IsAllUser bool `json:"is_all_user,omitempty"`
	IsEligibleForPushCampaign bool `json:"is_eligible_for_push_campaign,omitempty"`
	IsInternal bool `json:"is_internal,omitempty"`
	Name string `json:"name,omitempty"`
	PercentileRules []map[string]interface{} `json:"percentile_rules,omitempty"`
	TimeLastSeen uint `json:"time_last_seen,omitempty"`
	TimeLastUpdated uint `json:"time_last_updated,omitempty"`
	UserPropertyRules []map[string]interface{} `json:"user_property_rules,omitempty"`
	WebParamRules []map[string]interface{} `json:"web_param_rules,omitempty"`
}

// AnalyticsUserConfig represents the Facebook AnalyticsUserConfig object
type AnalyticsUserConfig struct {
	DemoAppNuxConfig map[string]interface{} `json:"demo_app_nux_config,omitempty"`
	Flags []map[string]string `json:"flags,omitempty"`
	ID string `json:"id,omitempty"`
}

// AndroidAppLink represents the Facebook AndroidAppLink object
type AndroidAppLink struct {
	AppName string `json:"app_name,omitempty"`
	Class string `json:"class,omitempty"`
	Package string `json:"package,omitempty"`
	URL string `json:"url,omitempty"`
}

// ApacMonSellerStatusAPIContainer represents the Facebook ApacMonSellerStatusAPIContainer object
type ApacMonSellerStatusAPIContainer struct {
}

// AppEventConfig represents the Facebook AppEventConfig object
type AppEventConfig struct {
	BreakdownsConfig []map[string]interface{} `json:"breakdowns_config,omitempty"`
	BuiltinFieldsConfig []map[string]interface{} `json:"builtin_fields_config,omitempty"`
	DeprecatedEventsConfig []map[string]interface{} `json:"deprecated_events_config,omitempty"`
	EventsConfig []map[string]interface{} `json:"events_config,omitempty"`
	ID string `json:"id,omitempty"`
	IOSPurchaseValidationSecret string `json:"ios_purchase_validation_secret,omitempty"`
	IsAnyRoleAbleToSeeRestrictedInsights bool `json:"is_any_role_able_to_see_restricted_insights,omitempty"`
	IsImplicitPurchaseLoggingOnAndroidSupported bool `json:"is_implicit_purchase_logging_on_android_supported,omitempty"`
	IsImplicitPurchaseLoggingOnIOSSupported bool `json:"is_implicit_purchase_logging_on_ios_supported,omitempty"`
	IsTrackAndroidAppUninstallSupported bool `json:"is_track_android_app_uninstall_supported,omitempty"`
	IsTrackIOSAppUninstallSupported bool `json:"is_track_ios_app_uninstall_supported,omitempty"`
	JourneyBackfillStatus string `json:"journey_backfill_status,omitempty"`
	JourneyConversionEvents []string `json:"journey_conversion_events,omitempty"`
	JourneyEnabled bool `json:"journey_enabled,omitempty"`
	JourneyTimeout string `json:"journey_timeout,omitempty"`
	LatestSdkVersions map[string]string `json:"latest_sdk_versions,omitempty"`
	LogAndroidImplicitPurchaseEvents bool `json:"log_android_implicit_purchase_events,omitempty"`
	LogAutomaticAnalyticsEvents bool `json:"log_automatic_analytics_events,omitempty"`
	LogImplicitPurchaseEvents bool `json:"log_implicit_purchase_events,omitempty"`
	PrevJourneyConversionEvents []string `json:"prev_journey_conversion_events,omitempty"`
	QueryApproximationAccuracyLevel string `json:"query_approximation_accuracy_level,omitempty"`
	QueryCurrency string `json:"query_currency,omitempty"`
	QueryTimezone string `json:"query_timezone,omitempty"`
	RecentEventsUpdateTime time.Time `json:"recent_events_update_time,omitempty"`
	SessionTimeoutInterval uint `json:"session_timeout_interval,omitempty"`
	TrackAndroidAppUninstall bool `json:"track_android_app_uninstall,omitempty"`
	TrackIOSAppUninstall bool `json:"track_ios_app_uninstall,omitempty"`
}

// AppLinks represents the Facebook AppLinks object
type AppLinks struct {
	Android []*AndroidAppLink `json:"android,omitempty"`
	ID string `json:"id,omitempty"`
	IOS []*IosAppLink `json:"ios,omitempty"`
	Ipad []*IosAppLink `json:"ipad,omitempty"`
	Iphone []*IosAppLink `json:"iphone,omitempty"`
	Web *WebAppLink `json:"web,omitempty"`
	Windows []*WindowsAppLink `json:"windows,omitempty"`
	WindowsPhone []*WindowsPhoneAppLink `json:"windows_phone,omitempty"`
	WindowsUniversal []*WindowsAppLink `json:"windows_universal,omitempty"`
}

// AppOptimizedCustomEvents represents the Facebook AppOptimizedCustomEvents object
type AppOptimizedCustomEvents struct {
	AppID int `json:"app_id,omitempty"`
	AppName string `json:"app_name,omitempty"`
	EventNames []string `json:"event_names,omitempty"`
}

// AppPublisher represents the Facebook AppPublisher object
type AppPublisher struct {
	ContentID string `json:"content_id,omitempty"`
	IconURL string `json:"icon_url,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	Platform string `json:"platform,omitempty"`
	StoreName string `json:"store_name,omitempty"`
	StoreURL string `json:"store_url,omitempty"`
}

// AppRequest represents the Facebook AppRequest object
type AppRequest struct {
	ActionType string `json:"action_type,omitempty"`
	Application *Application `json:"application,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	Data string `json:"data,omitempty"`
	From map[string]interface{} `json:"from,omitempty"`
	ID string `json:"id,omitempty"`
	Message string `json:"message,omitempty"`
	Object map[string]interface{} `json:"object,omitempty"`
	To map[string]interface{} `json:"to,omitempty"`
}

// AppRequestFormerRecipient represents the Facebook AppRequestFormerRecipient object
type AppRequestFormerRecipient struct {
	ID string `json:"id,omitempty"`
	RecipientID string `json:"recipient_id,omitempty"`
}

// Application represents the Facebook Application object
type Application struct {
	AamRules string `json:"aam_rules,omitempty"`
	AnAdSpaceLimit uint `json:"an_ad_space_limit,omitempty"`
	AnPlatforms []string `json:"an_platforms,omitempty"`
	AndroidKeyHash []string `json:"android_key_hash,omitempty"`
	AndroidSdkErrorCategories []map[string]interface{} `json:"android_sdk_error_categories,omitempty"`
	AppDomains []string `json:"app_domains,omitempty"`
	AppEventsConfig map[string]interface{} `json:"app_events_config,omitempty"`
	AppEventsFeatureBitmask uint `json:"app_events_feature_bitmask,omitempty"`
	AppEventsSessionTimeout uint `json:"app_events_session_timeout,omitempty"`
	AppInstallTracked bool `json:"app_install_tracked,omitempty"`
	AppName string `json:"app_name,omitempty"`
	AppSignalsBindingIOS []map[string]interface{} `json:"app_signals_binding_ios,omitempty"`
	AppType uint `json:"app_type,omitempty"`
	AuthDialogDataHelpURL string `json:"auth_dialog_data_help_url,omitempty"`
	AuthDialogHeadline string `json:"auth_dialog_headline,omitempty"`
	AuthDialogPermsExplanation string `json:"auth_dialog_perms_explanation,omitempty"`
	AuthReferralDefaultActivityPrivacy string `json:"auth_referral_default_activity_privacy,omitempty"`
	AuthReferralEnabled uint `json:"auth_referral_enabled,omitempty"`
	AuthReferralExtendedPerms []string `json:"auth_referral_extended_perms,omitempty"`
	AuthReferralFriendPerms []string `json:"auth_referral_friend_perms,omitempty"`
	AuthReferralResponseType string `json:"auth_referral_response_type,omitempty"`
	AuthReferralUserPerms []string `json:"auth_referral_user_perms,omitempty"`
	AutoEventMappingAndroid []map[string]interface{} `json:"auto_event_mapping_android,omitempty"`
	AutoEventMappingIOS []map[string]interface{} `json:"auto_event_mapping_ios,omitempty"`
	AutoEventSetupEnabled bool `json:"auto_event_setup_enabled,omitempty"`
	AutoLogAppEventsDefault bool `json:"auto_log_app_events_default,omitempty"`
	AutoLogAppEventsEnabled bool `json:"auto_log_app_events_enabled,omitempty"`
	Business *Business `json:"business,omitempty"`
	CanvasFluidHeight bool `json:"canvas_fluid_height,omitempty"`
	CanvasFluidWidth uint `json:"canvas_fluid_width,omitempty"`
	CanvasURL string `json:"canvas_url,omitempty"`
	Category string `json:"category,omitempty"`
	ClientConfig map[string]interface{} `json:"client_config,omitempty"`
	Company string `json:"company,omitempty"`
	ConfiguredIOSSso bool `json:"configured_ios_sso,omitempty"`
	ContactEmail string `json:"contact_email,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	CreatorUid string `json:"creator_uid,omitempty"`
	DailyActiveUsers string `json:"daily_active_users,omitempty"`
	DailyActiveUsersRank uint `json:"daily_active_users_rank,omitempty"`
	DeauthCallbackURL string `json:"deauth_callback_url,omitempty"`
	DefaultShareMode string `json:"default_share_mode,omitempty"`
	Description string `json:"description,omitempty"`
	EnigmaConfig map[string]interface{} `json:"enigma_config,omitempty"`
	FinancialID string `json:"financial_id,omitempty"`
	Gdpv4ChromeCustomTabsEnabled bool `json:"gdpv4_chrome_custom_tabs_enabled,omitempty"`
	Gdpv4Enabled bool `json:"gdpv4_enabled,omitempty"`
	Gdpv4NuxContent string `json:"gdpv4_nux_content,omitempty"`
	Gdpv4NuxEnabled bool `json:"gdpv4_nux_enabled,omitempty"`
	HasMessengerProduct bool `json:"has_messenger_product,omitempty"`
	HostingURL string `json:"hosting_url,omitempty"`
	IconURL string `json:"icon_url,omitempty"`
	ID string `json:"id,omitempty"`
	IOSBundleID []string `json:"ios_bundle_id,omitempty"`
	IOSSdkDialogFlows map[string]interface{} `json:"ios_sdk_dialog_flows,omitempty"`
	IOSSdkErrorCategories []map[string]interface{} `json:"ios_sdk_error_categories,omitempty"`
	IOSSfvcAttr bool `json:"ios_sfvc_attr,omitempty"`
	IOSSupportsNativeProxyAuthFlow bool `json:"ios_supports_native_proxy_auth_flow,omitempty"`
	IOSSupportsSystemAuth bool `json:"ios_supports_system_auth,omitempty"`
	IpadAppStoreID string `json:"ipad_app_store_id,omitempty"`
	IphoneAppStoreID string `json:"iphone_app_store_id,omitempty"`
	LatestSdkVersion map[string]interface{} `json:"latest_sdk_version,omitempty"`
	Link string `json:"link,omitempty"`
	LoggingToken string `json:"logging_token,omitempty"`
	LogoURL string `json:"logo_url,omitempty"`
	Migrations map[string]bool `json:"migrations,omitempty"`
	MobileProfileSectionURL string `json:"mobile_profile_section_url,omitempty"`
	MobileWebURL string `json:"mobile_web_url,omitempty"`
	MonthlyActiveUsers string `json:"monthly_active_users,omitempty"`
	MonthlyActiveUsersRank uint `json:"monthly_active_users_rank,omitempty"`
	Name string `json:"name,omitempty"`
	Namespace string `json:"namespace,omitempty"`
	ObjectStoreURLs map[string]interface{} `json:"object_store_urls,omitempty"`
	OwnerBusiness *Business `json:"owner_business,omitempty"`
	PageTabDefaultName string `json:"page_tab_default_name,omitempty"`
	PageTabURL string `json:"page_tab_url,omitempty"`
	PhotoURL string `json:"photo_url,omitempty"`
	PrivacyPolicyURL string `json:"privacy_policy_url,omitempty"`
	ProfileSectionURL string `json:"profile_section_url,omitempty"`
	PropertyID string `json:"property_id,omitempty"`
	ProtectedModeRules map[string]interface{} `json:"protected_mode_rules,omitempty"`
	RealTimeModeDevices []string `json:"real_time_mode_devices,omitempty"`
	Restrictions map[string]interface{} `json:"restrictions,omitempty"`
	RestrictiveDataFilterParams string `json:"restrictive_data_filter_params,omitempty"`
	RestrictiveDataFilterRules string `json:"restrictive_data_filter_rules,omitempty"`
	SdkUpdateMessage string `json:"sdk_update_message,omitempty"`
	SeamlessLogin int `json:"seamless_login,omitempty"`
	SecureCanvasURL string `json:"secure_canvas_url,omitempty"`
	SecurePageTabURL string `json:"secure_page_tab_url,omitempty"`
	ServerIpWhitelist string `json:"server_ip_whitelist,omitempty"`
	SmartLoginBookmarkIconURL string `json:"smart_login_bookmark_icon_url,omitempty"`
	SmartLoginMenuIconURL string `json:"smart_login_menu_icon_url,omitempty"`
	SocialDiscovery uint `json:"social_discovery,omitempty"`
	Subcategory string `json:"subcategory,omitempty"`
	SuggestedEventsSetting string `json:"suggested_events_setting,omitempty"`
	SupportedPlatforms []ApplicationSupportedPlatforms `json:"supported_platforms,omitempty"`
	SupportsApprequestsFastAppSwitch map[string]interface{} `json:"supports_apprequests_fast_app_switch,omitempty"`
	SupportsAttribution bool `json:"supports_attribution,omitempty"`
	SupportsImplicitSdkLogging bool `json:"supports_implicit_sdk_logging,omitempty"`
	SuppressNativeIOSGdp bool `json:"suppress_native_ios_gdp,omitempty"`
	TermsOfServiceURL string `json:"terms_of_service_url,omitempty"`
	URLSchemeSuffix string `json:"url_scheme_suffix,omitempty"`
	UserSupportEmail string `json:"user_support_email,omitempty"`
	UserSupportURL string `json:"user_support_url,omitempty"`
	WebsiteURL string `json:"website_url,omitempty"`
	WeeklyActiveUsers string `json:"weekly_active_users,omitempty"`
}

// ArAdsDataContainer represents the Facebook ArAdsDataContainer object
type ArAdsDataContainer struct {
	CameraFacingOverride string `json:"camera_facing_override,omitempty"`
	CreationTime time.Time `json:"creation_time,omitempty"`
	Effect []map[string]interface{} `json:"effect,omitempty"`
	ID string `json:"id,omitempty"`
	IsPublished bool `json:"is_published,omitempty"`
	LastModifiedTime time.Time `json:"last_modified_time,omitempty"`
	Name string `json:"name,omitempty"`
}

// AssignedUser represents the Facebook AssignedUser object
type AssignedUser struct {
	Business *Business `json:"business,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	UserType string `json:"user_type,omitempty"`
}

// AsyncRequest represents the Facebook AsyncRequest object
type AsyncRequest struct {
	ID int `json:"id,omitempty"`
	Result string `json:"result,omitempty"`
	Status int `json:"status,omitempty"`
	Type int `json:"type,omitempty"`
}

// AsyncSession represents the Facebook AsyncSession object
type AsyncSession struct {
	App *Application `json:"app,omitempty"`
	CompleteTime time.Time `json:"complete_time,omitempty"`
	ErrorCode int `json:"error_code,omitempty"`
	Exception string `json:"exception,omitempty"`
	ID string `json:"id,omitempty"`
	Method string `json:"method,omitempty"`
	Name string `json:"name,omitempty"`
	Page *Page `json:"page,omitempty"`
	PercentCompleted int `json:"percent_completed,omitempty"`
	PlatformVersion string `json:"platform_version,omitempty"`
	Result string `json:"result,omitempty"`
	StartTime time.Time `json:"start_time,omitempty"`
	Status string `json:"status,omitempty"`
	Uri string `json:"uri,omitempty"`
	User *User `json:"user,omitempty"`
}

// AttributionSpec represents the Facebook AttributionSpec object
type AttributionSpec struct {
	EventType string `json:"event_type,omitempty"`
	WindowDays int `json:"window_days,omitempty"`
}

// AudienceFunnel represents the Facebook AudienceFunnel object
type AudienceFunnel struct {
	AudienceTypeParamName string `json:"audience_type_param_name,omitempty"`
	AudienceTypeParamTags []map[string]string `json:"audience_type_param_tags,omitempty"`
	CustomAudienceGroupsInfo []map[string][]string `json:"custom_audience_groups_info,omitempty"`
}

// AudienceOverlap represents the Facebook AudienceOverlap object
type AudienceOverlap struct {
	EstimatedReach int `json:"estimated_reach,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	Overlap int `json:"overlap,omitempty"`
}

// AudiencePermission represents the Facebook AudiencePermission object
type AudiencePermission struct {
	Audience *CustomAudience `json:"audience,omitempty"`
	ShareAccountID string `json:"share_account_id,omitempty"`
	ShareAccountName string `json:"share_account_name,omitempty"`
}

// AudiencePermissionForActions represents the Facebook AudiencePermissionForActions object
type AudiencePermissionForActions struct {
	CanEdit bool `json:"can_edit,omitempty"`
	CanSeeInsight bool `json:"can_see_insight,omitempty"`
	CanShare bool `json:"can_share,omitempty"`
	SubtypeSupportsLookalike bool `json:"subtype_supports_lookalike,omitempty"`
	SupportsRecipientLookalike bool `json:"supports_recipient_lookalike,omitempty"`
}

// AudienceSharingAccountValid represents the Facebook AudienceSharingAccountValid object
type AudienceSharingAccountValid struct {
	AccountID string `json:"account_id,omitempty"`
	AccountType string `json:"account_type,omitempty"`
	BusinessID string `json:"business_id,omitempty"`
	BusinessName string `json:"business_name,omitempty"`
	CanAdAccountUseLookalikeContainer bool `json:"can_ad_account_use_lookalike_container,omitempty"`
	SharingAgreementStatus int `json:"sharing_agreement_status,omitempty"`
}

// AudienceSharingRecipientAccounts represents the Facebook AudienceSharingRecipientAccounts object
type AudienceSharingRecipientAccounts struct {
	AccountID string `json:"account_id,omitempty"`
	AccountName string `json:"account_name,omitempty"`
	AccountType string `json:"account_type,omitempty"`
	BusinessID string `json:"business_id,omitempty"`
	BusinessName string `json:"business_name,omitempty"`
	CanAdAccountUseLookalikeContainer bool `json:"can_ad_account_use_lookalike_container,omitempty"`
	SharingAgreementStatus int `json:"sharing_agreement_status,omitempty"`
}

// AudioAsset represents the Facebook AudioAsset object
type AudioAsset struct {
	AllDdexFeaturedArtists string `json:"all_ddex_featured_artists,omitempty"`
	AllDdexMainArtists string `json:"all_ddex_main_artists,omitempty"`
	AudioClusterID string `json:"audio_cluster_id,omitempty"`
	CoverImageSource string `json:"cover_image_source,omitempty"`
	DisplayArtist string `json:"display_artist,omitempty"`
	DownloadHdURL string `json:"download_hd_url,omitempty"`
	DownloadSdURL string `json:"download_sd_url,omitempty"`
	DurationInMs int `json:"duration_in_ms,omitempty"`
	FreeformGenre string `json:"freeform_genre,omitempty"`
	Grid string `json:"grid,omitempty"`
	ID string `json:"id,omitempty"`
	IsTest bool `json:"is_test,omitempty"`
	OriginalReleaseDate time.Time `json:"original_release_date,omitempty"`
	Owner *Page `json:"owner,omitempty"`
	ParentalWarningType string `json:"parental_warning_type,omitempty"`
	Subtitle string `json:"subtitle,omitempty"`
	Title string `json:"title,omitempty"`
	TitleWithFeaturedArtists string `json:"title_with_featured_artists,omitempty"`
	Upc string `json:"upc,omitempty"`
}

// AudioCopyright represents the Facebook AudioCopyright object
type AudioCopyright struct {
	CreationTime time.Time `json:"creation_time,omitempty"`
	DisplayedMatchesCount int `json:"displayed_matches_count,omitempty"`
	ID string `json:"id,omitempty"`
	InConflict bool `json:"in_conflict,omitempty"`
	Isrc string `json:"isrc,omitempty"`
	MatchRule *VideoCopyrightRule `json:"match_rule,omitempty"`
	OwnershipCountries []string `json:"ownership_countries,omitempty"`
	OwnershipDetails []map[string]map[string]interface{} `json:"ownership_details,omitempty"`
	ReferenceFileStatus string `json:"reference_file_status,omitempty"`
	RidgeMonitoringStatus string `json:"ridge_monitoring_status,omitempty"`
	Tags []string `json:"tags,omitempty"`
	UpdateTime time.Time `json:"update_time,omitempty"`
	WhitelistedFbUsers []map[string]interface{} `json:"whitelisted_fb_users,omitempty"`
	WhitelistedIgUsers []string `json:"whitelisted_ig_users,omitempty"`
}

// AudioIsrc represents the Facebook AudioIsrc object
type AudioIsrc struct {
	AllKgFeaturedArtists string `json:"all_kg_featured_artists,omitempty"`
	AllKgMainArtists string `json:"all_kg_main_artists,omitempty"`
	ArtistProfilePictureURL string `json:"artist_profile_picture_url,omitempty"`
	ID string `json:"id,omitempty"`
	Isrc string `json:"isrc,omitempty"`
	PublishingRightsData map[string]interface{} `json:"publishing_rights_data,omitempty"`
	TopSearchableArtistID string `json:"top_searchable_artist_id,omitempty"`
	TopSearchableArtistName string `json:"top_searchable_artist_name,omitempty"`
	TopSearchableArtistProfilePicURL string `json:"top_searchable_artist_profile_pic_url,omitempty"`
}

// AudioRelease represents the Facebook AudioRelease object
type AudioRelease struct {
	AlbumTitle string `json:"album_title,omitempty"`
	AssetAvailabilityStatus []map[int]map[string]interface{} `json:"asset_availability_status,omitempty"`
	AudioAvailabilityStatus string `json:"audio_availability_status,omitempty"`
	AudioReleaseImageUri string `json:"audio_release_image_uri,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	DisplayedArtist string `json:"displayed_artist,omitempty"`
	Ean string `json:"ean,omitempty"`
	Genre string `json:"genre,omitempty"`
	Grid string `json:"grid,omitempty"`
	ID string `json:"id,omitempty"`
	Isrc string `json:"isrc,omitempty"`
	LabelName string `json:"label_name,omitempty"`
	OriginalReleaseDate time.Time `json:"original_release_date,omitempty"`
	ParentalWarningType string `json:"parental_warning_type,omitempty"`
	ProprietaryID string `json:"proprietary_id,omitempty"`
	Upc string `json:"upc,omitempty"`
}

// AudioSubLabel represents the Facebook AudioSubLabel object
type AudioSubLabel struct {
	ExpirationTimestamp time.Time `json:"expiration_timestamp,omitempty"`
	FlaggedTimestamp time.Time `json:"flagged_timestamp,omitempty"`
	ID string `json:"id,omitempty"`
	LabelName string `json:"label_name,omitempty"`
	LastUpdateTimestamp time.Time `json:"last_update_timestamp,omitempty"`
	NumAudioTracks int `json:"num_audio_tracks,omitempty"`
	State string `json:"state,omitempty"`
}

// AudioVisualReferenceMatch represents the Facebook AudioVisualReferenceMatch object
type AudioVisualReferenceMatch struct {
	AudioConflictingSegments []map[string]interface{} `json:"audio_conflicting_segments,omitempty"`
	AudioCurrentConflictResolvedSegments []map[string]interface{} `json:"audio_current_conflict_resolved_segments,omitempty"`
	AudioSegmentResolutionHistory []map[string]interface{} `json:"audio_segment_resolution_history,omitempty"`
	ConflictStatus string `json:"conflict_status,omitempty"`
	ConflictType string `json:"conflict_type,omitempty"`
	ConflictingCountries []string `json:"conflicting_countries,omitempty"`
	CountryResolutionHistory []map[string][]map[string]interface{} `json:"country_resolution_history,omitempty"`
	CreationTime time.Time `json:"creation_time,omitempty"`
	CurrentConflictResolvedCountries []map[string]map[string]interface{} `json:"current_conflict_resolved_countries,omitempty"`
	DisplayedMatchState string `json:"displayed_match_state,omitempty"`
	DisputeFormDataEntriesWithTranslations []map[string]interface{} `json:"dispute_form_data_entries_with_translations,omitempty"`
	ExpirationTime time.Time `json:"expiration_time,omitempty"`
	ID string `json:"id,omitempty"`
	IsDisputable bool `json:"is_disputable,omitempty"`
	MatchState string `json:"match_state,omitempty"`
	MatchedOverlapPercentage float64 `json:"matched_overlap_percentage,omitempty"`
	MatchedOwnerMatchDurationInSec float64 `json:"matched_owner_match_duration_in_sec,omitempty"`
	MatchedReferenceOwner *Profile `json:"matched_reference_owner,omitempty"`
	ModificationHistory []map[string]interface{} `json:"modification_history,omitempty"`
	NumMatchesOnMatchedSide uint `json:"num_matches_on_matched_side,omitempty"`
	NumMatchesOnRefSide uint `json:"num_matches_on_ref_side,omitempty"`
	RefOwnerMatchDurationInSec float64 `json:"ref_owner_match_duration_in_sec,omitempty"`
	ReferenceOverlapPercentage float64 `json:"reference_overlap_percentage,omitempty"`
	ReferenceOwner *Profile `json:"reference_owner,omitempty"`
	RejectionFormDataEntriesWithTranslations []map[string]interface{} `json:"rejection_form_data_entries_with_translations,omitempty"`
	ResolutionDetails string `json:"resolution_details,omitempty"`
	ResolutionReason string `json:"resolution_reason,omitempty"`
	UpdateTime time.Time `json:"update_time,omitempty"`
	ViewsOnMatchedSide uint `json:"views_on_matched_side,omitempty"`
	VisualConflictingSegments []map[string]interface{} `json:"visual_conflicting_segments,omitempty"`
	VisualCurrentConflictResolvedSegments []map[string]interface{} `json:"visual_current_conflict_resolved_segments,omitempty"`
	VisualSegmentResolutionHistory []map[string]interface{} `json:"visual_segment_resolution_history,omitempty"`
}

// AuthLink represents the Facebook AuthLink object
type AuthLink struct {
	Link string `json:"link,omitempty"`
}

// AutomotiveModel represents the Facebook AutomotiveModel object
type AutomotiveModel struct {
	Applinks *CatalogItemAppLinks `json:"applinks,omitempty"`
	AutomotiveModelID string `json:"automotive_model_id,omitempty"`
	Availability string `json:"availability,omitempty"`
	BodyStyle string `json:"body_style,omitempty"`
	CategorySpecificFields *CatalogSubVerticalList `json:"category_specific_fields,omitempty"`
	Currency string `json:"currency,omitempty"`
	CustomLabel0 string `json:"custom_label_0,omitempty"`
	CustomLabel1 string `json:"custom_label_1,omitempty"`
	CustomLabel2 string `json:"custom_label_2,omitempty"`
	CustomLabel3 string `json:"custom_label_3,omitempty"`
	CustomLabel4 string `json:"custom_label_4,omitempty"`
	CustomNumber0 uint `json:"custom_number_0,omitempty"`
	CustomNumber1 uint `json:"custom_number_1,omitempty"`
	CustomNumber2 uint `json:"custom_number_2,omitempty"`
	CustomNumber3 uint `json:"custom_number_3,omitempty"`
	CustomNumber4 uint `json:"custom_number_4,omitempty"`
	Description string `json:"description,omitempty"`
	Drivetrain string `json:"drivetrain,omitempty"`
	ExteriorColor string `json:"exterior_color,omitempty"`
	FinanceDescription string `json:"finance_description,omitempty"`
	FinanceType string `json:"finance_type,omitempty"`
	FuelType string `json:"fuel_type,omitempty"`
	Generation string `json:"generation,omitempty"`
	ID string `json:"id,omitempty"`
	ImageFetchStatus AutomotivemodelImageFetchStatus `json:"image_fetch_status,omitempty"`
	Images []string `json:"images,omitempty"`
	InteriorColor string `json:"interior_color,omitempty"`
	InteriorUpholstery string `json:"interior_upholstery,omitempty"`
	Make string `json:"make,omitempty"`
	Model string `json:"model,omitempty"`
	Price string `json:"price,omitempty"`
	SanitizedImages []string `json:"sanitized_images,omitempty"`
	Title string `json:"title,omitempty"`
	Transmission string `json:"transmission,omitempty"`
	Trim string `json:"trim,omitempty"`
	UnitPrice map[string]interface{} `json:"unit_price,omitempty"`
	URL string `json:"url,omitempty"`
	Visibility AutomotivemodelVisibility `json:"visibility,omitempty"`
	Year int `json:"year,omitempty"`
}

// Avatar represents the Facebook Avatar object
type Avatar struct {
	ID string `json:"id,omitempty"`
}

// AvatarProfilePicture represents the Facebook AvatarProfilePicture object
type AvatarProfilePicture struct {
	ID string `json:"id,omitempty"`
	URL string `json:"url,omitempty"`
}

// BAPIDomain represents the Facebook BAPIDomain object
type BAPIDomain struct {
	Domain string `json:"domain,omitempty"`
	InCoolDownUntil int `json:"in_cool_down_until,omitempty"`
	IsEligibleForVo bool `json:"is_eligible_for_vo,omitempty"`
	IsInCoolDown bool `json:"is_in_cool_down,omitempty"`
}

// BCPCampaign represents the Facebook BCPCampaign object
type BCPCampaign struct {
	AdsPermissionRequired bool `json:"ads_permission_required,omitempty"`
	ApplicationDeadline string `json:"application_deadline,omitempty"`
	CampaignGoal string `json:"campaign_goal,omitempty"`
	CampaignGoalOther string `json:"campaign_goal_other,omitempty"`
	ContentDeliveryDeadline string `json:"content_delivery_deadline,omitempty"`
	ContentDeliveryStartDate string `json:"content_delivery_start_date,omitempty"`
	ContentRequirements []map[string]uint `json:"content_requirements,omitempty"`
	ContentRequirementsDescription string `json:"content_requirements_description,omitempty"`
	Currency string `json:"currency,omitempty"`
	DealNegotiationType string `json:"deal_negotiation_type,omitempty"`
	Description string `json:"description,omitempty"`
	HasFreeProduct bool `json:"has_free_product,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	PaymentAmountForAds uint `json:"payment_amount_for_ads,omitempty"`
	PaymentAmountForContent uint `json:"payment_amount_for_content,omitempty"`
	PaymentDescription string `json:"payment_description,omitempty"`
}

// BidSchedule represents the Facebook BidSchedule object
type BidSchedule struct {
	AdObjectID string `json:"ad_object_id,omitempty"`
	BidRecurrenceType string `json:"bid_recurrence_type,omitempty"`
	BidTimezone string `json:"bid_timezone,omitempty"`
	BidValue int `json:"bid_value,omitempty"`
	ID string `json:"id,omitempty"`
	Status string `json:"status,omitempty"`
	TimeEnd time.Time `json:"time_end,omitempty"`
	TimeStart time.Time `json:"time_start,omitempty"`
}

// BizInboxOffsiteEmailAccount represents the Facebook BizInboxOffsiteEmailAccount object
type BizInboxOffsiteEmailAccount struct {
	EmailAddress string `json:"email_address,omitempty"`
	ID string `json:"id,omitempty"`
}

// BlindPig represents the Facebook BlindPig object
type BlindPig struct {
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
}

// BlockedUserInfo represents the Facebook BlockedUserInfo object
type BlockedUserInfo struct {
	BlockTime time.Time `json:"block_time,omitempty"`
	BlockType string `json:"block_type,omitempty"`
	Fbid string `json:"fbid,omitempty"`
	Name string `json:"name,omitempty"`
	Username string `json:"username,omitempty"`
}

// BrandRequest represents the Facebook BrandRequest object
type BrandRequest struct {
	AdCountries []string `json:"ad_countries,omitempty"`
	AdditionalContacts []string `json:"additional_contacts,omitempty"`
	ApprovalLevel uint `json:"approval_level,omitempty"`
	Cells []map[string]interface{} `json:"cells,omitempty"`
	Countries []string `json:"countries,omitempty"`
	DenyReason string `json:"deny_reason,omitempty"`
	EndTime time.Time `json:"end_time,omitempty"`
	EstimatedReach uint `json:"estimated_reach,omitempty"`
	ID string `json:"id,omitempty"`
	IsMulticell bool `json:"is_multicell,omitempty"`
	Locale string `json:"locale,omitempty"`
	MaxAge uint `json:"max_age,omitempty"`
	MinAge uint `json:"min_age,omitempty"`
	Questions []map[string]interface{} `json:"questions,omitempty"`
	Region string `json:"region,omitempty"`
	RequestStatus string `json:"request_status,omitempty"`
	ReviewDate time.Time `json:"review_date,omitempty"`
	StartTime time.Time `json:"start_time,omitempty"`
	Status string `json:"status,omitempty"`
	SubmitDate time.Time `json:"submit_date,omitempty"`
	TotalBudget uint `json:"total_budget,omitempty"`
}

// BrandSafetyBlockListUsage represents the Facebook BrandSafetyBlockListUsage object
type BrandSafetyBlockListUsage struct {
	CurrentUsage int `json:"current_usage,omitempty"`
	NewUsage int `json:"new_usage,omitempty"`
	Platform string `json:"platform,omitempty"`
	Position string `json:"position,omitempty"`
	Threshold int `json:"threshold,omitempty"`
}

// BrandSafetyCampaignConfig represents the Facebook BrandSafetyCampaignConfig object
type BrandSafetyCampaignConfig struct {
	CommentModerationFilter string `json:"comment_moderation_filter,omitempty"`
}

// BrandSafetyDownloadable represents the Facebook BrandSafetyDownloadable object
type BrandSafetyDownloadable struct {
	AccountContextID string `json:"account_context_id,omitempty"`
	AsyncJobPercentComplete int `json:"async_job_percent_complete,omitempty"`
	AsyncJobStatus string `json:"async_job_status,omitempty"`
	FileName string `json:"file_name,omitempty"`
	ID string `json:"id,omitempty"`
	RequestSurface string `json:"request_surface,omitempty"`
	URL string `json:"url,omitempty"`
}

// BrandedContentAdError represents the Facebook BrandedContentAdError object
type BrandedContentAdError struct {
	BlameFieldSpec []string `json:"blame_field_spec,omitempty"`
	ErrorCode int `json:"error_code,omitempty"`
	ErrorDescription string `json:"error_description,omitempty"`
	ErrorMessage string `json:"error_message,omitempty"`
	ErrorPlacement string `json:"error_placement,omitempty"`
	ErrorSeverity string `json:"error_severity,omitempty"`
	HelpCenterID int `json:"help_center_id,omitempty"`
}

// BrandedContentEligibleSponsorIDs represents the Facebook BrandedContentEligibleSponsorIDs object
type BrandedContentEligibleSponsorIDs struct {
	FbPage *Page `json:"fb_page,omitempty"`
	IgAccountV2 *IGUser `json:"ig_account_v2,omitempty"`
	IgApprovalNeeded bool `json:"ig_approval_needed,omitempty"`
}

// BrandedContentShadowIGMediaID represents the Facebook BrandedContentShadowIGMediaID object
type BrandedContentShadowIGMediaID struct {
	EligibilityErrors []string `json:"eligibility_errors,omitempty"`
	HasPermissionForPartnershipAd bool `json:"has_permission_for_partnership_ad,omitempty"`
	ID string `json:"id,omitempty"`
	OwnerID string `json:"owner_id,omitempty"`
	Permalink string `json:"permalink,omitempty"`
	RecommendedCampaignObjectives []string `json:"recommended_campaign_objectives,omitempty"`
}

// BrandedContentShadowIGUserID represents the Facebook BrandedContentShadowIGUserID object
type BrandedContentShadowIGUserID struct {
	ID string `json:"id,omitempty"`
}

// BroadTargetingCategories represents the Facebook BroadTargetingCategories object
type BroadTargetingCategories struct {
	CategoryDescription string `json:"category_description,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	ParentCategory string `json:"parent_category,omitempty"`
	Path []string `json:"path,omitempty"`
	SizeLowerBound int `json:"size_lower_bound,omitempty"`
	SizeUpperBound int `json:"size_upper_bound,omitempty"`
	Source string `json:"source,omitempty"`
	Type int `json:"type,omitempty"`
	TypeName string `json:"type_name,omitempty"`
	UntranslatedName string `json:"untranslated_name,omitempty"`
	UntranslatedParentName string `json:"untranslated_parent_name,omitempty"`
}

// Business represents the Facebook Business object
type Business struct {
	BlockOfflineAnalytics bool `json:"block_offline_analytics,omitempty"`
	CollaborativeAdsManagedPartnerBusinessInfo *ManagedPartnerBusiness `json:"collaborative_ads_managed_partner_business_info,omitempty"`
	CollaborativeAdsManagedPartnerEligibility *BusinessManagedPartnerEligibility `json:"collaborative_ads_managed_partner_eligibility,omitempty"`
	CollaborativeAdsPartnerPremiumOptions *BusinessPartnerPremiumOptions `json:"collaborative_ads_partner_premium_options,omitempty"`
	CreatedBy map[string]interface{} `json:"created_by,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	ExtendedUpdatedTime time.Time `json:"extended_updated_time,omitempty"`
	ID string `json:"id,omitempty"`
	IsHidden bool `json:"is_hidden,omitempty"`
	Link string `json:"link,omitempty"`
	Name string `json:"name,omitempty"`
	PaymentAccountID string `json:"payment_account_id,omitempty"`
	PrimaryPage *Page `json:"primary_page,omitempty"`
	ProfilePictureUri string `json:"profile_picture_uri,omitempty"`
	TimezoneID uint `json:"timezone_id,omitempty"`
	TwoFactorType string `json:"two_factor_type,omitempty"`
	UpdatedBy map[string]interface{} `json:"updated_by,omitempty"`
	UpdatedTime time.Time `json:"updated_time,omitempty"`
	UserAccessExpireTime time.Time `json:"user_access_expire_time,omitempty"`
	VerificationStatus BusinessVerificationStatus `json:"verification_status,omitempty"`
	Vertical string `json:"vertical,omitempty"`
	VerticalID uint `json:"vertical_id,omitempty"`
}

// BusinessAdAccountRequest represents the Facebook BusinessAdAccountRequest object
type BusinessAdAccountRequest struct {
	AdAccount *AdAccount `json:"ad_account,omitempty"`
	ID string `json:"id,omitempty"`
}

// BusinessAdsReportingReportSpecs represents the Facebook BusinessAdsReportingReportSpecs object
type BusinessAdsReportingReportSpecs struct {
	ActionReportTime string `json:"action_report_time,omitempty"`
	AdAccountID string `json:"ad_account_id,omitempty"`
	AdAccountIDs []string `json:"ad_account_ids,omitempty"`
	AdAccounts []map[string]interface{} `json:"ad_accounts,omitempty"`
	AttributionWindows []string `json:"attribution_windows,omitempty"`
	Business *Business `json:"business,omitempty"`
	BusinessAssetGroup *BusinessAssetGroup `json:"business_asset_group,omitempty"`
	ComparisonDateInterval map[string]interface{} `json:"comparison_date_interval,omitempty"`
	CreationSource string `json:"creation_source,omitempty"`
	CreationTime time.Time `json:"creation_time,omitempty"`
	Currency string `json:"currency,omitempty"`
	DatePreset string `json:"date_preset,omitempty"`
	DefaultAttributionWindows []string `json:"default_attribution_windows,omitempty"`
	Filtering []map[string]interface{} `json:"filtering,omitempty"`
	Formatting []map[string][]map[string]interface{} `json:"formatting,omitempty"`
	ID string `json:"id,omitempty"`
	LastAccessBy *Profile `json:"last_access_by,omitempty"`
	LastAccessTime time.Time `json:"last_access_time,omitempty"`
	LastReportSnapshotID string `json:"last_report_snapshot_id,omitempty"`
	LastReportSnapshotTime time.Time `json:"last_report_snapshot_time,omitempty"`
	LastSharedReportExpiration time.Time `json:"last_shared_report_expiration,omitempty"`
	Limit int `json:"limit,omitempty"`
	LockedDimensions int `json:"locked_dimensions,omitempty"`
	ReportName string `json:"report_name,omitempty"`
	ReportSnapshotAsyncPercentCompletion int `json:"report_snapshot_async_percent_completion,omitempty"`
	ReportSnapshotAsyncStatus string `json:"report_snapshot_async_status,omitempty"`
	ScheduleFrequency string `json:"schedule_frequency,omitempty"`
	Scope string `json:"scope,omitempty"`
	ShowDeprecateAwBanner bool `json:"show_deprecate_aw_banner,omitempty"`
	Sorting []map[string]interface{} `json:"sorting,omitempty"`
	StartDate string `json:"start_date,omitempty"`
	Status string `json:"status,omitempty"`
	Subscribers []string `json:"subscribers,omitempty"`
	UpdateBy *Profile `json:"update_by,omitempty"`
	UpdateTime time.Time `json:"update_time,omitempty"`
	User *Profile `json:"user,omitempty"`
	UserDimensions []string `json:"user_dimensions,omitempty"`
	UserMetrics []string `json:"user_metrics,omitempty"`
	ViewType string `json:"view_type,omitempty"`
}

// BusinessAdvertisableApplicationsResult represents the Facebook BusinessAdvertisableApplicationsResult object
type BusinessAdvertisableApplicationsResult struct {
	AreAppEventsUnavailable bool `json:"are_app_events_unavailable,omitempty"`
	Business *Business `json:"business,omitempty"`
	HasInsightPermission bool `json:"has_insight_permission,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	PhotoURL string `json:"photo_url,omitempty"`
}

// BusinessAgreement represents the Facebook BusinessAgreement object
type BusinessAgreement struct {
	ID string `json:"id,omitempty"`
	RequestStatus string `json:"request_status,omitempty"`
}

// BusinessApplicationRequest represents the Facebook BusinessApplicationRequest object
type BusinessApplicationRequest struct {
	Application *Application `json:"application,omitempty"`
	ID string `json:"id,omitempty"`
}

// BusinessAssetGroup represents the Facebook BusinessAssetGroup object
type BusinessAssetGroup struct {
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	OwnerBusiness *Business `json:"owner_business,omitempty"`
}

// BusinessAssetSharingAgreement represents the Facebook BusinessAssetSharingAgreement object
type BusinessAssetSharingAgreement struct {
	ID string `json:"id,omitempty"`
	Initiator *Business `json:"initiator,omitempty"`
	Recipient *Business `json:"recipient,omitempty"`
	RelationshipType []string `json:"relationship_type,omitempty"`
	RequestStatus string `json:"request_status,omitempty"`
	RequestType string `json:"request_type,omitempty"`
}

// BusinessCreative represents the Facebook BusinessCreative object
type BusinessCreative struct {
	CreationTime time.Time `json:"creation_time,omitempty"`
	Duration int `json:"duration,omitempty"`
	Hash string `json:"hash,omitempty"`
	Height int `json:"height,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	Thumbnail string `json:"thumbnail,omitempty"`
	Type string `json:"type,omitempty"`
	URL string `json:"url,omitempty"`
	VideoID string `json:"video_id,omitempty"`
	Width int `json:"width,omitempty"`
}

// BusinessCreativeFolder represents the Facebook BusinessCreativeFolder object
type BusinessCreativeFolder struct {
	Business *Business `json:"business,omitempty"`
	CreationTime time.Time `json:"creation_time,omitempty"`
	CreativeInsightPermissions []map[string]string `json:"creative_insight_permissions,omitempty"`
	Description string `json:"description,omitempty"`
	ID string `json:"id,omitempty"`
	MediaLibraryURL string `json:"media_library_url,omitempty"`
	Name string `json:"name,omitempty"`
	OwnerBusiness *Business `json:"owner_business,omitempty"`
}

// BusinessCreativeInsights represents the Facebook BusinessCreativeInsights object
type BusinessCreativeInsights struct {
	Actions []*AdsActionStats `json:"actions,omitempty"`
	Age string `json:"age,omitempty"`
	Country string `json:"country,omitempty"`
	DateEnd string `json:"date_end,omitempty"`
	DateStart string `json:"date_start,omitempty"`
	DevicePlatform string `json:"device_platform,omitempty"`
	Gender string `json:"gender,omitempty"`
	Impressions int `json:"impressions,omitempty"`
	InlineLinkClicks int `json:"inline_link_clicks,omitempty"`
	Objective string `json:"objective,omitempty"`
	OptimizationGoal string `json:"optimization_goal,omitempty"`
	PlatformPosition string `json:"platform_position,omitempty"`
	PublisherPlatform string `json:"publisher_platform,omitempty"`
	QualityRanking string `json:"quality_ranking,omitempty"`
	VideoPlayActions []*AdsActionStats `json:"video_play_actions,omitempty"`
	VideoThruplayWatchedActions []*AdsActionStats `json:"video_thruplay_watched_actions,omitempty"`
}

// BusinessFranchiseConfig represents the Facebook BusinessFranchiseConfig object
type BusinessFranchiseConfig struct {
	ActivePartnerCount int `json:"active_partner_count,omitempty"`
	AgencyBusiness *Business `json:"agency_business,omitempty"`
	AgencyBusinessAssetGroup *BusinessAssetGroup `json:"agency_business_asset_group,omitempty"`
	BrandName string `json:"brand_name,omitempty"`
	Business *Business `json:"business,omitempty"`
	BusinessVertical string `json:"business_vertical,omitempty"`
	ID string `json:"id,omitempty"`
	PartnerCount int `json:"partner_count,omitempty"`
	PendingAgencyBusiness string `json:"pending_agency_business,omitempty"`
	ProgramCount int `json:"program_count,omitempty"`
	SharedBusinessAssetGroup *BusinessAssetGroup `json:"shared_business_asset_group,omitempty"`
	SharedCreativeFolderCount int `json:"shared_creative_folder_count,omitempty"`
	SharedCustomAudienceCount int `json:"shared_custom_audience_count,omitempty"`
}

// BusinessImage represents the Facebook BusinessImage object
type BusinessImage struct {
	Business *Business `json:"business,omitempty"`
	CreationTime time.Time `json:"creation_time,omitempty"`
	Hash string `json:"hash,omitempty"`
	Height int `json:"height,omitempty"`
	ID string `json:"id,omitempty"`
	MediaLibraryURL string `json:"media_library_url,omitempty"`
	Name string `json:"name,omitempty"`
	URL string `json:"url,omitempty"`
	URL128 string `json:"url_128,omitempty"`
	Width int `json:"width,omitempty"`
}

// BusinessImageTBusinessFolderPathItem represents the Facebook BusinessImageTBusinessFolderPathItem object
type BusinessImageTBusinessFolderPathItem struct {
	ID string `json:"id,omitempty"`
	ParentFolderID string `json:"parent_folder_id,omitempty"`
	Type string `json:"type,omitempty"`
}

// BusinessManagedPartnerEligibility represents the Facebook BusinessManagedPartnerEligibility object
type BusinessManagedPartnerEligibility struct {
	IsEligible bool `json:"is_eligible,omitempty"`
	ReasonCode string `json:"reason_code,omitempty"`
	ReasonDescription string `json:"reason_description,omitempty"`
}

// BusinessMediaAdPlacementValidationResult represents the Facebook BusinessMediaAdPlacementValidationResult object
type BusinessMediaAdPlacementValidationResult struct {
	AdPlacement string `json:"ad_placement,omitempty"`
	AdPlacementLabel string `json:"ad_placement_label,omitempty"`
	ErrorMessages []string `json:"error_messages,omitempty"`
	IsValid bool `json:"is_valid,omitempty"`
}

// BusinessObject represents the Facebook BusinessObject object
type BusinessObject struct {
	Asset map[string]interface{} `json:"asset,omitempty"`
	AssetType string `json:"asset_type,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	Picture string `json:"picture,omitempty"`
}

// BusinessObjectTransferOwnershipAgreement represents the Facebook BusinessObjectTransferOwnershipAgreement object
type BusinessObjectTransferOwnershipAgreement struct {
	ID string `json:"id,omitempty"`
	ReceivingBusiness *Business `json:"receiving_business,omitempty"`
	RequestingBusiness *Business `json:"requesting_business,omitempty"`
	Status string `json:"status,omitempty"`
}

// BusinessOwnedObjectOnBehalfOfRequest represents the Facebook BusinessOwnedObjectOnBehalfOfRequest object
type BusinessOwnedObjectOnBehalfOfRequest struct {
	BusinessOwnedObject string `json:"business_owned_object,omitempty"`
	ID string `json:"id,omitempty"`
	ReceivingBusiness *Business `json:"receiving_business,omitempty"`
	RequestingBusiness *Business `json:"requesting_business,omitempty"`
	Status string `json:"status,omitempty"`
}

// BusinessPageRequest represents the Facebook BusinessPageRequest object
type BusinessPageRequest struct {
	ID string `json:"id,omitempty"`
	Page *Page `json:"page,omitempty"`
}

// BusinessPartnerPremiumOptions represents the Facebook BusinessPartnerPremiumOptions object
type BusinessPartnerPremiumOptions struct {
	EnableBasketInsight bool `json:"enable_basket_insight,omitempty"`
	EnableExtendedAudienceRetargeting bool `json:"enable_extended_audience_retargeting,omitempty"`
	RetailerCustomAudienceConfig map[string]interface{} `json:"retailer_custom_audience_config,omitempty"`
}

// BusinessProductCatalogTOS represents the Facebook BusinessProductCatalogTOS object
type BusinessProductCatalogTOS struct {
	Accepted bool `json:"accepted,omitempty"`
	Content string `json:"content,omitempty"`
}

// BusinessProject represents the Facebook BusinessProject object
type BusinessProject struct {
	Business *Business `json:"business,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	Creator map[string]interface{} `json:"creator,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
}

// BusinessRequest represents the Facebook BusinessRequest object
type BusinessRequest struct {
	Accessor *Business `json:"accessor,omitempty"`
	CreationTime time.Time `json:"creation_time,omitempty"`
	ID string `json:"id,omitempty"`
	ObjectID string `json:"object_id,omitempty"`
	ObjectType string `json:"object_type,omitempty"`
	PermittedTasks []string `json:"permitted_tasks,omitempty"`
	RequestStatus string `json:"request_status,omitempty"`
	RequestType string `json:"request_type,omitempty"`
	Requestor string `json:"requestor,omitempty"`
}

// BusinessRoleRequest represents the Facebook BusinessRoleRequest object
type BusinessRoleRequest struct {
	CreatedBy map[string]interface{} `json:"created_by,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	Email string `json:"email,omitempty"`
	ExpirationTime time.Time `json:"expiration_time,omitempty"`
	ExpiryTime time.Time `json:"expiry_time,omitempty"`
	FinanceRole string `json:"finance_role,omitempty"`
	ID string `json:"id,omitempty"`
	InviteLink string `json:"invite_link,omitempty"`
	InvitedUserType []string `json:"invited_user_type,omitempty"`
	IpRole string `json:"ip_role,omitempty"`
	Owner *Business `json:"owner,omitempty"`
	Role string `json:"role,omitempty"`
	Status string `json:"status,omitempty"`
	Tasks []string `json:"tasks,omitempty"`
	UpdatedBy map[string]interface{} `json:"updated_by,omitempty"`
	UpdatedTime time.Time `json:"updated_time,omitempty"`
}

// BusinessSettingLogsData represents the Facebook BusinessSettingLogsData object
type BusinessSettingLogsData struct {
	Actor map[string]interface{} `json:"actor,omitempty"`
	EventObject map[string]interface{} `json:"event_object,omitempty"`
	EventTime string `json:"event_time,omitempty"`
	EventType string `json:"event_type,omitempty"`
	ExtraData map[string]interface{} `json:"extra_data,omitempty"`
}

// BusinessTag represents the Facebook BusinessTag object
type BusinessTag struct {
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
}

// BusinessTrafficAnalysisReport represents the Facebook BusinessTrafficAnalysisReport object
type BusinessTrafficAnalysisReport struct {
	AudienceLocation []map[string]interface{} `json:"audience_location,omitempty"`
	EventCategory []map[string]interface{} `json:"event_category,omitempty"`
	TrafficAnalysisImpressions []map[string]interface{} `json:"traffic_analysis_impressions,omitempty"`
}

// BusinessUser represents the Facebook BusinessUser object
type BusinessUser struct {
	Business *Business `json:"business,omitempty"`
	BusinessRoleRequest *BusinessRoleRequest `json:"business_role_request,omitempty"`
	Email string `json:"email,omitempty"`
	FinancePermission string `json:"finance_permission,omitempty"`
	FirstName string `json:"first_name,omitempty"`
	ID string `json:"id,omitempty"`
	IpPermission string `json:"ip_permission,omitempty"`
	LastName string `json:"last_name,omitempty"`
	MarkedForRemoval bool `json:"marked_for_removal,omitempty"`
	Name string `json:"name,omitempty"`
	PendingEmail string `json:"pending_email,omitempty"`
	Role string `json:"role,omitempty"`
	Tasks []string `json:"tasks,omitempty"`
	Title string `json:"title,omitempty"`
	TwoFacStatus string `json:"two_fac_status,omitempty"`
}

// BusinessVideo represents the Facebook BusinessVideo object
type BusinessVideo struct {
	Business *Business `json:"business,omitempty"`
	ID string `json:"id,omitempty"`
	MediaLibraryURL string `json:"media_library_url,omitempty"`
	Name string `json:"name,omitempty"`
	Video *AdVideo `json:"video,omitempty"`
}

// BusinessVideoTBusinessFolderPathItem represents the Facebook BusinessVideoTBusinessFolderPathItem object
type BusinessVideoTBusinessFolderPathItem struct {
	ID string `json:"id,omitempty"`
	ParentFolderID string `json:"parent_folder_id,omitempty"`
	Type string `json:"type,omitempty"`
}

// CASSSetupOfflineEventSetProgress represents the Facebook CASSSetupOfflineEventSetProgress object
type CASSSetupOfflineEventSetProgress struct {
}

// CPASAdCreationTemplate represents the Facebook CPASAdCreationTemplate object
type CPASAdCreationTemplate struct {
	Description string `json:"description,omitempty"`
	ID string `json:"id,omitempty"`
	IsUnusedTemplate bool `json:"is_unused_template,omitempty"`
	Name string `json:"name,omitempty"`
	OptimizationGoal string `json:"optimization_goal,omitempty"`
	TargetingType string `json:"targeting_type,omitempty"`
	TemplateType string `json:"template_type,omitempty"`
}

// CPASAdvertiserPartnershipRecommendation represents the Facebook CPASAdvertiserPartnershipRecommendation object
type CPASAdvertiserPartnershipRecommendation struct {
	AdvertiserBusinessID string `json:"advertiser_business_id,omitempty"`
	BrandBusinessID string `json:"brand_business_id,omitempty"`
	Brands []string `json:"brands,omitempty"`
	Countries []string `json:"countries,omitempty"`
	ID string `json:"id,omitempty"`
	MerchantBusinessID string `json:"merchant_business_id,omitempty"`
	MerchantCategories []string `json:"merchant_categories,omitempty"`
	Status string `json:"status,omitempty"`
	StatusReason string `json:"status_reason,omitempty"`
}

// CPASBusinessSetupConfig represents the Facebook CPASBusinessSetupConfig object
type CPASBusinessSetupConfig struct {
	AcceptedCollabAdsTos bool `json:"accepted_collab_ads_tos,omitempty"`
	Business *Business `json:"business,omitempty"`
	BusinessCapabilitiesStatus []map[string]string `json:"business_capabilities_status,omitempty"`
	CapabilitiesComplianceStatus []map[string]map[string]interface{} `json:"capabilities_compliance_status,omitempty"`
	ID string `json:"id,omitempty"`
}

// CPASCollaborationRequest represents the Facebook CPASCollaborationRequest object
type CPASCollaborationRequest struct {
	Brands []string `json:"brands,omitempty"`
	ContactEmail string `json:"contact_email,omitempty"`
	ContactFirstName string `json:"contact_first_name,omitempty"`
	ContactLastName string `json:"contact_last_name,omitempty"`
	ID string `json:"id,omitempty"`
	PhoneNumber string `json:"phone_number,omitempty"`
	ReceiverBusiness *Business `json:"receiver_business,omitempty"`
	RequesterAgencyOrBrand string `json:"requester_agency_or_brand,omitempty"`
	SenderClientBusiness *Business `json:"sender_client_business,omitempty"`
	Status string `json:"status,omitempty"`
}

// CPASLsbImageBank represents the Facebook CPASLsbImageBank object
type CPASLsbImageBank struct {
	AdGroupID string `json:"ad_group_id,omitempty"`
	CatalogSegmentProxyID string `json:"catalog_segment_proxy_id,omitempty"`
	ID string `json:"id,omitempty"`
}

// CPASMerchantConfig represents the Facebook CPASMerchantConfig object
type CPASMerchantConfig struct {
	AcceptedTos bool `json:"accepted_tos,omitempty"`
	BetaFeatures []string `json:"beta_features,omitempty"`
	BusinessOutcomesStatus []map[string]string `json:"business_outcomes_status,omitempty"`
	ID string `json:"id,omitempty"`
	IsTestMerchant bool `json:"is_test_merchant,omitempty"`
	OutcomesComplianceStatus []map[string]map[string]interface{} `json:"outcomes_compliance_status,omitempty"`
	QualifiedToOnboard bool `json:"qualified_to_onboard,omitempty"`
}

// CPASParentCatalogSettings represents the Facebook CPASParentCatalogSettings object
type CPASParentCatalogSettings struct {
	AttributionWindows []string `json:"attribution_windows,omitempty"`
	DefaultCurrency string `json:"default_currency,omitempty"`
	DisableUseAsParentCatalog bool `json:"disable_use_as_parent_catalog,omitempty"`
	ID string `json:"id,omitempty"`
}

// CPASSetup represents the Facebook CPASSetup object
type CPASSetup struct {
}

// CPASSetupPageStructureProgress represents the Facebook CPASSetupPageStructureProgress object
type CPASSetupPageStructureProgress struct {
	ID string `json:"id,omitempty"`
	Issues []map[string]interface{} `json:"issues,omitempty"`
	Name string `json:"name,omitempty"`
}

// CRMAddress represents the Facebook CRMAddress object
type CRMAddress struct {
	City string `json:"city,omitempty"`
	CnpjTaxID string `json:"cnpj_tax_id,omitempty"`
	Country string `json:"country,omitempty"`
	ID string `json:"id,omitempty"`
	PostalCode string `json:"postal_code,omitempty"`
	RegistrationLabel string `json:"registration_label,omitempty"`
	RegistrationNumber string `json:"registration_number,omitempty"`
	State string `json:"state,omitempty"`
	Street1 string `json:"street1,omitempty"`
	Street2 string `json:"street2,omitempty"`
	Street3 string `json:"street3,omitempty"`
	Street4 string `json:"street4,omitempty"`
	ValidationStatus string `json:"validation_status,omitempty"`
	VatTaxID string `json:"vat_tax_id,omitempty"`
}

// CTWAWhatsAppNumbersInfo represents the Facebook CTWAWhatsAppNumbersInfo object
type CTWAWhatsAppNumbersInfo struct {
	CanManageWaFlows bool `json:"can_manage_wa_flows,omitempty"`
	FormattedWhatsappNumber string `json:"formatted_whatsapp_number,omitempty"`
	IsBusinessNumber bool `json:"is_business_number,omitempty"`
	IsCallingEnabled bool `json:"is_calling_enabled,omitempty"`
	NumberCountryPrefix string `json:"number_country_prefix,omitempty"`
	PageWhatsappNumberID string `json:"page_whatsapp_number_id,omitempty"`
	WabaID string `json:"waba_id,omitempty"`
	WhatsappNumber string `json:"whatsapp_number,omitempty"`
	WhatsappSmbDevice string `json:"whatsapp_smb_device,omitempty"`
}

// CTXDefaultOptimizationConfig represents the Facebook CTXDefaultOptimizationConfig object
type CTXDefaultOptimizationConfig struct {
	DestinationType string `json:"destination_type,omitempty"`
	Objective string `json:"objective,omitempty"`
	OptimizationGoal string `json:"optimization_goal,omitempty"`
}

// CTXOptimizationEligibility represents the Facebook CTXOptimizationEligibility object
type CTXOptimizationEligibility struct {
	Ctm map[string]interface{} `json:"ctm,omitempty"`
}

// CTXPartnerAppWelcomeMessageFlow represents the Facebook CTXPartnerAppWelcomeMessageFlow object
type CTXPartnerAppWelcomeMessageFlow struct {
	CompatiblePlatforms []string `json:"compatible_platforms,omitempty"`
	EligiblePlatforms []string `json:"eligible_platforms,omitempty"`
	ID string `json:"id,omitempty"`
	IsIgOnlyFlow bool `json:"is_ig_only_flow,omitempty"`
	IsUsedInAd bool `json:"is_used_in_ad,omitempty"`
	LastUpdateTime time.Time `json:"last_update_time,omitempty"`
	Name string `json:"name,omitempty"`
	WelcomeMessageFlow string `json:"welcome_message_flow,omitempty"`
	WelcomeMessageSequence string `json:"welcome_message_sequence,omitempty"`
}

// CalibratorExistingRule represents the Facebook CalibratorExistingRule object
type CalibratorExistingRule struct {
	X7dVolume int `json:"7d_volume,omitempty"`
	CreationSource string `json:"creation_source,omitempty"`
	CreationTime time.Time `json:"creation_time,omitempty"`
	Creator string `json:"creator,omitempty"`
	EventType string `json:"event_type,omitempty"`
	ID string `json:"id,omitempty"`
	Rule string `json:"rule,omitempty"`
	RuleType string `json:"rule_type,omitempty"`
	SampleURLs []string `json:"sample_urls,omitempty"`
	Status string `json:"status,omitempty"`
	Transforms []string `json:"transforms,omitempty"`
}

// CallAdsPhoneData represents the Facebook CallAdsPhoneData object
type CallAdsPhoneData struct {
	CallAdsPhoneDataUseCase string `json:"call_ads_phone_data_use_case,omitempty"`
	CallbackVariant string `json:"callback_variant,omitempty"`
	DestinationWebsiteURL string `json:"destination_website_url,omitempty"`
	ID string `json:"id,omitempty"`
	Page *Page `json:"page,omitempty"`
	PhoneNumber string `json:"phone_number,omitempty"`
}

// Campaign represents the Facebook Campaign object
type Campaign struct {
	AccountID string `json:"account_id,omitempty"`
	Adlabels []*AdLabel `json:"adlabels,omitempty"`
	AdvantageStateInfo *AdCampaignGroupAdvantageState `json:"advantage_state_info,omitempty"`
	BidStrategy CampaignBidStrategy `json:"bid_strategy,omitempty"`
	BoostedObjectID string `json:"boosted_object_id,omitempty"`
	BrandLiftStudies []*AdStudy `json:"brand_lift_studies,omitempty"`
	BudgetRebalanceFlag bool `json:"budget_rebalance_flag,omitempty"`
	BudgetRemaining string `json:"budget_remaining,omitempty"`
	BuyingType string `json:"buying_type,omitempty"`
	CampaignGroupActiveTime string `json:"campaign_group_active_time,omitempty"`
	CanCreateBrandLiftStudy bool `json:"can_create_brand_lift_study,omitempty"`
	CanUseSpendCap bool `json:"can_use_spend_cap,omitempty"`
	ConfiguredStatus CampaignConfiguredStatus `json:"configured_status,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	DailyBudget string `json:"daily_budget,omitempty"`
	EffectiveStatus CampaignEffectiveStatus `json:"effective_status,omitempty"`
	HasSecondarySkadnetworkReporting bool `json:"has_secondary_skadnetwork_reporting,omitempty"`
	ID string `json:"id,omitempty"`
	IsBudgetScheduleEnabled bool `json:"is_budget_schedule_enabled,omitempty"`
	IsSkadnetworkAttribution bool `json:"is_skadnetwork_attribution,omitempty"`
	IssuesInfo []*AdCampaignIssuesInfo `json:"issues_info,omitempty"`
	LastBudgetTogglingTime time.Time `json:"last_budget_toggling_time,omitempty"`
	LifetimeBudget string `json:"lifetime_budget,omitempty"`
	Name string `json:"name,omitempty"`
	Objective string `json:"objective,omitempty"`
	PacingType []string `json:"pacing_type,omitempty"`
	PrimaryAttribution string `json:"primary_attribution,omitempty"`
	PromotedObject *AdPromotedObject `json:"promoted_object,omitempty"`
	Recommendations []*AdRecommendation `json:"recommendations,omitempty"`
	SmartPromotionType string `json:"smart_promotion_type,omitempty"`
	SourceCampaign *Campaign `json:"source_campaign,omitempty"`
	SourceCampaignID string `json:"source_campaign_id,omitempty"`
	SourceRecommendationType string `json:"source_recommendation_type,omitempty"`
	SpecialAdCategories []string `json:"special_ad_categories,omitempty"`
	SpecialAdCategory string `json:"special_ad_category,omitempty"`
	SpecialAdCategoryCountry []string `json:"special_ad_category_country,omitempty"`
	SpendCap string `json:"spend_cap,omitempty"`
	StartTime time.Time `json:"start_time,omitempty"`
	Status CampaignStatus `json:"status,omitempty"`
	StopTime time.Time `json:"stop_time,omitempty"`
	ToplineID string `json:"topline_id,omitempty"`
	UpdatedTime time.Time `json:"updated_time,omitempty"`
}

// CampaignActionsData represents the Facebook CampaignActionsData object
type CampaignActionsData struct {
}

// CampaignGroupBrandConfiguration represents the Facebook CampaignGroupBrandConfiguration object
type CampaignGroupBrandConfiguration struct {
	BrandProductName string `json:"brand_product_name,omitempty"`
	Locale string `json:"locale,omitempty"`
	Vertical string `json:"vertical,omitempty"`
}

// CampaignGroupCollaborativeAdsPartnerInfo represents the Facebook CampaignGroupCollaborativeAdsPartnerInfo object
type CampaignGroupCollaborativeAdsPartnerInfo struct {
}

// Canvas represents the Facebook Canvas object
type Canvas struct {
	BackgroundColor string `json:"background_color,omitempty"`
	BodyElements []map[string]interface{} `json:"body_elements,omitempty"`
	BusinessID string `json:"business_id,omitempty"`
	CanvasLink string `json:"canvas_link,omitempty"`
	CollectionHeroImage *Photo `json:"collection_hero_image,omitempty"`
	CollectionHeroVideo *AdVideo `json:"collection_hero_video,omitempty"`
	CollectionThumbnails []*CanvasCollectionThumbnail `json:"collection_thumbnails,omitempty"`
	DynamicSetting *CanvasDynamicSetting `json:"dynamic_setting,omitempty"`
	ElementPayload string `json:"element_payload,omitempty"`
	Elements []*RichMediaElement `json:"elements,omitempty"`
	FbBodyElements []map[string]interface{} `json:"fb_body_elements,omitempty"`
	ID string `json:"id,omitempty"`
	IsHidden bool `json:"is_hidden,omitempty"`
	IsPublished bool `json:"is_published,omitempty"`
	LastEditor *User `json:"last_editor,omitempty"`
	LinkedDocuments []*Canvas `json:"linked_documents,omitempty"`
	Name string `json:"name,omitempty"`
	Owner *Page `json:"owner,omitempty"`
	PropertyList []string `json:"property_list,omitempty"`
	SourceTemplate *CanvasTemplate `json:"source_template,omitempty"`
	StoreURL string `json:"store_url,omitempty"`
	StyleList []string `json:"style_list,omitempty"`
	Tags []string `json:"tags,omitempty"`
	UiPropertyList []string `json:"ui_property_list,omitempty"`
	UnusedBodyElements []map[string]interface{} `json:"unused_body_elements,omitempty"`
	UpdateTime int `json:"update_time,omitempty"`
	UseRetailerItemIDs bool `json:"use_retailer_item_ids,omitempty"`
}

// CanvasAdSettings represents the Facebook CanvasAdSettings object
type CanvasAdSettings struct {
	IsCanvasCollectionEligible bool `json:"is_canvas_collection_eligible,omitempty"`
	LeadFormCreatedTime uint `json:"lead_form_created_time,omitempty"`
	LeadFormName string `json:"lead_form_name,omitempty"`
	LeadGenFormID string `json:"lead_gen_form_id,omitempty"`
	LeadsCount int `json:"leads_count,omitempty"`
	ProductSetID string `json:"product_set_id,omitempty"`
	UseRetailerItemIDs bool `json:"use_retailer_item_ids,omitempty"`
}

// CanvasBodyElement represents the Facebook CanvasBodyElement object
type CanvasBodyElement struct {
	Element map[string]interface{} `json:"element,omitempty"`
}

// CanvasCollectionThumbnail represents the Facebook CanvasCollectionThumbnail object
type CanvasCollectionThumbnail struct {
	ElementChildIndex int `json:"element_child_index,omitempty"`
	ElementID string `json:"element_id,omitempty"`
	Photo *Photo `json:"photo,omitempty"`
}

// CanvasDynamicSetting represents the Facebook CanvasDynamicSetting object
type CanvasDynamicSetting struct {
	ChildDocuments []*Canvas `json:"child_documents,omitempty"`
	ProductSetID string `json:"product_set_id,omitempty"`
}

// CanvasPreview represents the Facebook CanvasPreview object
type CanvasPreview struct {
	Body string `json:"body,omitempty"`
}

// CanvasTemplate represents the Facebook CanvasTemplate object
type CanvasTemplate struct {
	Channels []map[string][]map[string]string `json:"channels,omitempty"`
	Description string `json:"description,omitempty"`
	Document *Canvas `json:"document,omitempty"`
	ID string `json:"id,omitempty"`
	IsMultiTabSupportable bool `json:"is_multi_tab_supportable,omitempty"`
	IsNew bool `json:"is_new,omitempty"`
	Name string `json:"name,omitempty"`
	Objectives []map[string]map[string]interface{} `json:"objectives,omitempty"`
	OwnerID *User `json:"owner_id,omitempty"`
	RequiredCapabilities []string `json:"required_capabilities,omitempty"`
	SnapshotPhoto *Photo `json:"snapshot_photo,omitempty"`
	Status string `json:"status,omitempty"`
	SubVerticals []string `json:"sub_verticals,omitempty"`
	Verticals []map[string]string `json:"verticals,omitempty"`
}

// CatalogAdvertiserInsight represents the Facebook CatalogAdvertiserInsight object
type CatalogAdvertiserInsight struct {
	Category string `json:"category,omitempty"`
	Country string `json:"country,omitempty"`
}

// CatalogBasedTargeting represents the Facebook CatalogBasedTargeting object
type CatalogBasedTargeting struct {
	GeoTargetingType string `json:"geo_targeting_type,omitempty"`
}

// CatalogCollection represents the Facebook CatalogCollection object
type CatalogCollection struct {
	Description string `json:"description,omitempty"`
	Title string `json:"title,omitempty"`
	URL string `json:"url,omitempty"`
}

// CatalogContentVersionConfig represents the Facebook CatalogContentVersionConfig object
type CatalogContentVersionConfig struct {
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	Version string `json:"version,omitempty"`
}

// CatalogItemAppLinks represents the Facebook CatalogItemAppLinks object
type CatalogItemAppLinks struct {
	Android []*AndroidAppLink `json:"android,omitempty"`
	IOS []*IosAppLink `json:"ios,omitempty"`
	Ipad []*IosAppLink `json:"ipad,omitempty"`
	Iphone []*IosAppLink `json:"iphone,omitempty"`
	Web *WebAppLink `json:"web,omitempty"`
	Windows []*WindowsAppLink `json:"windows,omitempty"`
	WindowsPhone []*WindowsPhoneAppLink `json:"windows_phone,omitempty"`
	WindowsUniversal []*WindowsAppLink `json:"windows_universal,omitempty"`
}

// CatalogItemChannelsToIntegrityStatus represents the Facebook CatalogItemChannelsToIntegrityStatus object
type CatalogItemChannelsToIntegrityStatus struct {
	Channels []string `json:"channels,omitempty"`
	RejectionInformation map[string]interface{} `json:"rejection_information,omitempty"`
}

// CatalogItemOverride represents the Facebook CatalogItemOverride object
type CatalogItemOverride struct {
	ID string `json:"id,omitempty"`
	LocalInfo *ProductItemLocalInfo `json:"local_info,omitempty"`
	OverrideType string `json:"override_type,omitempty"`
	OverrideValue string `json:"override_value,omitempty"`
}

// CatalogItemRejectionReasons represents the Facebook CatalogItemRejectionReasons object
type CatalogItemRejectionReasons struct {
	Capability string `json:"capability,omitempty"`
	RejectionInformation []map[string]interface{} `json:"rejection_information,omitempty"`
}

// CatalogItemValidationErrorList represents the Facebook CatalogItemValidationErrorList object
type CatalogItemValidationErrorList struct {
	Errors []map[string]interface{} `json:"errors,omitempty"`
}

// CatalogSmartPixelSettings represents the Facebook CatalogSmartPixelSettings object
type CatalogSmartPixelSettings struct {
	AllowedDomains []string `json:"allowed_domains,omitempty"`
	AvailablePropertyFilters []string `json:"available_property_filters,omitempty"`
	Catalog *ProductCatalog `json:"catalog,omitempty"`
	CbbCustomOverrideFilters []map[string]interface{} `json:"cbb_custom_override_filters,omitempty"`
	CbbDefaultFilter []map[string][]string `json:"cbb_default_filter,omitempty"`
	Defaults []map[string]string `json:"defaults,omitempty"`
	Filters []map[string][]string `json:"filters,omitempty"`
	ID string `json:"id,omitempty"`
	IsCbbEnabled bool `json:"is_cbb_enabled,omitempty"`
	IsCreateEnabled bool `json:"is_create_enabled,omitempty"`
	IsDeleteEnabled bool `json:"is_delete_enabled,omitempty"`
	IsUpdateEnabled bool `json:"is_update_enabled,omitempty"`
	MicrodataFormatPrecedence []string `json:"microdata_format_precedence,omitempty"`
	Pixel *AdsPixel `json:"pixel,omitempty"`
	PropertyFilter []string `json:"property_filter,omitempty"`
	TrustedDomains []string `json:"trusted_domains,omitempty"`
}

// CatalogSubVerticalList represents the Facebook CatalogSubVerticalList object
type CatalogSubVerticalList struct {
	Appliances map[string]interface{} `json:"appliances,omitempty"`
	BabyFeeding map[string]interface{} `json:"baby_feeding,omitempty"`
	BabyTransport map[string]interface{} `json:"baby_transport,omitempty"`
	Beauty map[string]interface{} `json:"beauty,omitempty"`
	Bedding map[string]interface{} `json:"bedding,omitempty"`
	Cameras map[string]interface{} `json:"cameras,omitempty"`
	CamerasAndPhotos map[string]interface{} `json:"cameras_and_photos,omitempty"`
	CellPhonesAndSmartWatches map[string]interface{} `json:"cell_phones_and_smart_watches,omitempty"`
	CleaningSupplies map[string]interface{} `json:"cleaning_supplies,omitempty"`
	CloOffer map[string]interface{} `json:"clo_offer,omitempty"`
	Clothing map[string]interface{} `json:"clothing,omitempty"`
	ClothingAccessories map[string]interface{} `json:"clothing_accessories,omitempty"`
	ComputerComponents map[string]interface{} `json:"computer_components,omitempty"`
	ComputersAndTablets map[string]interface{} `json:"computers_and_tablets,omitempty"`
	ComputersLaptopsAndTablets map[string]interface{} `json:"computers_laptops_and_tablets,omitempty"`
	DiaperingAndPottyTraining map[string]interface{} `json:"diapering_and_potty_training,omitempty"`
	ElectronicAccessoriesAndCables map[string]interface{} `json:"electronic_accessories_and_cables,omitempty"`
	ElectronicsAccessories map[string]interface{} `json:"electronics_accessories,omitempty"`
	Furniture map[string]interface{} `json:"furniture,omitempty"`
	Health map[string]interface{} `json:"health,omitempty"`
	Home map[string]interface{} `json:"home,omitempty"`
	HomeGoods map[string]interface{} `json:"home_goods,omitempty"`
	HouseholdAndCleaningSupplies map[string]interface{} `json:"household_and_cleaning_supplies,omitempty"`
	Jewelry map[string]interface{} `json:"jewelry,omitempty"`
	LargeAppliances map[string]interface{} `json:"large_appliances,omitempty"`
	LocalServiceBusinessItem map[string]interface{} `json:"local_service_business_item,omitempty"`
	LocalServiceBusinessRestaurant map[string]interface{} `json:"local_service_business_restaurant,omitempty"`
	LoyaltyOffer map[string]interface{} `json:"loyalty_offer,omitempty"`
	Nursery map[string]interface{} `json:"nursery,omitempty"`
	PrintersAndScanners map[string]interface{} `json:"printers_and_scanners,omitempty"`
	PrintersScannersAndFaxMachines map[string]interface{} `json:"printers_scanners_and_fax_machines,omitempty"`
	ProductDiscount map[string]interface{} `json:"product_discount,omitempty"`
	Projectors map[string]interface{} `json:"projectors,omitempty"`
	Shoes map[string]interface{} `json:"shoes,omitempty"`
	ShoesAndFootwear map[string]interface{} `json:"shoes_and_footwear,omitempty"`
	Software map[string]interface{} `json:"software,omitempty"`
	TelevisionsAndMonitors map[string]interface{} `json:"televisions_and_monitors,omitempty"`
	TestChildSubVertical map[string]interface{} `json:"test_child_sub_vertical,omitempty"`
	TestGrandChildSubVertical map[string]interface{} `json:"test_grand_child_sub_vertical,omitempty"`
	TestSubVertical map[string]interface{} `json:"test_sub_vertical,omitempty"`
	TestSubVerticalAlias map[string]interface{} `json:"test_sub_vertical_alias,omitempty"`
	TestSubVerticalDataObject map[string]interface{} `json:"test_sub_vertical_data_object,omitempty"`
	ThirdPartyElectronics map[string]interface{} `json:"third_party_electronics,omitempty"`
	ThirdPartyToysAndGames map[string]interface{} `json:"third_party_toys_and_games,omitempty"`
	Toys map[string]interface{} `json:"toys,omitempty"`
	ToysAndGames map[string]interface{} `json:"toys_and_games,omitempty"`
	TvsAndMonitors map[string]interface{} `json:"tvs_and_monitors,omitempty"`
	VehicleManufacturer map[string]interface{} `json:"vehicle_manufacturer,omitempty"`
	VideoGameConsolesAndVideoGames map[string]interface{} `json:"video_game_consoles_and_video_games,omitempty"`
	VideoGamesAndConsoles map[string]interface{} `json:"video_games_and_consoles,omitempty"`
	VideoProjectors map[string]interface{} `json:"video_projectors,omitempty"`
	Watches map[string]interface{} `json:"watches,omitempty"`
}

// CatalogWebsiteOnboardingSettings represents the Facebook CatalogWebsiteOnboardingSettings object
type CatalogWebsiteOnboardingSettings struct {
	ID string `json:"id,omitempty"`
	QualityBand string `json:"quality_band,omitempty"`
	Status string `json:"status,omitempty"`
}

// CatalogWebsiteSettings represents the Facebook CatalogWebsiteSettings object
type CatalogWebsiteSettings struct {
	ID string `json:"id,omitempty"`
	IsAllowedToCrawl bool `json:"is_allowed_to_crawl,omitempty"`
}

// ChatPlugin represents the Facebook ChatPlugin object
type ChatPlugin struct {
	Alignment string `json:"alignment,omitempty"`
	DesktopBottomSpacing string `json:"desktop_bottom_spacing,omitempty"`
	DesktopSideSpacing string `json:"desktop_side_spacing,omitempty"`
	EntryPointIcon string `json:"entry_point_icon,omitempty"`
	EntryPointLabel string `json:"entry_point_label,omitempty"`
	GreetingDialogDisplay string `json:"greeting_dialog_display,omitempty"`
	GuestChatMode string `json:"guest_chat_mode,omitempty"`
	MobileBottomSpacing string `json:"mobile_bottom_spacing,omitempty"`
	MobileChatDisplay string `json:"mobile_chat_display,omitempty"`
	MobileSideSpacing string `json:"mobile_side_spacing,omitempty"`
	ThemeColor string `json:"theme_color,omitempty"`
	WelcomeScreenGreeting string `json:"welcome_screen_greeting,omitempty"`
}

// CheckBatchRequestStatus represents the Facebook CheckBatchRequestStatus object
type CheckBatchRequestStatus struct {
	Errors []map[string]interface{} `json:"errors,omitempty"`
	ErrorsTotalCount int `json:"errors_total_count,omitempty"`
	Handle string `json:"handle,omitempty"`
	IDsOfInvalidRequests []string `json:"ids_of_invalid_requests,omitempty"`
	Status string `json:"status,omitempty"`
	Warnings []map[string]interface{} `json:"warnings,omitempty"`
	WarningsTotalCount int `json:"warnings_total_count,omitempty"`
}

// ChildEvent represents the Facebook ChildEvent object
type ChildEvent struct {
	EndTime string `json:"end_time,omitempty"`
	ID string `json:"id,omitempty"`
	StartTime string `json:"start_time,omitempty"`
	TicketUri string `json:"ticket_uri,omitempty"`
}

// ChinaBusinessOnboardingVettingRequest represents the Facebook ChinaBusinessOnboardingVettingRequest object
type ChinaBusinessOnboardingVettingRequest struct {
	AdAccountCreationRequestStatus string `json:"ad_account_creation_request_status,omitempty"`
	AdAccountLimit int `json:"ad_account_limit,omitempty"`
	AdAccountNumber string `json:"ad_account_number,omitempty"`
	AdAccountsInfo []map[string]interface{} `json:"ad_accounts_info,omitempty"`
	AdvertiserBusinessID string `json:"advertiser_business_id,omitempty"`
	AdvertiserBusinessName string `json:"advertiser_business_name,omitempty"`
	BusinessManagerID string `json:"business_manager_id,omitempty"`
	BusinessRegistration string `json:"business_registration,omitempty"`
	BusinessRegistrationID string `json:"business_registration_id,omitempty"`
	BusinessVerificationStatus string `json:"business_verification_status,omitempty"`
	ChineseAddress string `json:"chinese_address,omitempty"`
	ChineseLegalEntityName string `json:"chinese_legal_entity_name,omitempty"`
	City string `json:"city,omitempty"`
	Contact string `json:"contact,omitempty"`
	CouponCode string `json:"coupon_code,omitempty"`
	DisapproveReason string `json:"disapprove_reason,omitempty"`
	EnglishBusinessName string `json:"english_business_name,omitempty"`
	ID string `json:"id,omitempty"`
	OfficialWebsiteURL string `json:"official_website_url,omitempty"`
	OrgAdAccountCount int `json:"org_ad_account_count,omitempty"`
	PaymentType string `json:"payment_type,omitempty"`
	PlanningAgencyID string `json:"planning_agency_id,omitempty"`
	PlanningAgencyName string `json:"planning_agency_name,omitempty"`
	PromotableAppIDs []string `json:"promotable_app_ids,omitempty"`
	PromotablePageIDs []string `json:"promotable_page_ids,omitempty"`
	PromotablePages []map[string]interface{} `json:"promotable_pages,omitempty"`
	PromotableURLs []string `json:"promotable_urls,omitempty"`
	RequestChangesReason string `json:"request_changes_reason,omitempty"`
	ReviewedUser string `json:"reviewed_user,omitempty"`
	SpendLimit int `json:"spend_limit,omitempty"`
	Status string `json:"status,omitempty"`
	Subvertical string `json:"subvertical,omitempty"`
	SubverticalV2 string `json:"subvertical_v2,omitempty"`
	SupportingDocument string `json:"supporting_document,omitempty"`
	TimeChangesRequested time.Time `json:"time_changes_requested,omitempty"`
	TimeCreated time.Time `json:"time_created,omitempty"`
	TimeUpdated time.Time `json:"time_updated,omitempty"`
	TimeZone string `json:"time_zone,omitempty"`
	UsedResellerLink bool `json:"used_reseller_link,omitempty"`
	UserID string `json:"user_id,omitempty"`
	UserName string `json:"user_name,omitempty"`
	Vertical string `json:"vertical,omitempty"`
	VerticalV2 string `json:"vertical_v2,omitempty"`
	ViewedByReseller bool `json:"viewed_by_reseller,omitempty"`
	ZipCode string `json:"zip_code,omitempty"`
}

// CloudGame represents the Facebook CloudGame object
type CloudGame struct {
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	Owner *Profile `json:"owner,omitempty"`
	PlayableAdFileSize uint `json:"playable_ad_file_size,omitempty"`
	PlayableAdOrientation string `json:"playable_ad_orientation,omitempty"`
	PlayableAdPackageName string `json:"playable_ad_package_name,omitempty"`
	PlayableAdRejectReason string `json:"playable_ad_reject_reason,omitempty"`
	PlayableAdStatus string `json:"playable_ad_status,omitempty"`
	PlayableAdUploadTime time.Time `json:"playable_ad_upload_time,omitempty"`
}

// CloudbridgeDatasetStatus represents the Facebook CloudbridgeDatasetStatus object
type CloudbridgeDatasetStatus struct {
	AppRedactedEvent []string `json:"app_redacted_event,omitempty"`
	AppSensitiveParams []map[string][]string `json:"app_sensitive_params,omitempty"`
	AppUnverifiedEvent []string `json:"app_unverified_event,omitempty"`
	HasAppAssociated bool `json:"has_app_associated,omitempty"`
	IsAppProhibited bool `json:"is_app_prohibited,omitempty"`
	IsDataset bool `json:"is_dataset,omitempty"`
}

// CollaborativeAdsPartnerBusinesses represents the Facebook CollaborativeAdsPartnerBusinesses object
type CollaborativeAdsPartnerBusinesses struct {
	CollaborativeAdsPartnerBusinessesInfo []*Business `json:"collaborative_ads_partner_businesses_info,omitempty"`
	DedicatedPartnerBusinessInfo *Business `json:"dedicated_partner_business_info,omitempty"`
}

// CollaborativeAdsPartnerInfoListItem represents the Facebook CollaborativeAdsPartnerInfoListItem object
type CollaborativeAdsPartnerInfoListItem struct {
}

// CollaborativeAdsShareSettings represents the Facebook CollaborativeAdsShareSettings object
type CollaborativeAdsShareSettings struct {
	AgencyBusiness *Business `json:"agency_business,omitempty"`
	ID string `json:"id,omitempty"`
	ProductCatalogProxyID string `json:"product_catalog_proxy_id,omitempty"`
	UtmCampaign string `json:"utm_campaign,omitempty"`
	UtmMedium string `json:"utm_medium,omitempty"`
	UtmSource string `json:"utm_source,omitempty"`
}

// ColumnSuggestions represents the Facebook ColumnSuggestions object
type ColumnSuggestions struct {
	Explanations map[string]interface{} `json:"explanations,omitempty"`
	Format []string `json:"format,omitempty"`
	Objective []string `json:"objective,omitempty"`
	OptimizationGoals []string `json:"optimization_goals,omitempty"`
}

// Comment represents the Facebook Comment object
type Comment struct {
	AdminCreator *User `json:"admin_creator,omitempty"`
	Application *Application `json:"application,omitempty"`
	Attachment map[string]interface{} `json:"attachment,omitempty"`
	CanComment bool `json:"can_comment,omitempty"`
	CanHide bool `json:"can_hide,omitempty"`
	CanLike bool `json:"can_like,omitempty"`
	CanRemove bool `json:"can_remove,omitempty"`
	CanReplyPrivately bool `json:"can_reply_privately,omitempty"`
	CommentCount uint `json:"comment_count,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	From map[string]interface{} `json:"from,omitempty"`
	ID string `json:"id,omitempty"`
	IsHidden bool `json:"is_hidden,omitempty"`
	IsPrivate bool `json:"is_private,omitempty"`
	LikeCount uint `json:"like_count,omitempty"`
	LiveBroadcastTimestamp uint `json:"live_broadcast_timestamp,omitempty"`
	Message string `json:"message,omitempty"`
	MessageTags []*EntityAtTextRange `json:"message_tags,omitempty"`
	Object map[string]interface{} `json:"object,omitempty"`
	Parent *Comment `json:"parent,omitempty"`
	PermalinkURL string `json:"permalink_url,omitempty"`
	PrivateReplyConversation map[string]interface{} `json:"private_reply_conversation,omitempty"`
	UserLikes bool `json:"user_likes,omitempty"`
}

// CommerceMerchantSettings represents the Facebook CommerceMerchantSettings object
type CommerceMerchantSettings struct {
	CheckoutConfig string `json:"checkout_config,omitempty"`
	CheckoutMessage string `json:"checkout_message,omitempty"`
	ContactEmail string `json:"contact_email,omitempty"`
	Cta string `json:"cta,omitempty"`
	DisplayName string `json:"display_name,omitempty"`
	FacebookChannel map[string]interface{} `json:"facebook_channel,omitempty"`
	ID string `json:"id,omitempty"`
	InstagramChannel map[string]interface{} `json:"instagram_channel,omitempty"`
	KoreaFtcListing string `json:"korea_ftc_listing,omitempty"`
	MerchantPage *Profile `json:"merchant_page,omitempty"`
	MerchantStatus string `json:"merchant_status,omitempty"`
	OnsiteCommerceMerchant map[string]interface{} `json:"onsite_commerce_merchant,omitempty"`
	PaymentProvider string `json:"payment_provider,omitempty"`
	PrivacyPolicyLocalized string `json:"privacy_policy_localized,omitempty"`
	ReturnPolicyLocalized string `json:"return_policy_localized,omitempty"`
	ReviewRejectionMessages []string `json:"review_rejection_messages,omitempty"`
	ReviewRejectionReasons []string `json:"review_rejection_reasons,omitempty"`
	Terms string `json:"terms,omitempty"`
}

// CommerceMerchantSettingsSetupStatus represents the Facebook CommerceMerchantSettingsSetupStatus object
type CommerceMerchantSettingsSetupStatus struct {
	DealsSetup string `json:"deals_setup,omitempty"`
	MarketplaceApprovalStatus string `json:"marketplace_approval_status,omitempty"`
	MarketplaceApprovalStatusDetails map[string]interface{} `json:"marketplace_approval_status_details,omitempty"`
	PaymentSetup string `json:"payment_setup,omitempty"`
	ReviewStatus map[string]interface{} `json:"review_status,omitempty"`
	ShopSetup string `json:"shop_setup,omitempty"`
}

// CommerceOrder represents the Facebook CommerceOrder object
type CommerceOrder struct {
	BuyerDetails map[string]interface{} `json:"buyer_details,omitempty"`
	Channel string `json:"channel,omitempty"`
	ContainsBopisItems bool `json:"contains_bopis_items,omitempty"`
	Created string `json:"created,omitempty"`
	EstimatedPaymentDetails map[string]interface{} `json:"estimated_payment_details,omitempty"`
	ID string `json:"id,omitempty"`
	IsGroupBuy bool `json:"is_group_buy,omitempty"`
	IsTestOrder bool `json:"is_test_order,omitempty"`
	LastUpdated string `json:"last_updated,omitempty"`
	MerchantOrderID string `json:"merchant_order_id,omitempty"`
	OrderStatus map[string]interface{} `json:"order_status,omitempty"`
	PreOrderDetails map[string]interface{} `json:"pre_order_details,omitempty"`
	SelectedShippingOption map[string]interface{} `json:"selected_shipping_option,omitempty"`
	ShipByDate string `json:"ship_by_date,omitempty"`
	ShippingAddress map[string]interface{} `json:"shipping_address,omitempty"`
}

// CommerceOrderTransactionDetail represents the Facebook CommerceOrderTransactionDetail object
type CommerceOrderTransactionDetail struct {
	MerchantOrderID string `json:"merchant_order_id,omitempty"`
	NetPaymentAmount map[string]interface{} `json:"net_payment_amount,omitempty"`
	OrderCreated string `json:"order_created,omitempty"`
	OrderDetails *CommerceOrder `json:"order_details,omitempty"`
	OrderID string `json:"order_id,omitempty"`
	PayoutReferenceID string `json:"payout_reference_id,omitempty"`
	PostalCode string `json:"postal_code,omitempty"`
	ProcessingFee map[string]interface{} `json:"processing_fee,omitempty"`
	State string `json:"state,omitempty"`
	TaxRate string `json:"tax_rate,omitempty"`
	TransactionDate string `json:"transaction_date,omitempty"`
	TransactionType string `json:"transaction_type,omitempty"`
	TransferID string `json:"transfer_id,omitempty"`
}

// CommercePayout represents the Facebook CommercePayout object
type CommercePayout struct {
	Amount map[string]interface{} `json:"amount,omitempty"`
	PayoutDate string `json:"payout_date,omitempty"`
	PayoutReferenceID string `json:"payout_reference_id,omitempty"`
	Status string `json:"status,omitempty"`
	TransferID string `json:"transfer_id,omitempty"`
}

// CommerceSettings represents the Facebook CommerceSettings object
type CommerceSettings struct {
	Inventory int `json:"inventory,omitempty"`
	TotalInventory int `json:"total_inventory,omitempty"`
}

// ConnectionsTargeting represents the Facebook ConnectionsTargeting object
type ConnectionsTargeting struct {
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
}

// ContactsMessengerSyncConfig represents the Facebook ContactsMessengerSyncConfig object
type ContactsMessengerSyncConfig struct {
	Enabled bool `json:"enabled,omitempty"`
}

// ContentBlockList represents the Facebook ContentBlockList object
type ContentBlockList struct {
	Business *Business `json:"business,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
}

// ContentDeliveryReport represents the Facebook ContentDeliveryReport object
type ContentDeliveryReport struct {
	ContentID string `json:"content_id,omitempty"`
	ContentName string `json:"content_name,omitempty"`
	ContentURL string `json:"content_url,omitempty"`
	CreatorID string `json:"creator_id,omitempty"`
	CreatorName string `json:"creator_name,omitempty"`
	CreatorURL string `json:"creator_url,omitempty"`
	EstimatedImpressions uint `json:"estimated_impressions,omitempty"`
}

// ContentPublishingLimitResponse represents the Facebook ContentPublishingLimitResponse object
type ContentPublishingLimitResponse struct {
	Config map[string]interface{} `json:"config,omitempty"`
	QuotaUsage int `json:"quota_usage,omitempty"`
}

// ContextualBundlingSpec represents the Facebook ContextualBundlingSpec object
type ContextualBundlingSpec struct {
	Status string `json:"status,omitempty"`
}

// ConversionActionQuery represents the Facebook ConversionActionQuery object
type ConversionActionQuery struct {
	ActionType []map[string]interface{} `json:"action.type,omitempty"`
	Application []map[string]interface{} `json:"application,omitempty"`
	ConversionID []string `json:"conversion_id,omitempty"`
	Creative []map[string]interface{} `json:"creative,omitempty"`
	Dataset []string `json:"dataset,omitempty"`
	Event []string `json:"event,omitempty"`
	EventCreator []string `json:"event.creator,omitempty"`
	EventType []string `json:"event_type,omitempty"`
	FbPixel []string `json:"fb_pixel,omitempty"`
	FbPixelEvent []string `json:"fb_pixel_event,omitempty"`
	Leadgen []string `json:"leadgen,omitempty"`
	Object []string `json:"object,omitempty"`
	ObjectDomain []string `json:"object.domain,omitempty"`
	Offer []string `json:"offer,omitempty"`
	OfferCreator []string `json:"offer.creator,omitempty"`
	OffsitePixel []string `json:"offsite_pixel,omitempty"`
	Page []string `json:"page,omitempty"`
	PageParent []string `json:"page.parent,omitempty"`
	Post []string `json:"post,omitempty"`
	PostObject []string `json:"post.object,omitempty"`
	PostObjectWall []string `json:"post.object.wall,omitempty"`
	PostWall []string `json:"post.wall,omitempty"`
	Question []string `json:"question,omitempty"`
	QuestionCreator []string `json:"question.creator,omitempty"`
	Response []string `json:"response,omitempty"`
	Subtype []string `json:"subtype,omitempty"`
}

// ConversionHealthKPI represents the Facebook ConversionHealthKPI object
type ConversionHealthKPI struct {
	HealthIndicator string `json:"health_indicator,omitempty"`
	ImpactedBrowsersMatchRate float64 `json:"impacted_browsers_match_rate,omitempty"`
	ImpactedBrowsersMatchRateMomTrend float64 `json:"impacted_browsers_match_rate_mom_trend,omitempty"`
	ImpactedBrowsersTrafficShare float64 `json:"impacted_browsers_traffic_share,omitempty"`
	ImpactedBrowsersTrafficShareMomTrend float64 `json:"impacted_browsers_traffic_share_mom_trend,omitempty"`
	MatchRate float64 `json:"match_rate,omitempty"`
	MatchRateMomTrend float64 `json:"match_rate_mom_trend,omitempty"`
	MatchRateVerticalBenchmark float64 `json:"match_rate_vertical_benchmark,omitempty"`
	MatchRateVsBenchmarkMomTrend float64 `json:"match_rate_vs_benchmark_mom_trend,omitempty"`
}

// CopyrightAttributionInsights represents the Facebook CopyrightAttributionInsights object
type CopyrightAttributionInsights struct {
	L7AttributionPageView int `json:"l7_attribution_page_view,omitempty"`
	L7AttributionPageViewDelta float64 `json:"l7_attribution_page_view_delta,omitempty"`
	L7AttributionVideoView int `json:"l7_attribution_video_view,omitempty"`
	L7AttributionVideoViewDelta float64 `json:"l7_attribution_video_view_delta,omitempty"`
	MetricsEndingDate string `json:"metrics_ending_date,omitempty"`
}

// CopyrightAudioAsset represents the Facebook CopyrightAudioAsset object
type CopyrightAudioAsset struct {
	AudioAvailabilityStatus string `json:"audio_availability_status,omitempty"`
	AudioLibraryPolicy []map[string][]map[string]map[string]interface{} `json:"audio_library_policy,omitempty"`
	CreationTime time.Time `json:"creation_time,omitempty"`
	ID string `json:"id,omitempty"`
	ReferenceFiles []map[string]interface{} `json:"reference_files,omitempty"`
	Title string `json:"title,omitempty"`
	UpdateTime time.Time `json:"update_time,omitempty"`
}

// CopyrightMediaMisuse represents the Facebook CopyrightMediaMisuse object
type CopyrightMediaMisuse struct {
	AudioSegments []map[string]interface{} `json:"audio_segments,omitempty"`
	CreationTime time.Time `json:"creation_time,omitempty"`
	DisabledAudioSegments []map[string]interface{} `json:"disabled_audio_segments,omitempty"`
	DisabledVideoSegments []map[string]interface{} `json:"disabled_video_segments,omitempty"`
	EntireFileIssue bool `json:"entire_file_issue,omitempty"`
	EntireFileIssueReasons []string `json:"entire_file_issue_reasons,omitempty"`
	ExpirationTime time.Time `json:"expiration_time,omitempty"`
	ID string `json:"id,omitempty"`
	MediaAssetID string `json:"media_asset_id,omitempty"`
	Reasons []string `json:"reasons,omitempty"`
	RequestedAudioSegments []map[string]interface{} `json:"requested_audio_segments,omitempty"`
	RequestedVideoSegments []map[string]interface{} `json:"requested_video_segments,omitempty"`
	ResolutionType string `json:"resolution_type,omitempty"`
	Status string `json:"status,omitempty"`
	UpdateTime time.Time `json:"update_time,omitempty"`
	VideoCopyright *VideoCopyright `json:"video_copyright,omitempty"`
	VideoSegments []map[string]interface{} `json:"video_segments,omitempty"`
}

// CopyrightOwnershipTransfer represents the Facebook CopyrightOwnershipTransfer object
type CopyrightOwnershipTransfer struct {
	ID string `json:"id,omitempty"`
	ReceivingRightsHolder *Profile `json:"receiving_rights_holder,omitempty"`
	SendingRightsHolder *Profile `json:"sending_rights_holder,omitempty"`
	Status string `json:"status,omitempty"`
	TransferTerritories []string `json:"transfer_territories,omitempty"`
	TransferTime time.Time `json:"transfer_time,omitempty"`
}

// CopyrightReferenceContainer represents the Facebook CopyrightReferenceContainer object
type CopyrightReferenceContainer struct {
	ContentType string `json:"content_type,omitempty"`
	CopyrightCreationTime time.Time `json:"copyright_creation_time,omitempty"`
	DownloadHdURL string `json:"download_hd_url,omitempty"`
	DurationInSec float64 `json:"duration_in_sec,omitempty"`
	ID string `json:"id,omitempty"`
	Iswc string `json:"iswc,omitempty"`
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	PlayableVideoUri string `json:"playable_video_uri,omitempty"`
	PublishedTime time.Time `json:"published_time,omitempty"`
	ThumbnailURL string `json:"thumbnail_url,omitempty"`
	Title string `json:"title,omitempty"`
	UniversalContentID string `json:"universal_content_id,omitempty"`
	WriterNames []string `json:"writer_names,omitempty"`
}

// CoverPhoto represents the Facebook CoverPhoto object
type CoverPhoto struct {
	CoverID string `json:"cover_id,omitempty"`
	ID string `json:"id,omitempty"`
	OffsetX float64 `json:"offset_x,omitempty"`
	OffsetY float64 `json:"offset_y,omitempty"`
	Source string `json:"source,omitempty"`
}

// CreativeAssetTag represents the Facebook CreativeAssetTag object
type CreativeAssetTag struct {
	Name string `json:"name,omitempty"`
}

// CreativeHistory represents the Facebook CreativeHistory object
type CreativeHistory struct {
	CreativeFingerprint int `json:"creative_fingerprint,omitempty"`
	TimeRanges []map[string]interface{} `json:"time_ranges,omitempty"`
}

// CreativeMulticellTestConfig represents the Facebook CreativeMulticellTestConfig object
type CreativeMulticellTestConfig struct {
	BudgetPercentage int `json:"budget_percentage,omitempty"`
	ConfiguredCellCount int `json:"configured_cell_count,omitempty"`
	DailyBudget int `json:"daily_budget,omitempty"`
	EntrySource string `json:"entry_source,omitempty"`
	LifetimeBudget int `json:"lifetime_budget,omitempty"`
	UseExistingDailyBudget bool `json:"use_existing_daily_budget,omitempty"`
}

// CreatorAssetCreative represents the Facebook CreatorAssetCreative object
type CreatorAssetCreative struct {
	ID string `json:"id,omitempty"`
	ImageURL string `json:"image_url,omitempty"`
	ModerationStatus string `json:"moderation_status,omitempty"`
	ProductItemRetailerID string `json:"product_item_retailer_id,omitempty"`
	ProductURL string `json:"product_url,omitempty"`
	RetailerID string `json:"retailer_id,omitempty"`
	VideoURL string `json:"video_url,omitempty"`
}

// CreditCard represents the Facebook CreditCard object
type CreditCard struct {
	BillingAddress map[string]interface{} `json:"billing_address,omitempty"`
	CardCobadging string `json:"card_cobadging,omitempty"`
	CardHolderName string `json:"card_holder_name,omitempty"`
	CardType string `json:"card_type,omitempty"`
	CredentialID int `json:"credential_id,omitempty"`
	DefaultReceivingMethodProducts []string `json:"default_receiving_method_products,omitempty"`
	ExpiryMonth string `json:"expiry_month,omitempty"`
	ExpiryYear string `json:"expiry_year,omitempty"`
	ID string `json:"id,omitempty"`
	IsCvvTrickyBin bool `json:"is_cvv_tricky_bin,omitempty"`
	IsEnabled bool `json:"is_enabled,omitempty"`
	IsLastUsed bool `json:"is_last_used,omitempty"`
	IsNetworkTokenizedInIndia bool `json:"is_network_tokenized_in_india,omitempty"`
	IsSoftDisabled bool `json:"is_soft_disabled,omitempty"`
	IsUserVerified bool `json:"is_user_verified,omitempty"`
	IsZipVerified bool `json:"is_zip_verified,omitempty"`
	Last4 string `json:"last4,omitempty"`
	ReadableCardType string `json:"readable_card_type,omitempty"`
	TimeCreated time.Time `json:"time_created,omitempty"`
	TimeCreatedTs int `json:"time_created_ts,omitempty"`
	Type string `json:"type,omitempty"`
}

// CreditPartitionActionOptions represents the Facebook CreditPartitionActionOptions object
type CreditPartitionActionOptions struct {
	LiabilityType map[string]interface{} `json:"liability_type,omitempty"`
	PartitionType map[string]interface{} `json:"partition_type,omitempty"`
	SendBillTo map[string]interface{} `json:"send_bill_to,omitempty"`
}

// Currency represents the Facebook Currency object
type Currency struct {
	CurrencyOffset uint `json:"currency_offset,omitempty"`
	UsdExchange float64 `json:"usd_exchange,omitempty"`
	UsdExchangeInverse float64 `json:"usd_exchange_inverse,omitempty"`
	UserCurrency string `json:"user_currency,omitempty"`
}

// CurrencyAmount represents the Facebook CurrencyAmount object
type CurrencyAmount struct {
	Amount string `json:"amount,omitempty"`
	AmountInHundredths string `json:"amount_in_hundredths,omitempty"`
	Currency string `json:"currency,omitempty"`
	OffsettedAmount string `json:"offsetted_amount,omitempty"`
}

// CustomAudience represents the Facebook CustomAudience object
type CustomAudience struct {
	AccountID string `json:"account_id,omitempty"`
	ApproximateCountLowerBound int `json:"approximate_count_lower_bound,omitempty"`
	ApproximateCountUpperBound int `json:"approximate_count_upper_bound,omitempty"`
	CustomerFileSource string `json:"customer_file_source,omitempty"`
	DataSource *CustomAudienceDataSource `json:"data_source,omitempty"`
	DataSourceTypes string `json:"data_source_types,omitempty"`
	DatafileCustomAudienceUploadingStatus string `json:"datafile_custom_audience_uploading_status,omitempty"`
	DeleteTime int `json:"delete_time,omitempty"`
	DeliveryStatus *CustomAudienceStatus `json:"delivery_status,omitempty"`
	Description string `json:"description,omitempty"`
	ExcludedCustomAudiences []*CustomAudience `json:"excluded_custom_audiences,omitempty"`
	ExternalEventSource *AdsPixel `json:"external_event_source,omitempty"`
	HouseholdAudience int `json:"household_audience,omitempty"`
	ID string `json:"id,omitempty"`
	IncludedCustomAudiences []*CustomAudience `json:"included_custom_audiences,omitempty"`
	IsEligibleForSacCampaigns bool `json:"is_eligible_for_sac_campaigns,omitempty"`
	IsHousehold bool `json:"is_household,omitempty"`
	IsSnapshot bool `json:"is_snapshot,omitempty"`
	IsValueBased bool `json:"is_value_based,omitempty"`
	LookalikeAudienceIDs []string `json:"lookalike_audience_ids,omitempty"`
	LookalikeSpec *LookalikeSpec `json:"lookalike_spec,omitempty"`
	Name string `json:"name,omitempty"`
	OperationStatus *CustomAudienceStatus `json:"operation_status,omitempty"`
	OptOutLink string `json:"opt_out_link,omitempty"`
	OwnerBusiness *Business `json:"owner_business,omitempty"`
	PageDeletionMarkedDeleteTime int `json:"page_deletion_marked_delete_time,omitempty"`
	PermissionForActions *AudiencePermissionForActions `json:"permission_for_actions,omitempty"`
	PixelID string `json:"pixel_id,omitempty"`
	RegulatedAudienceSpec *LookalikeSpec `json:"regulated_audience_spec,omitempty"`
	RetentionDays int `json:"retention_days,omitempty"`
	RevSharePolicyID uint `json:"rev_share_policy_id,omitempty"`
	Rule string `json:"rule,omitempty"`
	RuleAggregation string `json:"rule_aggregation,omitempty"`
	RuleV2 string `json:"rule_v2,omitempty"`
	SeedAudience int `json:"seed_audience,omitempty"`
	SharingStatus *CustomAudienceSharingStatus `json:"sharing_status,omitempty"`
	Subtype string `json:"subtype,omitempty"`
	TimeContentUpdated uint `json:"time_content_updated,omitempty"`
	TimeCreated uint `json:"time_created,omitempty"`
	TimeUpdated uint `json:"time_updated,omitempty"`
}

// CustomAudienceAdAccount represents the Facebook CustomAudienceAdAccount object
type CustomAudienceAdAccount struct {
	ID string `json:"id,omitempty"`
}

// CustomAudienceCapabilities represents the Facebook CustomAudienceCapabilities object
type CustomAudienceCapabilities struct {
	Capabilities map[string]interface{} `json:"capabilities,omitempty"`
}

// CustomAudienceDataSource represents the Facebook CustomAudienceDataSource object
type CustomAudienceDataSource struct {
	CreationParams string `json:"creation_params,omitempty"`
	SubType CustomaudiencedatasourceSubType `json:"sub_type,omitempty"`
	Type CustomaudiencedatasourceType `json:"type,omitempty"`
}

// CustomAudienceGroup represents the Facebook CustomAudienceGroup object
type CustomAudienceGroup struct {
	AudienceTypeParamName string `json:"audience_type_param_name,omitempty"`
	ExistingCustomerTag string `json:"existing_customer_tag,omitempty"`
	NewCustomerTag string `json:"new_customer_tag,omitempty"`
}

// CustomAudienceHealth represents the Facebook CustomAudienceHealth object
type CustomAudienceHealth struct {
	Health []map[string]interface{} `json:"health,omitempty"`
}

// CustomAudienceIntegrityFlagsAndAppealStatus represents the Facebook CustomAudienceIntegrityFlagsAndAppealStatus object
type CustomAudienceIntegrityFlagsAndAppealStatus struct {
	CloseoutTime uint `json:"closeout_time,omitempty"`
	FlaggedFields []string `json:"flagged_fields,omitempty"`
	LatestAppealRequestor string `json:"latest_appeal_requestor,omitempty"`
	LatestAppealTime uint `json:"latest_appeal_time,omitempty"`
	RestrictionStatus string `json:"restriction_status,omitempty"`
}

// CustomAudienceSalts represents the Facebook CustomAudienceSalts object
type CustomAudienceSalts struct {
	AppID int `json:"app_id,omitempty"`
	PublicKey string `json:"public_key,omitempty"`
	Salts []map[string]interface{} `json:"salts,omitempty"`
	UserID int `json:"user_id,omitempty"`
}

// CustomAudienceSession represents the Facebook CustomAudienceSession object
type CustomAudienceSession struct {
	EndTime string `json:"end_time,omitempty"`
	NumInvalidEntries string `json:"num_invalid_entries,omitempty"`
	NumMatched string `json:"num_matched,omitempty"`
	NumReceived string `json:"num_received,omitempty"`
	Progress string `json:"progress,omitempty"`
	SessionID string `json:"session_id,omitempty"`
	Stage string `json:"stage,omitempty"`
	StartTime string `json:"start_time,omitempty"`
}

// CustomAudienceSharedAccountCampaignInfo represents the Facebook CustomAudienceSharedAccountCampaignInfo object
type CustomAudienceSharedAccountCampaignInfo struct {
	AccountID string `json:"account_id,omitempty"`
	AccountName string `json:"account_name,omitempty"`
	AdsetExcludingCount uint `json:"adset_excluding_count,omitempty"`
	AdsetIncludingCount uint `json:"adset_including_count,omitempty"`
	CampaignDeliveryStatus string `json:"campaign_delivery_status,omitempty"`
	CampaignObjective string `json:"campaign_objective,omitempty"`
	CampaignPages []map[string]interface{} `json:"campaign_pages,omitempty"`
	CampaignSchedule string `json:"campaign_schedule,omitempty"`
}

// CustomAudienceSharingStatus represents the Facebook CustomAudienceSharingStatus object
type CustomAudienceSharingStatus struct {
	SharingRelationshipID uint `json:"sharing_relationship_id,omitempty"`
	Status string `json:"status,omitempty"`
}

// CustomAudienceStatus represents the Facebook CustomAudienceStatus object
type CustomAudienceStatus struct {
	Code uint `json:"code,omitempty"`
	Description string `json:"description,omitempty"`
}

// CustomAudiencesTOS represents the Facebook CustomAudiencesTOS object
type CustomAudiencesTOS struct {
	Content string `json:"content,omitempty"`
	ID string `json:"id,omitempty"`
	Type string `json:"type,omitempty"`
}

// CustomAudiencesharedAccountInfo represents the Facebook CustomAudiencesharedAccountInfo object
type CustomAudiencesharedAccountInfo struct {
	AccountID string `json:"account_id,omitempty"`
	AccountName string `json:"account_name,omitempty"`
	BusinessID string `json:"business_id,omitempty"`
	BusinessName string `json:"business_name,omitempty"`
	SharingStatus string `json:"sharing_status,omitempty"`
}

// CustomConversion represents the Facebook CustomConversion object
type CustomConversion struct {
	AccountID string `json:"account_id,omitempty"`
	AggregationRule string `json:"aggregation_rule,omitempty"`
	Business *Business `json:"business,omitempty"`
	CreationTime time.Time `json:"creation_time,omitempty"`
	CustomEventType CustomconversionCustomEventType `json:"custom_event_type,omitempty"`
	DataSources []*ExternalEventSource `json:"data_sources,omitempty"`
	DefaultConversionValue int `json:"default_conversion_value,omitempty"`
	Description string `json:"description,omitempty"`
	EventSourceType string `json:"event_source_type,omitempty"`
	FirstFiredTime time.Time `json:"first_fired_time,omitempty"`
	ID string `json:"id,omitempty"`
	IsArchived bool `json:"is_archived,omitempty"`
	IsUnavailable bool `json:"is_unavailable,omitempty"`
	LastFiredTime time.Time `json:"last_fired_time,omitempty"`
	Name string `json:"name,omitempty"`
	OfflineConversionDataSet *OfflineConversionDataSet `json:"offline_conversion_data_set,omitempty"`
	Pixel *AdsPixel `json:"pixel,omitempty"`
	RetentionDays uint `json:"retention_days,omitempty"`
	Rule string `json:"rule,omitempty"`
}

// CustomConversionActivities represents the Facebook CustomConversionActivities object
type CustomConversionActivities struct {
	AppID uint `json:"app_id,omitempty"`
	Data string `json:"data,omitempty"`
	EventType string `json:"event_type,omitempty"`
	Timestamp time.Time `json:"timestamp,omitempty"`
}

// CustomConversionStatsResult represents the Facebook CustomConversionStatsResult object
type CustomConversionStatsResult struct {
	Aggregation CustomconversionstatsresultAggregation `json:"aggregation,omitempty"`
	Data []map[string]interface{} `json:"data,omitempty"`
	Timestamp time.Time `json:"timestamp,omitempty"`
}

// CustomUserSettings represents the Facebook CustomUserSettings object
type CustomUserSettings struct {
	PageLevelPersistentMenu []map[string]interface{} `json:"page_level_persistent_menu,omitempty"`
	UserLevelPersistentMenu []map[string]interface{} `json:"user_level_persistent_menu,omitempty"`
}

// DACheck represents the Facebook DACheck object
type DACheck struct {
	ActionUri string `json:"action_uri,omitempty"`
	Description string `json:"description,omitempty"`
	Key string `json:"key,omitempty"`
	Result string `json:"result,omitempty"`
	Title string `json:"title,omitempty"`
	UserMessage string `json:"user_message,omitempty"`
}

// Dataset represents the Facebook Dataset object
type Dataset struct {
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
}

// DayPart represents the Facebook DayPart object
type DayPart struct {
	Days []int `json:"days,omitempty"`
	EndMinute int `json:"end_minute,omitempty"`
	StartMinute int `json:"start_minute,omitempty"`
	TimezoneType string `json:"timezone_type,omitempty"`
}

// DeliveryCheck represents the Facebook DeliveryCheck object
type DeliveryCheck struct {
	CheckName string `json:"check_name,omitempty"`
	Description string `json:"description,omitempty"`
	ExtraInfo *DeliveryCheckExtraInfo `json:"extra_info,omitempty"`
	Summary string `json:"summary,omitempty"`
}

// DeliveryCheckExtraInfo represents the Facebook DeliveryCheckExtraInfo object
type DeliveryCheckExtraInfo struct {
	AdgroupIDs []string `json:"adgroup_ids,omitempty"`
	CampaignIDs []string `json:"campaign_ids,omitempty"`
	Countries []string `json:"countries,omitempty"`
}

// DeliveryInfo represents the Facebook DeliveryInfo object
type DeliveryInfo struct {
	ActiveAcceleratedCampaignCount int `json:"active_accelerated_campaign_count,omitempty"`
	ActiveDayPartedCampaignCount int `json:"active_day_parted_campaign_count,omitempty"`
	AdPenaltyMap []map[string]bool `json:"ad_penalty_map,omitempty"`
	AreAllDailyBudgetsSpent bool `json:"are_all_daily_budgets_spent,omitempty"`
	CreditNeededAdsCount int `json:"credit_needed_ads_count,omitempty"`
	EligibleForDeliveryInsights bool `json:"eligible_for_delivery_insights,omitempty"`
	EndTime time.Time `json:"end_time,omitempty"`
	HasAccountHitSpendLimit bool `json:"has_account_hit_spend_limit,omitempty"`
	HasCampaignGroupHitSpendLimit bool `json:"has_campaign_group_hit_spend_limit,omitempty"`
	HasNoActiveAds bool `json:"has_no_active_ads,omitempty"`
	HasNoAds bool `json:"has_no_ads,omitempty"`
	InactiveAdsCount int `json:"inactive_ads_count,omitempty"`
	InactiveCampaignCount int `json:"inactive_campaign_count,omitempty"`
	IsAccountClosed bool `json:"is_account_closed,omitempty"`
	IsAccountDisabled bool `json:"is_account_disabled,omitempty"`
	IsAdUneconomical bool `json:"is_ad_uneconomical,omitempty"`
	IsAdfarmPenalized bool `json:"is_adfarm_penalized,omitempty"`
	IsAdgroupPartiallyRejected bool `json:"is_adgroup_partially_rejected,omitempty"`
	IsCampaignAccelerated bool `json:"is_campaign_accelerated,omitempty"`
	IsCampaignCompleted bool `json:"is_campaign_completed,omitempty"`
	IsCampaignDayParted bool `json:"is_campaign_day_parted,omitempty"`
	IsCampaignDisabled bool `json:"is_campaign_disabled,omitempty"`
	IsCampaignGroupDisabled bool `json:"is_campaign_group_disabled,omitempty"`
	IsClickbaitPenalized bool `json:"is_clickbait_penalized,omitempty"`
	IsDailyBudgetSpent bool `json:"is_daily_budget_spent,omitempty"`
	IsEngagementBaitPenalized bool `json:"is_engagement_bait_penalized,omitempty"`
	IsLqwePenalized bool `json:"is_lqwe_penalized,omitempty"`
	IsReachAndFrequencyMisconfigured bool `json:"is_reach_and_frequency_misconfigured,omitempty"`
	IsSensationalismPenalized bool `json:"is_sensationalism_penalized,omitempty"`
	IsSplitTestActive bool `json:"is_split_test_active,omitempty"`
	IsSplitTestValid bool `json:"is_split_test_valid,omitempty"`
	LiftStudyTimePeriod string `json:"lift_study_time_period,omitempty"`
	NeedsCredit bool `json:"needs_credit,omitempty"`
	NeedsTaxNumber bool `json:"needs_tax_number,omitempty"`
	NonDeletedAdsCount int `json:"non_deleted_ads_count,omitempty"`
	NotDeliveringCampaignCount int `json:"not_delivering_campaign_count,omitempty"`
	PendingAdsCount int `json:"pending_ads_count,omitempty"`
	ReachFrequencyCampaignUnderdeliveryReason string `json:"reach_frequency_campaign_underdelivery_reason,omitempty"`
	RejectedAdsCount int `json:"rejected_ads_count,omitempty"`
	StartTime time.Time `json:"start_time,omitempty"`
	Status string `json:"status,omitempty"`
	TextPenaltyLevel string `json:"text_penalty_level,omitempty"`
}

// DeliveryStatus represents the Facebook DeliveryStatus object
type DeliveryStatus struct {
	Status string `json:"status,omitempty"`
	Substatuses []string `json:"substatuses,omitempty"`
}

// DeliveryWindow represents the Facebook DeliveryWindow object
type DeliveryWindow struct {
	Ad int `json:"ad,omitempty"`
	Ae int `json:"ae,omitempty"`
	Af int `json:"af,omitempty"`
	Ag int `json:"ag,omitempty"`
	Ai int `json:"ai,omitempty"`
	Al int `json:"al,omitempty"`
	All int `json:"all,omitempty"`
	Am int `json:"am,omitempty"`
	An int `json:"an,omitempty"`
	Ao int `json:"ao,omitempty"`
	Aq int `json:"aq,omitempty"`
	Ar int `json:"ar,omitempty"`
	As int `json:"as,omitempty"`
	At int `json:"at,omitempty"`
	Au int `json:"au,omitempty"`
	Aw int `json:"aw,omitempty"`
	Ax int `json:"ax,omitempty"`
	Az int `json:"az,omitempty"`
	Ba int `json:"ba,omitempty"`
	Bb int `json:"bb,omitempty"`
	Bd int `json:"bd,omitempty"`
	Be int `json:"be,omitempty"`
	Bf int `json:"bf,omitempty"`
	Bg int `json:"bg,omitempty"`
	Bh int `json:"bh,omitempty"`
	Bi int `json:"bi,omitempty"`
	Bj int `json:"bj,omitempty"`
	Bl int `json:"bl,omitempty"`
	Bm int `json:"bm,omitempty"`
	Bn int `json:"bn,omitempty"`
	Bo int `json:"bo,omitempty"`
	Bq int `json:"bq,omitempty"`
	Br int `json:"br,omitempty"`
	Bs int `json:"bs,omitempty"`
	Bt int `json:"bt,omitempty"`
	Bv int `json:"bv,omitempty"`
	Bw int `json:"bw,omitempty"`
	By int `json:"by,omitempty"`
	Bz int `json:"bz,omitempty"`
	Ca int `json:"ca,omitempty"`
	Cc int `json:"cc,omitempty"`
	Cd int `json:"cd,omitempty"`
	Cf int `json:"cf,omitempty"`
	Cg int `json:"cg,omitempty"`
	Ch int `json:"ch,omitempty"`
	Ci int `json:"ci,omitempty"`
	Ck int `json:"ck,omitempty"`
	Cl int `json:"cl,omitempty"`
	Cm int `json:"cm,omitempty"`
	Cn int `json:"cn,omitempty"`
	Co int `json:"co,omitempty"`
	Cr int `json:"cr,omitempty"`
	Cu int `json:"cu,omitempty"`
	Cv int `json:"cv,omitempty"`
	Cw int `json:"cw,omitempty"`
	Cx int `json:"cx,omitempty"`
	Cy int `json:"cy,omitempty"`
	Cz int `json:"cz,omitempty"`
	De int `json:"de,omitempty"`
	Dj int `json:"dj,omitempty"`
	Dk int `json:"dk,omitempty"`
	Dm int `json:"dm,omitempty"`
	Do int `json:"do,omitempty"`
	Dz int `json:"dz,omitempty"`
	Ec int `json:"ec,omitempty"`
	Ee int `json:"ee,omitempty"`
	Eg int `json:"eg,omitempty"`
	Eh int `json:"eh,omitempty"`
	Er int `json:"er,omitempty"`
	Es int `json:"es,omitempty"`
	Et int `json:"et,omitempty"`
	Fi int `json:"fi,omitempty"`
	Fj int `json:"fj,omitempty"`
	Fk int `json:"fk,omitempty"`
	Fm int `json:"fm,omitempty"`
	Fo int `json:"fo,omitempty"`
	Fr int `json:"fr,omitempty"`
	Ga int `json:"ga,omitempty"`
	Gb int `json:"gb,omitempty"`
	Gd int `json:"gd,omitempty"`
	Ge int `json:"ge,omitempty"`
	Gf int `json:"gf,omitempty"`
	Gg int `json:"gg,omitempty"`
	Gh int `json:"gh,omitempty"`
	Gi int `json:"gi,omitempty"`
	Gl int `json:"gl,omitempty"`
	Gm int `json:"gm,omitempty"`
	Gn int `json:"gn,omitempty"`
	Gp int `json:"gp,omitempty"`
	Gq int `json:"gq,omitempty"`
	Gr int `json:"gr,omitempty"`
	Gs int `json:"gs,omitempty"`
	Gt int `json:"gt,omitempty"`
	Gu int `json:"gu,omitempty"`
	Gw int `json:"gw,omitempty"`
	Gy int `json:"gy,omitempty"`
	Hk int `json:"hk,omitempty"`
	Hm int `json:"hm,omitempty"`
	Hn int `json:"hn,omitempty"`
	Hr int `json:"hr,omitempty"`
	Ht int `json:"ht,omitempty"`
	Hu int `json:"hu,omitempty"`
	ID int `json:"id,omitempty"`
	Ie int `json:"ie,omitempty"`
	Il int `json:"il,omitempty"`
	Im int `json:"im,omitempty"`
	In int `json:"in,omitempty"`
	Io int `json:"io,omitempty"`
	Iq int `json:"iq,omitempty"`
	Ir int `json:"ir,omitempty"`
	Is int `json:"is,omitempty"`
	It int `json:"it,omitempty"`
	Je int `json:"je,omitempty"`
	Jm int `json:"jm,omitempty"`
	Jo int `json:"jo,omitempty"`
	Jp int `json:"jp,omitempty"`
	Ke int `json:"ke,omitempty"`
	Kg int `json:"kg,omitempty"`
	Kh int `json:"kh,omitempty"`
	Ki int `json:"ki,omitempty"`
	Km int `json:"km,omitempty"`
	Kn int `json:"kn,omitempty"`
	Kp int `json:"kp,omitempty"`
	Kr int `json:"kr,omitempty"`
	Kw int `json:"kw,omitempty"`
	Ky int `json:"ky,omitempty"`
	Kz int `json:"kz,omitempty"`
	La int `json:"la,omitempty"`
	Lb int `json:"lb,omitempty"`
	Lc int `json:"lc,omitempty"`
	Li int `json:"li,omitempty"`
	Lk int `json:"lk,omitempty"`
	Lr int `json:"lr,omitempty"`
	Ls int `json:"ls,omitempty"`
	Lt int `json:"lt,omitempty"`
	Lu int `json:"lu,omitempty"`
	Lv int `json:"lv,omitempty"`
	Ly int `json:"ly,omitempty"`
	Ma int `json:"ma,omitempty"`
	Mc int `json:"mc,omitempty"`
	Md int `json:"md,omitempty"`
	Me int `json:"me,omitempty"`
	Mf int `json:"mf,omitempty"`
	Mg int `json:"mg,omitempty"`
	Mh int `json:"mh,omitempty"`
	Mk int `json:"mk,omitempty"`
	Ml int `json:"ml,omitempty"`
	Mm int `json:"mm,omitempty"`
	Mn int `json:"mn,omitempty"`
	Mo int `json:"mo,omitempty"`
	Mp int `json:"mp,omitempty"`
	Mq int `json:"mq,omitempty"`
	Mr int `json:"mr,omitempty"`
	Ms int `json:"ms,omitempty"`
	Mt int `json:"mt,omitempty"`
	Mu int `json:"mu,omitempty"`
	Mv int `json:"mv,omitempty"`
	Mw int `json:"mw,omitempty"`
	Mx int `json:"mx,omitempty"`
	My int `json:"my,omitempty"`
	Mz int `json:"mz,omitempty"`
	Na int `json:"na,omitempty"`
	Nc int `json:"nc,omitempty"`
	Ne int `json:"ne,omitempty"`
	Nf int `json:"nf,omitempty"`
	Ng int `json:"ng,omitempty"`
	Ni int `json:"ni,omitempty"`
	Nl int `json:"nl,omitempty"`
	No int `json:"no,omitempty"`
	Np int `json:"np,omitempty"`
	Nr int `json:"nr,omitempty"`
	Nu int `json:"nu,omitempty"`
	Nz int `json:"nz,omitempty"`
	Om int `json:"om,omitempty"`
	Pa int `json:"pa,omitempty"`
	Pe int `json:"pe,omitempty"`
	Pf int `json:"pf,omitempty"`
	Pg int `json:"pg,omitempty"`
	Ph int `json:"ph,omitempty"`
	Pk int `json:"pk,omitempty"`
	Pl int `json:"pl,omitempty"`
	Pm int `json:"pm,omitempty"`
	Pn int `json:"pn,omitempty"`
	Pr int `json:"pr,omitempty"`
	Ps int `json:"ps,omitempty"`
	Pt int `json:"pt,omitempty"`
	Pw int `json:"pw,omitempty"`
	Py int `json:"py,omitempty"`
	Qa int `json:"qa,omitempty"`
	Re int `json:"re,omitempty"`
	Ro int `json:"ro,omitempty"`
	Rs int `json:"rs,omitempty"`
	Ru int `json:"ru,omitempty"`
	Rw int `json:"rw,omitempty"`
	Sa int `json:"sa,omitempty"`
	Sb int `json:"sb,omitempty"`
	Sc int `json:"sc,omitempty"`
	Sd int `json:"sd,omitempty"`
	Se int `json:"se,omitempty"`
	Sg int `json:"sg,omitempty"`
	Sh int `json:"sh,omitempty"`
	Si int `json:"si,omitempty"`
	Sj int `json:"sj,omitempty"`
	Sk int `json:"sk,omitempty"`
	Sl int `json:"sl,omitempty"`
	Sm int `json:"sm,omitempty"`
	Sn int `json:"sn,omitempty"`
	So int `json:"so,omitempty"`
	Sr int `json:"sr,omitempty"`
	Ss int `json:"ss,omitempty"`
	St int `json:"st,omitempty"`
	Sv int `json:"sv,omitempty"`
	Sx int `json:"sx,omitempty"`
	Sy int `json:"sy,omitempty"`
	Sz int `json:"sz,omitempty"`
	Tc int `json:"tc,omitempty"`
	Td int `json:"td,omitempty"`
	Tf int `json:"tf,omitempty"`
	Tg int `json:"tg,omitempty"`
	Th int `json:"th,omitempty"`
	Tj int `json:"tj,omitempty"`
	Tk int `json:"tk,omitempty"`
	Tl int `json:"tl,omitempty"`
	Tm int `json:"tm,omitempty"`
	Tn int `json:"tn,omitempty"`
	To int `json:"to,omitempty"`
	Tr int `json:"tr,omitempty"`
	Tt int `json:"tt,omitempty"`
	Tv int `json:"tv,omitempty"`
	Tw int `json:"tw,omitempty"`
	Tz int `json:"tz,omitempty"`
	Ua int `json:"ua,omitempty"`
	Ug int `json:"ug,omitempty"`
	Um int `json:"um,omitempty"`
	Us int `json:"us,omitempty"`
	Uy int `json:"uy,omitempty"`
	Uz int `json:"uz,omitempty"`
	Va int `json:"va,omitempty"`
	Vc int `json:"vc,omitempty"`
	Ve int `json:"ve,omitempty"`
	Vg int `json:"vg,omitempty"`
	Vi int `json:"vi,omitempty"`
	Vn int `json:"vn,omitempty"`
	Vu int `json:"vu,omitempty"`
	Wf int `json:"wf,omitempty"`
	Ws int `json:"ws,omitempty"`
	Xk int `json:"xk,omitempty"`
	Ye int `json:"ye,omitempty"`
	Yt int `json:"yt,omitempty"`
	Za int `json:"za,omitempty"`
	Zm int `json:"zm,omitempty"`
	Zw int `json:"zw,omitempty"`
}

// Destination represents the Facebook Destination object
type Destination struct {
	Address string `json:"address,omitempty"`
	Applinks *CatalogItemAppLinks `json:"applinks,omitempty"`
	CategorySpecificFields *CatalogSubVerticalList `json:"category_specific_fields,omitempty"`
	Currency string `json:"currency,omitempty"`
	CustomLabel0 string `json:"custom_label_0,omitempty"`
	CustomLabel1 string `json:"custom_label_1,omitempty"`
	CustomLabel2 string `json:"custom_label_2,omitempty"`
	CustomLabel3 string `json:"custom_label_3,omitempty"`
	CustomLabel4 string `json:"custom_label_4,omitempty"`
	CustomNumber0 uint `json:"custom_number_0,omitempty"`
	CustomNumber1 uint `json:"custom_number_1,omitempty"`
	CustomNumber2 uint `json:"custom_number_2,omitempty"`
	CustomNumber3 uint `json:"custom_number_3,omitempty"`
	CustomNumber4 uint `json:"custom_number_4,omitempty"`
	Description string `json:"description,omitempty"`
	DestinationID string `json:"destination_id,omitempty"`
	ID string `json:"id,omitempty"`
	ImageFetchStatus DestinationImageFetchStatus `json:"image_fetch_status,omitempty"`
	Images []string `json:"images,omitempty"`
	Name string `json:"name,omitempty"`
	Price string `json:"price,omitempty"`
	PriceChange string `json:"price_change,omitempty"`
	SanitizedImages []string `json:"sanitized_images,omitempty"`
	Tags []string `json:"tags,omitempty"`
	Types []string `json:"types,omitempty"`
	UnitPrice map[string]interface{} `json:"unit_price,omitempty"`
	URL string `json:"url,omitempty"`
	Visibility DestinationVisibility `json:"visibility,omitempty"`
}

// DirectDebit represents the Facebook DirectDebit object
type DirectDebit struct {
	BankAccountLast4 string `json:"bank_account_last_4,omitempty"`
	BankCodeLast4 string `json:"bank_code_last_4,omitempty"`
	BankName string `json:"bank_name,omitempty"`
	DefaultReceivingMethodProducts []string `json:"default_receiving_method_products,omitempty"`
	DisplayString string `json:"display_string,omitempty"`
	ID string `json:"id,omitempty"`
	LastFourDigits string `json:"last_four_digits,omitempty"`
	OnboardingURL string `json:"onboarding_url,omitempty"`
	OwnerName string `json:"owner_name,omitempty"`
	Status int `json:"status,omitempty"`
}

// DraftPost represents the Facebook DraftPost object
type DraftPost struct {
	AdminCreator *User `json:"admin_creator,omitempty"`
	CreationTime time.Time `json:"creation_time,omitempty"`
	FeedAudienceDescription string `json:"feed_audience_description,omitempty"`
	FeedTargeting *Targeting `json:"feed_targeting,omitempty"`
	ID string `json:"id,omitempty"`
	IsPostInGoodState bool `json:"is_post_in_good_state,omitempty"`
	Message string `json:"message,omitempty"`
	ModifiedTime time.Time `json:"modified_time,omitempty"`
	OgActionSummary string `json:"og_action_summary,omitempty"`
	PermalinkURL string `json:"permalink_url,omitempty"`
	Place *Place `json:"place,omitempty"`
	PrivacyDescription string `json:"privacy_description,omitempty"`
	ScheduledFailureNotice string `json:"scheduled_failure_notice,omitempty"`
	ScheduledPublishTime time.Time `json:"scheduled_publish_time,omitempty"`
	StoryToken string `json:"story_token,omitempty"`
	Thumbnail string `json:"thumbnail,omitempty"`
	VideoID string `json:"video_id,omitempty"`
}

// DynamicARMetadata represents the Facebook DynamicARMetadata object
type DynamicARMetadata struct {
	AnchorPoint []float64 `json:"anchor_point,omitempty"`
	ContainerEffectEnum int `json:"container_effect_enum,omitempty"`
	EffectIconURL string `json:"effect_icon_url,omitempty"`
	EffectID string `json:"effect_id,omitempty"`
	ID string `json:"id,omitempty"`
	Platforms []string `json:"platforms,omitempty"`
	ScaleFactor []float64 `json:"scale_factor,omitempty"`
	ShadowTextureURL string `json:"shadow_texture_url,omitempty"`
	SourceURL string `json:"source_url,omitempty"`
	State string `json:"state,omitempty"`
	Tags []string `json:"tags,omitempty"`
	VariantPickerURL string `json:"variant_picker_url,omitempty"`
}

// DynamicContentSet represents the Facebook DynamicContentSet object
type DynamicContentSet struct {
	BusinessID string `json:"business_id,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
}

// DynamicItemDisplayBundle represents the Facebook DynamicItemDisplayBundle object
type DynamicItemDisplayBundle struct {
	AdditionalURLs []map[string]string `json:"additional_urls,omitempty"`
	Description string `json:"description,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	ProductSet *ProductSet `json:"product_set,omitempty"`
	TextTokens []map[string]string `json:"text_tokens,omitempty"`
	URL string `json:"url,omitempty"`
}

// DynamicItemDisplayBundleFolder represents the Facebook DynamicItemDisplayBundleFolder object
type DynamicItemDisplayBundleFolder struct {
	CategorizationCriteria string `json:"categorization_criteria,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	ProductCatalog *ProductCatalog `json:"product_catalog,omitempty"`
	ProductSet *ProductSet `json:"product_set,omitempty"`
	ValidLabels []map[string][]string `json:"valid_labels,omitempty"`
}

// DynamicPostChildAttachment represents the Facebook DynamicPostChildAttachment object
type DynamicPostChildAttachment struct {
	Description string `json:"description,omitempty"`
	ImageURL string `json:"image_url,omitempty"`
	Link string `json:"link,omitempty"`
	PlaceID string `json:"place_id,omitempty"`
	ProductID string `json:"product_id,omitempty"`
	Title string `json:"title,omitempty"`
}

// DynamicPriceConfigByDate represents the Facebook DynamicPriceConfigByDate object
type DynamicPriceConfigByDate struct {
	CheckinDate string `json:"checkin_date,omitempty"`
	Prices string `json:"prices,omitempty"`
	PricesPretty []map[string]interface{} `json:"prices_pretty,omitempty"`
}

// DynamicVideoMetadata represents the Facebook DynamicVideoMetadata object
type DynamicVideoMetadata struct {
	ID string `json:"id,omitempty"`
	Tags []string `json:"tags,omitempty"`
	URL string `json:"url,omitempty"`
	Video *AdVideo `json:"video,omitempty"`
}

// EducationExperience represents the Facebook EducationExperience object
type EducationExperience struct {
	Classes []*Experience `json:"classes,omitempty"`
	Concentration []*Page `json:"concentration,omitempty"`
	Degree *Page `json:"degree,omitempty"`
	ID string `json:"id,omitempty"`
	School *Page `json:"school,omitempty"`
	Type string `json:"type,omitempty"`
	With []*User `json:"with,omitempty"`
	Year *Page `json:"year,omitempty"`
}

// EmailImport represents the Facebook EmailImport object
type EmailImport struct {
	Lists []map[string]interface{} `json:"lists,omitempty"`
	Total uint `json:"total,omitempty"`
}

// EndStudyCriteria represents the Facebook EndStudyCriteria object
type EndStudyCriteria struct {
}

// Engagement represents the Facebook Engagement object
type Engagement struct {
	Count uint `json:"count,omitempty"`
	CountString string `json:"count_string,omitempty"`
	CountStringWithLike string `json:"count_string_with_like,omitempty"`
	CountStringWithoutLike string `json:"count_string_without_like,omitempty"`
	SocialSentence string `json:"social_sentence,omitempty"`
	SocialSentenceWithLike string `json:"social_sentence_with_like,omitempty"`
	SocialSentenceWithoutLike string `json:"social_sentence_without_like,omitempty"`
}

// EntWithSponsor represents the Facebook EntWithSponsor object
type EntWithSponsor struct {
	ID string `json:"id,omitempty"`
	OwnerLinkedInstagramUserV1ID string `json:"owner_linked_instagram_user_v1_id,omitempty"`
	OwnerPicture string `json:"owner_picture,omitempty"`
	PostID string `json:"post_id,omitempty"`
	PostInfo *Post `json:"post_info,omitempty"`
}

// EntityAtTextRange represents the Facebook EntityAtTextRange object
type EntityAtTextRange struct {
	ID string `json:"id,omitempty"`
	Length uint `json:"length,omitempty"`
	Name string `json:"name,omitempty"`
	Object *Profile `json:"object,omitempty"`
	Offset uint `json:"offset,omitempty"`
	Type EntityattextrangeType `json:"type,omitempty"`
}

// Event represents the Facebook Event object
type Event struct {
	AttendingCount int `json:"attending_count,omitempty"`
	CanGuestsInvite bool `json:"can_guests_invite,omitempty"`
	Category EventCategory `json:"category,omitempty"`
	Cover *CoverPhoto `json:"cover,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	DeclinedCount int `json:"declined_count,omitempty"`
	Description string `json:"description,omitempty"`
	DiscountCodeEnabled bool `json:"discount_code_enabled,omitempty"`
	EndTime string `json:"end_time,omitempty"`
	EventTimes []*ChildEvent `json:"event_times,omitempty"`
	GuestListEnabled bool `json:"guest_list_enabled,omitempty"`
	ID string `json:"id,omitempty"`
	InterestedCount int `json:"interested_count,omitempty"`
	IsCanceled bool `json:"is_canceled,omitempty"`
	IsDraft bool `json:"is_draft,omitempty"`
	IsOnline bool `json:"is_online,omitempty"`
	IsPageOwned bool `json:"is_page_owned,omitempty"`
	MaybeCount int `json:"maybe_count,omitempty"`
	Name string `json:"name,omitempty"`
	NoreplyCount int `json:"noreply_count,omitempty"`
	OnlineEventFormat EventOnlineEventFormat `json:"online_event_format,omitempty"`
	OnlineEventThirdPartyURL string `json:"online_event_third_party_url,omitempty"`
	Owner map[string]interface{} `json:"owner,omitempty"`
	ParentGroup *Group `json:"parent_group,omitempty"`
	Place *Place `json:"place,omitempty"`
	RegistrationSetting *EventRegistrationSetting `json:"registration_setting,omitempty"`
	ScheduledPublishTime string `json:"scheduled_publish_time,omitempty"`
	StartTime string `json:"start_time,omitempty"`
	SubCategories []string `json:"sub_categories,omitempty"`
	TicketSellingStatus string `json:"ticket_selling_status,omitempty"`
	TicketSetting *EventTicketSetting `json:"ticket_setting,omitempty"`
	TicketUri string `json:"ticket_uri,omitempty"`
	TicketUriStartSalesTime string `json:"ticket_uri_start_sales_time,omitempty"`
	TicketingPrivacyUri string `json:"ticketing_privacy_uri,omitempty"`
	TicketingTermsUri string `json:"ticketing_terms_uri,omitempty"`
	Timezone string `json:"timezone,omitempty"`
	Type EventType `json:"type,omitempty"`
	UpdatedTime time.Time `json:"updated_time,omitempty"`
}

// EventExternalTicketInfo represents the Facebook EventExternalTicketInfo object
type EventExternalTicketInfo struct {
	ID string `json:"id,omitempty"`
	MaxSalesPrice *CurrencyAmount `json:"max_sales_price,omitempty"`
	MinSalesPrice *CurrencyAmount `json:"min_sales_price,omitempty"`
	SalesStatus string `json:"sales_status,omitempty"`
}

// EventRegistrationSetting represents the Facebook EventRegistrationSetting object
type EventRegistrationSetting struct {
	ID string `json:"id,omitempty"`
	Questions string `json:"questions,omitempty"`
	TargetType string `json:"target_type,omitempty"`
	TicketTierIDs []string `json:"ticket_tier_ids,omitempty"`
}

// EventSourceGroup represents the Facebook EventSourceGroup object
type EventSourceGroup struct {
	Business *Business `json:"business,omitempty"`
	EventSources []*ExternalEventSource `json:"event_sources,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	OwnerBusiness *Business `json:"owner_business,omitempty"`
}

// EventTicketSetting represents the Facebook EventTicketSetting object
type EventTicketSetting struct {
	ID string `json:"id,omitempty"`
	TicketDeliveryType string `json:"ticket_delivery_type,omitempty"`
}

// EventTicketTier represents the Facebook EventTicketTier object
type EventTicketTier struct {
	Currency string `json:"currency,omitempty"`
	Description string `json:"description,omitempty"`
	EndSalesTime time.Time `json:"end_sales_time,omitempty"`
	EndShowTime time.Time `json:"end_show_time,omitempty"`
	FeeSettings string `json:"fee_settings,omitempty"`
	ID string `json:"id,omitempty"`
	MaximumQuantity int `json:"maximum_quantity,omitempty"`
	Metadata string `json:"metadata,omitempty"`
	MinimumQuantity int `json:"minimum_quantity,omitempty"`
	Name string `json:"name,omitempty"`
	Price int `json:"price,omitempty"`
	Priority int `json:"priority,omitempty"`
	RetailerID string `json:"retailer_id,omitempty"`
	SeatingMapImageURL string `json:"seating_map_image_url,omitempty"`
	StartSalesTime time.Time `json:"start_sales_time,omitempty"`
	StartShowTime time.Time `json:"start_show_time,omitempty"`
	Status string `json:"status,omitempty"`
	TotalQuantity int `json:"total_quantity,omitempty"`
}

// EventTour represents the Facebook EventTour object
type EventTour struct {
	Description string `json:"description,omitempty"`
	DominantColor string `json:"dominant_color,omitempty"`
	EndTime string `json:"end_time,omitempty"`
	ID string `json:"id,omitempty"`
	IsPast bool `json:"is_past,omitempty"`
	LastEventTimestamp int `json:"last_event_timestamp,omitempty"`
	Name string `json:"name,omitempty"`
	NumEvents int `json:"num_events,omitempty"`
	Photo *Photo `json:"photo,omitempty"`
	ScheduledPublishTimestamp int `json:"scheduled_publish_timestamp,omitempty"`
	StartTime string `json:"start_time,omitempty"`
	TicketingUri string `json:"ticketing_uri,omitempty"`
	Video *AdVideo `json:"video,omitempty"`
}

// Experience represents the Facebook Experience object
type Experience struct {
	Description string `json:"description,omitempty"`
	From map[string]interface{} `json:"from,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	With []*User `json:"with,omitempty"`
}

// ExtendedCredit represents the Facebook ExtendedCredit object
type ExtendedCredit struct {
	AllocatedAmount *CurrencyAmount `json:"allocated_amount,omitempty"`
	Balance *CurrencyAmount `json:"balance,omitempty"`
	CreditAvailable *CurrencyAmount `json:"credit_available,omitempty"`
	CreditType string `json:"credit_type,omitempty"`
	ID string `json:"id,omitempty"`
	IsAccessRevoked bool `json:"is_access_revoked,omitempty"`
	IsAutomatedExperience bool `json:"is_automated_experience,omitempty"`
	LegalEntityName string `json:"legal_entity_name,omitempty"`
	LiableAddress *CRMAddress `json:"liable_address,omitempty"`
	LiableBizName string `json:"liable_biz_name,omitempty"`
	MaxBalance *CurrencyAmount `json:"max_balance,omitempty"`
	OnlineMaxBalance *CurrencyAmount `json:"online_max_balance,omitempty"`
	OwnerBusiness *Business `json:"owner_business,omitempty"`
	OwnerBusinessName string `json:"owner_business_name,omitempty"`
	PartitionFrom string `json:"partition_from,omitempty"`
	ReceivingCreditAllocationConfig *ExtendedCreditAllocationConfig `json:"receiving_credit_allocation_config,omitempty"`
	SendBillToAddress *CRMAddress `json:"send_bill_to_address,omitempty"`
	SendBillToBizName string `json:"send_bill_to_biz_name,omitempty"`
	SoldToAddress *CRMAddress `json:"sold_to_address,omitempty"`
}

// ExtendedCreditAllocationConfig represents the Facebook ExtendedCreditAllocationConfig object
type ExtendedCreditAllocationConfig struct {
	CurrencyAmount *CurrencyAmount `json:"currency_amount,omitempty"`
	ID string `json:"id,omitempty"`
	LiabilityType string `json:"liability_type,omitempty"`
	OwningBusiness *Business `json:"owning_business,omitempty"`
	OwningCredential *ExtendedCredit `json:"owning_credential,omitempty"`
	PartitionType string `json:"partition_type,omitempty"`
	ReceivingBusiness *Business `json:"receiving_business,omitempty"`
	ReceivingCredential *ExtendedCredit `json:"receiving_credential,omitempty"`
	RequestStatus string `json:"request_status,omitempty"`
	SendBillTo string `json:"send_bill_to,omitempty"`
}

// ExtendedCreditApplication represents the Facebook ExtendedCreditApplication object
type ExtendedCreditApplication struct {
	BillingCountry string `json:"billing_country,omitempty"`
	City string `json:"city,omitempty"`
	Cnpj string `json:"cnpj,omitempty"`
	Country string `json:"country,omitempty"`
	DisplayCurrency string `json:"display_currency,omitempty"`
	DunsNumber string `json:"duns_number,omitempty"`
	ID string `json:"id,omitempty"`
	InvoiceEmailAddress string `json:"invoice_email_address,omitempty"`
	IsUmi bool `json:"is_umi,omitempty"`
	LegalEntityName string `json:"legal_entity_name,omitempty"`
	OriginalOnlineLimit *CurrencyAmount `json:"original_online_limit,omitempty"`
	PhoneNumber string `json:"phone_number,omitempty"`
	PostalCode string `json:"postal_code,omitempty"`
	ProductTypes []string `json:"product_types,omitempty"`
	ProposedCreditLimit *CurrencyAmount `json:"proposed_credit_limit,omitempty"`
	RegistrationNumber string `json:"registration_number,omitempty"`
	RunID string `json:"run_id,omitempty"`
	State string `json:"state,omitempty"`
	Status string `json:"status,omitempty"`
	Street1 string `json:"street1,omitempty"`
	Street2 string `json:"street2,omitempty"`
	Submitter *User `json:"submitter,omitempty"`
	TaxExemptStatus string `json:"tax_exempt_status,omitempty"`
	TaxID string `json:"tax_id,omitempty"`
	Terms string `json:"terms,omitempty"`
}

// ExtendedCreditEmail represents the Facebook ExtendedCreditEmail object
type ExtendedCreditEmail struct {
	Email string `json:"email,omitempty"`
	ID string `json:"id,omitempty"`
}

// ExtendedCreditInfo represents the Facebook ExtendedCreditInfo object
type ExtendedCreditInfo struct {
	CreditLeft string `json:"credit_left,omitempty"`
	CreditRevoked bool `json:"credit_revoked,omitempty"`
	CreditUsed string `json:"credit_used,omitempty"`
	UsingBizEc string `json:"using_biz_ec,omitempty"`
}

// ExtendedCreditInvoiceGroup represents the Facebook ExtendedCreditInvoiceGroup object
type ExtendedCreditInvoiceGroup struct {
	AutoEnroll bool `json:"auto_enroll,omitempty"`
	BillToAddress *CRMAddress `json:"bill_to_address,omitempty"`
	CustomerPoNumber string `json:"customer_po_number,omitempty"`
	Email *ExtendedCreditEmail `json:"email,omitempty"`
	Emails []string `json:"emails,omitempty"`
	ID string `json:"id,omitempty"`
	LiableAddress *CRMAddress `json:"liable_address,omitempty"`
	Name string `json:"name,omitempty"`
	SoldToAddress *CRMAddress `json:"sold_to_address,omitempty"`
}

// ExternalEventSource represents the Facebook ExternalEventSource object
type ExternalEventSource struct {
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	SourceType string `json:"source_type,omitempty"`
}

// ExternalEventSourceCPASEventsDebugging represents the Facebook ExternalEventSourceCPASEventsDebugging object
type ExternalEventSourceCPASEventsDebugging struct {
	ActualEventTime int `json:"actual_event_time,omitempty"`
	AppVersion string `json:"app_version,omitempty"`
	ContentURL string `json:"content_url,omitempty"`
	DeviceOs string `json:"device_os,omitempty"`
	Diagnostic string `json:"diagnostic,omitempty"`
	EventName string `json:"event_name,omitempty"`
	EventTime int `json:"event_time,omitempty"`
	MissingIDs string `json:"missing_ids,omitempty"`
	Severity string `json:"severity,omitempty"`
}

// ExternalEventSourceCPASEventsDebuggingInfo represents the Facebook ExternalEventSourceCPASEventsDebuggingInfo object
type ExternalEventSourceCPASEventsDebuggingInfo struct {
	Counts int `json:"counts,omitempty"`
	Diagnostic string `json:"diagnostic,omitempty"`
	EventName string `json:"event_name,omitempty"`
}

// ExternalMerchantSettings represents the Facebook ExternalMerchantSettings object
type ExternalMerchantSettings struct {
	ConnectWoo string `json:"connect_woo,omitempty"`
	ExternalPlatform string `json:"external_platform,omitempty"`
	ID string `json:"id,omitempty"`
}

// FAMEKumo represents the Facebook FAMEKumo object
type FAMEKumo struct {
	ID string `json:"id,omitempty"`
}

// FBImageCopyrightMatch represents the Facebook FBImageCopyrightMatch object
type FBImageCopyrightMatch struct {
	AddedToDashboardTime time.Time `json:"added_to_dashboard_time,omitempty"`
	AppliedActions []map[string]map[string]interface{} `json:"applied_actions,omitempty"`
	AuditLog []map[string]interface{} `json:"audit_log,omitempty"`
	AvailableUiActions []string `json:"available_ui_actions,omitempty"`
	ExpirationDays int `json:"expiration_days,omitempty"`
	GenericMatchData []map[string]interface{} `json:"generic_match_data,omitempty"`
	ID string `json:"id,omitempty"`
	IsBusinessPageMatch bool `json:"is_business_page_match,omitempty"`
	LastModifiedTime time.Time `json:"last_modified_time,omitempty"`
	MatchData []map[string]interface{} `json:"match_data,omitempty"`
	MatchStatus string `json:"match_status,omitempty"`
	OwnershipCountries *VideoCopyrightGeoGate `json:"ownership_countries,omitempty"`
	ReferenceOwner *Profile `json:"reference_owner,omitempty"`
	TimeToAppeal int `json:"time_to_appeal,omitempty"`
}

// FBLiteToNTTransitions represents the Facebook FBLiteToNTTransitions object
type FBLiteToNTTransitions struct {
	Transition map[string]interface{} `json:"transition,omitempty"`
}

// FBPageAndInstagramAccount represents the Facebook FBPageAndInstagramAccount object
type FBPageAndInstagramAccount struct {
	AdPermissions []string `json:"ad_permissions,omitempty"`
	BcPermissionStatus string `json:"bc_permission_status,omitempty"`
	BcPermissions []map[string]string `json:"bc_permissions,omitempty"`
	IsManaged bool `json:"is_managed,omitempty"`
	MatchedBy string `json:"matched_by,omitempty"`
}

// FBPayButtonLogin represents the Facebook FBPayButtonLogin object
type FBPayButtonLogin struct {
}

// FantasyGame represents the Facebook FantasyGame object
type FantasyGame struct {
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
}

// FavoriteCatalog represents the Facebook FavoriteCatalog object
type FavoriteCatalog struct {
	Catalog *ProductCatalog `json:"catalog,omitempty"`
	ID string `json:"id,omitempty"`
}

// FinanceObject represents the Facebook FinanceObject object
type FinanceObject struct {
	FinancePermission string `json:"finance_permission,omitempty"`
	User map[string]interface{} `json:"user,omitempty"`
}

// FlexibleTargeting represents the Facebook FlexibleTargeting object
type FlexibleTargeting struct {
	Behaviors []*IDName `json:"behaviors,omitempty"`
	CollegeYears []uint `json:"college_years,omitempty"`
	Connections []*IDName `json:"connections,omitempty"`
	CustomAudiences []*IDName `json:"custom_audiences,omitempty"`
	EducationMajors []*IDName `json:"education_majors,omitempty"`
	EducationSchools []*IDName `json:"education_schools,omitempty"`
	EducationStatuses []uint `json:"education_statuses,omitempty"`
	EthnicAffinity []*IDName `json:"ethnic_affinity,omitempty"`
	FamilyStatuses []*IDName `json:"family_statuses,omitempty"`
	FriendsOfConnections []*IDName `json:"friends_of_connections,omitempty"`
	Generation []*IDName `json:"generation,omitempty"`
	HomeOwnership []*IDName `json:"home_ownership,omitempty"`
	HomeType []*IDName `json:"home_type,omitempty"`
	HomeValue []*IDName `json:"home_value,omitempty"`
	HouseholdComposition []*IDName `json:"household_composition,omitempty"`
	Income []*IDName `json:"income,omitempty"`
	Industries []*IDName `json:"industries,omitempty"`
	InterestedIn []uint `json:"interested_in,omitempty"`
	Interests []*IDName `json:"interests,omitempty"`
	LifeEvents []*IDName `json:"life_events,omitempty"`
	Moms []*IDName `json:"moms,omitempty"`
	NetWorth []*IDName `json:"net_worth,omitempty"`
	OfficeType []*IDName `json:"office_type,omitempty"`
	Politics []*IDName `json:"politics,omitempty"`
	RelationshipStatuses []uint `json:"relationship_statuses,omitempty"`
	UserAdclusters []*IDName `json:"user_adclusters,omitempty"`
	WorkEmployers []*IDName `json:"work_employers,omitempty"`
	WorkPositions []*IDName `json:"work_positions,omitempty"`
}

// Flight represents the Facebook Flight object
type Flight struct {
	Applinks *CatalogItemAppLinks `json:"applinks,omitempty"`
	CategorySpecificFields *CatalogSubVerticalList `json:"category_specific_fields,omitempty"`
	Currency string `json:"currency,omitempty"`
	CustomLabel0 string `json:"custom_label_0,omitempty"`
	CustomLabel1 string `json:"custom_label_1,omitempty"`
	CustomLabel2 string `json:"custom_label_2,omitempty"`
	CustomLabel3 string `json:"custom_label_3,omitempty"`
	CustomLabel4 string `json:"custom_label_4,omitempty"`
	CustomNumber0 uint `json:"custom_number_0,omitempty"`
	CustomNumber1 uint `json:"custom_number_1,omitempty"`
	CustomNumber2 uint `json:"custom_number_2,omitempty"`
	CustomNumber3 uint `json:"custom_number_3,omitempty"`
	CustomNumber4 uint `json:"custom_number_4,omitempty"`
	Description string `json:"description,omitempty"`
	DestinationAirport string `json:"destination_airport,omitempty"`
	DestinationCity string `json:"destination_city,omitempty"`
	FlightID string `json:"flight_id,omitempty"`
	ID string `json:"id,omitempty"`
	ImageFetchStatus FlightImageFetchStatus `json:"image_fetch_status,omitempty"`
	Images []string `json:"images,omitempty"`
	OnewayCurrency string `json:"oneway_currency,omitempty"`
	OnewayPrice string `json:"oneway_price,omitempty"`
	OriginAirport string `json:"origin_airport,omitempty"`
	OriginCity string `json:"origin_city,omitempty"`
	Price string `json:"price,omitempty"`
	ProductPriority0 float64 `json:"product_priority_0,omitempty"`
	ProductPriority1 float64 `json:"product_priority_1,omitempty"`
	ProductPriority2 float64 `json:"product_priority_2,omitempty"`
	ProductPriority3 float64 `json:"product_priority_3,omitempty"`
	ProductPriority4 float64 `json:"product_priority_4,omitempty"`
	SanitizedImages []string `json:"sanitized_images,omitempty"`
	Tags []string `json:"tags,omitempty"`
	UnitPrice map[string]interface{} `json:"unit_price,omitempty"`
	URL string `json:"url,omitempty"`
	Visibility FlightVisibility `json:"visibility,omitempty"`
}

// FranchiseProgram represents the Facebook FranchiseProgram object
type FranchiseProgram struct {
	BusinessAssetGroup *BusinessAssetGroup `json:"business_asset_group,omitempty"`
	CreatorBusiness *Business `json:"creator_business,omitempty"`
	Description string `json:"description,omitempty"`
	EndDate time.Time `json:"end_date,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	ProgramAccessType string `json:"program_access_type,omitempty"`
	ProgramApprovalType string `json:"program_approval_type,omitempty"`
	ProgramImageLink string `json:"program_image_link,omitempty"`
	ProgramURL string `json:"program_url,omitempty"`
	SharedCustomAudience *CustomAudience `json:"shared_custom_audience,omitempty"`
	StartDate time.Time `json:"start_date,omitempty"`
}

// FranchiseProgramMember represents the Facebook FranchiseProgramMember object
type FranchiseProgramMember struct {
	Business *Business `json:"business,omitempty"`
	EndDate time.Time `json:"end_date,omitempty"`
	ID string `json:"id,omitempty"`
	JoinDate time.Time `json:"join_date,omitempty"`
	MemberAdAccount *AdAccount `json:"member_ad_account,omitempty"`
	MemberUser *User `json:"member_user,omitempty"`
	MembershipStatus string `json:"membership_status,omitempty"`
	Page *Page `json:"page,omitempty"`
}

// FundingSourceDetails represents the Facebook FundingSourceDetails object
type FundingSourceDetails struct {
	Coupon *FundingSourceDetailsCoupon `json:"coupon,omitempty"`
	Coupons []*FundingSourceDetailsCoupon `json:"coupons,omitempty"`
	DisplayString string `json:"display_string,omitempty"`
	ID string `json:"id,omitempty"`
	Type int `json:"type,omitempty"`
}

// FundingSourceDetailsCoupon represents the Facebook FundingSourceDetailsCoupon object
type FundingSourceDetailsCoupon struct {
	Amount int `json:"amount,omitempty"`
	CampaignIDs []int `json:"campaign_ids,omitempty"`
	ChildAdAccountID string `json:"child_ad_account_id,omitempty"`
	ChildBmID string `json:"child_bm_id,omitempty"`
	CouponID string `json:"coupon_id,omitempty"`
	CouponTiering *FundingSourceDetailsCouponTiering `json:"coupon_tiering,omitempty"`
	Currency string `json:"currency,omitempty"`
	DisplayAmount string `json:"display_amount,omitempty"`
	Expiration time.Time `json:"expiration,omitempty"`
	OriginalAmount int `json:"original_amount,omitempty"`
	OriginalDisplayAmount string `json:"original_display_amount,omitempty"`
	StartDate time.Time `json:"start_date,omitempty"`
	VendorID string `json:"vendor_id,omitempty"`
}

// FundingSourceDetailsCouponTiering represents the Facebook FundingSourceDetailsCouponTiering object
type FundingSourceDetailsCouponTiering struct {
	CouponTieringNew map[string]interface{} `json:"coupon_tiering_new,omitempty"`
	CouponTieringReactivation map[string]interface{} `json:"coupon_tiering_reactivation,omitempty"`
}

// FundraiserPersonToCharity represents the Facebook FundraiserPersonToCharity object
type FundraiserPersonToCharity struct {
	AmountRaised int `json:"amount_raised,omitempty"`
	CharityID string `json:"charity_id,omitempty"`
	Currency string `json:"currency,omitempty"`
	Description string `json:"description,omitempty"`
	DonationsCount int `json:"donations_count,omitempty"`
	DonorsCount int `json:"donors_count,omitempty"`
	EndTime time.Time `json:"end_time,omitempty"`
	ExternalAmountRaised int `json:"external_amount_raised,omitempty"`
	ExternalDonationsCount int `json:"external_donations_count,omitempty"`
	ExternalDonorsCount int `json:"external_donors_count,omitempty"`
	ExternalEventName string `json:"external_event_name,omitempty"`
	ExternalEventStartTime time.Time `json:"external_event_start_time,omitempty"`
	ExternalEventUri string `json:"external_event_uri,omitempty"`
	ExternalFundraiserUri string `json:"external_fundraiser_uri,omitempty"`
	ExternalID string `json:"external_id,omitempty"`
	GoalAmount int `json:"goal_amount,omitempty"`
	ID string `json:"id,omitempty"`
	InternalAmountRaised int `json:"internal_amount_raised,omitempty"`
	InternalDonationsCount int `json:"internal_donations_count,omitempty"`
	InternalDonorsCount int `json:"internal_donors_count,omitempty"`
	Name string `json:"name,omitempty"`
	Uri string `json:"uri,omitempty"`
}

// GeoGatingPolicy represents the Facebook GeoGatingPolicy object
type GeoGatingPolicy struct {
	AfterSchedule string `json:"after_schedule,omitempty"`
	ExcludeCountry []string `json:"exclude_country,omitempty"`
	ID string `json:"id,omitempty"`
	IncludeCountry []string `json:"include_country,omitempty"`
	Name string `json:"name,omitempty"`
	ValidFrom time.Time `json:"valid_from,omitempty"`
	ValidUntil time.Time `json:"valid_until,omitempty"`
}

// Group represents the Facebook Group object
type Group struct {
	Archived bool `json:"archived,omitempty"`
	Cover *CoverPhoto `json:"cover,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	Description string `json:"description,omitempty"`
	Email string `json:"email,omitempty"`
	Icon string `json:"icon,omitempty"`
	ID string `json:"id,omitempty"`
	Install map[string]interface{} `json:"install,omitempty"`
	Link string `json:"link,omitempty"`
	MemberCount uint `json:"member_count,omitempty"`
	MemberRequestCount uint `json:"member_request_count,omitempty"`
	Name string `json:"name,omitempty"`
	Parent map[string]interface{} `json:"parent,omitempty"`
	Permissions []string `json:"permissions,omitempty"`
	Privacy string `json:"privacy,omitempty"`
	Purpose string `json:"purpose,omitempty"`
	Subdomain string `json:"subdomain,omitempty"`
	UpdatedTime time.Time `json:"updated_time,omitempty"`
	Venue *Location `json:"venue,omitempty"`
}

// HasLeadAccess represents the Facebook HasLeadAccess object
type HasLeadAccess struct {
	AppHasLeadsPermission bool `json:"app_has_leads_permission,omitempty"`
	CanAccessLead bool `json:"can_access_lead,omitempty"`
	EnabledLeadAccessManager bool `json:"enabled_lead_access_manager,omitempty"`
	FailureReason string `json:"failure_reason,omitempty"`
	FailureResolution string `json:"failure_resolution,omitempty"`
	IsPageAdmin bool `json:"is_page_admin,omitempty"`
	PageID string `json:"page_id,omitempty"`
	UserHasLeadsPermission bool `json:"user_has_leads_permission,omitempty"`
	UserID string `json:"user_id,omitempty"`
}

// HighDemandPeriod represents the Facebook HighDemandPeriod object
type HighDemandPeriod struct {
	AdObjectID string `json:"ad_object_id,omitempty"`
	BudgetValue int `json:"budget_value,omitempty"`
	BudgetValueType string `json:"budget_value_type,omitempty"`
	ID string `json:"id,omitempty"`
	RecurrenceType string `json:"recurrence_type,omitempty"`
	TimeEnd time.Time `json:"time_end,omitempty"`
	TimeStart time.Time `json:"time_start,omitempty"`
	WeeklySchedule []*HighDemandPeriodTimeSuggestionWeeklySegment `json:"weekly_schedule,omitempty"`
}

// HighDemandPeriodTimeSuggestionWeeklySegment represents the Facebook HighDemandPeriodTimeSuggestionWeeklySegment object
type HighDemandPeriodTimeSuggestionWeeklySegment struct {
	Days []string `json:"days,omitempty"`
	EndMinute int `json:"end_minute,omitempty"`
	StartMinute int `json:"start_minute,omitempty"`
	TimezoneType string `json:"timezone_type,omitempty"`
}

// HomeListing represents the Facebook HomeListing object
type HomeListing struct {
	AcType string `json:"ac_type,omitempty"`
	AdditionalFeesDescription string `json:"additional_fees_description,omitempty"`
	Address map[string]interface{} `json:"address,omitempty"`
	AgentCompany string `json:"agent_company,omitempty"`
	AgentEmail string `json:"agent_email,omitempty"`
	AgentFbPageID *Page `json:"agent_fb_page_id,omitempty"`
	AgentName string `json:"agent_name,omitempty"`
	AgentPhone string `json:"agent_phone,omitempty"`
	Applinks *CatalogItemAppLinks `json:"applinks,omitempty"`
	AreaSize uint `json:"area_size,omitempty"`
	AreaUnit string `json:"area_unit,omitempty"`
	Availability string `json:"availability,omitempty"`
	CategorySpecificFields *CatalogSubVerticalList `json:"category_specific_fields,omitempty"`
	Co2EmissionRatingEu map[string]interface{} `json:"co_2_emission_rating_eu,omitempty"`
	Currency string `json:"currency,omitempty"`
	CustomLabel0 string `json:"custom_label_0,omitempty"`
	CustomLabel1 string `json:"custom_label_1,omitempty"`
	CustomLabel2 string `json:"custom_label_2,omitempty"`
	CustomLabel3 string `json:"custom_label_3,omitempty"`
	CustomLabel4 string `json:"custom_label_4,omitempty"`
	CustomNumber0 uint `json:"custom_number_0,omitempty"`
	CustomNumber1 uint `json:"custom_number_1,omitempty"`
	CustomNumber2 uint `json:"custom_number_2,omitempty"`
	CustomNumber3 uint `json:"custom_number_3,omitempty"`
	CustomNumber4 uint `json:"custom_number_4,omitempty"`
	DaysOnMarket uint `json:"days_on_market,omitempty"`
	Description string `json:"description,omitempty"`
	EnergyRatingEu map[string]interface{} `json:"energy_rating_eu,omitempty"`
	FurnishType string `json:"furnish_type,omitempty"`
	GroupID string `json:"group_id,omitempty"`
	HeatingType string `json:"heating_type,omitempty"`
	HomeListingID string `json:"home_listing_id,omitempty"`
	ID string `json:"id,omitempty"`
	ImageFetchStatus HomelistingImageFetchStatus `json:"image_fetch_status,omitempty"`
	Images []string `json:"images,omitempty"`
	LaundryType string `json:"laundry_type,omitempty"`
	ListingType string `json:"listing_type,omitempty"`
	MaxCurrency string `json:"max_currency,omitempty"`
	MaxPrice string `json:"max_price,omitempty"`
	MinCurrency string `json:"min_currency,omitempty"`
	MinPrice string `json:"min_price,omitempty"`
	Name string `json:"name,omitempty"`
	NumBaths float64 `json:"num_baths,omitempty"`
	NumBeds float64 `json:"num_beds,omitempty"`
	NumRooms float64 `json:"num_rooms,omitempty"`
	NumUnits uint `json:"num_units,omitempty"`
	ParkingType string `json:"parking_type,omitempty"`
	PartnerVerification string `json:"partner_verification,omitempty"`
	PetPolicy string `json:"pet_policy,omitempty"`
	Price string `json:"price,omitempty"`
	PropertyType string `json:"property_type,omitempty"`
	SanitizedImages []string `json:"sanitized_images,omitempty"`
	SecuritydepositCurrency string `json:"securitydeposit_currency,omitempty"`
	SecuritydepositPrice string `json:"securitydeposit_price,omitempty"`
	Tags []string `json:"tags,omitempty"`
	UnitPrice map[string]interface{} `json:"unit_price,omitempty"`
	URL string `json:"url,omitempty"`
	Visibility HomelistingVisibility `json:"visibility,omitempty"`
	YearBuilt int `json:"year_built,omitempty"`
}

// Hotel represents the Facebook Hotel object
type Hotel struct {
	Address string `json:"address,omitempty"`
	Applinks *CatalogItemAppLinks `json:"applinks,omitempty"`
	Brand string `json:"brand,omitempty"`
	Category string `json:"category,omitempty"`
	CategorySpecificFields *CatalogSubVerticalList `json:"category_specific_fields,omitempty"`
	Currency string `json:"currency,omitempty"`
	CustomLabel0 string `json:"custom_label_0,omitempty"`
	CustomLabel1 string `json:"custom_label_1,omitempty"`
	CustomLabel2 string `json:"custom_label_2,omitempty"`
	CustomLabel3 string `json:"custom_label_3,omitempty"`
	CustomLabel4 string `json:"custom_label_4,omitempty"`
	CustomNumber0 int `json:"custom_number_0,omitempty"`
	CustomNumber1 int `json:"custom_number_1,omitempty"`
	CustomNumber2 int `json:"custom_number_2,omitempty"`
	CustomNumber3 int `json:"custom_number_3,omitempty"`
	CustomNumber4 int `json:"custom_number_4,omitempty"`
	Description string `json:"description,omitempty"`
	GuestRatings string `json:"guest_ratings,omitempty"`
	HotelID string `json:"hotel_id,omitempty"`
	ID string `json:"id,omitempty"`
	ImageFetchStatus HotelImageFetchStatus `json:"image_fetch_status,omitempty"`
	Images []string `json:"images,omitempty"`
	LowestBasePrice string `json:"lowest_base_price,omitempty"`
	LoyaltyProgram string `json:"loyalty_program,omitempty"`
	MarginLevel uint `json:"margin_level,omitempty"`
	Name string `json:"name,omitempty"`
	Phone string `json:"phone,omitempty"`
	ProductPriority0 float64 `json:"product_priority_0,omitempty"`
	ProductPriority1 float64 `json:"product_priority_1,omitempty"`
	ProductPriority2 float64 `json:"product_priority_2,omitempty"`
	ProductPriority3 float64 `json:"product_priority_3,omitempty"`
	ProductPriority4 float64 `json:"product_priority_4,omitempty"`
	SalePrice string `json:"sale_price,omitempty"`
	SanitizedImages []string `json:"sanitized_images,omitempty"`
	StarRating float64 `json:"star_rating,omitempty"`
	Tags []string `json:"tags,omitempty"`
	UnitPrice map[string]interface{} `json:"unit_price,omitempty"`
	URL string `json:"url,omitempty"`
	Visibility HotelVisibility `json:"visibility,omitempty"`
}

// HotelRoom represents the Facebook HotelRoom object
type HotelRoom struct {
	Applinks *CatalogItemAppLinks `json:"applinks,omitempty"`
	BasePrice string `json:"base_price,omitempty"`
	Currency string `json:"currency,omitempty"`
	Description string `json:"description,omitempty"`
	ID string `json:"id,omitempty"`
	Images []string `json:"images,omitempty"`
	MarginLevel string `json:"margin_level,omitempty"`
	Name string `json:"name,omitempty"`
	RoomID string `json:"room_id,omitempty"`
	SalePrice string `json:"sale_price,omitempty"`
	URL string `json:"url,omitempty"`
}

// Hours represents the Facebook Hours object
type Hours struct {
	ID string `json:"id,omitempty"`
	PermanentStatus string `json:"permanent_status,omitempty"`
}

// IDName represents the Facebook IDName object
type IDName struct {
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
}

// IGAccessTokenForIGOnlyAPI represents the Facebook IGAccessTokenForIGOnlyAPI object
type IGAccessTokenForIGOnlyAPI struct {
	AccessToken string `json:"access_token,omitempty"`
	ExpiresIn int `json:"expires_in,omitempty"`
	TokenType string `json:"token_type,omitempty"`
}

// IGBCAdsPermission represents the Facebook IGBCAdsPermission object
type IGBCAdsPermission struct {
	ID string `json:"id,omitempty"`
	PermissionType string `json:"permission_type,omitempty"`
	Status string `json:"status,omitempty"`
}

// IGBoostMediaAd represents the Facebook IGBoostMediaAd object
type IGBoostMediaAd struct {
	AdID string `json:"ad_id,omitempty"`
	AdStatus string `json:"ad_status,omitempty"`
}

// IGComment represents the Facebook IGComment object
type IGComment struct {
	From *IGCommentFromUser `json:"from,omitempty"`
	Hidden bool `json:"hidden,omitempty"`
	ID string `json:"id,omitempty"`
	LegacyInstagramCommentID string `json:"legacy_instagram_comment_id,omitempty"`
	LikeCount int `json:"like_count,omitempty"`
	Media *IGMedia `json:"media,omitempty"`
	ParentID string `json:"parent_id,omitempty"`
	Text string `json:"text,omitempty"`
	Timestamp time.Time `json:"timestamp,omitempty"`
	User *IGUser `json:"user,omitempty"`
	Username string `json:"username,omitempty"`
}

// IGCommentFromUser represents the Facebook IGCommentFromUser object
type IGCommentFromUser struct {
	ID string `json:"id,omitempty"`
	SelfIgScopedID string `json:"self_ig_scoped_id,omitempty"`
	Username string `json:"username,omitempty"`
}

// IGMedia represents the Facebook IGMedia object
type IGMedia struct {
	AltText string `json:"alt_text,omitempty"`
	BoostEligibilityInfo *IGMediaBoostEligibilityInfo `json:"boost_eligibility_info,omitempty"`
	Caption string `json:"caption,omitempty"`
	CommentsCount int `json:"comments_count,omitempty"`
	CopyrightCheckInformation *IGVideoCopyrightCheckMatchesInformation `json:"copyright_check_information,omitempty"`
	ID string `json:"id,omitempty"`
	IgID string `json:"ig_id,omitempty"`
	IsCommentEnabled bool `json:"is_comment_enabled,omitempty"`
	IsSharedToFeed bool `json:"is_shared_to_feed,omitempty"`
	LegacyInstagramMediaID string `json:"legacy_instagram_media_id,omitempty"`
	LikeCount int `json:"like_count,omitempty"`
	MediaProductType string `json:"media_product_type,omitempty"`
	MediaType string `json:"media_type,omitempty"`
	MediaURL string `json:"media_url,omitempty"`
	Owner *IGUser `json:"owner,omitempty"`
	Permalink string `json:"permalink,omitempty"`
	Shortcode string `json:"shortcode,omitempty"`
	ThumbnailURL string `json:"thumbnail_url,omitempty"`
	Timestamp time.Time `json:"timestamp,omitempty"`
	Username string `json:"username,omitempty"`
	ViewCount int `json:"view_count,omitempty"`
}

// IGMediaBoostEligibilityInfo represents the Facebook IGMediaBoostEligibilityInfo object
type IGMediaBoostEligibilityInfo struct {
	BoostIneligibleReason string `json:"boost_ineligible_reason,omitempty"`
	EligibleToBoost bool `json:"eligible_to_boost,omitempty"`
}

// IGMediaForIGOnlyAPI represents the Facebook IGMediaForIGOnlyAPI object
type IGMediaForIGOnlyAPI struct {
	AltText string `json:"alt_text,omitempty"`
	Caption string `json:"caption,omitempty"`
	CommentsCount int `json:"comments_count,omitempty"`
	ID string `json:"id,omitempty"`
	IsCommentEnabled bool `json:"is_comment_enabled,omitempty"`
	IsSharedToFeed bool `json:"is_shared_to_feed,omitempty"`
	LikeCount int `json:"like_count,omitempty"`
	MediaProductType string `json:"media_product_type,omitempty"`
	MediaType string `json:"media_type,omitempty"`
	MediaURL string `json:"media_url,omitempty"`
	Owner *User `json:"owner,omitempty"`
	Permalink string `json:"permalink,omitempty"`
	Shortcode string `json:"shortcode,omitempty"`
	ThumbnailURL string `json:"thumbnail_url,omitempty"`
	Timestamp time.Time `json:"timestamp,omitempty"`
	Username string `json:"username,omitempty"`
}

// IGProductTaggingInvalidationError represents the Facebook IGProductTaggingInvalidationError object
type IGProductTaggingInvalidationError struct {
	Description string `json:"description,omitempty"`
	TaggabilityState string `json:"taggability_state,omitempty"`
	Title string `json:"title,omitempty"`
}

// IGRefreshAccessTokenForIGOnlyAPI represents the Facebook IGRefreshAccessTokenForIGOnlyAPI object
type IGRefreshAccessTokenForIGOnlyAPI struct {
	AccessToken string `json:"access_token,omitempty"`
	ExpiresIn int `json:"expires_in,omitempty"`
	Permissions string `json:"permissions,omitempty"`
	TokenType string `json:"token_type,omitempty"`
}

// IGResumableVideoUploadStatus represents the Facebook IGResumableVideoUploadStatus object
type IGResumableVideoUploadStatus struct {
	ProcessingPhase *VideoStatusProcessingPhase `json:"processing_phase,omitempty"`
	UploadingPhase *VideoStatusUploadingPhase `json:"uploading_phase,omitempty"`
}

// IGShoppingProductAppeal represents the Facebook IGShoppingProductAppeal object
type IGShoppingProductAppeal struct {
	EligibleForAppeal bool `json:"eligible_for_appeal,omitempty"`
	ProductAppealStatus string `json:"product_appeal_status,omitempty"`
	ProductID int `json:"product_id,omitempty"`
	RejectionReasons []string `json:"rejection_reasons,omitempty"`
	ReviewStatus string `json:"review_status,omitempty"`
}

// IGShoppingReviewStatus represents the Facebook IGShoppingReviewStatus object
type IGShoppingReviewStatus struct {
	OnsiteEligibility *IGShoppingReviewStatusOnsiteEligibility `json:"onsite_eligibility,omitempty"`
	Reasons []*IGShoppingReviewStatusReasonWithHelpMessage `json:"reasons,omitempty"`
	Status string `json:"status,omitempty"`
}

// IGShoppingReviewStatusOnsiteEligibility represents the Facebook IGShoppingReviewStatusOnsiteEligibility object
type IGShoppingReviewStatusOnsiteEligibility struct {
	IsEligible bool `json:"is_eligible,omitempty"`
	Reasons []*IGShoppingReviewStatusReasonWithHelpMessage `json:"reasons,omitempty"`
}

// IGShoppingReviewStatusReasonWithHelpMessage represents the Facebook IGShoppingReviewStatusReasonWithHelpMessage object
type IGShoppingReviewStatusReasonWithHelpMessage struct {
	Code string `json:"code,omitempty"`
	HelpURL string `json:"help_url,omitempty"`
	Message string `json:"message,omitempty"`
}

// IGUpcomingEvent represents the Facebook IGUpcomingEvent object
type IGUpcomingEvent struct {
	EndTime time.Time `json:"end_time,omitempty"`
	ID string `json:"id,omitempty"`
	NotificationSubtypes []string `json:"notification_subtypes,omitempty"`
	NotificationTargetTime string `json:"notification_target_time,omitempty"`
	StartTime time.Time `json:"start_time,omitempty"`
	Title string `json:"title,omitempty"`
}

// IGUser represents the Facebook IGUser object
type IGUser struct {
	Biography string `json:"biography,omitempty"`
	BusinessDiscovery *IGUser `json:"business_discovery,omitempty"`
	FollowersCount int `json:"followers_count,omitempty"`
	FollowsCount int `json:"follows_count,omitempty"`
	HasProfilePic bool `json:"has_profile_pic,omitempty"`
	ID string `json:"id,omitempty"`
	IgID int `json:"ig_id,omitempty"`
	IsPublished bool `json:"is_published,omitempty"`
	LegacyInstagramUserID string `json:"legacy_instagram_user_id,omitempty"`
	MediaCount int `json:"media_count,omitempty"`
	MentionedComment *IGComment `json:"mentioned_comment,omitempty"`
	MentionedMedia *IGMedia `json:"mentioned_media,omitempty"`
	Name string `json:"name,omitempty"`
	OwnerBusiness *Business `json:"owner_business,omitempty"`
	ProfilePictureURL string `json:"profile_picture_url,omitempty"`
	ShoppingProductTagEligibility bool `json:"shopping_product_tag_eligibility,omitempty"`
	ShoppingReviewStatus string `json:"shopping_review_status,omitempty"`
	Username string `json:"username,omitempty"`
	Website string `json:"website,omitempty"`
}

// IGUserExportForCAM represents the Facebook IGUserExportForCAM object
type IGUserExportForCAM struct {
	AgeBucket string `json:"age_bucket,omitempty"`
	Biography string `json:"biography,omitempty"`
	Country string `json:"country,omitempty"`
	Email string `json:"email,omitempty"`
	Gender string `json:"gender,omitempty"`
	ID string `json:"id,omitempty"`
	IsAccountVerified bool `json:"is_account_verified,omitempty"`
	IsPaidPartnershipMessagesEnabled bool `json:"is_paid_partnership_messages_enabled,omitempty"`
	MessagingID string `json:"messaging_id,omitempty"`
	OnboardedStatus bool `json:"onboarded_status,omitempty"`
	PortfolioURL string `json:"portfolio_url,omitempty"`
	Username string `json:"username,omitempty"`
}

// IGUserForIGOnlyAPI represents the Facebook IGUserForIGOnlyAPI object
type IGUserForIGOnlyAPI struct {
	AccountType string `json:"account_type,omitempty"`
	Biography string `json:"biography,omitempty"`
	FollowersCount int `json:"followers_count,omitempty"`
	FollowsCount int `json:"follows_count,omitempty"`
	ID string `json:"id,omitempty"`
	MediaCount int `json:"media_count,omitempty"`
	Name string `json:"name,omitempty"`
	ProfilePictureURL string `json:"profile_picture_url,omitempty"`
	UserID int `json:"user_id,omitempty"`
	Username string `json:"username,omitempty"`
	Website string `json:"website,omitempty"`
}

// IGUserMessengerProfile represents the Facebook IGUserMessengerProfile object
type IGUserMessengerProfile struct {
	IceBreakers []map[string]interface{} `json:"ice_breakers,omitempty"`
	PersistentMenu []map[string]interface{} `json:"persistent_menu,omitempty"`
}

// IGUserSubscribedAppsData represents the Facebook IGUserSubscribedAppsData object
type IGUserSubscribedAppsData struct {
	AppID string `json:"app_id,omitempty"`
	SubscribedFields []string `json:"subscribed_fields,omitempty"`
}

// IGVideoCopyrightCheckMatchesInformation represents the Facebook IGVideoCopyrightCheckMatchesInformation object
type IGVideoCopyrightCheckMatchesInformation struct {
	CopyrightMatches []map[string]interface{} `json:"copyright_matches,omitempty"`
	Status *IGVideoCopyrightCheckStatus `json:"status,omitempty"`
}

// IGVideoCopyrightCheckStatus represents the Facebook IGVideoCopyrightCheckStatus object
type IGVideoCopyrightCheckStatus struct {
	MatchesFound bool `json:"matches_found,omitempty"`
	Status string `json:"status,omitempty"`
}

// IPObject represents the Facebook IPObject object
type IPObject struct {
	IpPermission string `json:"ip_permission,omitempty"`
	User map[string]interface{} `json:"user,omitempty"`
}

// ImageCopyright represents the Facebook ImageCopyright object
type ImageCopyright struct {
	Artist string `json:"artist,omitempty"`
	CopyrightMonitoringStatus string `json:"copyright_monitoring_status,omitempty"`
	CreationTime time.Time `json:"creation_time,omitempty"`
	Creator string `json:"creator,omitempty"`
	CustomID string `json:"custom_id,omitempty"`
	Description string `json:"description,omitempty"`
	Filename string `json:"filename,omitempty"`
	ID string `json:"id,omitempty"`
	Image *Photo `json:"image,omitempty"`
	MatchesCount uint `json:"matches_count,omitempty"`
	OriginalContentCreationDate time.Time `json:"original_content_creation_date,omitempty"`
	OwnershipCountries *VideoCopyrightGeoGate `json:"ownership_countries,omitempty"`
	Tags []string `json:"tags,omitempty"`
	Title string `json:"title,omitempty"`
	UpdateTime time.Time `json:"update_time,omitempty"`
}

// ImageCopyrightDispute represents the Facebook ImageCopyrightDispute object
type ImageCopyrightDispute struct {
	AppealFormData string `json:"appeal_form_data,omitempty"`
	DisputeFormData string `json:"dispute_form_data,omitempty"`
	ExpirationTime time.Time `json:"expiration_time,omitempty"`
	ID string `json:"id,omitempty"`
	MatchID string `json:"match_id,omitempty"`
	Status string `json:"status,omitempty"`
	TimeAppealed time.Time `json:"time_appealed,omitempty"`
	TimeCreated time.Time `json:"time_created,omitempty"`
	TimeUpdated time.Time `json:"time_updated,omitempty"`
}

// ImageReferenceMatch represents the Facebook ImageReferenceMatch object
type ImageReferenceMatch struct {
	ConflictingCountries []string `json:"conflicting_countries,omitempty"`
	CountryResolutionHistory []map[string][]map[string]interface{} `json:"country_resolution_history,omitempty"`
	CreationTime time.Time `json:"creation_time,omitempty"`
	CurrentConflictResolvedCountries []map[string]map[string]interface{} `json:"current_conflict_resolved_countries,omitempty"`
	DisplayedMatchState string `json:"displayed_match_state,omitempty"`
	DisputeFormDataEntriesWithTranslations []map[string]interface{} `json:"dispute_form_data_entries_with_translations,omitempty"`
	ExpirationTime time.Time `json:"expiration_time,omitempty"`
	ID string `json:"id,omitempty"`
	MatchState string `json:"match_state,omitempty"`
	MatchedReferenceCopyright *ImageCopyright `json:"matched_reference_copyright,omitempty"`
	MatchedReferenceOwner *Profile `json:"matched_reference_owner,omitempty"`
	ModificationHistory []map[string]interface{} `json:"modification_history,omitempty"`
	ReferenceCopyright *ImageCopyright `json:"reference_copyright,omitempty"`
	ReferenceOwner *Profile `json:"reference_owner,omitempty"`
	RejectionFormDataEntriesWithTranslations []map[string]interface{} `json:"rejection_form_data_entries_with_translations,omitempty"`
	ResolutionReason string `json:"resolution_reason,omitempty"`
	UpdateTime time.Time `json:"update_time,omitempty"`
}

// InsightsResult represents the Facebook InsightsResult object
type InsightsResult struct {
	Description string `json:"description,omitempty"`
	DescriptionFromAPIDoc string `json:"description_from_api_doc,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	Period string `json:"period,omitempty"`
	Title string `json:"title,omitempty"`
	Values []*InsightsValue `json:"values,omitempty"`
}

// InsightsValue represents the Facebook InsightsValue object
type InsightsValue struct {
	CampaignID string `json:"campaign_id,omitempty"`
	EarningSource string `json:"earning_source,omitempty"`
	EndTime time.Time `json:"end_time,omitempty"`
	EngagementSource string `json:"engagement_source,omitempty"`
	MessageType string `json:"message_type,omitempty"`
	MessagingChannel string `json:"messaging_channel,omitempty"`
	MonetizationTool string `json:"monetization_tool,omitempty"`
	RecurringNotificationsEntryPoint string `json:"recurring_notifications_entry_point,omitempty"`
	RecurringNotificationsFrequency string `json:"recurring_notifications_frequency,omitempty"`
	RecurringNotificationsTopic string `json:"recurring_notifications_topic,omitempty"`
	StartTime time.Time `json:"start_time,omitempty"`
	Value map[string]interface{} `json:"value,omitempty"`
}

// InstagramBusinessAsset represents the Facebook InstagramBusinessAsset object
type InstagramBusinessAsset struct {
	ID string `json:"id,omitempty"`
	IgUserID string `json:"ig_user_id,omitempty"`
	IgUsername string `json:"ig_username,omitempty"`
}

// InstagramInsightsResult represents the Facebook InstagramInsightsResult object
type InstagramInsightsResult struct {
	Description string `json:"description,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	Period string `json:"period,omitempty"`
	Title string `json:"title,omitempty"`
	TotalValue map[string]interface{} `json:"total_value,omitempty"`
	Values []*InstagramInsightsValue `json:"values,omitempty"`
}

// InstagramInsightsValue represents the Facebook InstagramInsightsValue object
type InstagramInsightsValue struct {
	EndTime time.Time `json:"end_time,omitempty"`
	Value map[string]interface{} `json:"value,omitempty"`
}

// InstagramRelatedProductTags represents the Facebook InstagramRelatedProductTags object
type InstagramRelatedProductTags struct {
	CheckoutSetting string `json:"checkout_setting,omitempty"`
	ID int `json:"id,omitempty"`
	ImageUri string `json:"image_uri,omitempty"`
	Name string `json:"name,omitempty"`
	PriceLabel string `json:"price_label,omitempty"`
	SalePriceLabel string `json:"sale_price_label,omitempty"`
}

// InstagramShoppingMerchantReviewMessage represents the Facebook InstagramShoppingMerchantReviewMessage object
type InstagramShoppingMerchantReviewMessage struct {
	HelpURL string `json:"help_url,omitempty"`
	Message string `json:"message,omitempty"`
}

// InstagramThread represents the Facebook InstagramThread object
type InstagramThread struct {
	Folder string `json:"folder,omitempty"`
	ID string `json:"id,omitempty"`
	Participants map[string]interface{} `json:"participants,omitempty"`
	UpdatedTime time.Time `json:"updated_time,omitempty"`
}

// InstagramUser represents the Facebook InstagramUser object
type InstagramUser struct {
	FollowCount int `json:"follow_count,omitempty"`
	FollowedByCount int `json:"followed_by_count,omitempty"`
	HasProfilePicture bool `json:"has_profile_picture,omitempty"`
	ID string `json:"id,omitempty"`
	IgUserID string `json:"ig_user_id,omitempty"`
	IsPrivate bool `json:"is_private,omitempty"`
	IsPublished bool `json:"is_published,omitempty"`
	MediaCount int `json:"media_count,omitempty"`
	MiniShopStorefront *Shop `json:"mini_shop_storefront,omitempty"`
	OwnerBusiness *Business `json:"owner_business,omitempty"`
	ProfilePic string `json:"profile_pic,omitempty"`
	Username string `json:"username,omitempty"`
}

// InstantArticleInsightsQueryResult represents the Facebook InstantArticleInsightsQueryResult object
type InstantArticleInsightsQueryResult struct {
	Breakdowns map[string]string `json:"breakdowns,omitempty"`
	Name string `json:"name,omitempty"`
	Time time.Time `json:"time,omitempty"`
	Value string `json:"value,omitempty"`
}

// IosAppLink represents the Facebook IosAppLink object
type IosAppLink struct {
	AppName string `json:"app_name,omitempty"`
	AppStoreID string `json:"app_store_id,omitempty"`
	URL string `json:"url,omitempty"`
}

// JobOpening represents the Facebook JobOpening object
type JobOpening struct {
	Address string `json:"address,omitempty"`
	ApplicationCallbackURL string `json:"application_callback_url,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	Description string `json:"description,omitempty"`
	Errors []string `json:"errors,omitempty"`
	ExternalCompanyFacebookURL string `json:"external_company_facebook_url,omitempty"`
	ExternalCompanyFullAddress string `json:"external_company_full_address,omitempty"`
	ExternalCompanyID string `json:"external_company_id,omitempty"`
	ExternalCompanyName string `json:"external_company_name,omitempty"`
	ExternalID string `json:"external_id,omitempty"`
	ID string `json:"id,omitempty"`
	JobStatus JobopeningJobStatus `json:"job_status,omitempty"`
	Latitude float64 `json:"latitude,omitempty"`
	Longitude float64 `json:"longitude,omitempty"`
	OffsiteApplicationURL string `json:"offsite_application_url,omitempty"`
	Page *Page `json:"page,omitempty"`
	Photo *Photo `json:"photo,omitempty"`
	PlatformReviewStatus JobopeningPlatformReviewStatus `json:"platform_review_status,omitempty"`
	Post *Post `json:"post,omitempty"`
	RemoteType string `json:"remote_type,omitempty"`
	ReviewRejectionReasons []JobopeningReviewRejectionReasons `json:"review_rejection_reasons,omitempty"`
	Title string `json:"title,omitempty"`
	Type JobopeningType `json:"type,omitempty"`
}

// KeyValue represents the Facebook KeyValue object
type KeyValue struct {
	Key string `json:"key,omitempty"`
	Value string `json:"value,omitempty"`
}

// Lead represents the Facebook Lead object
type Lead struct {
	AdID string `json:"ad_id,omitempty"`
	AdName string `json:"ad_name,omitempty"`
	AdsetID string `json:"adset_id,omitempty"`
	AdsetName string `json:"adset_name,omitempty"`
	CampaignID string `json:"campaign_id,omitempty"`
	CampaignName string `json:"campaign_name,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	CustomDisclaimerResponses []*UserLeadGenDisclaimerResponse `json:"custom_disclaimer_responses,omitempty"`
	FieldData []*UserLeadGenFieldData `json:"field_data,omitempty"`
	FormID string `json:"form_id,omitempty"`
	HomeListing *HomeListing `json:"home_listing,omitempty"`
	ID string `json:"id,omitempty"`
	IsOrganic bool `json:"is_organic,omitempty"`
	PartnerName string `json:"partner_name,omitempty"`
	Platform string `json:"platform,omitempty"`
	Post *Link `json:"post,omitempty"`
	PostSubmissionCheckResult *LeadGenPostSubmissionCheckResult `json:"post_submission_check_result,omitempty"`
	RetailerItemID string `json:"retailer_item_id,omitempty"`
	Vehicle *Vehicle `json:"vehicle,omitempty"`
}

// LeadGenAppointmentBookingInfo represents the Facebook LeadGenAppointmentBookingInfo object
type LeadGenAppointmentBookingInfo struct {
	AdvertiserTimezoneOffset string `json:"advertiser_timezone_offset,omitempty"`
	AppointmentDurations []string `json:"appointment_durations,omitempty"`
	AppointmentSlotsByDay []*LeadGenAppointmentSlotsByDay `json:"appointment_slots_by_day,omitempty"`
}

// LeadGenAppointmentSlotsByDay represents the Facebook LeadGenAppointmentSlotsByDay object
type LeadGenAppointmentSlotsByDay struct {
	AppointmentSlots []*LeadGenAppointmentTimeSlot `json:"appointment_slots,omitempty"`
	Day string `json:"day,omitempty"`
}

// LeadGenAppointmentTimeSlot represents the Facebook LeadGenAppointmentTimeSlot object
type LeadGenAppointmentTimeSlot struct {
	EndTime uint `json:"end_time,omitempty"`
	StartTime uint `json:"start_time,omitempty"`
}

// LeadGenClientValidationRules represents the Facebook LeadGenClientValidationRules object
type LeadGenClientValidationRules struct {
	ExcludeEmojiAndSpecialCharsEnabled bool `json:"exclude_emoji_and_special_chars_enabled,omitempty"`
	MaxLengthValue int `json:"max_length_value,omitempty"`
	MinLengthValue int `json:"min_length_value,omitempty"`
}

// LeadGenConditionalQuestionsGroupChoices represents the Facebook LeadGenConditionalQuestionsGroupChoices object
type LeadGenConditionalQuestionsGroupChoices struct {
	CustomizedToken string `json:"customized_token,omitempty"`
	NextQuestionChoices []*LeadGenConditionalQuestionsGroupChoices `json:"next_question_choices,omitempty"`
	Value string `json:"value,omitempty"`
}

// LeadGenConditionalQuestionsGroupQuestions represents the Facebook LeadGenConditionalQuestionsGroupQuestions object
type LeadGenConditionalQuestionsGroupQuestions struct {
	FieldKey string `json:"field_key,omitempty"`
	InputType string `json:"input_type,omitempty"`
	Name string `json:"name,omitempty"`
}

// LeadGenContextCard represents the Facebook LeadGenContextCard object
type LeadGenContextCard struct {
	ButtonText string `json:"button_text,omitempty"`
	Content []string `json:"content,omitempty"`
	CoverPhoto *Photo `json:"cover_photo,omitempty"`
	ID string `json:"id,omitempty"`
	Style string `json:"style,omitempty"`
	Title string `json:"title,omitempty"`
}

// LeadGenCustomDisclaimer represents the Facebook LeadGenCustomDisclaimer object
type LeadGenCustomDisclaimer struct {
	Body *LeadGenCustomDisclaimerBody `json:"body,omitempty"`
	Checkboxes []*LeadGenLegalContentCheckbox `json:"checkboxes,omitempty"`
	Title string `json:"title,omitempty"`
}

// LeadGenCustomDisclaimerBody represents the Facebook LeadGenCustomDisclaimerBody object
type LeadGenCustomDisclaimerBody struct {
	Text string `json:"text,omitempty"`
	URLEntities []*LeadGenURLEntityAtRanges `json:"url_entities,omitempty"`
}

// LeadGenDataDraft represents the Facebook LeadGenDataDraft object
type LeadGenDataDraft struct {
	BlockDisplayForNonTargetedViewer bool `json:"block_display_for_non_targeted_viewer,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	DisqualifiedEndComponent map[string]interface{} `json:"disqualified_end_component,omitempty"`
	FollowUpActionURL string `json:"follow_up_action_url,omitempty"`
	ID string `json:"id,omitempty"`
	IsOptimizedForQuality bool `json:"is_optimized_for_quality,omitempty"`
	LegalContent map[string]interface{} `json:"legal_content,omitempty"`
	Locale string `json:"locale,omitempty"`
	Name string `json:"name,omitempty"`
	Page *Page `json:"page,omitempty"`
	QuestionPageCustomHeadline string `json:"question_page_custom_headline,omitempty"`
	Questions []*LeadGenDraftQuestion `json:"questions,omitempty"`
	Status string `json:"status,omitempty"`
	ThankYouPage map[string]interface{} `json:"thank_you_page,omitempty"`
	TrackingParameters []map[string]string `json:"tracking_parameters,omitempty"`
}

// LeadGenDirectCRMIntegrationConfig represents the Facebook LeadGenDirectCRMIntegrationConfig object
type LeadGenDirectCRMIntegrationConfig struct {
	AuthID string `json:"auth_id,omitempty"`
	CreationTime time.Time `json:"creation_time,omitempty"`
	ID string `json:"id,omitempty"`
	LeadGenData *LeadgenForm `json:"lead_gen_data,omitempty"`
	MatchedFields []map[string]string `json:"matched_fields,omitempty"`
	MatchedFieldsLabels []map[string]string `json:"matched_fields_labels,omitempty"`
	Resources []map[string]string `json:"resources,omitempty"`
	ThirdPartyAppID string `json:"third_party_app_id,omitempty"`
}

// LeadGenDraftQuestion represents the Facebook LeadGenDraftQuestion object
type LeadGenDraftQuestion struct {
	ConditionalQuestionsChoices []*LeadGenConditionalQuestionsGroupChoices `json:"conditional_questions_choices,omitempty"`
	ConditionalQuestionsGroupID string `json:"conditional_questions_group_id,omitempty"`
	DependentConditionalQuestions []*LeadGenConditionalQuestionsGroupQuestions `json:"dependent_conditional_questions,omitempty"`
	InlineContext string `json:"inline_context,omitempty"`
	Key string `json:"key,omitempty"`
	Label string `json:"label,omitempty"`
	Options []*LeadGenQuestionOption `json:"options,omitempty"`
	Type string `json:"type,omitempty"`
}

// LeadGenFormPreviewDetails represents the Facebook LeadGenFormPreviewDetails object
type LeadGenFormPreviewDetails struct {
	CallBusinessText string `json:"call_business_text,omitempty"`
	CallToActionTitle string `json:"call_to_action_title,omitempty"`
	ChatOnMessengerText string `json:"chat_on_messenger_text,omitempty"`
	ChatOnWhatsappText string `json:"chat_on_whatsapp_text,omitempty"`
	ContactInformationText string `json:"contact_information_text,omitempty"`
	CreativesOverviewDefaultText string `json:"creatives_overview_default_text,omitempty"`
	CustomDisclaimerEditorState string `json:"custom_disclaimer_editor_state,omitempty"`
	CustomDisclaimerTitle string `json:"custom_disclaimer_title,omitempty"`
	DataPrivacyPolicySettingDescription string `json:"data_privacy_policy_setting_description,omitempty"`
	DefaultAppointmentSchedulingInlineContext string `json:"default_appointment_scheduling_inline_context,omitempty"`
	DefaultDisqualifiedEndComponent map[string]interface{} `json:"default_disqualified_end_component,omitempty"`
	DefaultThankYouPage map[string]interface{} `json:"default_thank_you_page,omitempty"`
	DisqualifiedThankYouCardTransparencyInfoText string `json:"disqualified_thank_you_card_transparency_info_text,omitempty"`
	EditText string `json:"edit_text,omitempty"`
	EmailInlineContextText string `json:"email_inline_context_text,omitempty"`
	EmailMessengerPushOptInDisclaimer string `json:"email_messenger_push_opt_in_disclaimer,omitempty"`
	EmailMessengerPushOptInTransparencyText string `json:"email_messenger_push_opt_in_transparency_text,omitempty"`
	FormClarityDescriptionContent string `json:"form_clarity_description_content,omitempty"`
	FormClarityDescriptionTitle string `json:"form_clarity_description_title,omitempty"`
	FormClarityHeadline string `json:"form_clarity_headline,omitempty"`
	GatedContentLockedDescription string `json:"gated_content_locked_description,omitempty"`
	GatedContentLockedHeadline string `json:"gated_content_locked_headline,omitempty"`
	GatedContentUnlockedDescription string `json:"gated_content_unlocked_description,omitempty"`
	GatedContentUnlockedHeadline string `json:"gated_content_unlocked_headline,omitempty"`
	HowItWorksSectionHeaders []map[string]string `json:"how_it_works_section_headers,omitempty"`
	NextButtonText string `json:"next_button_text,omitempty"`
	OptionalQuestionText string `json:"optional_question_text,omitempty"`
	PersonalInfoText string `json:"personal_info_text,omitempty"`
	PhoneNumberInlineContextText string `json:"phone_number_inline_context_text,omitempty"`
	PrivacyPolicyLinkText string `json:"privacy_policy_link_text,omitempty"`
	PrivacyPolicyLinkTextForOptionalPrivacyPolicy string `json:"privacy_policy_link_text_for_optional_privacy_policy,omitempty"`
	PrivacyPolicyTitleSectionTitleText string `json:"privacy_policy_title_section_title_text,omitempty"`
	PrivacySettingDescription string `json:"privacy_setting_description,omitempty"`
	ProductsSectionHeaders []map[string]string `json:"products_section_headers,omitempty"`
	QualifiedThankYouCardTransparencyInfoText string `json:"qualified_thank_you_card_transparency_info_text,omitempty"`
	RedeemPromoCodeText string `json:"redeem_promo_code_text,omitempty"`
	ReturnToFacebookText string `json:"return_to_facebook_text,omitempty"`
	ReviewYourInfoText string `json:"review_your_info_text,omitempty"`
	SecureSharingText string `json:"secure_sharing_text,omitempty"`
	SecureSharingTextForOptionalPrivacyPolicy string `json:"secure_sharing_text_for_optional_privacy_policy,omitempty"`
	SlideToSubmitText string `json:"slide_to_submit_text,omitempty"`
	SocialProofSectionHeaders []map[string]string `json:"social_proof_section_headers,omitempty"`
	SubmitButtonText string `json:"submit_button_text,omitempty"`
	ViewFileText string `json:"view_file_text,omitempty"`
	WhatsAppOptInBody string `json:"whats_app_opt_in_body,omitempty"`
	WhatsAppOptInTitle string `json:"whats_app_opt_in_title,omitempty"`
}

// LeadGenLegalContent represents the Facebook LeadGenLegalContent object
type LeadGenLegalContent struct {
	CustomDisclaimer *LeadGenCustomDisclaimer `json:"custom_disclaimer,omitempty"`
	ID string `json:"id,omitempty"`
	PrivacyPolicy *LeadGenPrivacyPolicy `json:"privacy_policy,omitempty"`
}

// LeadGenLegalContentCheckbox represents the Facebook LeadGenLegalContentCheckbox object
type LeadGenLegalContentCheckbox struct {
	ID string `json:"id,omitempty"`
	IsCheckedByDefault bool `json:"is_checked_by_default,omitempty"`
	IsRequired bool `json:"is_required,omitempty"`
	Key string `json:"key,omitempty"`
	Text string `json:"text,omitempty"`
}

// LeadGenPostSubmissionCheckResult represents the Facebook LeadGenPostSubmissionCheckResult object
type LeadGenPostSubmissionCheckResult struct {
	APICallResult string `json:"api_call_result,omitempty"`
	APIErrorMessage string `json:"api_error_message,omitempty"`
	ShownThankYouPage string `json:"shown_thank_you_page,omitempty"`
}

// LeadGenPrivacyPolicy represents the Facebook LeadGenPrivacyPolicy object
type LeadGenPrivacyPolicy struct {
	LinkText string `json:"link_text,omitempty"`
	URL string `json:"url,omitempty"`
}

// LeadGenQuestion represents the Facebook LeadGenQuestion object
type LeadGenQuestion struct {
	ConditionalQuestionsChoices []*LeadGenConditionalQuestionsGroupChoices `json:"conditional_questions_choices,omitempty"`
	ConditionalQuestionsGroupID string `json:"conditional_questions_group_id,omitempty"`
	DependentConditionalQuestions []*LeadGenConditionalQuestionsGroupQuestions `json:"dependent_conditional_questions,omitempty"`
	ID string `json:"id,omitempty"`
	InlineContext string `json:"inline_context,omitempty"`
	Key string `json:"key,omitempty"`
	Label string `json:"label,omitempty"`
	Options []*LeadGenQuestionOption `json:"options,omitempty"`
	Type string `json:"type,omitempty"`
}

// LeadGenQuestionOption represents the Facebook LeadGenQuestionOption object
type LeadGenQuestionOption struct {
	Key string `json:"key,omitempty"`
	Value string `json:"value,omitempty"`
}

// LeadGenThankYouPage represents the Facebook LeadGenThankYouPage object
type LeadGenThankYouPage struct {
	Body string `json:"body,omitempty"`
	BusinessPhoneNumber string `json:"business_phone_number,omitempty"`
	ButtonText string `json:"button_text,omitempty"`
	ButtonType string `json:"button_type,omitempty"`
	CountryCode string `json:"country_code,omitempty"`
	EnableMessenger bool `json:"enable_messenger,omitempty"`
	GatedFile *LeadGenThankYouPageGatedFile `json:"gated_file,omitempty"`
	ID string `json:"id,omitempty"`
	LeadGenUseCase string `json:"lead_gen_use_case,omitempty"`
	Status string `json:"status,omitempty"`
	Title string `json:"title,omitempty"`
	WebsiteURL string `json:"website_url,omitempty"`
}

// LeadGenThankYouPageGatedFile represents the Facebook LeadGenThankYouPageGatedFile object
type LeadGenThankYouPageGatedFile struct {
	FileCdnURL string `json:"file_cdn_url,omitempty"`
	FileName string `json:"file_name,omitempty"`
	FileSizeBytes int `json:"file_size_bytes,omitempty"`
	ID string `json:"id,omitempty"`
}

// LeadGenThankYouPageGatedPromo represents the Facebook LeadGenThankYouPageGatedPromo object
type LeadGenThankYouPageGatedPromo struct {
	ID string `json:"id,omitempty"`
	OnlineOfferURL string `json:"online_offer_url,omitempty"`
	OnlinePromoCode string `json:"online_promo_code,omitempty"`
}

// LeadGenURLEntityAtRanges represents the Facebook LeadGenURLEntityAtRanges object
type LeadGenURLEntityAtRanges struct {
	Length uint `json:"length,omitempty"`
	Offset uint `json:"offset,omitempty"`
	URL string `json:"url,omitempty"`
}

// LeadgenForm represents the Facebook LeadgenForm object
type LeadgenForm struct {
	AllowOrganicLead bool `json:"allow_organic_lead,omitempty"`
	BlockDisplayForNonTargetedViewer bool `json:"block_display_for_non_targeted_viewer,omitempty"`
	ContextCard *LeadGenContextCard `json:"context_card,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	Creator *User `json:"creator,omitempty"`
	ExpiredLeadsCount uint `json:"expired_leads_count,omitempty"`
	FollowUpActionText string `json:"follow_up_action_text,omitempty"`
	FollowUpActionURL string `json:"follow_up_action_url,omitempty"`
	ID string `json:"id,omitempty"`
	IsOptimizedForQuality bool `json:"is_optimized_for_quality,omitempty"`
	LeadsCount uint `json:"leads_count,omitempty"`
	LegalContent *LeadGenLegalContent `json:"legal_content,omitempty"`
	Locale string `json:"locale,omitempty"`
	Name string `json:"name,omitempty"`
	OrganicLeadsCount uint `json:"organic_leads_count,omitempty"`
	Page *Page `json:"page,omitempty"`
	PageID string `json:"page_id,omitempty"`
	PrivacyPolicyURL string `json:"privacy_policy_url,omitempty"`
	QuestionPageCustomHeadline string `json:"question_page_custom_headline,omitempty"`
	Questions []*LeadGenQuestion `json:"questions,omitempty"`
	Status string `json:"status,omitempty"`
	ThankYouPage *LeadGenThankYouPage `json:"thank_you_page,omitempty"`
	TrackingParameters []map[string]string `json:"tracking_parameters,omitempty"`
}

// LifeEvent represents the Facebook LifeEvent object
type LifeEvent struct {
	Description string `json:"description,omitempty"`
	EndTime time.Time `json:"end_time,omitempty"`
	From *Page `json:"from,omitempty"`
	ID string `json:"id,omitempty"`
	IsHidden bool `json:"is_hidden,omitempty"`
	StartTime time.Time `json:"start_time,omitempty"`
	Title string `json:"title,omitempty"`
	UpdatedTime time.Time `json:"updated_time,omitempty"`
}

// Link represents the Facebook Link object
type Link struct {
	Caption string `json:"caption,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	Description string `json:"description,omitempty"`
	From map[string]interface{} `json:"from,omitempty"`
	Icon string `json:"icon,omitempty"`
	ID string `json:"id,omitempty"`
	Link string `json:"link,omitempty"`
	Message string `json:"message,omitempty"`
	MultiShareOptimized bool `json:"multi_share_optimized,omitempty"`
	Name string `json:"name,omitempty"`
	Privacy *Privacy `json:"privacy,omitempty"`
	Via map[string]interface{} `json:"via,omitempty"`
}

// LinkedInstagramAccountData represents the Facebook LinkedInstagramAccountData object
type LinkedInstagramAccountData struct {
	AccessToken string `json:"access_token,omitempty"`
	AnalyticsClaim string `json:"analytics_claim,omitempty"`
	FullName string `json:"full_name,omitempty"`
	ProfilePictureURL string `json:"profile_picture_url,omitempty"`
	UserID string `json:"user_id,omitempty"`
	UserName string `json:"user_name,omitempty"`
}

// LiveVideo represents the Facebook LiveVideo object
type LiveVideo struct {
	AdBreakConfig *LiveVideoAdBreakConfig `json:"ad_break_config,omitempty"`
	AdBreakFailureReason string `json:"ad_break_failure_reason,omitempty"`
	BroadcastStartTime time.Time `json:"broadcast_start_time,omitempty"`
	Copyright *VideoCopyright `json:"copyright,omitempty"`
	CreationTime time.Time `json:"creation_time,omitempty"`
	DashIngestURL string `json:"dash_ingest_url,omitempty"`
	DashPreviewURL string `json:"dash_preview_url,omitempty"`
	Description string `json:"description,omitempty"`
	EmbedHtml map[string]interface{} `json:"embed_html,omitempty"`
	From map[string]interface{} `json:"from,omitempty"`
	ID string `json:"id,omitempty"`
	IngestStreams []*LiveVideoInputStream `json:"ingest_streams,omitempty"`
	IsManualMode bool `json:"is_manual_mode,omitempty"`
	IsReferenceOnly bool `json:"is_reference_only,omitempty"`
	LiveViews uint `json:"live_views,omitempty"`
	OverlayURL string `json:"overlay_url,omitempty"`
	PermalinkURL string `json:"permalink_url,omitempty"`
	PlannedStartTime time.Time `json:"planned_start_time,omitempty"`
	RecommendedEncoderSettings *LiveVideoRecommendedEncoderSettings `json:"recommended_encoder_settings,omitempty"`
	SecondsLeft int `json:"seconds_left,omitempty"`
	SecureStreamURL string `json:"secure_stream_url,omitempty"`
	Status string `json:"status,omitempty"`
	StreamURL string `json:"stream_url,omitempty"`
	Targeting *LiveVideoTargeting `json:"targeting,omitempty"`
	Title string `json:"title,omitempty"`
	TotalViews string `json:"total_views,omitempty"`
	Video *AdVideo `json:"video,omitempty"`
}

// LiveVideoAdBreakConfig represents the Facebook LiveVideoAdBreakConfig object
type LiveVideoAdBreakConfig struct {
	DefaultAdBreakDuration uint `json:"default_ad_break_duration,omitempty"`
	FailureReasonPollingInterval uint `json:"failure_reason_polling_interval,omitempty"`
	FirstBreakEligibleSecs uint `json:"first_break_eligible_secs,omitempty"`
	GuideURL string `json:"guide_url,omitempty"`
	IsEligibleToOnboard bool `json:"is_eligible_to_onboard,omitempty"`
	IsEnabled bool `json:"is_enabled,omitempty"`
	OnboardingURL string `json:"onboarding_url,omitempty"`
	PreparingDuration uint `json:"preparing_duration,omitempty"`
	TimeBetweenAdBreaksSecs uint `json:"time_between_ad_breaks_secs,omitempty"`
	ViewerCountThreshold uint `json:"viewer_count_threshold,omitempty"`
}

// LiveVideoAdCampaignConfig represents the Facebook LiveVideoAdCampaignConfig object
type LiveVideoAdCampaignConfig struct {
	ID string `json:"id,omitempty"`
	LiveVideoAdType string `json:"live_video_ad_type,omitempty"`
}

// LiveVideoError represents the Facebook LiveVideoError object
type LiveVideoError struct {
	CreationTime time.Time `json:"creation_time,omitempty"`
	ErrorCode int `json:"error_code,omitempty"`
	ErrorMessage string `json:"error_message,omitempty"`
	ErrorType string `json:"error_type,omitempty"`
}

// LiveVideoInputStream represents the Facebook LiveVideoInputStream object
type LiveVideoInputStream struct {
	DashIngestURL string `json:"dash_ingest_url,omitempty"`
	DashPreviewURL string `json:"dash_preview_url,omitempty"`
	ID string `json:"id,omitempty"`
	IsMaster bool `json:"is_master,omitempty"`
	SecureStreamURL string `json:"secure_stream_url,omitempty"`
	StreamHealth map[string]interface{} `json:"stream_health,omitempty"`
	StreamID string `json:"stream_id,omitempty"`
	StreamURL string `json:"stream_url,omitempty"`
}

// LiveVideoRecommendedEncoderSettings represents the Facebook LiveVideoRecommendedEncoderSettings object
type LiveVideoRecommendedEncoderSettings struct {
	AudioCodecSettings map[string]interface{} `json:"audio_codec_settings,omitempty"`
	StreamingProtocol string `json:"streaming_protocol,omitempty"`
	VideoCodecSettings map[string]interface{} `json:"video_codec_settings,omitempty"`
}

// LiveVideoTargeting represents the Facebook LiveVideoTargeting object
type LiveVideoTargeting struct {
	AgeMax uint `json:"age_max,omitempty"`
	AgeMin uint `json:"age_min,omitempty"`
	ExcludedCountries []string `json:"excluded_countries,omitempty"`
	GeoLocations *TargetingGeoLocation `json:"geo_locations,omitempty"`
}

// LocalServiceBusiness represents the Facebook LocalServiceBusiness object
type LocalServiceBusiness struct {
	Address map[string]interface{} `json:"address,omitempty"`
	Applinks *CatalogItemAppLinks `json:"applinks,omitempty"`
	Availability LocalservicebusinessAvailability `json:"availability,omitempty"`
	Brand string `json:"brand,omitempty"`
	Category string `json:"category,omitempty"`
	CategorySpecificFields *CatalogSubVerticalList `json:"category_specific_fields,omitempty"`
	Condition LocalservicebusinessCondition `json:"condition,omitempty"`
	CuisineType string `json:"cuisine_type,omitempty"`
	Currency string `json:"currency,omitempty"`
	CustomLabel0 string `json:"custom_label_0,omitempty"`
	CustomLabel1 string `json:"custom_label_1,omitempty"`
	CustomLabel2 string `json:"custom_label_2,omitempty"`
	CustomLabel3 string `json:"custom_label_3,omitempty"`
	CustomLabel4 string `json:"custom_label_4,omitempty"`
	CustomNumber0 uint `json:"custom_number_0,omitempty"`
	CustomNumber1 uint `json:"custom_number_1,omitempty"`
	CustomNumber2 uint `json:"custom_number_2,omitempty"`
	CustomNumber3 uint `json:"custom_number_3,omitempty"`
	CustomNumber4 uint `json:"custom_number_4,omitempty"`
	Description string `json:"description,omitempty"`
	ExpirationDate string `json:"expiration_date,omitempty"`
	Gtin string `json:"gtin,omitempty"`
	ID string `json:"id,omitempty"`
	ImageFetchStatus LocalservicebusinessImageFetchStatus `json:"image_fetch_status,omitempty"`
	Images []string `json:"images,omitempty"`
	LocalInfo *ProductItemLocalInfo `json:"local_info,omitempty"`
	LocalServiceBusinessID string `json:"local_service_business_id,omitempty"`
	MainLocalInfo *ProductItemLocalInfo `json:"main_local_info,omitempty"`
	Phone string `json:"phone,omitempty"`
	Price string `json:"price,omitempty"`
	PriceRange string `json:"price_range,omitempty"`
	RetailerCategory string `json:"retailer_category,omitempty"`
	SanitizedImages []string `json:"sanitized_images,omitempty"`
	Size string `json:"size,omitempty"`
	Tags []string `json:"tags,omitempty"`
	Title string `json:"title,omitempty"`
	UnitPrice map[string]interface{} `json:"unit_price,omitempty"`
	URL string `json:"url,omitempty"`
	VendorID string `json:"vendor_id,omitempty"`
	Visibility LocalservicebusinessVisibility `json:"visibility,omitempty"`
}

// Location represents the Facebook Location object
type Location struct {
	City string `json:"city,omitempty"`
	CityID uint `json:"city_id,omitempty"`
	Country string `json:"country,omitempty"`
	CountryCode string `json:"country_code,omitempty"`
	Latitude float64 `json:"latitude,omitempty"`
	LocatedIn string `json:"located_in,omitempty"`
	Longitude float64 `json:"longitude,omitempty"`
	Name string `json:"name,omitempty"`
	Region string `json:"region,omitempty"`
	RegionID uint `json:"region_id,omitempty"`
	State string `json:"state,omitempty"`
	Street string `json:"street,omitempty"`
	Zip string `json:"zip,omitempty"`
}

// LookalikeSpec represents the Facebook LookalikeSpec object
type LookalikeSpec struct {
	Country string `json:"country,omitempty"`
	IsFinancialService bool `json:"is_financial_service,omitempty"`
	Origin []map[string]interface{} `json:"origin,omitempty"`
	OriginEventName string `json:"origin_event_name,omitempty"`
	OriginEventSourceName string `json:"origin_event_source_name,omitempty"`
	OriginEventSourceType string `json:"origin_event_source_type,omitempty"`
	ProductSetName string `json:"product_set_name,omitempty"`
	Ratio float64 `json:"ratio,omitempty"`
	StartingRatio float64 `json:"starting_ratio,omitempty"`
	TargetCountries []string `json:"target_countries,omitempty"`
	TargetCountryNames interface{} `json:"target_country_names,omitempty"`
	Type string `json:"type,omitempty"`
}

// LoomConfig represents the Facebook LoomConfig object
type LoomConfig struct {
	ID string `json:"id,omitempty"`
}

// MCExperienceConfigForApi represents the Facebook MCExperienceConfigForApi object
type MCExperienceConfigForApi struct {
	IsCampaignEnabled bool `json:"is_campaign_enabled,omitempty"`
	IsTermsSigned bool `json:"is_terms_signed,omitempty"`
	MerchantType string `json:"merchant_type,omitempty"`
}

// MIXInsightsResult represents the Facebook MIXInsightsResult object
type MIXInsightsResult struct {
	DailyAgeGenderBreakdown []map[string][]map[string]int `json:"daily_age_gender_breakdown,omitempty"`
	DailyAudioLibraryValues []map[string]int `json:"daily_audio_library_values,omitempty"`
	DailyUgcValues []map[string]int `json:"daily_ugc_values,omitempty"`
	DailyValues []map[string]int `json:"daily_values,omitempty"`
	Metric string `json:"metric,omitempty"`
	MonthlyAudioLibraryValues []map[string]int `json:"monthly_audio_library_values,omitempty"`
	MonthlyUgcValues []map[string]int `json:"monthly_ugc_values,omitempty"`
	MonthlyValues []map[string]int `json:"monthly_values,omitempty"`
	PercentGrowth float64 `json:"percent_growth,omitempty"`
	ShieldedFields []map[string][]map[string]bool `json:"shielded_fields,omitempty"`
	TotalAgeGenderBreakdown []map[string]int `json:"total_age_gender_breakdown,omitempty"`
	TotalAudioLibraryValue int `json:"total_audio_library_value,omitempty"`
	TotalCountryBreakdown []map[string]int `json:"total_country_breakdown,omitempty"`
	TotalLocaleBreakdown []map[string]int `json:"total_locale_breakdown,omitempty"`
	TotalProductBreakdown []map[string]int `json:"total_product_breakdown,omitempty"`
	TotalUgcValue int `json:"total_ugc_value,omitempty"`
	TotalValue int `json:"total_value,omitempty"`
	TrendingAge []map[string][]map[string]float64 `json:"trending_age,omitempty"`
	TrendingGender []map[string][]map[string]float64 `json:"trending_gender,omitempty"`
	TrendingInterest []map[string][]map[string]float64 `json:"trending_interest,omitempty"`
	TrendingTerritory []map[string][]map[string]float64 `json:"trending_territory,omitempty"`
}

// MailingAddress represents the Facebook MailingAddress object
type MailingAddress struct {
	City string `json:"city,omitempty"`
	CityPage *Page `json:"city_page,omitempty"`
	Country string `json:"country,omitempty"`
	ID string `json:"id,omitempty"`
	PostalCode string `json:"postal_code,omitempty"`
	Region string `json:"region,omitempty"`
	Street1 string `json:"street1,omitempty"`
	Street2 string `json:"street2,omitempty"`
}

// ManagedPartnerBusiness represents the Facebook ManagedPartnerBusiness object
type ManagedPartnerBusiness struct {
	AdAccount *AdAccount `json:"ad_account,omitempty"`
	CatalogSegment *ProductCatalog `json:"catalog_segment,omitempty"`
	ExtendedCredit *ManagedPartnerExtendedCredit `json:"extended_credit,omitempty"`
	Page *Page `json:"page,omitempty"`
	SellerBusinessInfo map[string]interface{} `json:"seller_business_info,omitempty"`
	SellerBusinessStatus string `json:"seller_business_status,omitempty"`
	Template []map[string]interface{} `json:"template,omitempty"`
}

// ManagedPartnerExtendedCredit represents the Facebook ManagedPartnerExtendedCredit object
type ManagedPartnerExtendedCredit struct {
	ID string `json:"id,omitempty"`
	MaxBalance *CurrencyAmount `json:"max_balance,omitempty"`
	ReceivingCreditAllocationConfig *ExtendedCreditAllocationConfig `json:"receiving_credit_allocation_config,omitempty"`
}

// ManagementSiteLink represents the Facebook ManagementSiteLink object
type ManagementSiteLink struct {
	AdAccountID string `json:"ad_account_id,omitempty"`
	ID string `json:"id,omitempty"`
	LinkDomain string `json:"link_domain,omitempty"`
	LinkHash string `json:"link_hash,omitempty"`
	LinkImageHash string `json:"link_image_hash,omitempty"`
	LinkImageURL string `json:"link_image_url,omitempty"`
	LinkTitle string `json:"link_title,omitempty"`
	LinkType string `json:"link_type,omitempty"`
	LinkURL string `json:"link_url,omitempty"`
}

// McomInvoiceBankAccount represents the Facebook McomInvoiceBankAccount object
type McomInvoiceBankAccount struct {
	NumPendingVerificationAccounts int `json:"num_pending_verification_accounts,omitempty"`
	NumVerifiedAccounts int `json:"num_verified_accounts,omitempty"`
	PendingVerificationAccounts []map[string]interface{} `json:"pending_verification_accounts,omitempty"`
	VerifiedAccounts []map[string]interface{} `json:"verified_accounts,omitempty"`
}

// McomInvoiceDetails represents the Facebook McomInvoiceDetails object
type McomInvoiceDetails struct {
	AdditionalAmounts []map[string]interface{} `json:"additional_amounts,omitempty"`
	BuyerNotes string `json:"buyer_notes,omitempty"`
	CurrencyAmount map[string]interface{} `json:"currency_amount,omitempty"`
	ExternalInvoiceID string `json:"external_invoice_id,omitempty"`
	Features map[string]interface{} `json:"features,omitempty"`
	InvoiceCreated int `json:"invoice_created,omitempty"`
	InvoiceID string `json:"invoice_id,omitempty"`
	InvoiceInstructions string `json:"invoice_instructions,omitempty"`
	InvoiceInstructionsImageURL string `json:"invoice_instructions_image_url,omitempty"`
	InvoiceUpdated int `json:"invoice_updated,omitempty"`
	OutstandingAmount map[string]interface{} `json:"outstanding_amount,omitempty"`
	PaidAmount map[string]interface{} `json:"paid_amount,omitempty"`
	Payments []map[string]interface{} `json:"payments,omitempty"`
	PlatformLogoURL string `json:"platform_logo_url,omitempty"`
	PlatformName string `json:"platform_name,omitempty"`
	ProductItems []map[string]interface{} `json:"product_items,omitempty"`
	ShippingAddress map[string]interface{} `json:"shipping_address,omitempty"`
	Status string `json:"status,omitempty"`
	TrackingInfo map[string]interface{} `json:"tracking_info,omitempty"`
}

// McomInvoiceLists represents the Facebook McomInvoiceLists object
type McomInvoiceLists struct {
	InvoiceDetails []*McomInvoiceDetails `json:"invoice_details,omitempty"`
	InvoiceIDs []string `json:"invoice_ids,omitempty"`
	PageID string `json:"page_id,omitempty"`
}

// McomInvoiceStatus represents the Facebook McomInvoiceStatus object
type McomInvoiceStatus struct {
	BankAccountNumber string `json:"bank_account_number,omitempty"`
	BankCode string `json:"bank_code,omitempty"`
	InvoiceID string `json:"invoice_id,omitempty"`
	InvoiceStatus string `json:"invoice_status,omitempty"`
	PageID string `json:"page_id,omitempty"`
	PaymentMethod string `json:"payment_method,omitempty"`
	PaymentType string `json:"payment_type,omitempty"`
	PayoutAmount map[string]interface{} `json:"payout_amount,omitempty"`
	SlipVerificationError string `json:"slip_verification_error,omitempty"`
	SlipVerificationStatus string `json:"slip_verification_status,omitempty"`
	TransactionFee map[string]interface{} `json:"transaction_fee,omitempty"`
	TransferSlip string `json:"transfer_slip,omitempty"`
}

// McomOnboardingStatus represents the Facebook McomOnboardingStatus object
type McomOnboardingStatus struct {
	OnboardingStatus string `json:"onboarding_status,omitempty"`
	PageID string `json:"page_id,omitempty"`
}

// McomPayouts represents the Facebook McomPayouts object
type McomPayouts struct {
	NumberOfOrders int `json:"number_of_orders,omitempty"`
	OrderIDs []string `json:"order_ids,omitempty"`
	PayoutAmount map[string]interface{} `json:"payout_amount,omitempty"`
	PayoutProviderReferenceID string `json:"payout_provider_reference_id,omitempty"`
	PayoutStatus string `json:"payout_status,omitempty"`
	PayoutTime int `json:"payout_time,omitempty"`
	Provider string `json:"provider,omitempty"`
}

// MeasurementReport represents the Facebook MeasurementReport object
type MeasurementReport struct {
	DownloadURLs []string `json:"download_urls,omitempty"`
	ID string `json:"id,omitempty"`
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	ReportType string `json:"report_type,omitempty"`
	Status string `json:"status,omitempty"`
}

// MediaCopyrightAttribution represents the Facebook MediaCopyrightAttribution object
type MediaCopyrightAttribution struct {
	AttributionIgTargetID string `json:"attribution_ig_target_id,omitempty"`
	AttributionTargetEmailAddress string `json:"attribution_target_email_address,omitempty"`
	AttributionTargetID string `json:"attribution_target_id,omitempty"`
	AttributionTargetName string `json:"attribution_target_name,omitempty"`
	AttributionType string `json:"attribution_type,omitempty"`
	AttributionUri string `json:"attribution_uri,omitempty"`
	CopyrightCount int `json:"copyright_count,omitempty"`
	CreationTime time.Time `json:"creation_time,omitempty"`
	Creator *Profile `json:"creator,omitempty"`
	ID string `json:"id,omitempty"`
	IsEnabled bool `json:"is_enabled,omitempty"`
	LinkTitle string `json:"link_title,omitempty"`
	MatchCount int `json:"match_count,omitempty"`
	Owner *Page `json:"owner,omitempty"`
	Status string `json:"status,omitempty"`
	Title string `json:"title,omitempty"`
}

// MediaCopyrightUpdateRecord represents the Facebook MediaCopyrightUpdateRecord object
type MediaCopyrightUpdateRecord struct {
	ActionTypes []string `json:"action_types,omitempty"`
	Actor *User `json:"actor,omitempty"`
	ActorType string `json:"actor_type,omitempty"`
	CreationTime time.Time `json:"creation_time,omitempty"`
	ID string `json:"id,omitempty"`
	OwnershipCountries []map[string]interface{} `json:"ownership_countries,omitempty"`
	WhitelistedAccounts []map[string]interface{} `json:"whitelisted_accounts,omitempty"`
}

// MediaFingerprint represents the Facebook MediaFingerprint object
type MediaFingerprint struct {
	DurationInSec float64 `json:"duration_in_sec,omitempty"`
	FingerprintContentType string `json:"fingerprint_content_type,omitempty"`
	FingerprintType string `json:"fingerprint_type,omitempty"`
	ID string `json:"id,omitempty"`
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	Title string `json:"title,omitempty"`
	UniversalContentID string `json:"universal_content_id,omitempty"`
}

// MediaTitle represents the Facebook MediaTitle object
type MediaTitle struct {
	Applinks *CatalogItemAppLinks `json:"applinks,omitempty"`
	CategorySpecificFields *CatalogSubVerticalList `json:"category_specific_fields,omitempty"`
	ContentCategory string `json:"content_category,omitempty"`
	Currency string `json:"currency,omitempty"`
	Description string `json:"description,omitempty"`
	FbPageAlias string `json:"fb_page_alias,omitempty"`
	FbPageID *Page `json:"fb_page_id,omitempty"`
	Genres []string `json:"genres,omitempty"`
	ID string `json:"id,omitempty"`
	ImageFetchStatus MediatitleImageFetchStatus `json:"image_fetch_status,omitempty"`
	Images []string `json:"images,omitempty"`
	KgFbID string `json:"kg_fb_id,omitempty"`
	MediaTitleID string `json:"media_title_id,omitempty"`
	Price string `json:"price,omitempty"`
	SanitizedImages []string `json:"sanitized_images,omitempty"`
	Title string `json:"title,omitempty"`
	TitleDisplayName string `json:"title_display_name,omitempty"`
	UnitPrice map[string]interface{} `json:"unit_price,omitempty"`
	URL string `json:"url,omitempty"`
	Visibility MediatitleVisibility `json:"visibility,omitempty"`
	WikiDataItem string `json:"wiki_data_item,omitempty"`
}

// MerchantCompliance represents the Facebook MerchantCompliance object
type MerchantCompliance struct {
	ActiveCampaigns int `json:"active_campaigns,omitempty"`
	ComplianceStatus string `json:"compliance_status,omitempty"`
	CountDownStartTime int `json:"count_down_start_time,omitempty"`
	Purchase int `json:"purchase,omitempty"`
	PurchaseConversionValue float64 `json:"purchase_conversion_value,omitempty"`
}

// MessageDeliveryEstimate represents the Facebook MessageDeliveryEstimate object
type MessageDeliveryEstimate struct {
	EstimateCost float64 `json:"estimate_cost,omitempty"`
	EstimateCostLowerBound float64 `json:"estimate_cost_lower_bound,omitempty"`
	EstimateCostUpperBound float64 `json:"estimate_cost_upper_bound,omitempty"`
	EstimateCoverageLowerBound int `json:"estimate_coverage_lower_bound,omitempty"`
	EstimateCoverageUpperBound int `json:"estimate_coverage_upper_bound,omitempty"`
	EstimateDelivery int `json:"estimate_delivery,omitempty"`
	EstimateDeliveryLowerBound int `json:"estimate_delivery_lower_bound,omitempty"`
	EstimateDeliveryUpperBound int `json:"estimate_delivery_upper_bound,omitempty"`
	EstimateStatus string `json:"estimate_status,omitempty"`
}

// MessagingAppsInfo represents the Facebook MessagingAppsInfo object
type MessagingAppsInfo struct {
	CtdSupportOnlyForIgApp bool `json:"ctd_support_only_for_ig_app,omitempty"`
	HasInstagramMessagingPermission bool `json:"has_instagram_messaging_permission,omitempty"`
	HasMessengerMessagingPermission bool `json:"has_messenger_messaging_permission,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
}

// MessagingFeatureReview represents the Facebook MessagingFeatureReview object
type MessagingFeatureReview struct {
	Feature string `json:"feature,omitempty"`
	Status string `json:"status,omitempty"`
}

// MessagingFeatureStatus represents the Facebook MessagingFeatureStatus object
type MessagingFeatureStatus struct {
	HopV2 bool `json:"hop_v2,omitempty"`
	IgMultiApp bool `json:"ig_multi_app,omitempty"`
	MsgrMultiApp bool `json:"msgr_multi_app,omitempty"`
}

// MessengerAdsPartialAutomatedStepList represents the Facebook MessengerAdsPartialAutomatedStepList object
type MessengerAdsPartialAutomatedStepList struct {
	FbleadForm *LeadgenForm `json:"fblead_form,omitempty"`
	FirstStepID string `json:"first_step_id,omitempty"`
	ID string `json:"id,omitempty"`
	Page *Page `json:"page,omitempty"`
	PrivacyURL string `json:"privacy_url,omitempty"`
	ReminderText string `json:"reminder_text,omitempty"`
	StopQuestionMessage string `json:"stop_question_message,omitempty"`
}

// MessengerBusinessTemplate represents the Facebook MessengerBusinessTemplate object
type MessengerBusinessTemplate struct {
	Category string `json:"category,omitempty"`
	Components []map[string]interface{} `json:"components,omitempty"`
	CreationTime int `json:"creation_time,omitempty"`
	ID string `json:"id,omitempty"`
	Language string `json:"language,omitempty"`
	LanguageCount int `json:"language_count,omitempty"`
	LastUpdatedTime time.Time `json:"last_updated_time,omitempty"`
	LibraryTemplateName string `json:"library_template_name,omitempty"`
	Name string `json:"name,omitempty"`
	RejectedReason string `json:"rejected_reason,omitempty"`
	RejectionReasons map[string]interface{} `json:"rejection_reasons,omitempty"`
	SpecificRejectionReasons map[string]interface{} `json:"specific_rejection_reasons,omitempty"`
	Status string `json:"status,omitempty"`
}

// MessengerCallSettings represents the Facebook MessengerCallSettings object
type MessengerCallSettings struct {
	AudioEnabled bool `json:"audio_enabled,omitempty"`
	CallHours map[string]interface{} `json:"call_hours,omitempty"`
	CallRouting string `json:"call_routing,omitempty"`
	IconEnabled bool `json:"icon_enabled,omitempty"`
}

// MessengerDestinationPageWelcomeMessage represents the Facebook MessengerDestinationPageWelcomeMessage object
type MessengerDestinationPageWelcomeMessage struct {
	ID string `json:"id,omitempty"`
	PageWelcomeMessageBody string `json:"page_welcome_message_body,omitempty"`
	PageWelcomeMessageType string `json:"page_welcome_message_type,omitempty"`
	TemplateName string `json:"template_name,omitempty"`
	TimeCreated time.Time `json:"time_created,omitempty"`
	TimeLastUsed time.Time `json:"time_last_used,omitempty"`
}

// MessengerProfile represents the Facebook MessengerProfile object
type MessengerProfile struct {
	AccountLinkingURL string `json:"account_linking_url,omitempty"`
	Commands []map[string]interface{} `json:"commands,omitempty"`
	GetStarted map[string]interface{} `json:"get_started,omitempty"`
	Greeting []map[string]interface{} `json:"greeting,omitempty"`
	IceBreakers []map[string]interface{} `json:"ice_breakers,omitempty"`
	PersistentMenu []map[string]interface{} `json:"persistent_menu,omitempty"`
	SubjectToNewEuPrivacyRules bool `json:"subject_to_new_eu_privacy_rules,omitempty"`
	WhitelistedDomains []string `json:"whitelisted_domains,omitempty"`
}

// MinimumBudget represents the Facebook MinimumBudget object
type MinimumBudget struct {
	Currency string `json:"currency,omitempty"`
	MinDailyBudgetHighFreq int `json:"min_daily_budget_high_freq,omitempty"`
	MinDailyBudgetImp int `json:"min_daily_budget_imp,omitempty"`
	MinDailyBudgetLowFreq int `json:"min_daily_budget_low_freq,omitempty"`
	MinDailyBudgetVideoViews int `json:"min_daily_budget_video_views,omitempty"`
}

// MusicVideoCopyright represents the Facebook MusicVideoCopyright object
type MusicVideoCopyright struct {
	CreationTime time.Time `json:"creation_time,omitempty"`
	DisplayedMatchesCount int `json:"displayed_matches_count,omitempty"`
	ID string `json:"id,omitempty"`
	InConflict bool `json:"in_conflict,omitempty"`
	Isrc string `json:"isrc,omitempty"`
	MatchRule *VideoCopyrightRule `json:"match_rule,omitempty"`
	OwnershipCountries []string `json:"ownership_countries,omitempty"`
	ReferenceFileStatus string `json:"reference_file_status,omitempty"`
	RidgeMonitoringStatus string `json:"ridge_monitoring_status,omitempty"`
	Tags []string `json:"tags,omitempty"`
	UpdateTime time.Time `json:"update_time,omitempty"`
	VideoAsset *CopyrightReferenceContainer `json:"video_asset,omitempty"`
	WhitelistedFbUsers []map[string]interface{} `json:"whitelisted_fb_users,omitempty"`
	WhitelistedIgUsers []string `json:"whitelisted_ig_users,omitempty"`
}

// MusicWorkCopyright represents the Facebook MusicWorkCopyright object
type MusicWorkCopyright struct {
	AvailableUiActions []string `json:"available_ui_actions,omitempty"`
	ClaimStatus string `json:"claim_status,omitempty"`
	CreationTime time.Time `json:"creation_time,omitempty"`
	DisplayedFbMatchesCount int `json:"displayed_fb_matches_count,omitempty"`
	DisplayedIgMatchesCount int `json:"displayed_ig_matches_count,omitempty"`
	DisplayedMatchesCount int `json:"displayed_matches_count,omitempty"`
	HasRevShareEligibleIsrcs bool `json:"has_rev_share_eligible_isrcs,omitempty"`
	ID string `json:"id,omitempty"`
	IsLinkingRequiredToMonetizeForManualClaim bool `json:"is_linking_required_to_monetize_for_manual_claim,omitempty"`
	MatchRule *VideoCopyrightRule `json:"match_rule,omitempty"`
	Status string `json:"status,omitempty"`
	Tags []string `json:"tags,omitempty"`
	UpdateTime time.Time `json:"update_time,omitempty"`
}

// NullNode represents the Facebook NullNode object
type NullNode struct {
}

// OfflineConversionDataSet represents the Facebook OfflineConversionDataSet object
type OfflineConversionDataSet struct {
	AutomaticMatchingFields []string `json:"automatic_matching_fields,omitempty"`
	Business *Business `json:"business,omitempty"`
	CanProxy bool `json:"can_proxy,omitempty"`
	Config string `json:"config,omitempty"`
	CreationTime time.Time `json:"creation_time,omitempty"`
	Creator *User `json:"creator,omitempty"`
	DataUseSetting string `json:"data_use_setting,omitempty"`
	Description string `json:"description,omitempty"`
	DuplicateEntries int `json:"duplicate_entries,omitempty"`
	EnableAutoAssignToAccounts bool `json:"enable_auto_assign_to_accounts,omitempty"`
	EnableAutomaticMatching bool `json:"enable_automatic_matching,omitempty"`
	EventStats string `json:"event_stats,omitempty"`
	EventTimeMax int `json:"event_time_max,omitempty"`
	EventTimeMin int `json:"event_time_min,omitempty"`
	FirstPartyCookieStatus string `json:"first_party_cookie_status,omitempty"`
	ID string `json:"id,omitempty"`
	IsConsolidatedContainer bool `json:"is_consolidated_container,omitempty"`
	IsCreatedByBusiness bool `json:"is_created_by_business,omitempty"`
	IsCrm bool `json:"is_crm,omitempty"`
	IsMtaUse bool `json:"is_mta_use,omitempty"`
	IsRestrictedUse bool `json:"is_restricted_use,omitempty"`
	IsUnavailable bool `json:"is_unavailable,omitempty"`
	LastFiredTime time.Time `json:"last_fired_time,omitempty"`
	LastUploadApp string `json:"last_upload_app,omitempty"`
	LastUploadAppChangedTime int `json:"last_upload_app_changed_time,omitempty"`
	MatchRateApprox int `json:"match_rate_approx,omitempty"`
	MatchedEntries int `json:"matched_entries,omitempty"`
	Name string `json:"name,omitempty"`
	OwnerAdAccount *AdAccount `json:"owner_ad_account,omitempty"`
	OwnerBusiness *Business `json:"owner_business,omitempty"`
	Usage *OfflineConversionDataSetUsage `json:"usage,omitempty"`
	ValidEntries int `json:"valid_entries,omitempty"`
}

// OfflineConversionDataSetActivities represents the Facebook OfflineConversionDataSetActivities object
type OfflineConversionDataSetActivities struct {
	ActorID int `json:"actor_id,omitempty"`
	ActorName string `json:"actor_name,omitempty"`
	AdaccountID int `json:"adaccount_id,omitempty"`
	AdaccountName string `json:"adaccount_name,omitempty"`
	EventTime time.Time `json:"event_time,omitempty"`
	EventType string `json:"event_type,omitempty"`
	ExtraData string `json:"extra_data,omitempty"`
	ObjectID int `json:"object_id,omitempty"`
	ObjectName string `json:"object_name,omitempty"`
}

// OfflineConversionDataSetOptimizationStatus represents the Facebook OfflineConversionDataSetOptimizationStatus object
type OfflineConversionDataSetOptimizationStatus struct {
	Event string `json:"event,omitempty"`
	LastChangedTime int `json:"last_changed_time,omitempty"`
	LastDetectedTime int `json:"last_detected_time,omitempty"`
	Status string `json:"status,omitempty"`
}

// OfflineConversionDataSetPermissions represents the Facebook OfflineConversionDataSetPermissions object
type OfflineConversionDataSetPermissions struct {
	CanEdit bool `json:"can_edit,omitempty"`
	CanEditOrUpload bool `json:"can_edit_or_upload,omitempty"`
	CanUpload bool `json:"can_upload,omitempty"`
	ShouldBlockVanillaBusinessEmployeeAccess bool `json:"should_block_vanilla_business_employee_access,omitempty"`
}

// OfflineConversionDataSetUpload represents the Facebook OfflineConversionDataSetUpload object
type OfflineConversionDataSetUpload struct {
	APICalls int `json:"api_calls,omitempty"`
	CreationTime int `json:"creation_time,omitempty"`
	DuplicateEntries int `json:"duplicate_entries,omitempty"`
	EventStats string `json:"event_stats,omitempty"`
	EventTimeMax int `json:"event_time_max,omitempty"`
	EventTimeMin int `json:"event_time_min,omitempty"`
	FirstUploadTime int `json:"first_upload_time,omitempty"`
	ID string `json:"id,omitempty"`
	IsExcludedForLift bool `json:"is_excluded_for_lift,omitempty"`
	LastUploadTime int `json:"last_upload_time,omitempty"`
	MatchRateApprox int `json:"match_rate_approx,omitempty"`
	MatchedEntries int `json:"matched_entries,omitempty"`
	UploadTag string `json:"upload_tag,omitempty"`
	ValidEntries int `json:"valid_entries,omitempty"`
}

// OfflineConversionDataSetUsage represents the Facebook OfflineConversionDataSetUsage object
type OfflineConversionDataSetUsage struct {
	NumLiftStudies int `json:"num_lift_studies,omitempty"`
}

// OfflineProductItem represents the Facebook OfflineProductItem object
type OfflineProductItem struct {
	Applinks *CatalogItemAppLinks `json:"applinks,omitempty"`
	Brand string `json:"brand,omitempty"`
	Category string `json:"category,omitempty"`
	CategorySpecificFields *CatalogSubVerticalList `json:"category_specific_fields,omitempty"`
	Currency string `json:"currency,omitempty"`
	Description string `json:"description,omitempty"`
	ID string `json:"id,omitempty"`
	ImageFetchStatus OfflineproductitemImageFetchStatus `json:"image_fetch_status,omitempty"`
	ImageURL string `json:"image_url,omitempty"`
	Images []string `json:"images,omitempty"`
	Name string `json:"name,omitempty"`
	OfflineProductItemID string `json:"offline_product_item_id,omitempty"`
	Price string `json:"price,omitempty"`
	SanitizedImages []string `json:"sanitized_images,omitempty"`
	URL string `json:"url,omitempty"`
	Visibility OfflineproductitemVisibility `json:"visibility,omitempty"`
}

// OfflineTermsOfService represents the Facebook OfflineTermsOfService object
type OfflineTermsOfService struct {
	AcceptTime int `json:"accept_time,omitempty"`
	ID string `json:"id,omitempty"`
	SignedByUser *User `json:"signed_by_user,omitempty"`
}

// OffsitePixel represents the Facebook OffsitePixel object
type OffsitePixel struct {
	Creator string `json:"creator,omitempty"`
	ID string `json:"id,omitempty"`
	JsPixel string `json:"js_pixel,omitempty"`
	LastFiringTime time.Time `json:"last_firing_time,omitempty"`
	Name string `json:"name,omitempty"`
	Tag string `json:"tag,omitempty"`
}

// OffsiteSignalContainerBusinessObject represents the Facebook OffsiteSignalContainerBusinessObject object
type OffsiteSignalContainerBusinessObject struct {
	Business *Business `json:"business,omitempty"`
	ID string `json:"id,omitempty"`
	IsEligibleForSharingToAdAccount bool `json:"is_eligible_for_sharing_to_ad_account,omitempty"`
	IsEligibleForSharingToBusiness bool `json:"is_eligible_for_sharing_to_business,omitempty"`
	IsUnavailable bool `json:"is_unavailable,omitempty"`
	Name string `json:"name,omitempty"`
	PrimaryContainerID string `json:"primary_container_id,omitempty"`
}

// OmegaCustomerTrx represents the Facebook OmegaCustomerTrx object
type OmegaCustomerTrx struct {
	AdAccountIDs []string `json:"ad_account_ids,omitempty"`
	AdvertiserName string `json:"advertiser_name,omitempty"`
	Amount string `json:"amount,omitempty"`
	AmountDue *CurrencyAmount `json:"amount_due,omitempty"`
	BilledAmountDetails map[string]interface{} `json:"billed_amount_details,omitempty"`
	BillingPeriod string `json:"billing_period,omitempty"`
	CdnDownloadUri string `json:"cdn_download_uri,omitempty"`
	Currency string `json:"currency,omitempty"`
	DownloadUri string `json:"download_uri,omitempty"`
	DueDate time.Time `json:"due_date,omitempty"`
	Entity string `json:"entity,omitempty"`
	ID string `json:"id,omitempty"`
	InvoiceDate time.Time `json:"invoice_date,omitempty"`
	InvoiceID string `json:"invoice_id,omitempty"`
	InvoiceType string `json:"invoice_type,omitempty"`
	LiabilityType string `json:"liability_type,omitempty"`
	PaymentStatus string `json:"payment_status,omitempty"`
	PaymentTerm string `json:"payment_term,omitempty"`
	Type string `json:"type,omitempty"`
}

// OpenBridgeConfiguration represents the Facebook OpenBridgeConfiguration object
type OpenBridgeConfiguration struct {
	Active bool `json:"active,omitempty"`
	CloudProvider string `json:"cloud_provider,omitempty"`
	CloudRegion string `json:"cloud_region,omitempty"`
	DestinationID string `json:"destination_id,omitempty"`
	Endpoint string `json:"endpoint,omitempty"`
	FallbackDomain string `json:"fallback_domain,omitempty"`
	FirstPartyDomain string `json:"first_party_domain,omitempty"`
	HostBusinessID string `json:"host_business_id,omitempty"`
	ID string `json:"id,omitempty"`
	InstanceID string `json:"instance_id,omitempty"`
	InstanceVersion string `json:"instance_version,omitempty"`
	IsSgwInstance bool `json:"is_sgw_instance,omitempty"`
	IsSgwPixelFromMetaPixel bool `json:"is_sgw_pixel_from_meta_pixel,omitempty"`
	PartnerName string `json:"partner_name,omitempty"`
	PixelID string `json:"pixel_id,omitempty"`
	SgwAccountID string `json:"sgw_account_id,omitempty"`
	SgwInstanceURL string `json:"sgw_instance_url,omitempty"`
	SgwPixelID string `json:"sgw_pixel_id,omitempty"`
}

// OpenGraphContext represents the Facebook OpenGraphContext object
type OpenGraphContext struct {
	ID string `json:"id,omitempty"`
}

// OrderIDAttributions represents the Facebook OrderIDAttributions object
type OrderIDAttributions struct {
	AppID string `json:"app_id,omitempty"`
	AttributionType string `json:"attribution_type,omitempty"`
	Attributions []map[string]interface{} `json:"attributions,omitempty"`
	ConversionDevice string `json:"conversion_device,omitempty"`
	DatasetID string `json:"dataset_id,omitempty"`
	HoldoutStatus []map[string]interface{} `json:"holdout_status,omitempty"`
	OrderID string `json:"order_id,omitempty"`
	OrderTimestamp time.Time `json:"order_timestamp,omitempty"`
	PixelID string `json:"pixel_id,omitempty"`
}

// Organization represents the Facebook Organization object
type Organization struct {
	ID string `json:"id,omitempty"`
	LegalEntityName string `json:"legal_entity_name,omitempty"`
	OwnerBusiness *Business `json:"owner_business,omitempty"`
}

// OutcomePredictionPoint represents the Facebook OutcomePredictionPoint object
type OutcomePredictionPoint struct {
	Actions float64 `json:"actions,omitempty"`
	Impressions float64 `json:"impressions,omitempty"`
	Reach float64 `json:"reach,omitempty"`
	Spend int `json:"spend,omitempty"`
}

// OverrideDetails represents the Facebook OverrideDetails object
type OverrideDetails struct {
	Key string `json:"key,omitempty"`
	Type string `json:"type,omitempty"`
	Values map[string]interface{} `json:"values,omitempty"`
}

// OwnedDomain represents the Facebook OwnedDomain object
type OwnedDomain struct {
	DomainName string `json:"domain_name,omitempty"`
	ID string `json:"id,omitempty"`
	OwnerBusiness *Business `json:"owner_business,omitempty"`
	Status string `json:"status,omitempty"`
	VerificationCode string `json:"verification_code,omitempty"`
}

// P2MInvoicePayments represents the Facebook P2MInvoicePayments object
type P2MInvoicePayments struct {
	PageID string `json:"page_id,omitempty"`
	Payments []map[string]interface{} `json:"payments,omitempty"`
}

// Page represents the Facebook Page object
type Page struct {
	About string `json:"about,omitempty"`
	AccessToken string `json:"access_token,omitempty"`
	AdCampaign *AdSet `json:"ad_campaign,omitempty"`
	Affiliation string `json:"affiliation,omitempty"`
	AppID string `json:"app_id,omitempty"`
	ArtistsWeLike string `json:"artists_we_like,omitempty"`
	Attire string `json:"attire,omitempty"`
	AvailablePromoOfferIDs []map[string][]map[string]string `json:"available_promo_offer_ids,omitempty"`
	Awards string `json:"awards,omitempty"`
	BandInterests string `json:"band_interests,omitempty"`
	BandMembers string `json:"band_members,omitempty"`
	BestPage *Page `json:"best_page,omitempty"`
	Bio string `json:"bio,omitempty"`
	Birthday string `json:"birthday,omitempty"`
	BookingAgent string `json:"booking_agent,omitempty"`
	BreakingNewsUsage map[string]interface{} `json:"breaking_news_usage,omitempty"`
	Built string `json:"built,omitempty"`
	Business map[string]interface{} `json:"business,omitempty"`
	CanCheckin bool `json:"can_checkin,omitempty"`
	CanPost bool `json:"can_post,omitempty"`
	Category string `json:"category,omitempty"`
	CategoryList []*PageCategory `json:"category_list,omitempty"`
	Checkins uint `json:"checkins,omitempty"`
	CompanyOverview string `json:"company_overview,omitempty"`
	ConnectedInstagramAccount *IGUser `json:"connected_instagram_account,omitempty"`
	ConnectedPageBackedInstagramAccount *IGUser `json:"connected_page_backed_instagram_account,omitempty"`
	ContactAddress *MailingAddress `json:"contact_address,omitempty"`
	CopyrightWhitelistedIgPartners []string `json:"copyright_whitelisted_ig_partners,omitempty"`
	CountryPageLikes uint `json:"country_page_likes,omitempty"`
	Cover *CoverPhoto `json:"cover,omitempty"`
	CulinaryTeam string `json:"culinary_team,omitempty"`
	CurrentLocation string `json:"current_location,omitempty"`
	DeliveryAndPickupOptionInfo []string `json:"delivery_and_pickup_option_info,omitempty"`
	Description string `json:"description,omitempty"`
	DescriptionHtml string `json:"description_html,omitempty"`
	DifferentlyOpenOfferings []map[string]bool `json:"differently_open_offerings,omitempty"`
	DirectedBy string `json:"directed_by,omitempty"`
	DisplaySubtext string `json:"display_subtext,omitempty"`
	DisplayedMessageResponseTime string `json:"displayed_message_response_time,omitempty"`
	DoesViewerHavePagePermissionLinkIg bool `json:"does_viewer_have_page_permission_link_ig,omitempty"`
	Emails []string `json:"emails,omitempty"`
	Engagement *Engagement `json:"engagement,omitempty"`
	FanCount uint `json:"fan_count,omitempty"`
	FeaturedVideo *AdVideo `json:"featured_video,omitempty"`
	Features string `json:"features,omitempty"`
	FollowersCount uint `json:"followers_count,omitempty"`
	FoodStyles []string `json:"food_styles,omitempty"`
	Founded string `json:"founded,omitempty"`
	GeneralInfo string `json:"general_info,omitempty"`
	GeneralManager string `json:"general_manager,omitempty"`
	Genre string `json:"genre,omitempty"`
	GlobalBrandPageName string `json:"global_brand_page_name,omitempty"`
	GlobalBrandRootID string `json:"global_brand_root_id,omitempty"`
	HasAddedApp bool `json:"has_added_app,omitempty"`
	HasLeadAccess *HasLeadAccess `json:"has_lead_access,omitempty"`
	HasTransitionedToNewPageExperience bool `json:"has_transitioned_to_new_page_experience,omitempty"`
	HasWhatsappBusinessNumber bool `json:"has_whatsapp_business_number,omitempty"`
	HasWhatsappNumber bool `json:"has_whatsapp_number,omitempty"`
	Hometown string `json:"hometown,omitempty"`
	Hours map[string]string `json:"hours,omitempty"`
	ID string `json:"id,omitempty"`
	Impressum string `json:"impressum,omitempty"`
	Influences string `json:"influences,omitempty"`
	InstagramBusinessAccount *IGUser `json:"instagram_business_account,omitempty"`
	IsAlwaysOpen bool `json:"is_always_open,omitempty"`
	IsCallingEligible bool `json:"is_calling_eligible,omitempty"`
	IsChain bool `json:"is_chain,omitempty"`
	IsCommunityPage bool `json:"is_community_page,omitempty"`
	IsEligibleForBrandedContent bool `json:"is_eligible_for_branded_content,omitempty"`
	IsEligibleForDisableConnectIgBtnForNonPageAdminAmWeb bool `json:"is_eligible_for_disable_connect_ig_btn_for_non_page_admin_am_web,omitempty"`
	IsMessengerBotGetStartedEnabled bool `json:"is_messenger_bot_get_started_enabled,omitempty"`
	IsMessengerPlatformBot bool `json:"is_messenger_platform_bot,omitempty"`
	IsOwned bool `json:"is_owned,omitempty"`
	IsPermanentlyClosed bool `json:"is_permanently_closed,omitempty"`
	IsPublished bool `json:"is_published,omitempty"`
	IsUnclaimed bool `json:"is_unclaimed,omitempty"`
	IsVerified bool `json:"is_verified,omitempty"`
	IsWebhooksSubscribed bool `json:"is_webhooks_subscribed,omitempty"`
	Keywords map[string]interface{} `json:"keywords,omitempty"`
	LeadgenTosAcceptanceTime time.Time `json:"leadgen_tos_acceptance_time,omitempty"`
	LeadgenTosAccepted bool `json:"leadgen_tos_accepted,omitempty"`
	LeadgenTosAcceptingUser *User `json:"leadgen_tos_accepting_user,omitempty"`
	Link string `json:"link,omitempty"`
	Location *Location `json:"location,omitempty"`
	Members string `json:"members,omitempty"`
	MerchantID string `json:"merchant_id,omitempty"`
	MerchantReviewStatus string `json:"merchant_review_status,omitempty"`
	MessagingFeatureStatus *MessagingFeatureStatus `json:"messaging_feature_status,omitempty"`
	MessengerAdsDefaultIcebreakers []string `json:"messenger_ads_default_icebreakers,omitempty"`
	MessengerAdsDefaultQuickReplies []string `json:"messenger_ads_default_quick_replies,omitempty"`
	MessengerAdsQuickRepliesType string `json:"messenger_ads_quick_replies_type,omitempty"`
	MiniShopStorefront *Shop `json:"mini_shop_storefront,omitempty"`
	Mission string `json:"mission,omitempty"`
	Mpg string `json:"mpg,omitempty"`
	Name string `json:"name,omitempty"`
	NameWithLocationDescriptor string `json:"name_with_location_descriptor,omitempty"`
	Network string `json:"network,omitempty"`
	NewLikeCount uint `json:"new_like_count,omitempty"`
	OfferEligible bool `json:"offer_eligible,omitempty"`
	OverallStarRating float64 `json:"overall_star_rating,omitempty"`
	OwnerBusiness *Business `json:"owner_business,omitempty"`
	PageToken string `json:"page_token,omitempty"`
	ParentPage *Page `json:"parent_page,omitempty"`
	Parking *PageParking `json:"parking,omitempty"`
	PaymentOptions *PagePaymentOptions `json:"payment_options,omitempty"`
	PersonalInfo string `json:"personal_info,omitempty"`
	PersonalInterests string `json:"personal_interests,omitempty"`
	PharmaSafetyInfo string `json:"pharma_safety_info,omitempty"`
	Phone string `json:"phone,omitempty"`
	PickupOptions []string `json:"pickup_options,omitempty"`
	PlaceType string `json:"place_type,omitempty"`
	PlotOutline string `json:"plot_outline,omitempty"`
	PreferredAudience *Targeting `json:"preferred_audience,omitempty"`
	PressContact string `json:"press_contact,omitempty"`
	PriceRange string `json:"price_range,omitempty"`
	PrivacyInfoURL string `json:"privacy_info_url,omitempty"`
	ProducedBy string `json:"produced_by,omitempty"`
	Products string `json:"products,omitempty"`
	PromotionEligible bool `json:"promotion_eligible,omitempty"`
	PromotionIneligibleReason string `json:"promotion_ineligible_reason,omitempty"`
	PublicTransit string `json:"public_transit,omitempty"`
	RatingCount uint `json:"rating_count,omitempty"`
	Recipient string `json:"recipient,omitempty"`
	RecordLabel string `json:"record_label,omitempty"`
	ReleaseDate string `json:"release_date,omitempty"`
	RestaurantServices *PageRestaurantServices `json:"restaurant_services,omitempty"`
	RestaurantSpecialties *PageRestaurantSpecialties `json:"restaurant_specialties,omitempty"`
	Schedule string `json:"schedule,omitempty"`
	ScreenplayBy string `json:"screenplay_by,omitempty"`
	Season string `json:"season,omitempty"`
	SingleLineAddress string `json:"single_line_address,omitempty"`
	Starring string `json:"starring,omitempty"`
	StartInfo *PageStartInfo `json:"start_info,omitempty"`
	StoreCode string `json:"store_code,omitempty"`
	StoreLocationDescriptor string `json:"store_location_descriptor,omitempty"`
	StoreNumber uint `json:"store_number,omitempty"`
	Studio string `json:"studio,omitempty"`
	SupportsDonateButtonInLiveVideo bool `json:"supports_donate_button_in_live_video,omitempty"`
	TalkingAboutCount uint `json:"talking_about_count,omitempty"`
	TemporaryStatus string `json:"temporary_status,omitempty"`
	UnreadMessageCount uint `json:"unread_message_count,omitempty"`
	UnreadNotifCount uint `json:"unread_notif_count,omitempty"`
	UnseenMessageCount uint `json:"unseen_message_count,omitempty"`
	UserAccessExpireTime time.Time `json:"user_access_expire_time,omitempty"`
	Username string `json:"username,omitempty"`
	VerificationStatus string `json:"verification_status,omitempty"`
	VoipInfo *VoipInfo `json:"voip_info,omitempty"`
	Website string `json:"website,omitempty"`
	WereHereCount uint `json:"were_here_count,omitempty"`
	WhatsappNumber string `json:"whatsapp_number,omitempty"`
	WrittenBy string `json:"written_by,omitempty"`
}

// PageAboutStoryComposedBlock represents the Facebook PageAboutStoryComposedBlock object
type PageAboutStoryComposedBlock struct {
	Depth int `json:"depth,omitempty"`
	EntityRanges []*PageAboutStoryComposedBlockEntityRanges `json:"entity_ranges,omitempty"`
	InlineStyleRanges []*PageAboutStoryComposedBlockInlineStyle `json:"inline_style_ranges,omitempty"`
	Text string `json:"text,omitempty"`
	Type string `json:"type,omitempty"`
}

// PageAboutStoryComposedBlockEntityRanges represents the Facebook PageAboutStoryComposedBlockEntityRanges object
type PageAboutStoryComposedBlockEntityRanges struct {
	Key string `json:"key,omitempty"`
	Length int `json:"length,omitempty"`
	Offset int `json:"offset,omitempty"`
}

// PageAboutStoryComposedBlockInlineStyle represents the Facebook PageAboutStoryComposedBlockInlineStyle object
type PageAboutStoryComposedBlockInlineStyle struct {
	Length int `json:"length,omitempty"`
	Offset int `json:"offset,omitempty"`
	Style string `json:"style,omitempty"`
}

// PageAppWithLeadsAccess represents the Facebook PageAppWithLeadsAccess object
type PageAppWithLeadsAccess struct {
	CanAccessLeads bool `json:"can_access_leads,omitempty"`
	Type string `json:"type,omitempty"`
}

// PageBroadcast represents the Facebook PageBroadcast object
type PageBroadcast struct {
	ID string `json:"id,omitempty"`
	ScheduledTime string `json:"scheduled_time,omitempty"`
	Status string `json:"status,omitempty"`
}

// PageCTSTopic represents the Facebook PageCTSTopic object
type PageCTSTopic struct {
	AppID string `json:"app_id,omitempty"`
	Frequency string `json:"frequency,omitempty"`
	ImageHash string `json:"image_hash,omitempty"`
	ImageURL string `json:"image_url,omitempty"`
	Subscriber int `json:"subscriber,omitempty"`
	Title string `json:"title,omitempty"`
}

// PageCTXBudgetSimilarAdvertiserBudgetRecommendation represents the Facebook PageCTXBudgetSimilarAdvertiserBudgetRecommendation object
type PageCTXBudgetSimilarAdvertiserBudgetRecommendation struct {
	Budget string `json:"budget,omitempty"`
	ReportedConversion string `json:"reported_conversion,omitempty"`
}

// PageCTXDefaultGreetingText represents the Facebook PageCTXDefaultGreetingText object
type PageCTXDefaultGreetingText struct {
	Ctd string `json:"ctd,omitempty"`
	Ctm string `json:"ctm,omitempty"`
	Ctwa string `json:"ctwa,omitempty"`
}

// PageCTXMessagingFeatureLimit represents the Facebook PageCTXMessagingFeatureLimit object
type PageCTXMessagingFeatureLimit struct {
	MessagingFeatureLimitDuration int `json:"messaging_feature_limit_duration,omitempty"`
	MessagingFeatureLimitType string `json:"messaging_feature_limit_type,omitempty"`
	MessagingViolationType string `json:"messaging_violation_type,omitempty"`
}

// PageCallToAction represents the Facebook PageCallToAction object
type PageCallToAction struct {
	AndroidApp *Application `json:"android_app,omitempty"`
	AndroidDeeplink string `json:"android_deeplink,omitempty"`
	AndroidDestinationType string `json:"android_destination_type,omitempty"`
	AndroidPackageName string `json:"android_package_name,omitempty"`
	AndroidURL string `json:"android_url,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	EmailAddress string `json:"email_address,omitempty"`
	From *Page `json:"from,omitempty"`
	ID string `json:"id,omitempty"`
	IntlNumberWithPlus string `json:"intl_number_with_plus,omitempty"`
	IphoneApp *Application `json:"iphone_app,omitempty"`
	IphoneDeeplink string `json:"iphone_deeplink,omitempty"`
	IphoneDestinationType string `json:"iphone_destination_type,omitempty"`
	IphoneURL string `json:"iphone_url,omitempty"`
	Status string `json:"status,omitempty"`
	Type string `json:"type,omitempty"`
	UpdatedTime time.Time `json:"updated_time,omitempty"`
	WebDestinationType string `json:"web_destination_type,omitempty"`
	WebURL string `json:"web_url,omitempty"`
}

// PageCategory represents the Facebook PageCategory object
type PageCategory struct {
	APIEnum string `json:"api_enum,omitempty"`
	FbPageCategories []*PageCategory `json:"fb_page_categories,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
}

// PageChangeProposal represents the Facebook PageChangeProposal object
type PageChangeProposal struct {
	AcceptanceStatus string `json:"acceptance_status,omitempty"`
	Category string `json:"category,omitempty"`
	ID string `json:"id,omitempty"`
	UpcomingChangeInfo *PageUpcomingChange `json:"upcoming_change_info,omitempty"`
}

// PageCrmsWithLeadsAccess represents the Facebook PageCrmsWithLeadsAccess object
type PageCrmsWithLeadsAccess struct {
	CanAccessLeads bool `json:"can_access_leads,omitempty"`
	ID string `json:"id,omitempty"`
	IntegrationType string `json:"integration_type,omitempty"`
	Name string `json:"name,omitempty"`
}

// PageDirectIntegrationCrmWithLeadsAccess represents the Facebook PageDirectIntegrationCrmWithLeadsAccess object
type PageDirectIntegrationCrmWithLeadsAccess struct {
	CanAccessLeads bool `json:"can_access_leads,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
}

// PageGameBotQuotaInformation represents the Facebook PageGameBotQuotaInformation object
type PageGameBotQuotaInformation struct {
	Count int `json:"count,omitempty"`
	TimeWindow int `json:"time_window,omitempty"`
}

// PageGetStartedNullstate represents the Facebook PageGetStartedNullstate object
type PageGetStartedNullstate struct {
	CtaTitle string `json:"cta_title,omitempty"`
	ProcessedGreeting string `json:"processed_greeting,omitempty"`
	Responsiveness string `json:"responsiveness,omitempty"`
}

// PageInsightsAsyncExportRun represents the Facebook PageInsightsAsyncExportRun object
type PageInsightsAsyncExportRun struct {
	DataLevel string `json:"data_level,omitempty"`
	Filters []map[string]interface{} `json:"filters,omitempty"`
	Format string `json:"format,omitempty"`
	GenReportDate int `json:"gen_report_date,omitempty"`
	ID string `json:"id,omitempty"`
	ReportEndDate int `json:"report_end_date,omitempty"`
	ReportStartDate int `json:"report_start_date,omitempty"`
	Sorters []map[string]interface{} `json:"sorters,omitempty"`
	Status string `json:"status,omitempty"`
}

// PageLeadsAccessConfig represents the Facebook PageLeadsAccessConfig object
type PageLeadsAccessConfig struct {
	ID string `json:"id,omitempty"`
	Page *Page `json:"page,omitempty"`
}

// PageLocationsBreakdown represents the Facebook PageLocationsBreakdown object
type PageLocationsBreakdown struct {
	LocationID string `json:"location_id,omitempty"`
	LocationName string `json:"location_name,omitempty"`
	LocationType string `json:"location_type,omitempty"`
	NumPages int `json:"num_pages,omitempty"`
	NumPagesEligibleForStoreVisitReporting int `json:"num_pages_eligible_for_store_visit_reporting,omitempty"`
	NumUnpublishedOrClosedPages int `json:"num_unpublished_or_closed_pages,omitempty"`
	ParentCountryCode string `json:"parent_country_code,omitempty"`
	ParentRegionID int `json:"parent_region_id,omitempty"`
	ParentRegionName string `json:"parent_region_name,omitempty"`
}

// PageMessageResponsivenessMetrics represents the Facebook PageMessageResponsivenessMetrics object
type PageMessageResponsivenessMetrics struct {
	IsVeryResponsive bool `json:"is_very_responsive,omitempty"`
	ResponseRate float64 `json:"response_rate,omitempty"`
	ResponseTime float64 `json:"response_time,omitempty"`
}

// PageParking represents the Facebook PageParking object
type PageParking struct {
	Lot uint `json:"lot,omitempty"`
	Street uint `json:"street,omitempty"`
	Valet uint `json:"valet,omitempty"`
}

// PagePartnerWithLeadsAccess represents the Facebook PagePartnerWithLeadsAccess object
type PagePartnerWithLeadsAccess struct {
	CanAccessLeads bool `json:"can_access_leads,omitempty"`
	PartnerBusiness *Business `json:"partner_business,omitempty"`
	PermittedTasks []string `json:"permitted_tasks,omitempty"`
}

// PagePaymentOptions represents the Facebook PagePaymentOptions object
type PagePaymentOptions struct {
	Amex uint `json:"amex,omitempty"`
	CashOnly uint `json:"cash_only,omitempty"`
	Discover uint `json:"discover,omitempty"`
	Mastercard uint `json:"mastercard,omitempty"`
	Visa uint `json:"visa,omitempty"`
}

// PagePost represents the Facebook PagePost object
type PagePost struct {
	Actions interface{} `json:"actions,omitempty"`
	AdminCreator map[string]interface{} `json:"admin_creator,omitempty"`
	AllowedAdvertisingObjectives []string `json:"allowed_advertising_objectives,omitempty"`
	Application *Application `json:"application,omitempty"`
	BackdatedTime time.Time `json:"backdated_time,omitempty"`
	CallToAction map[string]interface{} `json:"call_to_action,omitempty"`
	CanReplyPrivately bool `json:"can_reply_privately,omitempty"`
	ChildAttachments interface{} `json:"child_attachments,omitempty"`
	CommentsMirroringDomain string `json:"comments_mirroring_domain,omitempty"`
	Coordinates map[string]interface{} `json:"coordinates,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	Event *Event `json:"event,omitempty"`
	ExpandedHeight uint `json:"expanded_height,omitempty"`
	ExpandedWidth uint `json:"expanded_width,omitempty"`
	FeedTargeting map[string]interface{} `json:"feed_targeting,omitempty"`
	From map[string]interface{} `json:"from,omitempty"`
	FullPicture string `json:"full_picture,omitempty"`
	Height uint `json:"height,omitempty"`
	Icon string `json:"icon,omitempty"`
	ID string `json:"id,omitempty"`
	InstagramEligibility string `json:"instagram_eligibility,omitempty"`
	IsAppShare bool `json:"is_app_share,omitempty"`
	IsEligibleForPromotion bool `json:"is_eligible_for_promotion,omitempty"`
	IsExpired bool `json:"is_expired,omitempty"`
	IsHidden bool `json:"is_hidden,omitempty"`
	IsInlineCreated bool `json:"is_inline_created,omitempty"`
	IsInstagramEligible bool `json:"is_instagram_eligible,omitempty"`
	IsPopular bool `json:"is_popular,omitempty"`
	IsPublished bool `json:"is_published,omitempty"`
	IsSpherical bool `json:"is_spherical,omitempty"`
	Message string `json:"message,omitempty"`
	MessageTags interface{} `json:"message_tags,omitempty"`
	MultiShareEndCard bool `json:"multi_share_end_card,omitempty"`
	MultiShareOptimized bool `json:"multi_share_optimized,omitempty"`
	ParentID string `json:"parent_id,omitempty"`
	PermalinkURL string `json:"permalink_url,omitempty"`
	Picture string `json:"picture,omitempty"`
	Place *Place `json:"place,omitempty"`
	Privacy *Privacy `json:"privacy,omitempty"`
	PromotableID string `json:"promotable_id,omitempty"`
	PromotionStatus string `json:"promotion_status,omitempty"`
	Properties interface{} `json:"properties,omitempty"`
	ScheduledPublishTime float64 `json:"scheduled_publish_time,omitempty"`
	Shares map[string]interface{} `json:"shares,omitempty"`
	StatusType string `json:"status_type,omitempty"`
	Story string `json:"story,omitempty"`
	StoryTags interface{} `json:"story_tags,omitempty"`
	Subscribed bool `json:"subscribed,omitempty"`
	Target *Profile `json:"target,omitempty"`
	Targeting map[string]interface{} `json:"targeting,omitempty"`
	TimelineVisibility string `json:"timeline_visibility,omitempty"`
	UpdatedTime time.Time `json:"updated_time,omitempty"`
	Via map[string]interface{} `json:"via,omitempty"`
	VideoBuyingEligibility []string `json:"video_buying_eligibility,omitempty"`
	Width uint `json:"width,omitempty"`
}

// PagePostExperiment represents the Facebook PagePostExperiment object
type PagePostExperiment struct {
	AutoResolveSettings map[string]interface{} `json:"auto_resolve_settings,omitempty"`
	ControlVideoID string `json:"control_video_id,omitempty"`
	CreationTime time.Time `json:"creation_time,omitempty"`
	Creator *User `json:"creator,omitempty"`
	DeclaredWinningTime time.Time `json:"declared_winning_time,omitempty"`
	DeclaredWinningVideoID string `json:"declared_winning_video_id,omitempty"`
	Description string `json:"description,omitempty"`
	ExperimentVideoIDs []string `json:"experiment_video_ids,omitempty"`
	ID string `json:"id,omitempty"`
	InsightSnapshots []map[time.Time][]map[int]map[string]interface{} `json:"insight_snapshots,omitempty"`
	Name string `json:"name,omitempty"`
	OptimizationGoal string `json:"optimization_goal,omitempty"`
	PublishStatus string `json:"publish_status,omitempty"`
	PublishTime time.Time `json:"publish_time,omitempty"`
	ScheduledExperimentTimestamp time.Time `json:"scheduled_experiment_timestamp,omitempty"`
	UpdatedTime time.Time `json:"updated_time,omitempty"`
}

// PagePublisher represents the Facebook PagePublisher object
type PagePublisher struct {
	GlobalParentID string `json:"global_parent_id,omitempty"`
	Icon string `json:"icon,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	URL string `json:"url,omitempty"`
}

// PageRestaurantServices represents the Facebook PageRestaurantServices object
type PageRestaurantServices struct {
	Catering bool `json:"catering,omitempty"`
	Delivery bool `json:"delivery,omitempty"`
	Groups bool `json:"groups,omitempty"`
	Kids bool `json:"kids,omitempty"`
	Outdoor bool `json:"outdoor,omitempty"`
	Pickup bool `json:"pickup,omitempty"`
	Reserve bool `json:"reserve,omitempty"`
	Takeout bool `json:"takeout,omitempty"`
	Waiter bool `json:"waiter,omitempty"`
	Walkins bool `json:"walkins,omitempty"`
}

// PageRestaurantSpecialties represents the Facebook PageRestaurantSpecialties object
type PageRestaurantSpecialties struct {
	Breakfast uint `json:"breakfast,omitempty"`
	Coffee uint `json:"coffee,omitempty"`
	Dinner uint `json:"dinner,omitempty"`
	Drinks uint `json:"drinks,omitempty"`
	Lunch uint `json:"lunch,omitempty"`
}

// PageSettings represents the Facebook PageSettings object
type PageSettings struct {
	Setting string `json:"setting,omitempty"`
	Value map[string]interface{} `json:"value,omitempty"`
}

// PageStartInfo represents the Facebook PageStartInfo object
type PageStartInfo struct {
	Date map[string]interface{} `json:"date,omitempty"`
	Type string `json:"type,omitempty"`
}

// PageThreadOwner represents the Facebook PageThreadOwner object
type PageThreadOwner struct {
	ThreadOwner map[string]interface{} `json:"thread_owner,omitempty"`
}

// PageUpcomingChange represents the Facebook PageUpcomingChange object
type PageUpcomingChange struct {
	ChangeType string `json:"change_type,omitempty"`
	EffectiveTime time.Time `json:"effective_time,omitempty"`
	ID string `json:"id,omitempty"`
	Page *Page `json:"page,omitempty"`
	Proposal *PageChangeProposal `json:"proposal,omitempty"`
	TimerStatus string `json:"timer_status,omitempty"`
}

// PageUserMessageThreadLabel represents the Facebook PageUserMessageThreadLabel object
type PageUserMessageThreadLabel struct {
	ID string `json:"id,omitempty"`
	PageLabelName string `json:"page_label_name,omitempty"`
}

// PageUserPermissions represents the Facebook PageUserPermissions object
type PageUserPermissions struct {
	Business *Business `json:"business,omitempty"`
	BusinessPersona string `json:"business_persona,omitempty"`
	CreatedBy *Profile `json:"created_by,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	Email string `json:"email,omitempty"`
	Status string `json:"status,omitempty"`
	Tasks []string `json:"tasks,omitempty"`
	UpdatedBy *Profile `json:"updated_by,omitempty"`
	UpdatedTime time.Time `json:"updated_time,omitempty"`
	User *Profile `json:"user,omitempty"`
}

// PageUserWithLeadsAccess represents the Facebook PageUserWithLeadsAccess object
type PageUserWithLeadsAccess struct {
	ActiveOnBusiness bool `json:"active_on_business,omitempty"`
	BusinessRole string `json:"business_role,omitempty"`
	CanAccessLeads bool `json:"can_access_leads,omitempty"`
	PageRole string `json:"page_role,omitempty"`
}

// PartnerAccountLinking represents the Facebook PartnerAccountLinking object
type PartnerAccountLinking struct {
	Adaccount *AdAccount `json:"adaccount,omitempty"`
	App *Application `json:"app,omitempty"`
	Business *Business `json:"business,omitempty"`
	Externalidentifier string `json:"externalidentifier,omitempty"`
	Externalidentifieruri string `json:"externalidentifieruri,omitempty"`
	ID string `json:"id,omitempty"`
	Partnername string `json:"partnername,omitempty"`
	Pixel string `json:"pixel,omitempty"`
}

// PartnerCategory represents the Facebook PartnerCategory object
type PartnerCategory struct {
	ApproximateCount int `json:"approximate_count,omitempty"`
	Country string `json:"country,omitempty"`
	Description string `json:"description,omitempty"`
	Details string `json:"details,omitempty"`
	ID string `json:"id,omitempty"`
	IsPrivate bool `json:"is_private,omitempty"`
	Name string `json:"name,omitempty"`
	ParentCategory string `json:"parent_category,omitempty"`
	Source string `json:"source,omitempty"`
	Status string `json:"status,omitempty"`
	TargetingType string `json:"targeting_type,omitempty"`
}

// PartnerIntegrationLinked represents the Facebook PartnerIntegrationLinked object
type PartnerIntegrationLinked struct {
	AdsPixel *AdsPixel `json:"ads_pixel,omitempty"`
	Application *Application `json:"application,omitempty"`
	CompletedIntegrationTypes []string `json:"completed_integration_types,omitempty"`
	ExternalBusinessConnectionID string `json:"external_business_connection_id,omitempty"`
	ExternalID string `json:"external_id,omitempty"`
	HasOauthToken bool `json:"has_oauth_token,omitempty"`
	ID string `json:"id,omitempty"`
	MbeAppID string `json:"mbe_app_id,omitempty"`
	MbeAssetID string `json:"mbe_asset_id,omitempty"`
	MbeExternalBusinessID string `json:"mbe_external_business_id,omitempty"`
	Name string `json:"name,omitempty"`
	OfflineConversionDataSet *OfflineConversionDataSet `json:"offline_conversion_data_set,omitempty"`
	Page *Page `json:"page,omitempty"`
	Partner string `json:"partner,omitempty"`
	ProductCatalog *ProductCatalog `json:"product_catalog,omitempty"`
	SetupStatus string `json:"setup_status,omitempty"`
}

// PartnerStudy represents the Facebook PartnerStudy object
type PartnerStudy struct {
	AdditionalInfo string `json:"additional_info,omitempty"`
	Brand string `json:"brand,omitempty"`
	ClientName string `json:"client_name,omitempty"`
	Emails string `json:"emails,omitempty"`
	ID string `json:"id,omitempty"`
	InputIDs []string `json:"input_ids,omitempty"`
	IsExport bool `json:"is_export,omitempty"`
	LiftStudy *AdStudy `json:"lift_study,omitempty"`
	Location string `json:"location,omitempty"`
	MatchFileDs string `json:"match_file_ds,omitempty"`
	Name string `json:"name,omitempty"`
	PartnerDefinedID string `json:"partner_defined_id,omitempty"`
	PartnerHouseholdGraphDatasetID string `json:"partner_household_graph_dataset_id,omitempty"`
	Status string `json:"status,omitempty"`
	StudyEndDate time.Time `json:"study_end_date,omitempty"`
	StudyStartDate time.Time `json:"study_start_date,omitempty"`
	StudyType string `json:"study_type,omitempty"`
	SubmitDate time.Time `json:"submit_date,omitempty"`
}

// PartnershipAdContentSearchMedia represents the Facebook PartnershipAdContentSearchMedia object
type PartnershipAdContentSearchMedia struct {
	IgAdCodeSponsorCount int `json:"ig_ad_code_sponsor_count,omitempty"`
	IgAdCodeSponsors []*FBPageAndInstagramAccount `json:"ig_ad_code_sponsors,omitempty"`
	IgMedia *IGMedia `json:"ig_media,omitempty"`
	IgMediaHasProductTags bool `json:"ig_media_has_product_tags,omitempty"`
	IsAdCodeEligibleForBoostingByTwoSponsors bool `json:"is_ad_code_eligible_for_boosting_by_two_sponsors,omitempty"`
	IsAdCodeEntry bool `json:"is_ad_code_entry,omitempty"`
}

// PartnershipAdsIdentity represents the Facebook PartnershipAdsIdentity object
type PartnershipAdsIdentity struct {
	IsSaved bool `json:"is_saved,omitempty"`
	PostTypes []string `json:"post_types,omitempty"`
	SecondaryIDentities []map[string]interface{} `json:"secondary_identities,omitempty"`
}

// PaymentEnginePayment represents the Facebook PaymentEnginePayment object
type PaymentEnginePayment struct {
	Actions []map[string]interface{} `json:"actions,omitempty"`
	Application *Application `json:"application,omitempty"`
	Country string `json:"country,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	Disputes []map[string]interface{} `json:"disputes,omitempty"`
	FraudStatus string `json:"fraud_status,omitempty"`
	FulfillmentStatus string `json:"fulfillment_status,omitempty"`
	ID string `json:"id,omitempty"`
	IsFromAd bool `json:"is_from_ad,omitempty"`
	IsFromPagePost bool `json:"is_from_page_post,omitempty"`
	Items []map[string]interface{} `json:"items,omitempty"`
	PayoutForeignExchangeRate float64 `json:"payout_foreign_exchange_rate,omitempty"`
	PhoneSupportEligible bool `json:"phone_support_eligible,omitempty"`
	Platform string `json:"platform,omitempty"`
	RefundableAmount *CurrencyAmount `json:"refundable_amount,omitempty"`
	RequestID string `json:"request_id,omitempty"`
	Tax string `json:"tax,omitempty"`
	TaxCountry string `json:"tax_country,omitempty"`
	Test uint `json:"test,omitempty"`
	User *User `json:"user,omitempty"`
}

// PaymentPricepoints represents the Facebook PaymentPricepoints object
type PaymentPricepoints struct {
	Mobile []map[string]interface{} `json:"mobile,omitempty"`
}

// PaymentRequestDetails represents the Facebook PaymentRequestDetails object
type PaymentRequestDetails struct {
	Amount map[string]interface{} `json:"amount,omitempty"`
	CreationTime int `json:"creation_time,omitempty"`
	Note string `json:"note,omitempty"`
	PaymentRequestID string `json:"payment_request_id,omitempty"`
	ReceiverID string `json:"receiver_id,omitempty"`
	ReferenceNumber string `json:"reference_number,omitempty"`
	SenderID string `json:"sender_id,omitempty"`
	Status string `json:"status,omitempty"`
	TransactionTime int `json:"transaction_time,omitempty"`
}

// PaymentSubscription represents the Facebook PaymentSubscription object
type PaymentSubscription struct {
	Amount string `json:"amount,omitempty"`
	AppParamData string `json:"app_param_data,omitempty"`
	Application *Application `json:"application,omitempty"`
	BillingPeriod string `json:"billing_period,omitempty"`
	CanceledReason string `json:"canceled_reason,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	Currency string `json:"currency,omitempty"`
	ID string `json:"id,omitempty"`
	LastPayment *PaymentEnginePayment `json:"last_payment,omitempty"`
	NextBillTime time.Time `json:"next_bill_time,omitempty"`
	NextPeriodAmount string `json:"next_period_amount,omitempty"`
	NextPeriodCurrency string `json:"next_period_currency,omitempty"`
	NextPeriodProduct string `json:"next_period_product,omitempty"`
	PaymentStatus string `json:"payment_status,omitempty"`
	PendingCancel bool `json:"pending_cancel,omitempty"`
	PeriodStartTime time.Time `json:"period_start_time,omitempty"`
	Product string `json:"product,omitempty"`
	Status string `json:"status,omitempty"`
	Test uint `json:"test,omitempty"`
	TrialAmount string `json:"trial_amount,omitempty"`
	TrialCurrency string `json:"trial_currency,omitempty"`
	TrialExpiryTime time.Time `json:"trial_expiry_time,omitempty"`
	UpdatedTime time.Time `json:"updated_time,omitempty"`
	User *User `json:"user,omitempty"`
}

// Permission represents the Facebook Permission object
type Permission struct {
	Permission string `json:"permission,omitempty"`
	Status string `json:"status,omitempty"`
}

// Persona represents the Facebook Persona object
type Persona struct {
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	ProfilePictureURL string `json:"profile_picture_url,omitempty"`
}

// PersonalAdsPersona represents the Facebook PersonalAdsPersona object
type PersonalAdsPersona struct {
	Email string `json:"email,omitempty"`
	FirstName string `json:"first_name,omitempty"`
	ID string `json:"id,omitempty"`
	LastName string `json:"last_name,omitempty"`
	PendingEmail string `json:"pending_email,omitempty"`
}

// Photo represents the Facebook Photo object
type Photo struct {
	Album *Album `json:"album,omitempty"`
	AltText string `json:"alt_text,omitempty"`
	AltTextCustom string `json:"alt_text_custom,omitempty"`
	BackdatedTime time.Time `json:"backdated_time,omitempty"`
	BackdatedTimeGranularity string `json:"backdated_time_granularity,omitempty"`
	CanBackdate bool `json:"can_backdate,omitempty"`
	CanDelete bool `json:"can_delete,omitempty"`
	CanTag bool `json:"can_tag,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	Event *Event `json:"event,omitempty"`
	From map[string]interface{} `json:"from,omitempty"`
	Height uint `json:"height,omitempty"`
	Icon string `json:"icon,omitempty"`
	ID string `json:"id,omitempty"`
	Images []*PlatformImageSource `json:"images,omitempty"`
	Link string `json:"link,omitempty"`
	Name string `json:"name,omitempty"`
	NameTags []*EntityAtTextRange `json:"name_tags,omitempty"`
	PageStoryID string `json:"page_story_id,omitempty"`
	Picture string `json:"picture,omitempty"`
	Place *Place `json:"place,omitempty"`
	Position uint `json:"position,omitempty"`
	Source string `json:"source,omitempty"`
	Target *Profile `json:"target,omitempty"`
	UpdatedTime time.Time `json:"updated_time,omitempty"`
	WebpImages []*PlatformImageSource `json:"webp_images,omitempty"`
	Width uint `json:"width,omitempty"`
}

// PhotoMetadata represents the Facebook PhotoMetadata object
type PhotoMetadata struct {
	CameraMake string `json:"camera_make,omitempty"`
	CameraModel string `json:"camera_model,omitempty"`
	DatetimeModified time.Time `json:"datetime_modified,omitempty"`
	DatetimeTaken time.Time `json:"datetime_taken,omitempty"`
	Exposure string `json:"exposure,omitempty"`
	FocalLength string `json:"focal_length,omitempty"`
	Fstop string `json:"fstop,omitempty"`
	IsoSpeed int `json:"iso_speed,omitempty"`
	OfflineID string `json:"offline_id,omitempty"`
	Orientation string `json:"orientation,omitempty"`
	OriginalHeight string `json:"original_height,omitempty"`
	OriginalWidth string `json:"original_width,omitempty"`
}

// Place represents the Facebook Place object
type Place struct {
	ID string `json:"id,omitempty"`
	Location *Location `json:"location,omitempty"`
	Name string `json:"name,omitempty"`
	OverallRating float64 `json:"overall_rating,omitempty"`
}

// PlaceTag represents the Facebook PlaceTag object
type PlaceTag struct {
	CreatedTime time.Time `json:"created_time,omitempty"`
	ID string `json:"id,omitempty"`
	Place *Page `json:"place,omitempty"`
}

// PlaceTopic represents the Facebook PlaceTopic object
type PlaceTopic struct {
	Count uint `json:"count,omitempty"`
	HasChildren bool `json:"has_children,omitempty"`
	IconURL string `json:"icon_url,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	ParentIDs []string `json:"parent_ids,omitempty"`
	PluralName string `json:"plural_name,omitempty"`
	TopSubtopicNames []string `json:"top_subtopic_names,omitempty"`
}

// Placement represents the Facebook Placement object
type Placement struct {
	AudienceNetworkPositions []string `json:"audience_network_positions,omitempty"`
	DevicePlatforms []PlacementDevicePlatforms `json:"device_platforms,omitempty"`
	EffectiveAudienceNetworkPositions []string `json:"effective_audience_network_positions,omitempty"`
	EffectiveDevicePlatforms []PlacementEffectiveDevicePlatforms `json:"effective_device_platforms,omitempty"`
	EffectiveFacebookPositions []string `json:"effective_facebook_positions,omitempty"`
	EffectiveInstagramPositions []string `json:"effective_instagram_positions,omitempty"`
	EffectiveMessengerPositions []string `json:"effective_messenger_positions,omitempty"`
	EffectiveOculusPositions []string `json:"effective_oculus_positions,omitempty"`
	EffectivePublisherPlatforms []string `json:"effective_publisher_platforms,omitempty"`
	EffectiveThreadsPositions []string `json:"effective_threads_positions,omitempty"`
	EffectiveWhatsappPositions []string `json:"effective_whatsapp_positions,omitempty"`
	FacebookPositions []string `json:"facebook_positions,omitempty"`
	InstagramPositions []string `json:"instagram_positions,omitempty"`
	MessengerPositions []string `json:"messenger_positions,omitempty"`
	OculusPositions []string `json:"oculus_positions,omitempty"`
	PublisherPlatforms []string `json:"publisher_platforms,omitempty"`
	ThreadsPositions []string `json:"threads_positions,omitempty"`
	WhatsappPositions []string `json:"whatsapp_positions,omitempty"`
}

// PlatformImageSource represents the Facebook PlatformImageSource object
type PlatformImageSource struct {
	Height uint `json:"height,omitempty"`
	Source string `json:"source,omitempty"`
	Width uint `json:"width,omitempty"`
}

// PlatformSessionKey represents the Facebook PlatformSessionKey object
type PlatformSessionKey struct {
	ID string `json:"id,omitempty"`
}

// PlayableContent represents the Facebook PlayableContent object
type PlayableContent struct {
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	Owner *Profile `json:"owner,omitempty"`
}

// Post represents the Facebook Post object
type Post struct {
	Actions interface{} `json:"actions,omitempty"`
	AdminCreator map[string]interface{} `json:"admin_creator,omitempty"`
	AllowedAdvertisingObjectives []string `json:"allowed_advertising_objectives,omitempty"`
	Application *Application `json:"application,omitempty"`
	BackdatedTime time.Time `json:"backdated_time,omitempty"`
	CallToAction map[string]interface{} `json:"call_to_action,omitempty"`
	CanReplyPrivately bool `json:"can_reply_privately,omitempty"`
	Caption string `json:"caption,omitempty"`
	ChildAttachments interface{} `json:"child_attachments,omitempty"`
	CommentsMirroringDomain string `json:"comments_mirroring_domain,omitempty"`
	Coordinates map[string]interface{} `json:"coordinates,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	Description string `json:"description,omitempty"`
	Event *Event `json:"event,omitempty"`
	ExpandedHeight uint `json:"expanded_height,omitempty"`
	ExpandedWidth uint `json:"expanded_width,omitempty"`
	FeedTargeting map[string]interface{} `json:"feed_targeting,omitempty"`
	From map[string]interface{} `json:"from,omitempty"`
	FullPicture string `json:"full_picture,omitempty"`
	Height uint `json:"height,omitempty"`
	Icon string `json:"icon,omitempty"`
	ID string `json:"id,omitempty"`
	InstagramEligibility string `json:"instagram_eligibility,omitempty"`
	IsAppShare bool `json:"is_app_share,omitempty"`
	IsEligibleForPromotion bool `json:"is_eligible_for_promotion,omitempty"`
	IsExpired bool `json:"is_expired,omitempty"`
	IsHidden bool `json:"is_hidden,omitempty"`
	IsInlineCreated bool `json:"is_inline_created,omitempty"`
	IsInstagramEligible bool `json:"is_instagram_eligible,omitempty"`
	IsPopular bool `json:"is_popular,omitempty"`
	IsPublished bool `json:"is_published,omitempty"`
	IsSpherical bool `json:"is_spherical,omitempty"`
	Link string `json:"link,omitempty"`
	Message string `json:"message,omitempty"`
	MessageTags interface{} `json:"message_tags,omitempty"`
	MultiShareEndCard bool `json:"multi_share_end_card,omitempty"`
	MultiShareOptimized bool `json:"multi_share_optimized,omitempty"`
	Name string `json:"name,omitempty"`
	ObjectID string `json:"object_id,omitempty"`
	ParentID string `json:"parent_id,omitempty"`
	PermalinkURL string `json:"permalink_url,omitempty"`
	Picture string `json:"picture,omitempty"`
	Place *Place `json:"place,omitempty"`
	Privacy *Privacy `json:"privacy,omitempty"`
	PromotableID string `json:"promotable_id,omitempty"`
	PromotionStatus string `json:"promotion_status,omitempty"`
	Properties interface{} `json:"properties,omitempty"`
	ScheduledPublishTime float64 `json:"scheduled_publish_time,omitempty"`
	Shares map[string]interface{} `json:"shares,omitempty"`
	Source string `json:"source,omitempty"`
	StatusType string `json:"status_type,omitempty"`
	Story string `json:"story,omitempty"`
	StoryTags interface{} `json:"story_tags,omitempty"`
	Subscribed bool `json:"subscribed,omitempty"`
	Target *Profile `json:"target,omitempty"`
	Targeting map[string]interface{} `json:"targeting,omitempty"`
	TimelineVisibility string `json:"timeline_visibility,omitempty"`
	Type string `json:"type,omitempty"`
	UpdatedTime time.Time `json:"updated_time,omitempty"`
	Via map[string]interface{} `json:"via,omitempty"`
	VideoBuyingEligibility []string `json:"video_buying_eligibility,omitempty"`
	Width uint `json:"width,omitempty"`
}

// PreapprovalReview represents the Facebook PreapprovalReview object
type PreapprovalReview struct {
	CompType string `json:"comp_type,omitempty"`
	CrowComponentID int `json:"crow_component_id,omitempty"`
	IsHumanReviewed bool `json:"is_human_reviewed,omitempty"`
	IsReviewed bool `json:"is_reviewed,omitempty"`
	PolicyInfo []map[string]map[string]interface{} `json:"policy_info,omitempty"`
}

// PremiumMusicVideo represents the Facebook PremiumMusicVideo object
type PremiumMusicVideo struct {
	CreationTime string `json:"creation_time,omitempty"`
	CrossPostVideos []map[string]interface{} `json:"cross_post_videos,omitempty"`
	EligibleCrossPostPages []map[string]interface{} `json:"eligible_cross_post_pages,omitempty"`
	ID string `json:"id,omitempty"`
	PreferredVideoThumbnailImageUri string `json:"preferred_video_thumbnail_image_uri,omitempty"`
	PremiumMusicVideoMetadata map[string]interface{} `json:"premium_music_video_metadata,omitempty"`
	ScheduledPublishTime int `json:"scheduled_publish_time,omitempty"`
	Title string `json:"title,omitempty"`
}

// Privacy represents the Facebook Privacy object
type Privacy struct {
	Allow string `json:"allow,omitempty"`
	Deny string `json:"deny,omitempty"`
	Description string `json:"description,omitempty"`
	Friends string `json:"friends,omitempty"`
	Networks string `json:"networks,omitempty"`
	Value string `json:"value,omitempty"`
}

// PrivacyOption represents the Facebook PrivacyOption object
type PrivacyOption struct {
	Description string `json:"description,omitempty"`
	IconSrc string `json:"icon_src,omitempty"`
	ID string `json:"id,omitempty"`
	IsCurrentlySelected bool `json:"is_currently_selected,omitempty"`
	Type string `json:"type,omitempty"`
	UserID string `json:"user_id,omitempty"`
}

// PrivateLiftStudyInstance represents the Facebook PrivateLiftStudyInstance object
type PrivateLiftStudyInstance struct {
	BreakdownKey string `json:"breakdown_key,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	FeatureList []string `json:"feature_list,omitempty"`
	ID string `json:"id,omitempty"`
	IssuerCertificate string `json:"issuer_certificate,omitempty"`
	LatestStatusUpdateTime time.Time `json:"latest_status_update_time,omitempty"`
	RunID string `json:"run_id,omitempty"`
	ServerHostnames []string `json:"server_hostnames,omitempty"`
	ServerIps []string `json:"server_ips,omitempty"`
	Status string `json:"status,omitempty"`
	Tier string `json:"tier,omitempty"`
}

// ProductCatalog represents the Facebook ProductCatalog object
type ProductCatalog struct {
	AdAccountToCollaborativeAdsShareSettings *CollaborativeAdsShareSettings `json:"ad_account_to_collaborative_ads_share_settings,omitempty"`
	AgencyCollaborativeAdsShareSettings *CollaborativeAdsShareSettings `json:"agency_collaborative_ads_share_settings,omitempty"`
	Business *Business `json:"business,omitempty"`
	CatalogStore *StoreCatalogSettings `json:"catalog_store,omitempty"`
	CommerceMerchantSettings *CommerceMerchantSettings `json:"commerce_merchant_settings,omitempty"`
	CreatorUser *User `json:"creator_user,omitempty"`
	DaDisplaySettings *ProductCatalogImageSettings `json:"da_display_settings,omitempty"`
	DefaultImageURL string `json:"default_image_url,omitempty"`
	FallbackImageURL []string `json:"fallback_image_url,omitempty"`
	FeedCount int `json:"feed_count,omitempty"`
	ID string `json:"id,omitempty"`
	IsCatalogSegment bool `json:"is_catalog_segment,omitempty"`
	IsLocalCatalog bool `json:"is_local_catalog,omitempty"`
	Name string `json:"name,omitempty"`
	OwnerBusiness *Business `json:"owner_business,omitempty"`
	ProductCount int `json:"product_count,omitempty"`
	StoreCatalogSettings *StoreCatalogSettings `json:"store_catalog_settings,omitempty"`
	UserAccessExpireTime time.Time `json:"user_access_expire_time,omitempty"`
	Vertical string `json:"vertical,omitempty"`
}

// ProductCatalogCategory represents the Facebook ProductCatalogCategory object
type ProductCatalogCategory struct {
	CriteriaValue string `json:"criteria_value,omitempty"`
	Description string `json:"description,omitempty"`
	DestinationUri string `json:"destination_uri,omitempty"`
	ImageURL string `json:"image_url,omitempty"`
	Name string `json:"name,omitempty"`
	NumItems int `json:"num_items,omitempty"`
	Tokens []map[string]string `json:"tokens,omitempty"`
}

// ProductCatalogCheckMarketplacePartnerSellersStatus represents the Facebook ProductCatalogCheckMarketplacePartnerSellersStatus object
type ProductCatalogCheckMarketplacePartnerSellersStatus struct {
	SampleErrors []map[string]interface{} `json:"sample_errors,omitempty"`
	SessionID string `json:"session_id,omitempty"`
	Status string `json:"status,omitempty"`
}

// ProductCatalogDataSource represents the Facebook ProductCatalogDataSource object
type ProductCatalogDataSource struct {
	AppID string `json:"app_id,omitempty"`
	ID string `json:"id,omitempty"`
	IngestionSourceType string `json:"ingestion_source_type,omitempty"`
	Name string `json:"name,omitempty"`
	UploadType string `json:"upload_type,omitempty"`
}

// ProductCatalogDiagnosticGroup represents the Facebook ProductCatalogDiagnosticGroup object
type ProductCatalogDiagnosticGroup struct {
	AffectedChannels []string `json:"affected_channels,omitempty"`
	AffectedEntity ProductcatalogdiagnosticgroupAffectedEntity `json:"affected_entity,omitempty"`
	AffectedFeatures []ProductcatalogdiagnosticgroupAffectedFeatures `json:"affected_features,omitempty"`
	Diagnostics []map[string]interface{} `json:"diagnostics,omitempty"`
	ErrorCode int `json:"error_code,omitempty"`
	NumberOfAffectedEntities int `json:"number_of_affected_entities,omitempty"`
	NumberOfAffectedItems int `json:"number_of_affected_items,omitempty"`
	Severity ProductcatalogdiagnosticgroupSeverity `json:"severity,omitempty"`
	Subtitle string `json:"subtitle,omitempty"`
	Title string `json:"title,omitempty"`
	Type ProductcatalogdiagnosticgroupType `json:"type,omitempty"`
}

// ProductCatalogFacets represents the Facebook ProductCatalogFacets object
type ProductCatalogFacets struct {
	Facets []map[string][]map[string]interface{} `json:"facets,omitempty"`
	ItemCount int `json:"item_count,omitempty"`
}

// ProductCatalogHotelRoomsBatch represents the Facebook ProductCatalogHotelRoomsBatch object
type ProductCatalogHotelRoomsBatch struct {
	Errors []map[string]interface{} `json:"errors,omitempty"`
	ErrorsTotalCount int `json:"errors_total_count,omitempty"`
	Handle string `json:"handle,omitempty"`
	Status string `json:"status,omitempty"`
}

// ProductCatalogImageSettings represents the Facebook ProductCatalogImageSettings object
type ProductCatalogImageSettings struct {
	CarouselAd *ProductCatalogImageSettingsOperation `json:"carousel_ad,omitempty"`
	SingleAd *ProductCatalogImageSettingsOperation `json:"single_ad,omitempty"`
}

// ProductCatalogImageSettingsInternal represents the Facebook ProductCatalogImageSettingsInternal object
type ProductCatalogImageSettingsInternal struct {
	CarouselAd *ProductCatalogImageSettingsOperation `json:"carousel_ad,omitempty"`
	ShopsPdp *ProductCatalogImageSettingsOperation `json:"shops_pdp,omitempty"`
	SingleAd *ProductCatalogImageSettingsOperation `json:"single_ad,omitempty"`
}

// ProductCatalogImageSettingsOperation represents the Facebook ProductCatalogImageSettingsOperation object
type ProductCatalogImageSettingsOperation struct {
	TransformationType string `json:"transformation_type,omitempty"`
}

// ProductCatalogLocalizationSettings represents the Facebook ProductCatalogLocalizationSettings object
type ProductCatalogLocalizationSettings struct {
	DefaultCountry string `json:"default_country,omitempty"`
	DefaultLanguage string `json:"default_language,omitempty"`
	ID string `json:"id,omitempty"`
}

// ProductCatalogPricingVariablesBatch represents the Facebook ProductCatalogPricingVariablesBatch object
type ProductCatalogPricingVariablesBatch struct {
	Errors []map[string]interface{} `json:"errors,omitempty"`
	ErrorsTotalCount int `json:"errors_total_count,omitempty"`
	Handle string `json:"handle,omitempty"`
	Status string `json:"status,omitempty"`
}

// ProductCatalogProductSetsBatch represents the Facebook ProductCatalogProductSetsBatch object
type ProductCatalogProductSetsBatch struct {
	Errors []map[string]interface{} `json:"errors,omitempty"`
	ErrorsTotalCount int `json:"errors_total_count,omitempty"`
	Handle string `json:"handle,omitempty"`
	Status string `json:"status,omitempty"`
}

// ProductCatalogUserActions represents the Facebook ProductCatalogUserActions object
type ProductCatalogUserActions struct {
	Actions []string `json:"actions,omitempty"`
}

// ProductCatalogUserTasks represents the Facebook ProductCatalogUserTasks object
type ProductCatalogUserTasks struct {
	Business *Business `json:"business,omitempty"`
	Tasks []string `json:"tasks,omitempty"`
}

// ProductDaEventSamplesBatch represents the Facebook ProductDaEventSamplesBatch object
type ProductDaEventSamplesBatch struct {
	Samples []map[string]interface{} `json:"samples,omitempty"`
	TimeStart uint `json:"time_start,omitempty"`
	TimeStop uint `json:"time_stop,omitempty"`
}

// ProductDeliveryPreference represents the Facebook ProductDeliveryPreference object
type ProductDeliveryPreference struct {
	AdObjectID string `json:"ad_object_id,omitempty"`
	ID string `json:"id,omitempty"`
	ProductPriority string `json:"product_priority,omitempty"`
	ProductPriorityCategory []string `json:"product_priority_category,omitempty"`
}

// ProductEventStat represents the Facebook ProductEventStat object
type ProductEventStat struct {
	DateStart string `json:"date_start,omitempty"`
	DateStop string `json:"date_stop,omitempty"`
	DeviceType ProducteventstatDeviceType `json:"device_type,omitempty"`
	Event ProducteventstatEvent `json:"event,omitempty"`
	EventSource *ExternalEventSource `json:"event_source,omitempty"`
	TotalContentIDsMatchedOtherCatalogs int `json:"total_content_ids_matched_other_catalogs,omitempty"`
	TotalMatchedContentIDs int `json:"total_matched_content_ids,omitempty"`
	TotalUnmatchedContentIDs int `json:"total_unmatched_content_ids,omitempty"`
	UniqueContentIDsMatchedOtherCatalogs int `json:"unique_content_ids_matched_other_catalogs,omitempty"`
	UniqueMatchedContentIDs int `json:"unique_matched_content_ids,omitempty"`
	UniqueUnmatchedContentIDs int `json:"unique_unmatched_content_ids,omitempty"`
}

// ProductFeed represents the Facebook ProductFeed object
type ProductFeed struct {
	Country string `json:"country,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	DefaultCurrency string `json:"default_currency,omitempty"`
	DeletionEnabled bool `json:"deletion_enabled,omitempty"`
	Delimiter ProductfeedDelimiter `json:"delimiter,omitempty"`
	Encoding string `json:"encoding,omitempty"`
	FileName string `json:"file_name,omitempty"`
	ID string `json:"id,omitempty"`
	IngestionSourceType ProductfeedIngestionSourceType `json:"ingestion_source_type,omitempty"`
	ItemSubType string `json:"item_sub_type,omitempty"`
	LatestUpload *ProductFeedUpload `json:"latest_upload,omitempty"`
	MigratedFromFeedID string `json:"migrated_from_feed_id,omitempty"`
	Name string `json:"name,omitempty"`
	OverrideType string `json:"override_type,omitempty"`
	PrimaryFeeds []string `json:"primary_feeds,omitempty"`
	ProductCount int `json:"product_count,omitempty"`
	QuotedFieldsMode ProductfeedQuotedFieldsMode `json:"quoted_fields_mode,omitempty"`
	Schedule *ProductFeedSchedule `json:"schedule,omitempty"`
	SupplementaryFeeds []string `json:"supplementary_feeds,omitempty"`
	UpdateSchedule *ProductFeedSchedule `json:"update_schedule,omitempty"`
}

// ProductFeedRule represents the Facebook ProductFeedRule object
type ProductFeedRule struct {
	Attribute string `json:"attribute,omitempty"`
	ID string `json:"id,omitempty"`
	Params []map[string]string `json:"params,omitempty"`
	RuleType string `json:"rule_type,omitempty"`
}

// ProductFeedRulePreviewSample represents the Facebook ProductFeedRulePreviewSample object
type ProductFeedRulePreviewSample struct {
	PropertiesAfter []map[string]string `json:"properties_after,omitempty"`
	PropertiesBefore []map[string]string `json:"properties_before,omitempty"`
}

// ProductFeedRuleSuggestion represents the Facebook ProductFeedRuleSuggestion object
type ProductFeedRuleSuggestion struct {
	Attribute string `json:"attribute,omitempty"`
	Params []map[string]string `json:"params,omitempty"`
	Type string `json:"type,omitempty"`
}

// ProductFeedSchedule represents the Facebook ProductFeedSchedule object
type ProductFeedSchedule struct {
	DayOfMonth uint `json:"day_of_month,omitempty"`
	DayOfWeek string `json:"day_of_week,omitempty"`
	Hour uint `json:"hour,omitempty"`
	ID string `json:"id,omitempty"`
	Interval ProductfeedscheduleInterval `json:"interval,omitempty"`
	IntervalCount uint `json:"interval_count,omitempty"`
	Minute uint `json:"minute,omitempty"`
	Timezone string `json:"timezone,omitempty"`
	URL string `json:"url,omitempty"`
	Username string `json:"username,omitempty"`
}

// ProductFeedUpload represents the Facebook ProductFeedUpload object
type ProductFeedUpload struct {
	EndTime time.Time `json:"end_time,omitempty"`
	ErrorCount int `json:"error_count,omitempty"`
	ErrorReport *ProductFeedUploadErrorReport `json:"error_report,omitempty"`
	Filename string `json:"filename,omitempty"`
	ID string `json:"id,omitempty"`
	InputMethod ProductfeeduploadInputMethod `json:"input_method,omitempty"`
	NumDeletedItems int `json:"num_deleted_items,omitempty"`
	NumDetectedItems int `json:"num_detected_items,omitempty"`
	NumInvalidItems int `json:"num_invalid_items,omitempty"`
	NumPersistedItems int `json:"num_persisted_items,omitempty"`
	StartTime time.Time `json:"start_time,omitempty"`
	URL string `json:"url,omitempty"`
	WarningCount int `json:"warning_count,omitempty"`
}

// ProductFeedUploadError represents the Facebook ProductFeedUploadError object
type ProductFeedUploadError struct {
	AffectedSurfaces []ProductfeeduploaderrorAffectedSurfaces `json:"affected_surfaces,omitempty"`
	Description string `json:"description,omitempty"`
	ErrorType string `json:"error_type,omitempty"`
	ID string `json:"id,omitempty"`
	Severity ProductfeeduploaderrorSeverity `json:"severity,omitempty"`
	Summary string `json:"summary,omitempty"`
	TotalCount uint `json:"total_count,omitempty"`
}

// ProductFeedUploadErrorReport represents the Facebook ProductFeedUploadErrorReport object
type ProductFeedUploadErrorReport struct {
	FileHandle string `json:"file_handle,omitempty"`
	ReportStatus string `json:"report_status,omitempty"`
}

// ProductFeedUploadErrorSample represents the Facebook ProductFeedUploadErrorSample object
type ProductFeedUploadErrorSample struct {
	ID string `json:"id,omitempty"`
	RetailerID string `json:"retailer_id,omitempty"`
	RowNumber int `json:"row_number,omitempty"`
}

// ProductFeedUploadProgress represents the Facebook ProductFeedUploadProgress object
type ProductFeedUploadProgress struct {
	Pos int `json:"pos,omitempty"`
	Size int `json:"size,omitempty"`
	Step string `json:"step,omitempty"`
	Unit string `json:"unit,omitempty"`
	UpdatedTime time.Time `json:"updated_time,omitempty"`
}

// ProductGroup represents the Facebook ProductGroup object
type ProductGroup struct {
	ID string `json:"id,omitempty"`
	ProductCatalog *ProductCatalog `json:"product_catalog,omitempty"`
	RetailerID string `json:"retailer_id,omitempty"`
	Variants []*ProductVariant `json:"variants,omitempty"`
}

// ProductImage represents the Facebook ProductImage object
type ProductImage struct {
	Height int `json:"height,omitempty"`
	ID string `json:"id,omitempty"`
	ImageURL string `json:"image_url,omitempty"`
	Width int `json:"width,omitempty"`
}

// ProductItem represents the Facebook ProductItem object
type ProductItem struct {
	AdditionalImageCdnURLs [][]map[string]string `json:"additional_image_cdn_urls,omitempty"`
	AdditionalImageURLs []string `json:"additional_image_urls,omitempty"`
	AdditionalVariantAttributes []map[string]string `json:"additional_variant_attributes,omitempty"`
	AgeGroup ProductitemAgeGroup `json:"age_group,omitempty"`
	Applinks *CatalogItemAppLinks `json:"applinks,omitempty"`
	Availability ProductitemAvailability `json:"availability,omitempty"`
	Brand string `json:"brand,omitempty"`
	BundleItems []string `json:"bundle_items,omitempty"`
	BundleRetailerIDs []string `json:"bundle_retailer_ids,omitempty"`
	CapabilityToReviewStatus []map[string]ProductitemCapabilityToReviewStatus `json:"capability_to_review_status,omitempty"`
	Category string `json:"category,omitempty"`
	CategorySpecificFields *CatalogSubVerticalList `json:"category_specific_fields,omitempty"`
	Color string `json:"color,omitempty"`
	CommerceInsights *ProductItemCommerceInsights `json:"commerce_insights,omitempty"`
	Condition ProductitemCondition `json:"condition,omitempty"`
	Currency string `json:"currency,omitempty"`
	CustomData []map[string]string `json:"custom_data,omitempty"`
	CustomLabel0 string `json:"custom_label_0,omitempty"`
	CustomLabel1 string `json:"custom_label_1,omitempty"`
	CustomLabel2 string `json:"custom_label_2,omitempty"`
	CustomLabel3 string `json:"custom_label_3,omitempty"`
	CustomLabel4 string `json:"custom_label_4,omitempty"`
	CustomNumber0 string `json:"custom_number_0,omitempty"`
	CustomNumber1 string `json:"custom_number_1,omitempty"`
	CustomNumber2 string `json:"custom_number_2,omitempty"`
	CustomNumber3 string `json:"custom_number_3,omitempty"`
	CustomNumber4 string `json:"custom_number_4,omitempty"`
	Description string `json:"description,omitempty"`
	Errors []*ProductItemError `json:"errors,omitempty"`
	ExpirationDate string `json:"expiration_date,omitempty"`
	FbProductCategory string `json:"fb_product_category,omitempty"`
	Gender ProductitemGender `json:"gender,omitempty"`
	GeneratedBackgroundImages []*AIGeneratedProductImage `json:"generated_background_images,omitempty"`
	GeneratedBackgroundImagesAdUsage bool `json:"generated_background_images_ad_usage,omitempty"`
	Gtin string `json:"gtin,omitempty"`
	ID string `json:"id,omitempty"`
	ImageCdnURLs []map[string]string `json:"image_cdn_urls,omitempty"`
	ImageFetchStatus ProductitemImageFetchStatus `json:"image_fetch_status,omitempty"`
	ImageURL string `json:"image_url,omitempty"`
	Images []string `json:"images,omitempty"`
	ImporterAddress *ProductItemImporterAddress `json:"importer_address,omitempty"`
	ImporterName string `json:"importer_name,omitempty"`
	InvalidationErrors []*ProductItemInvalidationError `json:"invalidation_errors,omitempty"`
	Inventory int `json:"inventory,omitempty"`
	IsBundleHero bool `json:"is_bundle_hero,omitempty"`
	ManufacturerInfo string `json:"manufacturer_info,omitempty"`
	ManufacturerPartNumber string `json:"manufacturer_part_number,omitempty"`
	MarkedForProductLaunch string `json:"marked_for_product_launch,omitempty"`
	Material string `json:"material,omitempty"`
	MobileLink string `json:"mobile_link,omitempty"`
	Name string `json:"name,omitempty"`
	OrderingIndex int `json:"ordering_index,omitempty"`
	OriginCountry string `json:"origin_country,omitempty"`
	ParentProductID string `json:"parent_product_id,omitempty"`
	Pattern string `json:"pattern,omitempty"`
	PostConversionSignalBasedEnforcementAppealEligibility bool `json:"post_conversion_signal_based_enforcement_appeal_eligibility,omitempty"`
	Price string `json:"price,omitempty"`
	ProductCatalog *ProductCatalog `json:"product_catalog,omitempty"`
	ProductFeed *ProductFeed `json:"product_feed,omitempty"`
	ProductGroup *ProductGroup `json:"product_group,omitempty"`
	ProductLocalInfo *ProductItemLocalInfo `json:"product_local_info,omitempty"`
	ProductRelationship string `json:"product_relationship,omitempty"`
	ProductType string `json:"product_type,omitempty"`
	QuantityToSellOnFacebook int `json:"quantity_to_sell_on_facebook,omitempty"`
	RetailerID string `json:"retailer_id,omitempty"`
	RetailerProductGroupID string `json:"retailer_product_group_id,omitempty"`
	ReviewRejectionReasons []string `json:"review_rejection_reasons,omitempty"`
	ReviewStatus ProductitemReviewStatus `json:"review_status,omitempty"`
	SalePrice string `json:"sale_price,omitempty"`
	SalePriceEndDate string `json:"sale_price_end_date,omitempty"`
	SalePriceStartDate string `json:"sale_price_start_date,omitempty"`
	ShippingWeightUnit ProductitemShippingWeightUnit `json:"shipping_weight_unit,omitempty"`
	ShippingWeightValue float64 `json:"shipping_weight_value,omitempty"`
	ShortDescription string `json:"short_description,omitempty"`
	Size string `json:"size,omitempty"`
	StartDate string `json:"start_date,omitempty"`
	Tags []string `json:"tags,omitempty"`
	URL string `json:"url,omitempty"`
	VendorID string `json:"vendor_id,omitempty"`
	VideoFetchStatus ProductitemVideoFetchStatus `json:"video_fetch_status,omitempty"`
	Videos []*ProductItemVideoData `json:"videos,omitempty"`
	Visibility ProductitemVisibility `json:"visibility,omitempty"`
	WaComplianceCategory string `json:"wa_compliance_category,omitempty"`
}

// ProductItemCommerceInsights represents the Facebook ProductItemCommerceInsights object
type ProductItemCommerceInsights struct {
	MessageSends uint `json:"message_sends,omitempty"`
	OrganicImpressions uint `json:"organic_impressions,omitempty"`
	PaidImpressions uint `json:"paid_impressions,omitempty"`
}

// ProductItemError represents the Facebook ProductItemError object
type ProductItemError struct {
	Description string `json:"description,omitempty"`
	ErrorPriority string `json:"error_priority,omitempty"`
	ErrorType string `json:"error_type,omitempty"`
	Title string `json:"title,omitempty"`
}

// ProductItemImporterAddress represents the Facebook ProductItemImporterAddress object
type ProductItemImporterAddress struct {
	City string `json:"city,omitempty"`
	Country string `json:"country,omitempty"`
	PostalCode string `json:"postal_code,omitempty"`
	Region string `json:"region,omitempty"`
	Street1 string `json:"street1,omitempty"`
	Street2 string `json:"street2,omitempty"`
}

// ProductItemInsights represents the Facebook ProductItemInsights object
type ProductItemInsights struct {
	AdClickCount int `json:"ad_click_count,omitempty"`
	AdImpressionCount int `json:"ad_impression_count,omitempty"`
	AddToCartCount int `json:"add_to_cart_count,omitempty"`
	PurchaseCount int `json:"purchase_count,omitempty"`
	ViewContentCount int `json:"view_content_count,omitempty"`
}

// ProductItemInvalidationError represents the Facebook ProductItemInvalidationError object
type ProductItemInvalidationError struct {
}

// ProductItemLandingPageData represents the Facebook ProductItemLandingPageData object
type ProductItemLandingPageData struct {
	Availability ProductitemlandingpagedataAvailability `json:"availability,omitempty"`
}

// ProductItemLocalInfo represents the Facebook ProductItemLocalInfo object
type ProductItemLocalInfo struct {
	AvailabilityCircleOrigin *ProductItemLocalInfoLatLongShape `json:"availability_circle_origin,omitempty"`
	AvailabilityCircleRadius float64 `json:"availability_circle_radius,omitempty"`
	AvailabilityCircleRadiusUnit string `json:"availability_circle_radius_unit,omitempty"`
	AvailabilityPolygonCoordinates []*ProductItemLocalInfoLatLongShape `json:"availability_polygon_coordinates,omitempty"`
	AvailabilityPostalCodes []string `json:"availability_postal_codes,omitempty"`
	AvailabilitySource string `json:"availability_source,omitempty"`
	ID string `json:"id,omitempty"`
	InferredCircleOrigin *ProductItemLocalInfoLatLongShape `json:"inferred_circle_origin,omitempty"`
	InferredCircleRadius float64 `json:"inferred_circle_radius,omitempty"`
}

// ProductItemLocalInfoLatLongShape represents the Facebook ProductItemLocalInfoLatLongShape object
type ProductItemLocalInfoLatLongShape struct {
	Latitude float64 `json:"latitude,omitempty"`
	Longitude float64 `json:"longitude,omitempty"`
}

// ProductItemOffer represents the Facebook ProductItemOffer object
type ProductItemOffer struct {
	AvailabilityArea []map[string]interface{} `json:"availability_area,omitempty"`
	AvailabilityRadius float64 `json:"availability_radius,omitempty"`
	ID string `json:"id,omitempty"`
}

// ProductItemShipping represents the Facebook ProductItemShipping object
type ProductItemShipping struct {
	ShippingCountry string `json:"shipping_country,omitempty"`
	ShippingPriceCurrency string `json:"shipping_price_currency,omitempty"`
	ShippingPriceValue float64 `json:"shipping_price_value,omitempty"`
	ShippingRegion string `json:"shipping_region,omitempty"`
	ShippingService string `json:"shipping_service,omitempty"`
}

// ProductItemSubscriptionInfo represents the Facebook ProductItemSubscriptionInfo object
type ProductItemSubscriptionInfo struct {
	IsSubscribable bool `json:"is_subscribable,omitempty"`
	SubscriptionBillingPeriod uint `json:"subscription_billing_period,omitempty"`
	SubscriptionBillingType string `json:"subscription_billing_type,omitempty"`
}

// ProductItemUnitPrice represents the Facebook ProductItemUnitPrice object
type ProductItemUnitPrice struct {
}

// ProductItemVideoData represents the Facebook ProductItemVideoData object
type ProductItemVideoData struct {
	Tags []string `json:"tags,omitempty"`
	URL string `json:"url,omitempty"`
}

// ProductSet represents the Facebook ProductSet object
type ProductSet struct {
	AutoCreationURL string `json:"auto_creation_url,omitempty"`
	Filter string `json:"filter,omitempty"`
	ID string `json:"id,omitempty"`
	LatestMetadata *ProductSetMetadata `json:"latest_metadata,omitempty"`
	LiveMetadata *ProductSetMetadata `json:"live_metadata,omitempty"`
	Name string `json:"name,omitempty"`
	OrderingInfo []int `json:"ordering_info,omitempty"`
	ProductCatalog *ProductCatalog `json:"product_catalog,omitempty"`
	ProductCount uint `json:"product_count,omitempty"`
	RetailerID string `json:"retailer_id,omitempty"`
}

// ProductSetMetadata represents the Facebook ProductSetMetadata object
type ProductSetMetadata struct {
	CoverImageURL string `json:"cover_image_url,omitempty"`
	Description string `json:"description,omitempty"`
	ExternalURL string `json:"external_url,omitempty"`
	IntegrityReviewStatus string `json:"integrity_review_status,omitempty"`
}

// ProductSetTaxonCategory represents the Facebook ProductSetTaxonCategory object
type ProductSetTaxonCategory struct {
	CategoryID int `json:"category_id,omitempty"`
	CategoryName string `json:"category_name,omitempty"`
	ImageURL string `json:"image_url,omitempty"`
}

// ProductSetUsage represents the Facebook ProductSetUsage object
type ProductSetUsage struct {
	ID string `json:"id,omitempty"`
	ProductSet *ProductSet `json:"product_set,omitempty"`
	UsageType string `json:"usage_type,omitempty"`
}

// ProductVariant represents the Facebook ProductVariant object
type ProductVariant struct {
	Label string `json:"label,omitempty"`
	Options []string `json:"options,omitempty"`
	ProductField string `json:"product_field,omitempty"`
}

// ProductVisualVariant represents the Facebook ProductVisualVariant object
type ProductVisualVariant struct {
	Items []*ProductItem `json:"items,omitempty"`
	UniqueKey string `json:"unique_key,omitempty"`
}

// Profile represents the Facebook Profile object
type Profile struct {
	CanPost bool `json:"can_post,omitempty"`
	ID string `json:"id,omitempty"`
	Link string `json:"link,omitempty"`
	Name string `json:"name,omitempty"`
	Pic string `json:"pic,omitempty"`
	PicCrop *ProfilePictureSource `json:"pic_crop,omitempty"`
	PicLarge string `json:"pic_large,omitempty"`
	PicSmall string `json:"pic_small,omitempty"`
	PicSquare string `json:"pic_square,omitempty"`
	ProfileType ProfileProfileType `json:"profile_type,omitempty"`
	Username string `json:"username,omitempty"`
}

// ProfilePictureSource represents the Facebook ProfilePictureSource object
type ProfilePictureSource struct {
	Bottom uint `json:"bottom,omitempty"`
	CacheKey string `json:"cache_key,omitempty"`
	Height uint `json:"height,omitempty"`
	IsSilhouette bool `json:"is_silhouette,omitempty"`
	Left uint `json:"left,omitempty"`
	Right uint `json:"right,omitempty"`
	Top uint `json:"top,omitempty"`
	URL string `json:"url,omitempty"`
	Width uint `json:"width,omitempty"`
}

// PublisherBlockList represents the Facebook PublisherBlockList object
type PublisherBlockList struct {
	AppPublishers []*AppPublisher `json:"app_publishers,omitempty"`
	BusinessOwnerID string `json:"business_owner_id,omitempty"`
	ID string `json:"id,omitempty"`
	IsAutoBlockingOn bool `json:"is_auto_blocking_on,omitempty"`
	IsEligibleAtCampaignLevel bool `json:"is_eligible_at_campaign_level,omitempty"`
	LastUpdateTime time.Time `json:"last_update_time,omitempty"`
	LastUpdateUser string `json:"last_update_user,omitempty"`
	Name string `json:"name,omitempty"`
	OwnerAdAccountID string `json:"owner_ad_account_id,omitempty"`
	WebPublishers []*WebPublisher `json:"web_publishers,omitempty"`
}

// PublisherDeliveryReport represents the Facebook PublisherDeliveryReport object
type PublisherDeliveryReport struct {
	ContentTypes []string `json:"content_types,omitempty"`
	EstimatedImpressions uint `json:"estimated_impressions,omitempty"`
	Name string `json:"name,omitempty"`
	Status string `json:"status,omitempty"`
	URL string `json:"url,omitempty"`
}

// PublisherWhiteList represents the Facebook PublisherWhiteList object
type PublisherWhiteList struct {
	BusinessOwnerID string `json:"business_owner_id,omitempty"`
	ID string `json:"id,omitempty"`
	LastUpdatedTime time.Time `json:"last_updated_time,omitempty"`
	LastUpdatedUser string `json:"last_updated_user,omitempty"`
	Name string `json:"name,omitempty"`
	PlacementType string `json:"placement_type,omitempty"`
}

// RTBDynamicPost represents the Facebook RTBDynamicPost object
type RTBDynamicPost struct {
	ChildAttachments []*DynamicPostChildAttachment `json:"child_attachments,omitempty"`
	Created time.Time `json:"created,omitempty"`
	Description string `json:"description,omitempty"`
	ID string `json:"id,omitempty"`
	ImageURL string `json:"image_url,omitempty"`
	Link string `json:"link,omitempty"`
	Message string `json:"message,omitempty"`
	OwnerID string `json:"owner_id,omitempty"`
	PlaceID string `json:"place_id,omitempty"`
	ProductID string `json:"product_id,omitempty"`
	Title string `json:"title,omitempty"`
}

// RawCustomAudience represents the Facebook RawCustomAudience object
type RawCustomAudience struct {
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
}

// ReachFrequencyActivity represents the Facebook ReachFrequencyActivity object
type ReachFrequencyActivity struct {
	AccountID string `json:"account_id,omitempty"`
	CampaignActive bool `json:"campaign_active,omitempty"`
	CampaignStarted bool `json:"campaign_started,omitempty"`
	CreativeUploaded bool `json:"creative_uploaded,omitempty"`
	IoApproved bool `json:"io_approved,omitempty"`
	SfLink string `json:"sf_link,omitempty"`
}

// ReachFrequencyAdFormat represents the Facebook ReachFrequencyAdFormat object
type ReachFrequencyAdFormat struct {
	Details map[string]interface{} `json:"details,omitempty"`
	Type string `json:"type,omitempty"`
}

// ReachFrequencyCurveLowerConfidenceRange represents the Facebook ReachFrequencyCurveLowerConfidenceRange object
type ReachFrequencyCurveLowerConfidenceRange struct {
	ImpressionLower []int `json:"impression_lower,omitempty"`
	NumPoints uint `json:"num_points,omitempty"`
	Reach []int `json:"reach,omitempty"`
	ReachLower []int `json:"reach_lower,omitempty"`
	UniqVideoViews2sLower []int `json:"uniq_video_views_2s_lower,omitempty"`
	VideoViews2sLower []int `json:"video_views_2s_lower,omitempty"`
}

// ReachFrequencyCurveUpperConfidenceRange represents the Facebook ReachFrequencyCurveUpperConfidenceRange object
type ReachFrequencyCurveUpperConfidenceRange struct {
	ImpressionUpper []int `json:"impression_upper,omitempty"`
	NumPoints uint `json:"num_points,omitempty"`
	Reach []int `json:"reach,omitempty"`
	ReachUpper []int `json:"reach_upper,omitempty"`
	UniqVideoViews2sUpper []int `json:"uniq_video_views_2s_upper,omitempty"`
	VideoViews2sUpper []int `json:"video_views_2s_upper,omitempty"`
}

// ReachFrequencyDayPart represents the Facebook ReachFrequencyDayPart object
type ReachFrequencyDayPart struct {
	Days []int `json:"days,omitempty"`
	EndMinute int `json:"end_minute,omitempty"`
	StartMinute int `json:"start_minute,omitempty"`
}

// ReachFrequencyEstimatesCurve represents the Facebook ReachFrequencyEstimatesCurve object
type ReachFrequencyEstimatesCurve struct {
	Budget []int `json:"budget,omitempty"`
	Conversion []int `json:"conversion,omitempty"`
	Impression []int `json:"impression,omitempty"`
	InterpolatedReach float64 `json:"interpolated_reach,omitempty"`
	NumPoints uint `json:"num_points,omitempty"`
	RawImpression []int `json:"raw_impression,omitempty"`
	RawReach []int `json:"raw_reach,omitempty"`
	Reach []int `json:"reach,omitempty"`
}

// ReachFrequencyEstimatesPlacementBreakdown represents the Facebook ReachFrequencyEstimatesPlacementBreakdown object
type ReachFrequencyEstimatesPlacementBreakdown struct {
	Android []float64 `json:"android,omitempty"`
	AudienceNetwork []float64 `json:"audience_network,omitempty"`
	Desktop []float64 `json:"desktop,omitempty"`
	FacebookSearch []float64 `json:"facebook_search,omitempty"`
	FbReels []float64 `json:"fb_reels,omitempty"`
	FbReelsOverlay []float64 `json:"fb_reels_overlay,omitempty"`
	IgAndroid []float64 `json:"ig_android,omitempty"`
	IgIOS []float64 `json:"ig_ios,omitempty"`
	IgOther []float64 `json:"ig_other,omitempty"`
	IgReels []float64 `json:"ig_reels,omitempty"`
	IgStory []float64 `json:"ig_story,omitempty"`
	InstantArticles []float64 `json:"instant_articles,omitempty"`
	InstreamVideos []float64 `json:"instream_videos,omitempty"`
	IOS []float64 `json:"ios,omitempty"`
	Msite []float64 `json:"msite,omitempty"`
	SuggestedVideos []float64 `json:"suggested_videos,omitempty"`
}

// ReachFrequencyPrediction represents the Facebook ReachFrequencyPrediction object
type ReachFrequencyPrediction struct {
	AccountID int `json:"account_id,omitempty"`
	ActivityStatus *ReachFrequencyActivity `json:"activity_status,omitempty"`
	AdFormats []*ReachFrequencyAdFormat `json:"ad_formats,omitempty"`
	AuctionEntryOptionIndex int `json:"auction_entry_option_index,omitempty"`
	AudienceSizeLowerBound uint `json:"audience_size_lower_bound,omitempty"`
	AudienceSizeUpperBound uint `json:"audience_size_upper_bound,omitempty"`
	BusinessID int `json:"business_id,omitempty"`
	BuyingType string `json:"buying_type,omitempty"`
	CampaignGroupID int `json:"campaign_group_id,omitempty"`
	CampaignID string `json:"campaign_id,omitempty"`
	CampaignTimeStart time.Time `json:"campaign_time_start,omitempty"`
	CampaignTimeStop time.Time `json:"campaign_time_stop,omitempty"`
	Currency string `json:"currency,omitempty"`
	CurveBudgetReach *ReachFrequencyEstimatesCurve `json:"curve_budget_reach,omitempty"`
	CurveReach []uint `json:"curve_reach,omitempty"`
	DailyGrpCurve []float64 `json:"daily_grp_curve,omitempty"`
	DailyImpressionCurve []float64 `json:"daily_impression_curve,omitempty"`
	DailyImpressionCurveMap []map[uint][]float64 `json:"daily_impression_curve_map,omitempty"`
	DayPartingSchedule []*ReachFrequencyDayPart `json:"day_parting_schedule,omitempty"`
	DestinationID string `json:"destination_id,omitempty"`
	EndTime time.Time `json:"end_time,omitempty"`
	ExpirationTime time.Time `json:"expiration_time,omitempty"`
	ExternalBudget int `json:"external_budget,omitempty"`
	ExternalImpression uint `json:"external_impression,omitempty"`
	ExternalMaximumBudget int `json:"external_maximum_budget,omitempty"`
	ExternalMaximumImpression string `json:"external_maximum_impression,omitempty"`
	ExternalMaximumReach uint `json:"external_maximum_reach,omitempty"`
	ExternalMinimumBudget int `json:"external_minimum_budget,omitempty"`
	ExternalMinimumImpression uint `json:"external_minimum_impression,omitempty"`
	ExternalMinimumReach uint `json:"external_minimum_reach,omitempty"`
	ExternalReach uint `json:"external_reach,omitempty"`
	FeedRatio0000 uint `json:"feed_ratio_0000,omitempty"`
	FrequencyCap uint `json:"frequency_cap,omitempty"`
	FrequencyDistributionMap []map[uint][]float64 `json:"frequency_distribution_map,omitempty"`
	FrequencyDistributionMapAgg []map[uint][]uint `json:"frequency_distribution_map_agg,omitempty"`
	GrpAudienceSize float64 `json:"grp_audience_size,omitempty"`
	GrpAvgProbabilityMap string `json:"grp_avg_probability_map,omitempty"`
	GrpCountryAudienceSize float64 `json:"grp_country_audience_size,omitempty"`
	GrpCurve []float64 `json:"grp_curve,omitempty"`
	GrpDmasAudienceSize float64 `json:"grp_dmas_audience_size,omitempty"`
	GrpFilteringThreshold00 uint `json:"grp_filtering_threshold_00,omitempty"`
	GrpPoints float64 `json:"grp_points,omitempty"`
	GrpRatio float64 `json:"grp_ratio,omitempty"`
	GrpReachRatio float64 `json:"grp_reach_ratio,omitempty"`
	GrpStatus string `json:"grp_status,omitempty"`
	HoldoutPercentage uint `json:"holdout_percentage,omitempty"`
	ID string `json:"id,omitempty"`
	ImpressionCurve []uint `json:"impression_curve,omitempty"`
	InstagramDestinationID string `json:"instagram_destination_id,omitempty"`
	InstreamPackages []string `json:"instream_packages,omitempty"`
	IntervalFrequencyCap uint `json:"interval_frequency_cap,omitempty"`
	IntervalFrequencyCapResetPeriod uint `json:"interval_frequency_cap_reset_period,omitempty"`
	IsBalancedFrequency bool `json:"is_balanced_frequency,omitempty"`
	IsBonusMedia uint `json:"is_bonus_media,omitempty"`
	IsConversionGoal uint `json:"is_conversion_goal,omitempty"`
	IsHigherAverageFrequency bool `json:"is_higher_average_frequency,omitempty"`
	IsIo bool `json:"is_io,omitempty"`
	IsReservedBuying uint `json:"is_reserved_buying,omitempty"`
	IsTrp bool `json:"is_trp,omitempty"`
	Name string `json:"name,omitempty"`
	Objective uint `json:"objective,omitempty"`
	ObjectiveName string `json:"objective_name,omitempty"`
	OdaxObjective uint `json:"odax_objective,omitempty"`
	OdaxObjectiveName string `json:"odax_objective_name,omitempty"`
	OptimizationGoal uint `json:"optimization_goal,omitempty"`
	OptimizationGoalName string `json:"optimization_goal_name,omitempty"`
	PausePeriods []map[string]interface{} `json:"pause_periods,omitempty"`
	PercentReachAtTargetFrequency int `json:"percent_reach_at_target_frequency,omitempty"`
	PlacementBreakdown *ReachFrequencyEstimatesPlacementBreakdown `json:"placement_breakdown,omitempty"`
	PlacementBreakdownMap []map[uint]*ReachFrequencyEstimatesPlacementBreakdown `json:"placement_breakdown_map,omitempty"`
	PlanName string `json:"plan_name,omitempty"`
	PlanType string `json:"plan_type,omitempty"`
	PredictionMode uint `json:"prediction_mode,omitempty"`
	PredictionProgress uint `json:"prediction_progress,omitempty"`
	ReferenceID string `json:"reference_id,omitempty"`
	ReservationStatus uint `json:"reservation_status,omitempty"`
	StartTime time.Time `json:"start_time,omitempty"`
	Status uint `json:"status,omitempty"`
	StoryEventType uint `json:"story_event_type,omitempty"`
	TargetCpm uint `json:"target_cpm,omitempty"`
	TargetFrequency uint `json:"target_frequency,omitempty"`
	TargetFrequencyResetPeriod uint `json:"target_frequency_reset_period,omitempty"`
	TargetSpec *Targeting `json:"target_spec,omitempty"`
	TimeCreated time.Time `json:"time_created,omitempty"`
	TimeUpdated time.Time `json:"time_updated,omitempty"`
	TimezoneID uint `json:"timezone_id,omitempty"`
	TimezoneName string `json:"timezone_name,omitempty"`
	ToplineID uint `json:"topline_id,omitempty"`
	VideoViewLengthConstraint uint `json:"video_view_length_constraint,omitempty"`
	Viewtag string `json:"viewtag,omitempty"`
}

// ReachFrequencySpec represents the Facebook ReachFrequencySpec object
type ReachFrequencySpec struct {
	Countries []string `json:"countries,omitempty"`
	DefaultCreationData map[string]interface{} `json:"default_creation_data,omitempty"`
	GlobalIoMaxCampaignDuration uint `json:"global_io_max_campaign_duration,omitempty"`
	MaxCampaignDuration map[string]interface{} `json:"max_campaign_duration,omitempty"`
	MaxDaysToFinish map[string]interface{} `json:"max_days_to_finish,omitempty"`
	MaxPauseWithoutPredictionRerun map[string]interface{} `json:"max_pause_without_prediction_rerun,omitempty"`
	MinCampaignDuration map[string]interface{} `json:"min_campaign_duration,omitempty"`
	MinReachLimits map[string]interface{} `json:"min_reach_limits,omitempty"`
}

// Recommendation represents the Facebook Recommendation object
type Recommendation struct {
	CreatedTime time.Time `json:"created_time,omitempty"`
	HasRating bool `json:"has_rating,omitempty"`
	HasReview bool `json:"has_review,omitempty"`
	OpenGraphStory map[string]interface{} `json:"open_graph_story,omitempty"`
	Rating int `json:"rating,omitempty"`
	RecommendationType string `json:"recommendation_type,omitempty"`
	ReviewText string `json:"review_text,omitempty"`
	Reviewer *User `json:"reviewer,omitempty"`
}

// RecommendedIGMedia represents the Facebook RecommendedIGMedia object
type RecommendedIGMedia struct {
	IntentScore float64 `json:"intent_score,omitempty"`
}

// RecommendedPagePost represents the Facebook RecommendedPagePost object
type RecommendedPagePost struct {
	IntentScore float64 `json:"intent_score,omitempty"`
	IsIgMedia bool `json:"is_ig_media,omitempty"`
	PostID string `json:"post_id,omitempty"`
}

// RegionalRegulationIdentities represents the Facebook RegionalRegulationIdentities object
type RegionalRegulationIdentities struct {
	AustraliaFinservBeneficiary string `json:"australia_finserv_beneficiary,omitempty"`
	AustraliaFinservPayer string `json:"australia_finserv_payer,omitempty"`
	IndiaFinservBeneficiary string `json:"india_finserv_beneficiary,omitempty"`
	IndiaFinservPayer string `json:"india_finserv_payer,omitempty"`
	SingaporeUniversalBeneficiary string `json:"singapore_universal_beneficiary,omitempty"`
	SingaporeUniversalPayer string `json:"singapore_universal_payer,omitempty"`
	TaiwanFinservBeneficiary string `json:"taiwan_finserv_beneficiary,omitempty"`
	TaiwanFinservPayer string `json:"taiwan_finserv_payer,omitempty"`
	TaiwanUniversalBeneficiary string `json:"taiwan_universal_beneficiary,omitempty"`
	TaiwanUniversalPayer string `json:"taiwan_universal_payer,omitempty"`
}

// ReportingAudience represents the Facebook ReportingAudience object
type ReportingAudience struct {
	CustomAudiences []*RawCustomAudience `json:"custom_audiences,omitempty"`
	CustomAudiencesURLParamName string `json:"custom_audiences_url_param_name,omitempty"`
	CustomAudiencesURLParamType string `json:"custom_audiences_url_param_type,omitempty"`
}

// ResearchPollStudy represents the Facebook ResearchPollStudy object
type ResearchPollStudy struct {
	Account *AdAccount `json:"account,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
}

// ResellerGuidance represents the Facebook ResellerGuidance object
type ResellerGuidance struct {
	AdAccountFirstSpendDate string `json:"ad_account_first_spend_date,omitempty"`
	AdAccountID string `json:"ad_account_id,omitempty"`
	AdoptedGuidanceL7d []string `json:"adopted_guidance_l7d,omitempty"`
	AdvertiserName string `json:"advertiser_name,omitempty"`
	AttributedToResellerL7d bool `json:"attributed_to_reseller_l7d,omitempty"`
	AvailableGuidance []string `json:"available_guidance,omitempty"`
	GuidanceAdoptionRateL7d float64 `json:"guidance_adoption_rate_l7d,omitempty"`
	NurturedByResellerL7d bool `json:"nurtured_by_reseller_l7d,omitempty"`
	PlanningAgencyName string `json:"planning_agency_name,omitempty"`
	RecommendationTime time.Time `json:"recommendation_time,omitempty"`
	ReportingDs string `json:"reporting_ds,omitempty"`
	Reseller *Business `json:"reseller,omitempty"`
	RevenueL30d float64 `json:"revenue_l30d,omitempty"`
	UltimateAdvertiserName string `json:"ultimate_advertiser_name,omitempty"`
}

// RevSharePolicy represents the Facebook RevSharePolicy object
type RevSharePolicy struct {
	PolicyID string `json:"policy_id,omitempty"`
	PolicyName string `json:"policy_name,omitempty"`
}

// RichMediaElement represents the Facebook RichMediaElement object
type RichMediaElement struct {
	Element map[string]interface{} `json:"element,omitempty"`
	ElementType string `json:"element_type,omitempty"`
	Name string `json:"name,omitempty"`
}

// RightsManagerDataExport represents the Facebook RightsManagerDataExport object
type RightsManagerDataExport struct {
	DownloadUri string `json:"download_uri,omitempty"`
	ExportScope string `json:"export_scope,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	RecordType string `json:"record_type,omitempty"`
	TimeRangeEnd time.Time `json:"time_range_end,omitempty"`
	TimeRangeStart time.Time `json:"time_range_start,omitempty"`
}

// RightsManagerInsights represents the Facebook RightsManagerInsights object
type RightsManagerInsights struct {
	Error string `json:"error,omitempty"`
	ErrorMessage string `json:"error_message,omitempty"`
	Metadata []map[string]map[string]interface{} `json:"metadata,omitempty"`
	Totals []map[string]map[string]interface{} `json:"totals,omitempty"`
	XAxisBreakdown [][]map[string]map[string]interface{} `json:"x_axis_breakdown,omitempty"`
}

// Robot represents the Facebook Robot object
type Robot struct {
	BringupVars []map[string]string `json:"bringup_vars,omitempty"`
	Configurations []map[string]string `json:"configurations,omitempty"`
	DataCenter string `json:"data_center,omitempty"`
	ID string `json:"id,omitempty"`
	InitPos []map[string]float64 `json:"init_pos,omitempty"`
	LastPos []map[string]float64 `json:"last_pos,omitempty"`
	MeetupLinkHash string `json:"meetup_link_hash,omitempty"`
	Suite string `json:"suite,omitempty"`
	TargetMapImageUri string `json:"target_map_image_uri,omitempty"`
	TargetOsImageUri string `json:"target_os_image_uri,omitempty"`
	TargetSwImageUri string `json:"target_sw_image_uri,omitempty"`
	User *User `json:"user,omitempty"`
}

// SalesRightsInventoryManagement represents the Facebook SalesRightsInventoryManagement object
type SalesRightsInventoryManagement struct {
	AvailableImpressions int `json:"available_impressions,omitempty"`
	BookedImpressions int `json:"booked_impressions,omitempty"`
	OverbookedImpressions int `json:"overbooked_impressions,omitempty"`
	SupportedCountries []string `json:"supported_countries,omitempty"`
	TotalImpressions int `json:"total_impressions,omitempty"`
	UnavailableImpressions int `json:"unavailable_impressions,omitempty"`
	WarningMessages []string `json:"warning_messages,omitempty"`
}

// SavedAudience represents the Facebook SavedAudience object
type SavedAudience struct {
	Account *AdAccount `json:"account,omitempty"`
	ApproximateCountLowerBound int `json:"approximate_count_lower_bound,omitempty"`
	ApproximateCountUpperBound int `json:"approximate_count_upper_bound,omitempty"`
	DeleteTime int `json:"delete_time,omitempty"`
	Description string `json:"description,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	OperationStatus *CustomAudienceStatus `json:"operation_status,omitempty"`
	OwnerBusiness *Business `json:"owner_business,omitempty"`
	PageDeletionMarkedDeleteTime int `json:"page_deletion_marked_delete_time,omitempty"`
	PermissionForActions *AudiencePermissionForActions `json:"permission_for_actions,omitempty"`
	RunStatus string `json:"run_status,omitempty"`
	SentenceLines interface{} `json:"sentence_lines,omitempty"`
	Targeting *Targeting `json:"targeting,omitempty"`
	TimeCreated time.Time `json:"time_created,omitempty"`
	TimeUpdated time.Time `json:"time_updated,omitempty"`
}

// SavedMessageResponse represents the Facebook SavedMessageResponse object
type SavedMessageResponse struct {
	ID string `json:"id,omitempty"`
	Image string `json:"image,omitempty"`
	IsEnabled bool `json:"is_enabled,omitempty"`
	Message string `json:"message,omitempty"`
	Title string `json:"title,omitempty"`
}

// ScheduledPost represents the Facebook ScheduledPost object
type ScheduledPost struct {
	AdminCreator *User `json:"admin_creator,omitempty"`
	CreationTime time.Time `json:"creation_time,omitempty"`
	FeedAudienceDescription string `json:"feed_audience_description,omitempty"`
	FeedTargeting *Targeting `json:"feed_targeting,omitempty"`
	ID string `json:"id,omitempty"`
	IsPostInGoodState bool `json:"is_post_in_good_state,omitempty"`
	Message string `json:"message,omitempty"`
	ModifiedTime time.Time `json:"modified_time,omitempty"`
	OgActionSummary string `json:"og_action_summary,omitempty"`
	PermalinkURL string `json:"permalink_url,omitempty"`
	Place *Place `json:"place,omitempty"`
	PrivacyDescription string `json:"privacy_description,omitempty"`
	ScheduledFailureNotice string `json:"scheduled_failure_notice,omitempty"`
	ScheduledPublishTime time.Time `json:"scheduled_publish_time,omitempty"`
	StoryToken string `json:"story_token,omitempty"`
	Thumbnail string `json:"thumbnail,omitempty"`
	VideoID string `json:"video_id,omitempty"`
}

// ScimCompanyUserPhoneNumber represents the Facebook ScimCompanyUserPhoneNumber object
type ScimCompanyUserPhoneNumber struct {
	Number string `json:"number,omitempty"`
	Primary bool `json:"primary,omitempty"`
	Type string `json:"type,omitempty"`
}

// SecuritySettings represents the Facebook SecuritySettings object
type SecuritySettings struct {
}

// ShadowIGHashtag represents the Facebook ShadowIGHashtag object
type ShadowIGHashtag struct {
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
}

// ShadowIGMediaBuilder represents the Facebook ShadowIGMediaBuilder object
type ShadowIGMediaBuilder struct {
	CopyrightCheckStatus *IGVideoCopyrightCheckStatus `json:"copyright_check_status,omitempty"`
	ID string `json:"id,omitempty"`
	Status string `json:"status,omitempty"`
	StatusCode string `json:"status_code,omitempty"`
	VideoStatus *IGResumableVideoUploadStatus `json:"video_status,omitempty"`
}

// ShadowIGMediaCollaborators represents the Facebook ShadowIGMediaCollaborators object
type ShadowIGMediaCollaborators struct {
	ID string `json:"id,omitempty"`
	InviteStatus string `json:"invite_status,omitempty"`
	Username string `json:"username,omitempty"`
}

// ShadowIGMediaProductTags represents the Facebook ShadowIGMediaProductTags object
type ShadowIGMediaProductTags struct {
	ImageURL string `json:"image_url,omitempty"`
	IsCheckout bool `json:"is_checkout,omitempty"`
	MerchantID int `json:"merchant_id,omitempty"`
	Name string `json:"name,omitempty"`
	PriceString string `json:"price_string,omitempty"`
	ProductID int `json:"product_id,omitempty"`
	ReviewStatus string `json:"review_status,omitempty"`
	StrippedPriceString string `json:"stripped_price_string,omitempty"`
	StrippedSalePriceString string `json:"stripped_sale_price_string,omitempty"`
	X float64 `json:"x,omitempty"`
	Y float64 `json:"y,omitempty"`
}

// ShadowIGUserCTXPartnerAppWelcomeMessageFlow represents the Facebook ShadowIGUserCTXPartnerAppWelcomeMessageFlow object
type ShadowIGUserCTXPartnerAppWelcomeMessageFlow struct {
	CompatiblePlatforms []string `json:"compatible_platforms,omitempty"`
	EligiblePlatforms []string `json:"eligible_platforms,omitempty"`
	ID string `json:"id,omitempty"`
	IsIgOnlyFlow bool `json:"is_ig_only_flow,omitempty"`
	IsUsedInAd bool `json:"is_used_in_ad,omitempty"`
	LastUpdateTime time.Time `json:"last_update_time,omitempty"`
	Name string `json:"name,omitempty"`
	WelcomeMessageFlow string `json:"welcome_message_flow,omitempty"`
}

// ShadowIGUserCatalogProductSearch represents the Facebook ShadowIGUserCatalogProductSearch object
type ShadowIGUserCatalogProductSearch struct {
	ImageURL string `json:"image_url,omitempty"`
	IsCheckoutFlow bool `json:"is_checkout_flow,omitempty"`
	MerchantID int `json:"merchant_id,omitempty"`
	ProductID int `json:"product_id,omitempty"`
	ProductName string `json:"product_name,omitempty"`
	ProductVariants []*ShadowIGUserCatalogProductVariant `json:"product_variants,omitempty"`
	RetailerID string `json:"retailer_id,omitempty"`
	ReviewStatus string `json:"review_status,omitempty"`
}

// ShadowIGUserCatalogProductVariant represents the Facebook ShadowIGUserCatalogProductVariant object
type ShadowIGUserCatalogProductVariant struct {
	ProductID int `json:"product_id,omitempty"`
	VariantName string `json:"variant_name,omitempty"`
}

// ShadowIGUserPartnershipAdsMediaErrors represents the Facebook ShadowIGUserPartnershipAdsMediaErrors object
type ShadowIGUserPartnershipAdsMediaErrors struct {
	AdCode string `json:"ad_code,omitempty"`
	ErrorCodes string `json:"error_codes,omitempty"`
	Errors []string `json:"errors,omitempty"`
	Permalink string `json:"permalink,omitempty"`
}

// Shop represents the Facebook Shop object
type Shop struct {
	CommerceMerchantSettings *CommerceMerchantSettings `json:"commerce_merchant_settings,omitempty"`
	FbSalesChannel map[string]interface{} `json:"fb_sales_channel,omitempty"`
	ID string `json:"id,omitempty"`
	IgSalesChannel map[string]interface{} `json:"ig_sales_channel,omitempty"`
	IsOnsiteEnabled bool `json:"is_onsite_enabled,omitempty"`
	ShopStatus string `json:"shop_status,omitempty"`
	Workspace map[string]interface{} `json:"workspace,omitempty"`
}

// SignalsIWLExtractor represents the Facebook SignalsIWLExtractor object
type SignalsIWLExtractor struct {
	DomainUri string `json:"domain_uri,omitempty"`
	EventType string `json:"event_type,omitempty"`
	ExtractorType string `json:"extractor_type,omitempty"`
	ID string `json:"id,omitempty"`
}

// SingleOwnerAdditionalProfile represents the Facebook SingleOwnerAdditionalProfile object
type SingleOwnerAdditionalProfile struct {
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	UserName string `json:"user_name,omitempty"`
}

// SiteLink represents the Facebook SiteLink object
type SiteLink struct {
	ID string `json:"id,omitempty"`
	LinkImageHash string `json:"link_image_hash,omitempty"`
	LinkTitle string `json:"link_title,omitempty"`
	LinkType string `json:"link_type,omitempty"`
	LinkURL string `json:"link_url,omitempty"`
}

// SlicedEventSourceGroup represents the Facebook SlicedEventSourceGroup object
type SlicedEventSourceGroup struct {
	EventSourceGroup *EventSourceGroup `json:"event_source_group,omitempty"`
	Filter string `json:"filter,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
}

// SmartPixelInsights represents the Facebook SmartPixelInsights object
type SmartPixelInsights struct {
	Source string `json:"source,omitempty"`
	Stats []map[string]interface{} `json:"stats,omitempty"`
}

// SocialWifiSite represents the Facebook SocialWifiSite object
type SocialWifiSite struct {
	ID string `json:"id,omitempty"`
}

// SplitTestWinner represents the Facebook SplitTestWinner object
type SplitTestWinner struct {
	AdObjectLevel string `json:"ad_object_level,omitempty"`
	Confidences []map[string]float64 `json:"confidences,omitempty"`
	WinnerAdObjectID string `json:"winner_ad_object_id,omitempty"`
}

// Status represents the Facebook Status object
type Status struct {
	Event *Event `json:"event,omitempty"`
	From map[string]interface{} `json:"from,omitempty"`
	ID string `json:"id,omitempty"`
	Message string `json:"message,omitempty"`
	Place *Place `json:"place,omitempty"`
	UpdatedTime time.Time `json:"updated_time,omitempty"`
}

// StoreCatalogSettings represents the Facebook StoreCatalogSettings object
type StoreCatalogSettings struct {
	ID string `json:"id,omitempty"`
	Page *Page `json:"page,omitempty"`
}

// StoreLocation represents the Facebook StoreLocation object
type StoreLocation struct {
	FullAddress string `json:"full_address,omitempty"`
	Hours map[string]interface{} `json:"hours,omitempty"`
	ID string `json:"id,omitempty"`
	PhoneNumber string `json:"phone_number,omitempty"`
	PickupOptions []string `json:"pickup_options,omitempty"`
	PriceRange string `json:"price_range,omitempty"`
	StoreCode string `json:"store_code,omitempty"`
	ZipCode string `json:"zip_code,omitempty"`
}

// Stories represents the Facebook Stories object
type Stories struct {
	CreationTime string `json:"creation_time,omitempty"`
	MediaID string `json:"media_id,omitempty"`
	MediaType string `json:"media_type,omitempty"`
	PostID string `json:"post_id,omitempty"`
	Status string `json:"status,omitempty"`
	URL string `json:"url,omitempty"`
}

// StreamFilter represents the Facebook StreamFilter object
type StreamFilter struct {
	FilterKey string `json:"filter_key,omitempty"`
	Name string `json:"name,omitempty"`
	Type string `json:"type,omitempty"`
}

// SystemUser represents the Facebook SystemUser object
type SystemUser struct {
	CreatedBy *User `json:"created_by,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	FinancePermission string `json:"finance_permission,omitempty"`
	ID string `json:"id,omitempty"`
	IpPermission string `json:"ip_permission,omitempty"`
	Name string `json:"name,omitempty"`
}

// Tab represents the Facebook Tab object
type Tab struct {
	Application *Application `json:"application,omitempty"`
	CustomImageURL string `json:"custom_image_url,omitempty"`
	CustomName string `json:"custom_name,omitempty"`
	ID string `json:"id,omitempty"`
	ImageURL string `json:"image_url,omitempty"`
	IsNonConnectionLandingTab bool `json:"is_non_connection_landing_tab,omitempty"`
	IsPermanent bool `json:"is_permanent,omitempty"`
	Link string `json:"link,omitempty"`
	Name string `json:"name,omitempty"`
	Position uint `json:"position,omitempty"`
}

// TaggableSubject represents the Facebook TaggableSubject object
type TaggableSubject struct {
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
}

// Targeting represents the Facebook Targeting object
type Targeting struct {
	AdgroupID string `json:"adgroup_id,omitempty"`
	AgeMax uint `json:"age_max,omitempty"`
	AgeMin uint `json:"age_min,omitempty"`
	AgeRange []uint `json:"age_range,omitempty"`
	AlternateAutoTargetingOption string `json:"alternate_auto_targeting_option,omitempty"`
	AppInstallState string `json:"app_install_state,omitempty"`
	AudienceNetworkPositions []string `json:"audience_network_positions,omitempty"`
	Behaviors []*IDName `json:"behaviors,omitempty"`
	BrandSafetyContentFilterLevels []string `json:"brand_safety_content_filter_levels,omitempty"`
	CatalogBasedTargeting *CatalogBasedTargeting `json:"catalog_based_targeting,omitempty"`
	Cities []*IDName `json:"cities,omitempty"`
	CollegeYears []uint `json:"college_years,omitempty"`
	Connections []*ConnectionsTargeting `json:"connections,omitempty"`
	ContextualTargetingCategories []*IDName `json:"contextual_targeting_categories,omitempty"`
	Countries []string `json:"countries,omitempty"`
	Country []string `json:"country,omitempty"`
	CountryGroups []string `json:"country_groups,omitempty"`
	CustomAudiences []*RawCustomAudience `json:"custom_audiences,omitempty"`
	DevicePlatforms []TargetingDevicePlatforms `json:"device_platforms,omitempty"`
	DirectInstallDevices bool `json:"direct_install_devices,omitempty"`
	DynamicAudienceIDs []string `json:"dynamic_audience_ids,omitempty"`
	EducationMajors []*IDName `json:"education_majors,omitempty"`
	EducationSchools []*IDName `json:"education_schools,omitempty"`
	EducationStatuses []uint `json:"education_statuses,omitempty"`
	EffectiveAudienceNetworkPositions []string `json:"effective_audience_network_positions,omitempty"`
	EffectiveDevicePlatforms []TargetingEffectiveDevicePlatforms `json:"effective_device_platforms,omitempty"`
	EffectiveFacebookPositions []string `json:"effective_facebook_positions,omitempty"`
	EffectiveInstagramPositions []string `json:"effective_instagram_positions,omitempty"`
	EffectiveMessengerPositions []string `json:"effective_messenger_positions,omitempty"`
	EffectivePublisherPlatforms []string `json:"effective_publisher_platforms,omitempty"`
	EffectiveThreadsPositions []string `json:"effective_threads_positions,omitempty"`
	EngagementSpecs []*TargetingDynamicRule `json:"engagement_specs,omitempty"`
	EthnicAffinity []*IDName `json:"ethnic_affinity,omitempty"`
	ExcludeReachedSince []string `json:"exclude_reached_since,omitempty"`
	ExcludedBrandSafetyContentTypes []string `json:"excluded_brand_safety_content_types,omitempty"`
	ExcludedConnections []*ConnectionsTargeting `json:"excluded_connections,omitempty"`
	ExcludedCustomAudiences []*RawCustomAudience `json:"excluded_custom_audiences,omitempty"`
	ExcludedDynamicAudienceIDs []string `json:"excluded_dynamic_audience_ids,omitempty"`
	ExcludedEngagementSpecs []*TargetingDynamicRule `json:"excluded_engagement_specs,omitempty"`
	ExcludedGeoLocations *TargetingGeoLocation `json:"excluded_geo_locations,omitempty"`
	ExcludedMobileDeviceModel []string `json:"excluded_mobile_device_model,omitempty"`
	ExcludedProductAudienceSpecs []*TargetingProductAudienceSpec `json:"excluded_product_audience_specs,omitempty"`
	ExcludedPublisherCategories []string `json:"excluded_publisher_categories,omitempty"`
	ExcludedPublisherListIDs []string `json:"excluded_publisher_list_ids,omitempty"`
	ExcludedUserDevice []string `json:"excluded_user_device,omitempty"`
	Exclusions *FlexibleTargeting `json:"exclusions,omitempty"`
	FacebookPositions []string `json:"facebook_positions,omitempty"`
	FamilyStatuses []*IDName `json:"family_statuses,omitempty"`
	FbDealID string `json:"fb_deal_id,omitempty"`
	FlexibleSpec []*FlexibleTargeting `json:"flexible_spec,omitempty"`
	FriendsOfConnections []*ConnectionsTargeting `json:"friends_of_connections,omitempty"`
	Genders []uint `json:"genders,omitempty"`
	Generation []*IDName `json:"generation,omitempty"`
	GeoLocations *TargetingGeoLocation `json:"geo_locations,omitempty"`
	HomeOwnership []*IDName `json:"home_ownership,omitempty"`
	HomeType []*IDName `json:"home_type,omitempty"`
	HomeValue []*IDName `json:"home_value,omitempty"`
	HouseholdComposition []*IDName `json:"household_composition,omitempty"`
	Income []*IDName `json:"income,omitempty"`
	Industries []*IDName `json:"industries,omitempty"`
	InstagramPositions []string `json:"instagram_positions,omitempty"`
	InstreamVideoSkippableExcluded bool `json:"instream_video_skippable_excluded,omitempty"`
	InterestedIn []uint `json:"interested_in,omitempty"`
	Interests []*IDName `json:"interests,omitempty"`
	IsWhatsappDestinationAd bool `json:"is_whatsapp_destination_ad,omitempty"`
	Keywords []string `json:"keywords,omitempty"`
	LifeEvents []*IDName `json:"life_events,omitempty"`
	Locales []uint `json:"locales,omitempty"`
	MessengerPositions []string `json:"messenger_positions,omitempty"`
	Moms []*IDName `json:"moms,omitempty"`
	NetWorth []*IDName `json:"net_worth,omitempty"`
	OfficeType []*IDName `json:"office_type,omitempty"`
	PlacePageSetIDs []string `json:"place_page_set_ids,omitempty"`
	PoliticalViews []uint `json:"political_views,omitempty"`
	Politics []*IDName `json:"politics,omitempty"`
	ProductAudienceSpecs []*TargetingProductAudienceSpec `json:"product_audience_specs,omitempty"`
	ProspectingAudience *TargetingProspectingAudience `json:"prospecting_audience,omitempty"`
	PublisherPlatforms []string `json:"publisher_platforms,omitempty"`
	Radius string `json:"radius,omitempty"`
	Regions []*IDName `json:"regions,omitempty"`
	RelationshipStatuses []uint `json:"relationship_statuses,omitempty"`
	SiteCategory []string `json:"site_category,omitempty"`
	TargetingAutomation *TargetingAutomation `json:"targeting_automation,omitempty"`
	TargetingOptimization string `json:"targeting_optimization,omitempty"`
	TargetingRelaxationTypes *TargetingRelaxation `json:"targeting_relaxation_types,omitempty"`
	ThreadsPositions []string `json:"threads_positions,omitempty"`
	UserAdclusters []*IDName `json:"user_adclusters,omitempty"`
	UserDevice []string `json:"user_device,omitempty"`
	UserEvent []uint `json:"user_event,omitempty"`
	UserOs []string `json:"user_os,omitempty"`
	WirelessCarrier []string `json:"wireless_carrier,omitempty"`
	WorkEmployers []*IDName `json:"work_employers,omitempty"`
	WorkPositions []*IDName `json:"work_positions,omitempty"`
	Zips []string `json:"zips,omitempty"`
}

// TargetingAutomation represents the Facebook TargetingAutomation object
type TargetingAutomation struct {
	AdvantageAudience uint `json:"advantage_audience,omitempty"`
	IndividualSetting map[string]interface{} `json:"individual_setting,omitempty"`
	SharedAudiences uint `json:"shared_audiences,omitempty"`
	ValueExpression uint `json:"value_expression,omitempty"`
}

// TargetingDynamicRule represents the Facebook TargetingDynamicRule object
type TargetingDynamicRule struct {
	ActionType string `json:"action.type,omitempty"`
	AdGroupID string `json:"ad_group_id,omitempty"`
	CampaignGroupID string `json:"campaign_group_id,omitempty"`
	CampaignID string `json:"campaign_id,omitempty"`
	ImpressionCount string `json:"impression_count,omitempty"`
	PageID string `json:"page_id,omitempty"`
	Post string `json:"post,omitempty"`
	RetentionSeconds string `json:"retention_seconds,omitempty"`
}

// TargetingGeoLocation represents the Facebook TargetingGeoLocation object
type TargetingGeoLocation struct {
	Cities []*TargetingGeoLocationCity `json:"cities,omitempty"`
	Countries []string `json:"countries,omitempty"`
	CountryGroups []string `json:"country_groups,omitempty"`
	CustomLocations []*TargetingGeoLocationCustomLocation `json:"custom_locations,omitempty"`
	ElectoralDistricts []*TargetingGeoLocationElectoralDistrict `json:"electoral_districts,omitempty"`
	GeoMarkets []*TargetingGeoLocationMarket `json:"geo_markets,omitempty"`
	LargeGeoAreas []*TargetingGeoLocationGeoEntities `json:"large_geo_areas,omitempty"`
	LocationClusterIDs []*TargetingGeoLocationLocationCluster `json:"location_cluster_ids,omitempty"`
	LocationTypes []string `json:"location_types,omitempty"`
	MediumGeoAreas []*TargetingGeoLocationGeoEntities `json:"medium_geo_areas,omitempty"`
	MetroAreas []*TargetingGeoLocationGeoEntities `json:"metro_areas,omitempty"`
	Neighborhoods []*TargetingGeoLocationGeoEntities `json:"neighborhoods,omitempty"`
	Places []*TargetingGeoLocationPlace `json:"places,omitempty"`
	PoliticalDistricts []*TargetingGeoLocationPoliticalDistrict `json:"political_districts,omitempty"`
	Regions []*TargetingGeoLocationRegion `json:"regions,omitempty"`
	SmallGeoAreas []*TargetingGeoLocationGeoEntities `json:"small_geo_areas,omitempty"`
	Subcities []*TargetingGeoLocationGeoEntities `json:"subcities,omitempty"`
	Subneighborhoods []*TargetingGeoLocationGeoEntities `json:"subneighborhoods,omitempty"`
	Zips []*TargetingGeoLocationZip `json:"zips,omitempty"`
}

// TargetingGeoLocationCity represents the Facebook TargetingGeoLocationCity object
type TargetingGeoLocationCity struct {
	Country string `json:"country,omitempty"`
	DistanceUnit string `json:"distance_unit,omitempty"`
	Key string `json:"key,omitempty"`
	Name string `json:"name,omitempty"`
	Radius uint `json:"radius,omitempty"`
	Region string `json:"region,omitempty"`
	RegionID string `json:"region_id,omitempty"`
}

// TargetingGeoLocationCustomLocation represents the Facebook TargetingGeoLocationCustomLocation object
type TargetingGeoLocationCustomLocation struct {
	AddressString string `json:"address_string,omitempty"`
	Country string `json:"country,omitempty"`
	CountryGroup string `json:"country_group,omitempty"`
	CustomType string `json:"custom_type,omitempty"`
	DistanceUnit string `json:"distance_unit,omitempty"`
	Key string `json:"key,omitempty"`
	Latitude float64 `json:"latitude,omitempty"`
	Longitude float64 `json:"longitude,omitempty"`
	MaxPopulation int `json:"max_population,omitempty"`
	MinPopulation int `json:"min_population,omitempty"`
	Name string `json:"name,omitempty"`
	PrimaryCityID int `json:"primary_city_id,omitempty"`
	Radius float64 `json:"radius,omitempty"`
	RegionID int `json:"region_id,omitempty"`
}

// TargetingGeoLocationElectoralDistrict represents the Facebook TargetingGeoLocationElectoralDistrict object
type TargetingGeoLocationElectoralDistrict struct {
	Country string `json:"country,omitempty"`
	DeprecationCode string `json:"deprecation_code,omitempty"`
	ElectoralDistrict string `json:"electoral_district,omitempty"`
	Key string `json:"key,omitempty"`
	Name string `json:"name,omitempty"`
}

// TargetingGeoLocationGeoEntities represents the Facebook TargetingGeoLocationGeoEntities object
type TargetingGeoLocationGeoEntities struct {
	Country string `json:"country,omitempty"`
	Key string `json:"key,omitempty"`
	Name string `json:"name,omitempty"`
	Region string `json:"region,omitempty"`
	RegionID string `json:"region_id,omitempty"`
}

// TargetingGeoLocationLocationCluster represents the Facebook TargetingGeoLocationLocationCluster object
type TargetingGeoLocationLocationCluster struct {
	Key int `json:"key,omitempty"`
}

// TargetingGeoLocationLocationExpansion represents the Facebook TargetingGeoLocationLocationExpansion object
type TargetingGeoLocationLocationExpansion struct {
	Allowed bool `json:"allowed,omitempty"`
	Intent string `json:"intent,omitempty"`
}

// TargetingGeoLocationMarket represents the Facebook TargetingGeoLocationMarket object
type TargetingGeoLocationMarket struct {
	Country string `json:"country,omitempty"`
	Key string `json:"key,omitempty"`
	MarketType string `json:"market_type,omitempty"`
	Name string `json:"name,omitempty"`
}

// TargetingGeoLocationPlace represents the Facebook TargetingGeoLocationPlace object
type TargetingGeoLocationPlace struct {
	Country string `json:"country,omitempty"`
	DistanceUnit string `json:"distance_unit,omitempty"`
	Key string `json:"key,omitempty"`
	Latitude float64 `json:"latitude,omitempty"`
	Longitude float64 `json:"longitude,omitempty"`
	Name string `json:"name,omitempty"`
	PrimaryCityID int `json:"primary_city_id,omitempty"`
	Radius float64 `json:"radius,omitempty"`
	RegionID int `json:"region_id,omitempty"`
}

// TargetingGeoLocationPoliticalDistrict represents the Facebook TargetingGeoLocationPoliticalDistrict object
type TargetingGeoLocationPoliticalDistrict struct {
	Country string `json:"country,omitempty"`
	Key string `json:"key,omitempty"`
	Name string `json:"name,omitempty"`
	PoliticalDistrict string `json:"political_district,omitempty"`
}

// TargetingGeoLocationRegion represents the Facebook TargetingGeoLocationRegion object
type TargetingGeoLocationRegion struct {
	Country string `json:"country,omitempty"`
	Key string `json:"key,omitempty"`
	Name string `json:"name,omitempty"`
}

// TargetingGeoLocationZip represents the Facebook TargetingGeoLocationZip object
type TargetingGeoLocationZip struct {
	Country string `json:"country,omitempty"`
	Key string `json:"key,omitempty"`
	Name string `json:"name,omitempty"`
	PrimaryCityID int `json:"primary_city_id,omitempty"`
	RegionID int `json:"region_id,omitempty"`
}

// TargetingMarketingMessageChannels represents the Facebook TargetingMarketingMessageChannels object
type TargetingMarketingMessageChannels struct {
	Whatsapp *IDName `json:"whatsapp,omitempty"`
}

// TargetingProductAudienceSpec represents the Facebook TargetingProductAudienceSpec object
type TargetingProductAudienceSpec struct {
	Exclusions []*TargetingProductAudienceSubSpec `json:"exclusions,omitempty"`
	Inclusions []*TargetingProductAudienceSubSpec `json:"inclusions,omitempty"`
	ProductSetID string `json:"product_set_id,omitempty"`
}

// TargetingProductAudienceSubSpec represents the Facebook TargetingProductAudienceSubSpec object
type TargetingProductAudienceSubSpec struct {
	RetentionSeconds string `json:"retention_seconds,omitempty"`
	Rule string `json:"rule,omitempty"`
}

// TargetingProspectingAudience represents the Facebook TargetingProspectingAudience object
type TargetingProspectingAudience struct {
	Sources []map[string]interface{} `json:"sources,omitempty"`
}

// TargetingRelaxation represents the Facebook TargetingRelaxation object
type TargetingRelaxation struct {
	CustomAudience uint `json:"custom_audience,omitempty"`
	Lookalike uint `json:"lookalike,omitempty"`
}

// TargetingSentenceLine represents the Facebook TargetingSentenceLine object
type TargetingSentenceLine struct {
	ID string `json:"id,omitempty"`
	Params *Targeting `json:"params,omitempty"`
	Targetingsentencelines interface{} `json:"targetingsentencelines,omitempty"`
}

// TargetingSubscriberUniverse represents the Facebook TargetingSubscriberUniverse object
type TargetingSubscriberUniverse struct {
	MessengerSubscriberSource *IDName `json:"messenger_subscriber_source,omitempty"`
	WhatsappSubscriberPool *IDName `json:"whatsapp_subscriber_pool,omitempty"`
	WhatsappSubscriberSource *IDName `json:"whatsapp_subscriber_source,omitempty"`
}

// TextWithEntities represents the Facebook TextWithEntities object
type TextWithEntities struct {
	Text string `json:"text,omitempty"`
}

// ThirdPartyMeasurementReportDataset represents the Facebook ThirdPartyMeasurementReportDataset object
type ThirdPartyMeasurementReportDataset struct {
	Category string `json:"category,omitempty"`
	ID string `json:"id,omitempty"`
	Partner *Business `json:"partner,omitempty"`
	Product string `json:"product,omitempty"`
	Schema []map[string]interface{} `json:"schema,omitempty"`
}

// ThirdPartyPartnerLiftRequest represents the Facebook ThirdPartyPartnerLiftRequest object
type ThirdPartyPartnerLiftRequest struct {
	AdEntities []string `json:"ad_entities,omitempty"`
	Country string `json:"country,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	Description string `json:"description,omitempty"`
	HoldoutSize float64 `json:"holdout_size,omitempty"`
	ID string `json:"id,omitempty"`
	LegacyAdsDataPartnerID string `json:"legacy_ads_data_partner_id,omitempty"`
	LegacyAdsDataPartnerName string `json:"legacy_ads_data_partner_name,omitempty"`
	ModifiedTime time.Time `json:"modified_time,omitempty"`
	OwnerInstanceID string `json:"owner_instance_id,omitempty"`
	PartnerHouseholdGraphDatasetID string `json:"partner_household_graph_dataset_id,omitempty"`
	Region string `json:"region,omitempty"`
	Status ThirdpartypartnerliftrequestStatus `json:"status,omitempty"`
	StudyCells []string `json:"study_cells,omitempty"`
	StudyEndTime time.Time `json:"study_end_time,omitempty"`
	StudyStartTime time.Time `json:"study_start_time,omitempty"`
}

// ThirdPartyPartnerPanelRequest represents the Facebook ThirdPartyPartnerPanelRequest object
type ThirdPartyPartnerPanelRequest struct {
	AdentitiesIDs []string `json:"adentities_ids,omitempty"`
	Country string `json:"country,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	Description string `json:"description,omitempty"`
	ID string `json:"id,omitempty"`
	ModifiedTime time.Time `json:"modified_time,omitempty"`
	OwnerInstanceID string `json:"owner_instance_id,omitempty"`
	OwnerPanelID string `json:"owner_panel_id,omitempty"`
	OwnerPanelName string `json:"owner_panel_name,omitempty"`
	Status ThirdpartypartnerpanelrequestStatus `json:"status,omitempty"`
	StudyEndTime time.Time `json:"study_end_time,omitempty"`
	StudyStartTime time.Time `json:"study_start_time,omitempty"`
	StudyType ThirdpartypartnerpanelrequestStudyType `json:"study_type,omitempty"`
}

// ThirdPartyPartnerPanelScheduled represents the Facebook ThirdPartyPartnerPanelScheduled object
type ThirdPartyPartnerPanelScheduled struct {
	AdentitiesIDs []string `json:"adentities_ids,omitempty"`
	Cadence string `json:"cadence,omitempty"`
	Country string `json:"country,omitempty"`
	CreatedTime time.Time `json:"created_time,omitempty"`
	Description string `json:"description,omitempty"`
	EndTime time.Time `json:"end_time,omitempty"`
	ID string `json:"id,omitempty"`
	ModifiedTime time.Time `json:"modified_time,omitempty"`
	OwnerInstanceID string `json:"owner_instance_id,omitempty"`
	OwnerPanelID string `json:"owner_panel_id,omitempty"`
	OwnerPanelName string `json:"owner_panel_name,omitempty"`
	StartTime time.Time `json:"start_time,omitempty"`
	Status ThirdpartypartnerpanelscheduledStatus `json:"status,omitempty"`
	StudyType ThirdpartypartnerpanelscheduledStudyType `json:"study_type,omitempty"`
}

// ThirdPartyPartnerViewabilityRequest represents the Facebook ThirdPartyPartnerViewabilityRequest object
type ThirdPartyPartnerViewabilityRequest struct {
	CreatedTime time.Time `json:"created_time,omitempty"`
	Description string `json:"description,omitempty"`
	Ds string `json:"ds,omitempty"`
	Hour time.Time `json:"hour,omitempty"`
	ID string `json:"id,omitempty"`
	Metric ThirdpartypartnerviewabilityrequestMetric `json:"metric,omitempty"`
	ModifiedTime time.Time `json:"modified_time,omitempty"`
	OwnerInstanceID string `json:"owner_instance_id,omitempty"`
	Platform ThirdpartypartnerviewabilityrequestPlatform `json:"platform,omitempty"`
	Status ThirdpartypartnerviewabilityrequestStatus `json:"status,omitempty"`
	TotalFileCount uint `json:"total_file_count,omitempty"`
}

// ThreadsUser represents the Facebook ThreadsUser object
type ThreadsUser struct {
	ThreadsUserID string `json:"threads_user_id,omitempty"`
	ThreadsUserProfilePic string `json:"threads_user_profile_pic,omitempty"`
}

// TimeSuggestion represents the Facebook TimeSuggestion object
type TimeSuggestion struct {
	HighDemandPeriods []map[string]interface{} `json:"high_demand_periods,omitempty"`
	IsEnabled bool `json:"is_enabled,omitempty"`
}

// TimezoneOffset represents the Facebook TimezoneOffset object
type TimezoneOffset struct {
	Abbr string `json:"abbr,omitempty"`
	Isdst bool `json:"isdst,omitempty"`
	Offset int `json:"offset,omitempty"`
	Time string `json:"time,omitempty"`
	Ts uint `json:"ts,omitempty"`
}

// TrackingAndConversionWithDefaults represents the Facebook TrackingAndConversionWithDefaults object
type TrackingAndConversionWithDefaults struct {
	CustomConversion []map[string]interface{} `json:"custom_conversion,omitempty"`
	CustomTracking []map[string]interface{} `json:"custom_tracking,omitempty"`
	DefaultConversion []map[string]interface{} `json:"default_conversion,omitempty"`
	DefaultTracking []map[string]interface{} `json:"default_tracking,omitempty"`
}

// TransactableItem represents the Facebook TransactableItem object
type TransactableItem struct {
	ActionTitle string `json:"action_title,omitempty"`
	Applinks *CatalogItemAppLinks `json:"applinks,omitempty"`
	CategorySpecificFields *CatalogSubVerticalList `json:"category_specific_fields,omitempty"`
	Currency string `json:"currency,omitempty"`
	Description string `json:"description,omitempty"`
	DurationTime uint `json:"duration_time,omitempty"`
	DurationType string `json:"duration_type,omitempty"`
	ID string `json:"id,omitempty"`
	ImageFetchStatus TransactableitemImageFetchStatus `json:"image_fetch_status,omitempty"`
	Images []string `json:"images,omitempty"`
	OrderIndex uint `json:"order_index,omitempty"`
	Price string `json:"price,omitempty"`
	PriceType string `json:"price_type,omitempty"`
	SanitizedImages []string `json:"sanitized_images,omitempty"`
	SessionType string `json:"session_type,omitempty"`
	TimePaddingAfterEnd uint `json:"time_padding_after_end,omitempty"`
	Title string `json:"title,omitempty"`
	TransactableItemID string `json:"transactable_item_id,omitempty"`
	URL string `json:"url,omitempty"`
	Visibility TransactableitemVisibility `json:"visibility,omitempty"`
}

// Transaction represents the Facebook Transaction object
type Transaction struct {
	AccountID string `json:"account_id,omitempty"`
	AppAmount map[string]interface{} `json:"app_amount,omitempty"`
	BillingEndTime uint `json:"billing_end_time,omitempty"`
	BillingReason string `json:"billing_reason,omitempty"`
	BillingStartTime uint `json:"billing_start_time,omitempty"`
	CardChargeMode uint `json:"card_charge_mode,omitempty"`
	ChargeType string `json:"charge_type,omitempty"`
	CheckoutCampaignGroupID string `json:"checkout_campaign_group_id,omitempty"`
	CredentialID string `json:"credential_id,omitempty"`
	FaturaID uint `json:"fatura_id,omitempty"`
	ID string `json:"id,omitempty"`
	IsBusinessEcCharge bool `json:"is_business_ec_charge,omitempty"`
	IsFundingEvent bool `json:"is_funding_event,omitempty"`
	PaymentOption string `json:"payment_option,omitempty"`
	ProductType TransactionProductType `json:"product_type,omitempty"`
	ProviderAmount map[string]interface{} `json:"provider_amount,omitempty"`
	Status string `json:"status,omitempty"`
	Time uint `json:"time,omitempty"`
	TrackingID string `json:"tracking_id,omitempty"`
	TransactionType string `json:"transaction_type,omitempty"`
	TxType uint `json:"tx_type,omitempty"`
	VatInvoiceID string `json:"vat_invoice_id,omitempty"`
}

// URL represents the Facebook URL object
type URL struct {
	Engagement map[string]interface{} `json:"engagement,omitempty"`
	ID string `json:"id,omitempty"`
	OgObject map[string]interface{} `json:"og_object,omitempty"`
	OwnershipPermissions map[string]interface{} `json:"ownership_permissions,omitempty"`
	Scopes map[string]interface{} `json:"scopes,omitempty"`
}

// UnifiedThread represents the Facebook UnifiedThread object
type UnifiedThread struct {
	CanReply bool `json:"can_reply,omitempty"`
	Folder string `json:"folder,omitempty"`
	FormerParticipants map[string]interface{} `json:"former_participants,omitempty"`
	ID string `json:"id,omitempty"`
	IsSubscribed bool `json:"is_subscribed,omitempty"`
	Link string `json:"link,omitempty"`
	LinkedGroup *Group `json:"linked_group,omitempty"`
	MessageCount int `json:"message_count,omitempty"`
	Name string `json:"name,omitempty"`
	Participants map[string]interface{} `json:"participants,omitempty"`
	ScopedThreadKey string `json:"scoped_thread_key,omitempty"`
	Senders map[string]interface{} `json:"senders,omitempty"`
	Snippet string `json:"snippet,omitempty"`
	Subject string `json:"subject,omitempty"`
	UnreadCount int `json:"unread_count,omitempty"`
	UpdatedTime time.Time `json:"updated_time,omitempty"`
	Wallpaper string `json:"wallpaper,omitempty"`
}

// UniqueAdCreative represents the Facebook UniqueAdCreative object
type UniqueAdCreative struct {
	SampleCreative *AdCreative `json:"sample_creative,omitempty"`
	VisualHash uint `json:"visual_hash,omitempty"`
}

// User represents the Facebook User object
type User struct {
	About string `json:"about,omitempty"`
	AgeRange *AgeRange `json:"age_range,omitempty"`
	Avatar2dProfilePicture *AvatarProfilePicture `json:"avatar_2d_profile_picture,omitempty"`
	Birthday string `json:"birthday,omitempty"`
	ClientBusinessID string `json:"client_business_id,omitempty"`
	Community *Group `json:"community,omitempty"`
	Cover *UserCoverPhoto `json:"cover,omitempty"`
	Currency *Currency `json:"currency,omitempty"`
	Education []*EducationExperience `json:"education,omitempty"`
	Email string `json:"email,omitempty"`
	FavoriteAthletes []*Experience `json:"favorite_athletes,omitempty"`
	FavoriteTeams []*Experience `json:"favorite_teams,omitempty"`
	FirstName string `json:"first_name,omitempty"`
	Gender string `json:"gender,omitempty"`
	Hometown *Page `json:"hometown,omitempty"`
	ID string `json:"id,omitempty"`
	IDForAvatars string `json:"id_for_avatars,omitempty"`
	InspirationalPeople []*Experience `json:"inspirational_people,omitempty"`
	InstallType string `json:"install_type,omitempty"`
	Installed bool `json:"installed,omitempty"`
	IsGuestUser bool `json:"is_guest_user,omitempty"`
	IsWorkAccount bool `json:"is_work_account,omitempty"`
	Languages []*Experience `json:"languages,omitempty"`
	LastName string `json:"last_name,omitempty"`
	Link string `json:"link,omitempty"`
	LocalNewsMegaphoneDismissStatus bool `json:"local_news_megaphone_dismiss_status,omitempty"`
	LocalNewsSubscriptionStatus bool `json:"local_news_subscription_status,omitempty"`
	Locale string `json:"locale,omitempty"`
	Location *Page `json:"location,omitempty"`
	MeetingFor []string `json:"meeting_for,omitempty"`
	MiddleName string `json:"middle_name,omitempty"`
	Name string `json:"name,omitempty"`
	NameFormat string `json:"name_format,omitempty"`
	PaymentPricepoints *PaymentPricepoints `json:"payment_pricepoints,omitempty"`
	Political string `json:"political,omitempty"`
	ProfilePic string `json:"profile_pic,omitempty"`
	Quotes string `json:"quotes,omitempty"`
	RelationshipStatus string `json:"relationship_status,omitempty"`
	Religion string `json:"religion,omitempty"`
	SharedLoginUpgradeRequiredBy time.Time `json:"shared_login_upgrade_required_by,omitempty"`
	ShortName string `json:"short_name,omitempty"`
	SignificantOther *User `json:"significant_other,omitempty"`
	Sports []*Experience `json:"sports,omitempty"`
	SupportsDonateButtonInLiveVideo bool `json:"supports_donate_button_in_live_video,omitempty"`
	ThirdPartyID string `json:"third_party_id,omitempty"`
	Timezone float64 `json:"timezone,omitempty"`
	TokenForBusiness string `json:"token_for_business,omitempty"`
	UpdatedTime time.Time `json:"updated_time,omitempty"`
	Verified bool `json:"verified,omitempty"`
	VideoUploadLimits *VideoUploadLimits `json:"video_upload_limits,omitempty"`
	Website string `json:"website,omitempty"`
}

// UserAvailableCatalogs represents the Facebook UserAvailableCatalogs object
type UserAvailableCatalogs struct {
	CatalogID string `json:"catalog_id,omitempty"`
	CatalogName string `json:"catalog_name,omitempty"`
	ProductCount int `json:"product_count,omitempty"`
	ShopName string `json:"shop_name,omitempty"`
}

// UserContext represents the Facebook UserContext object
type UserContext struct {
	ID string `json:"id,omitempty"`
}

// UserCoverPhoto represents the Facebook UserCoverPhoto object
type UserCoverPhoto struct {
	OffsetX float64 `json:"offset_x,omitempty"`
	OffsetY float64 `json:"offset_y,omitempty"`
	Source string `json:"source,omitempty"`
}

// UserDevice represents the Facebook UserDevice object
type UserDevice struct {
	Hardware string `json:"hardware,omitempty"`
	Os string `json:"os,omitempty"`
}

// UserIDForApp represents the Facebook UserIDForApp object
type UserIDForApp struct {
	App *Application `json:"app,omitempty"`
	ID string `json:"id,omitempty"`
}

// UserIDForPage represents the Facebook UserIDForPage object
type UserIDForPage struct {
	ID string `json:"id,omitempty"`
	Page *Page `json:"page,omitempty"`
}

// UserLeadGenDisclaimerResponse represents the Facebook UserLeadGenDisclaimerResponse object
type UserLeadGenDisclaimerResponse struct {
	CheckboxKey string `json:"checkbox_key,omitempty"`
	IsChecked string `json:"is_checked,omitempty"`
}

// UserLeadGenFieldData represents the Facebook UserLeadGenFieldData object
type UserLeadGenFieldData struct {
	Name string `json:"name,omitempty"`
	Values []string `json:"values,omitempty"`
}

// UserMobileConfig represents the Facebook UserMobileConfig object
type UserMobileConfig struct {
	SectionName string `json:"section_name,omitempty"`
	Value map[string]interface{} `json:"value,omitempty"`
}

// UserNotificationSeenStateData represents the Facebook UserNotificationSeenStateData object
type UserNotificationSeenStateData struct {
	ID string `json:"id,omitempty"`
	SeenState string `json:"seen_state,omitempty"`
}

// UserPageOneTimeOptInTokenSettings represents the Facebook UserPageOneTimeOptInTokenSettings object
type UserPageOneTimeOptInTokenSettings struct {
	CreationTimestamp int `json:"creation_timestamp,omitempty"`
	NextEligibleTime int `json:"next_eligible_time,omitempty"`
	NotificationMessagesFrequency string `json:"notification_messages_frequency,omitempty"`
	NotificationMessagesReoptin string `json:"notification_messages_reoptin,omitempty"`
	NotificationMessagesTimezone string `json:"notification_messages_timezone,omitempty"`
	NotificationMessagesToken string `json:"notification_messages_token,omitempty"`
	RecipientID string `json:"recipient_id,omitempty"`
	TokenExpiryTimestamp int `json:"token_expiry_timestamp,omitempty"`
	TopicTitle string `json:"topic_title,omitempty"`
	UserTokenStatus string `json:"user_token_status,omitempty"`
}

// UserPaymentMethodsInfo represents the Facebook UserPaymentMethodsInfo object
type UserPaymentMethodsInfo struct {
	AccountID string `json:"account_id,omitempty"`
	AvailableCardTypes []string `json:"available_card_types,omitempty"`
	AvailablePaymentMethods []string `json:"available_payment_methods,omitempty"`
	AvailablePaymentMethodsDetails []map[string]interface{} `json:"available_payment_methods_details,omitempty"`
	Country string `json:"country,omitempty"`
	Currency string `json:"currency,omitempty"`
	ExistingPaymentMethods []map[string]interface{} `json:"existing_payment_methods,omitempty"`
}

// UserPaymentMobilePricepoints represents the Facebook UserPaymentMobilePricepoints object
type UserPaymentMobilePricepoints struct {
	MobileCountry string `json:"mobile_country,omitempty"`
	PhoneNumberLast4 string `json:"phone_number_last4,omitempty"`
	Pricepoints []map[string]interface{} `json:"pricepoints,omitempty"`
	UserCurrency string `json:"user_currency,omitempty"`
}

// UserPaymentModulesOptions represents the Facebook UserPaymentModulesOptions object
type UserPaymentModulesOptions struct {
	AccountID string `json:"account_id,omitempty"`
	AvailablePaymentOptions []map[string]interface{} `json:"available_payment_options,omitempty"`
	Country string `json:"country,omitempty"`
	Currency string `json:"currency,omitempty"`
}

// ValueBasedEligibleSource represents the Facebook ValueBasedEligibleSource object
type ValueBasedEligibleSource struct {
	ID string `json:"id,omitempty"`
	Title string `json:"title,omitempty"`
	Type string `json:"type,omitempty"`
}

// Vehicle represents the Facebook Vehicle object
type Vehicle struct {
	Address map[string]interface{} `json:"address,omitempty"`
	Applinks *CatalogItemAppLinks `json:"applinks,omitempty"`
	Availability string `json:"availability,omitempty"`
	AvailabilityCircleRadius float64 `json:"availability_circle_radius,omitempty"`
	AvailabilityCircleRadiusUnit string `json:"availability_circle_radius_unit,omitempty"`
	BodyStyle string `json:"body_style,omitempty"`
	CategorySpecificFields *CatalogSubVerticalList `json:"category_specific_fields,omitempty"`
	Condition string `json:"condition,omitempty"`
	Currency string `json:"currency,omitempty"`
	CustomLabel0 string `json:"custom_label_0,omitempty"`
	CustomLabel1 string `json:"custom_label_1,omitempty"`
	CustomLabel2 string `json:"custom_label_2,omitempty"`
	CustomLabel3 string `json:"custom_label_3,omitempty"`
	CustomLabel4 string `json:"custom_label_4,omitempty"`
	CustomNumber0 uint `json:"custom_number_0,omitempty"`
	CustomNumber1 uint `json:"custom_number_1,omitempty"`
	CustomNumber2 uint `json:"custom_number_2,omitempty"`
	CustomNumber3 uint `json:"custom_number_3,omitempty"`
	CustomNumber4 uint `json:"custom_number_4,omitempty"`
	DateFirstOnLot string `json:"date_first_on_lot,omitempty"`
	DealerCommunicationChannel string `json:"dealer_communication_channel,omitempty"`
	DealerEmail string `json:"dealer_email,omitempty"`
	DealerID string `json:"dealer_id,omitempty"`
	DealerName string `json:"dealer_name,omitempty"`
	DealerPhone string `json:"dealer_phone,omitempty"`
	DealerPrivacyPolicyURL string `json:"dealer_privacy_policy_url,omitempty"`
	Description string `json:"description,omitempty"`
	Drivetrain string `json:"drivetrain,omitempty"`
	ExteriorColor string `json:"exterior_color,omitempty"`
	FbPageID *Page `json:"fb_page_id,omitempty"`
	Features []map[string]interface{} `json:"features,omitempty"`
	FuelType string `json:"fuel_type,omitempty"`
	ID string `json:"id,omitempty"`
	ImageFetchStatus VehicleImageFetchStatus `json:"image_fetch_status,omitempty"`
	Images []string `json:"images,omitempty"`
	InteriorColor string `json:"interior_color,omitempty"`
	LegalDisclosureImpressumURL string `json:"legal_disclosure_impressum_url,omitempty"`
	Make string `json:"make,omitempty"`
	Mileage map[string]interface{} `json:"mileage,omitempty"`
	Model string `json:"model,omitempty"`
	PreviousCurrency string `json:"previous_currency,omitempty"`
	PreviousPrice string `json:"previous_price,omitempty"`
	Price string `json:"price,omitempty"`
	ProductPriority0 float64 `json:"product_priority_0,omitempty"`
	ProductPriority1 float64 `json:"product_priority_1,omitempty"`
	ProductPriority2 float64 `json:"product_priority_2,omitempty"`
	ProductPriority3 float64 `json:"product_priority_3,omitempty"`
	ProductPriority4 float64 `json:"product_priority_4,omitempty"`
	SaleCurrency string `json:"sale_currency,omitempty"`
	SalePrice string `json:"sale_price,omitempty"`
	SanitizedImages []string `json:"sanitized_images,omitempty"`
	StateOfVehicle string `json:"state_of_vehicle,omitempty"`
	Tags []string `json:"tags,omitempty"`
	Title string `json:"title,omitempty"`
	Transmission string `json:"transmission,omitempty"`
	Trim string `json:"trim,omitempty"`
	UnitPrice map[string]interface{} `json:"unit_price,omitempty"`
	URL string `json:"url,omitempty"`
	VehicleID string `json:"vehicle_id,omitempty"`
	VehicleRegistrationPlate string `json:"vehicle_registration_plate,omitempty"`
	VehicleSpecifications []map[string]interface{} `json:"vehicle_specifications,omitempty"`
	VehicleType string `json:"vehicle_type,omitempty"`
	Vin string `json:"vin,omitempty"`
	Visibility VehicleVisibility `json:"visibility,omitempty"`
	Year uint `json:"year,omitempty"`
}

// VehicleOffer represents the Facebook VehicleOffer object
type VehicleOffer struct {
	AmountCurrency string `json:"amount_currency,omitempty"`
	AmountPercentage float64 `json:"amount_percentage,omitempty"`
	AmountPrice string `json:"amount_price,omitempty"`
	AmountQualifier string `json:"amount_qualifier,omitempty"`
	Applinks *CatalogItemAppLinks `json:"applinks,omitempty"`
	Availability string `json:"availability,omitempty"`
	BodyStyle string `json:"body_style,omitempty"`
	CashbackCurrency string `json:"cashback_currency,omitempty"`
	CashbackPrice string `json:"cashback_price,omitempty"`
	CategorySpecificFields *CatalogSubVerticalList `json:"category_specific_fields,omitempty"`
	Currency string `json:"currency,omitempty"`
	CustomLabel0 string `json:"custom_label_0,omitempty"`
	CustomLabel1 string `json:"custom_label_1,omitempty"`
	CustomLabel2 string `json:"custom_label_2,omitempty"`
	CustomLabel3 string `json:"custom_label_3,omitempty"`
	CustomLabel4 string `json:"custom_label_4,omitempty"`
	CustomNumber0 uint `json:"custom_number_0,omitempty"`
	CustomNumber1 uint `json:"custom_number_1,omitempty"`
	CustomNumber2 uint `json:"custom_number_2,omitempty"`
	CustomNumber3 uint `json:"custom_number_3,omitempty"`
	CustomNumber4 uint `json:"custom_number_4,omitempty"`
	DmaCodes []string `json:"dma_codes,omitempty"`
	DownpaymentCurrency string `json:"downpayment_currency,omitempty"`
	DownpaymentPrice string `json:"downpayment_price,omitempty"`
	DownpaymentQualifier string `json:"downpayment_qualifier,omitempty"`
	Drivetrain string `json:"drivetrain,omitempty"`
	EndDate string `json:"end_date,omitempty"`
	EndTime int `json:"end_time,omitempty"`
	ExteriorColor string `json:"exterior_color,omitempty"`
	FuelType string `json:"fuel_type,omitempty"`
	Generation string `json:"generation,omitempty"`
	ID string `json:"id,omitempty"`
	ImageFetchStatus VehicleofferImageFetchStatus `json:"image_fetch_status,omitempty"`
	Images []string `json:"images,omitempty"`
	InteriorColor string `json:"interior_color,omitempty"`
	InteriorUpholstery string `json:"interior_upholstery,omitempty"`
	Make string `json:"make,omitempty"`
	Model string `json:"model,omitempty"`
	OfferDescription string `json:"offer_description,omitempty"`
	OfferDisclaimer string `json:"offer_disclaimer,omitempty"`
	OfferType string `json:"offer_type,omitempty"`
	Price string `json:"price,omitempty"`
	ProductPriority0 float64 `json:"product_priority_0,omitempty"`
	ProductPriority1 float64 `json:"product_priority_1,omitempty"`
	ProductPriority2 float64 `json:"product_priority_2,omitempty"`
	ProductPriority3 float64 `json:"product_priority_3,omitempty"`
	ProductPriority4 float64 `json:"product_priority_4,omitempty"`
	SanitizedImages []string `json:"sanitized_images,omitempty"`
	StartDate string `json:"start_date,omitempty"`
	StartTime int `json:"start_time,omitempty"`
	Tags []string `json:"tags,omitempty"`
	TermLength uint `json:"term_length,omitempty"`
	TermQualifier string `json:"term_qualifier,omitempty"`
	Title string `json:"title,omitempty"`
	Transmission string `json:"transmission,omitempty"`
	Trim string `json:"trim,omitempty"`
	UnitPrice map[string]interface{} `json:"unit_price,omitempty"`
	URL string `json:"url,omitempty"`
	VehicleOfferID string `json:"vehicle_offer_id,omitempty"`
	Visibility VehicleofferVisibility `json:"visibility,omitempty"`
	Year int `json:"year,omitempty"`
}

// VideoCopyright represents the Facebook VideoCopyright object
type VideoCopyright struct {
	ContentCategory string `json:"content_category,omitempty"`
	CopyrightContentID string `json:"copyright_content_id,omitempty"`
	Creator *User `json:"creator,omitempty"`
	ExcludedOwnershipSegments []*VideoCopyrightSegment `json:"excluded_ownership_segments,omitempty"`
	ID string `json:"id,omitempty"`
	InConflict bool `json:"in_conflict,omitempty"`
	MonitoringStatus string `json:"monitoring_status,omitempty"`
	MonitoringType string `json:"monitoring_type,omitempty"`
	OwnershipCountries *VideoCopyrightGeoGate `json:"ownership_countries,omitempty"`
	ReferenceFile *CopyrightReferenceContainer `json:"reference_file,omitempty"`
	ReferenceFileDisabled bool `json:"reference_file_disabled,omitempty"`
	ReferenceFileDisabledByOps bool `json:"reference_file_disabled_by_ops,omitempty"`
	ReferenceOwnerID string `json:"reference_owner_id,omitempty"`
	RuleIDs []*VideoCopyrightRule `json:"rule_ids,omitempty"`
	Tags []string `json:"tags,omitempty"`
	WhitelistedIDs []string `json:"whitelisted_ids,omitempty"`
}

// VideoCopyrightCheckStatus represents the Facebook VideoCopyrightCheckStatus object
type VideoCopyrightCheckStatus struct {
	MatchesFound bool `json:"matches_found,omitempty"`
	Status string `json:"status,omitempty"`
}

// VideoCopyrightConditionGroup represents the Facebook VideoCopyrightConditionGroup object
type VideoCopyrightConditionGroup struct {
	Action string `json:"action,omitempty"`
	Conditions []map[string]interface{} `json:"conditions,omitempty"`
	ValidityStatus string `json:"validity_status,omitempty"`
}

// VideoCopyrightGeoGate represents the Facebook VideoCopyrightGeoGate object
type VideoCopyrightGeoGate struct {
	ExcludedCountries []string `json:"excluded_countries,omitempty"`
	IncludedCountries []string `json:"included_countries,omitempty"`
}

// VideoCopyrightMatch represents the Facebook VideoCopyrightMatch object
type VideoCopyrightMatch struct {
	CreatedDate time.Time `json:"created_date,omitempty"`
	ID string `json:"id,omitempty"`
	LastModifiedUser *User `json:"last_modified_user,omitempty"`
	MatchData []map[string]interface{} `json:"match_data,omitempty"`
	MatchStatus string `json:"match_status,omitempty"`
	Notes string `json:"notes,omitempty"`
	Permalink string `json:"permalink,omitempty"`
	UgcContentFormat string `json:"ugc_content_format,omitempty"`
}

// VideoCopyrightRule represents the Facebook VideoCopyrightRule object
type VideoCopyrightRule struct {
	ConditionGroups []*VideoCopyrightConditionGroup `json:"condition_groups,omitempty"`
	Copyrights []string `json:"copyrights,omitempty"`
	CreatedDate time.Time `json:"created_date,omitempty"`
	Creator *User `json:"creator,omitempty"`
	ID string `json:"id,omitempty"`
	IsInMigration bool `json:"is_in_migration,omitempty"`
	Name string `json:"name,omitempty"`
}

// VideoCopyrightSegment represents the Facebook VideoCopyrightSegment object
type VideoCopyrightSegment struct {
	DurationInSec float64 `json:"duration_in_sec,omitempty"`
	MediaType string `json:"media_type,omitempty"`
	StartTimeInSec float64 `json:"start_time_in_sec,omitempty"`
}

// VideoGroup represents the Facebook VideoGroup object
type VideoGroup struct {
	CreatedTime string `json:"created_time,omitempty"`
	Description string `json:"description,omitempty"`
	DisableReason string `json:"disable_reason,omitempty"`
	ID string `json:"id,omitempty"`
	IgProfileIDs []string `json:"ig_profile_ids,omitempty"`
	IsDisabled bool `json:"is_disabled,omitempty"`
	IsFbVideoGroup bool `json:"is_fb_video_group,omitempty"`
	LastUsedTime string `json:"last_used_time,omitempty"`
	Length float64 `json:"length,omitempty"`
	Name string `json:"name,omitempty"`
	PageID string `json:"page_id,omitempty"`
	PageIDs []string `json:"page_ids,omitempty"`
	Picture string `json:"picture,omitempty"`
	Placements []string `json:"placements,omitempty"`
	VideoGroupTypes []string `json:"video_group_types,omitempty"`
	Videos []string `json:"videos,omitempty"`
	Views uint `json:"views,omitempty"`
}

// VideoList represents the Facebook VideoList object
type VideoList struct {
	CreationTime time.Time `json:"creation_time,omitempty"`
	Description string `json:"description,omitempty"`
	ID string `json:"id,omitempty"`
	LastModified time.Time `json:"last_modified,omitempty"`
	Owner map[string]interface{} `json:"owner,omitempty"`
	SeasonNumber int `json:"season_number,omitempty"`
	Thumbnail string `json:"thumbnail,omitempty"`
	Title string `json:"title,omitempty"`
	VideosCount int `json:"videos_count,omitempty"`
}

// VideoPoll represents the Facebook VideoPoll object
type VideoPoll struct {
	CloseAfterVoting bool `json:"close_after_voting,omitempty"`
	DefaultOpen bool `json:"default_open,omitempty"`
	ID string `json:"id,omitempty"`
	Question string `json:"question,omitempty"`
	ShowGradient bool `json:"show_gradient,omitempty"`
	ShowResults bool `json:"show_results,omitempty"`
	Status VideopollStatus `json:"status,omitempty"`
}

// VideoStats represents the Facebook VideoStats object
type VideoStats struct {
	Aggregate []map[string]map[string]interface{} `json:"aggregate,omitempty"`
	Error string `json:"error,omitempty"`
	Metadata []map[string]map[string]interface{} `json:"metadata,omitempty"`
	TimeSeries []map[string][]map[string]interface{} `json:"time_series,omitempty"`
	Totals []map[string]map[string]interface{} `json:"totals,omitempty"`
	XAxisBreakdown [][]map[string]map[string]interface{} `json:"x_axis_breakdown,omitempty"`
}

// VideoStatus represents the Facebook VideoStatus object
type VideoStatus struct {
	CopyrightCheckStatus *VideoCopyrightCheckStatus `json:"copyright_check_status,omitempty"`
	ProcessingPhase *VideoStatusProcessingPhase `json:"processing_phase,omitempty"`
	ProcessingProgress uint `json:"processing_progress,omitempty"`
	PublishingPhase *VideoStatusPublishingPhase `json:"publishing_phase,omitempty"`
	UploadingPhase *VideoStatusUploadingPhase `json:"uploading_phase,omitempty"`
	VideoStatus string `json:"video_status,omitempty"`
}

// VideoStatusError represents the Facebook VideoStatusError object
type VideoStatusError struct {
	Code int `json:"code,omitempty"`
	Message string `json:"message,omitempty"`
}

// VideoStatusProcessingPhase represents the Facebook VideoStatusProcessingPhase object
type VideoStatusProcessingPhase struct {
	Errors []*VideoStatusError `json:"errors,omitempty"`
	Status string `json:"status,omitempty"`
}

// VideoStatusPublishingPhase represents the Facebook VideoStatusPublishingPhase object
type VideoStatusPublishingPhase struct {
	Errors []*VideoStatusError `json:"errors,omitempty"`
	PublishStatus string `json:"publish_status,omitempty"`
	PublishTime time.Time `json:"publish_time,omitempty"`
	Status string `json:"status,omitempty"`
}

// VideoStatusUploadingPhase represents the Facebook VideoStatusUploadingPhase object
type VideoStatusUploadingPhase struct {
	BytesTransferred uint `json:"bytes_transferred,omitempty"`
	Errors []*VideoStatusError `json:"errors,omitempty"`
	SourceFileSize uint `json:"source_file_size,omitempty"`
	Status string `json:"status,omitempty"`
}

// VideoTextQuestion represents the Facebook VideoTextQuestion object
type VideoTextQuestion struct {
	ID string `json:"id,omitempty"`
	QuestionTargetID string `json:"question_target_id,omitempty"`
	QuestionText string `json:"question_text,omitempty"`
	Status string `json:"status,omitempty"`
}

// VideoThumbnail represents the Facebook VideoThumbnail object
type VideoThumbnail struct {
	Height uint `json:"height,omitempty"`
	ID string `json:"id,omitempty"`
	IsPreferred bool `json:"is_preferred,omitempty"`
	Name string `json:"name,omitempty"`
	Scale float64 `json:"scale,omitempty"`
	Uri string `json:"uri,omitempty"`
	Width uint `json:"width,omitempty"`
}

// VideoUploadLimits represents the Facebook VideoUploadLimits object
type VideoUploadLimits struct {
	Length uint `json:"length,omitempty"`
	Size int `json:"size,omitempty"`
}

// VoipInfo represents the Facebook VoipInfo object
type VoipInfo struct {
	HasMobileApp bool `json:"has_mobile_app,omitempty"`
	HasPermission bool `json:"has_permission,omitempty"`
	IsCallable bool `json:"is_callable,omitempty"`
	IsCallableWebrtc bool `json:"is_callable_webrtc,omitempty"`
	IsPushable bool `json:"is_pushable,omitempty"`
	ReasonCode uint `json:"reason_code,omitempty"`
	ReasonDescription string `json:"reason_description,omitempty"`
}

// WITUser represents the Facebook WITUser object
type WITUser struct {
	AccessToken string `json:"access_token,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
}

// WearableDevicePublicKey represents the Facebook WearableDevicePublicKey object
type WearableDevicePublicKey struct {
	Base64EncodedPublicKey string `json:"base64_encoded_public_key,omitempty"`
	CreationTimeOnDevice time.Time `json:"creation_time_on_device,omitempty"`
	DeviceUuid string `json:"device_uuid,omitempty"`
	ID string `json:"id,omitempty"`
	KeyType string `json:"key_type,omitempty"`
	OwnerID string `json:"owner_id,omitempty"`
	ProductUseCase string `json:"product_use_case,omitempty"`
	Version string `json:"version,omitempty"`
}

// WebAppLink represents the Facebook WebAppLink object
type WebAppLink struct {
	ShouldFallback bool `json:"should_fallback,omitempty"`
	URL string `json:"url,omitempty"`
}

// WebPublisher represents the Facebook WebPublisher object
type WebPublisher struct {
	DomainURL string `json:"domain_url,omitempty"`
	ID string `json:"id,omitempty"`
	PublisherName string `json:"publisher_name,omitempty"`
}

// WebsiteCreativeAssetSource represents the Facebook WebsiteCreativeAssetSource object
type WebsiteCreativeAssetSource struct {
	ID string `json:"id,omitempty"`
	SourceURL string `json:"source_url,omitempty"`
}

// WebsiteCreativeAssetSuggestions represents the Facebook WebsiteCreativeAssetSuggestions object
type WebsiteCreativeAssetSuggestions struct {
	AdAccountID string `json:"ad_account_id,omitempty"`
	ExtractionStatus string `json:"extraction_status,omitempty"`
	ID string `json:"id,omitempty"`
	LinkURL string `json:"link_url,omitempty"`
}

// WebsiteCreativeInfo represents the Facebook WebsiteCreativeInfo object
type WebsiteCreativeInfo struct {
	ID string `json:"id,omitempty"`
	ImageURLs []string `json:"image_urls,omitempty"`
	LinkURL string `json:"link_url,omitempty"`
}

// WhatsAppBusinessAccount represents the Facebook WhatsAppBusinessAccount object
type WhatsAppBusinessAccount struct {
	AccountReviewStatus string `json:"account_review_status,omitempty"`
	Analytics map[string]interface{} `json:"analytics,omitempty"`
	AuthInternationalRateEligibility map[string]interface{} `json:"auth_international_rate_eligibility,omitempty"`
	BusinessVerificationStatus WhatsappbusinessaccountBusinessVerificationStatus `json:"business_verification_status,omitempty"`
	Country string `json:"country,omitempty"`
	CreationTime int `json:"creation_time,omitempty"`
	Currency string `json:"currency,omitempty"`
	HealthStatus *WhatsAppBusinessHealthStatusForMessageSend `json:"health_status,omitempty"`
	ID string `json:"id,omitempty"`
	IsEnabledForInsights bool `json:"is_enabled_for_insights,omitempty"`
	IsSharedWithPartners bool `json:"is_shared_with_partners,omitempty"`
	LinkedCommerceAccount *CommerceMerchantSettings `json:"linked_commerce_account,omitempty"`
	MarketingMessagesLiteAPIStatus string `json:"marketing_messages_lite_api_status,omitempty"`
	MessageTemplateNamespace string `json:"message_template_namespace,omitempty"`
	Name string `json:"name,omitempty"`
	OnBehalfOfBusinessInfo map[string]interface{} `json:"on_behalf_of_business_info,omitempty"`
	OwnerBusiness *Business `json:"owner_business,omitempty"`
	OwnerBusinessInfo map[string]interface{} `json:"owner_business_info,omitempty"`
	OwnershipType string `json:"ownership_type,omitempty"`
	PrimaryBusinessLocation string `json:"primary_business_location,omitempty"`
	PrimaryFundingID string `json:"primary_funding_id,omitempty"`
	PurchaseOrderNumber string `json:"purchase_order_number,omitempty"`
	Status string `json:"status,omitempty"`
	TimezoneID string `json:"timezone_id,omitempty"`
}

// WhatsAppBusinessHealthStatus represents the Facebook WhatsAppBusinessHealthStatus object
type WhatsAppBusinessHealthStatus struct {
	AdditionalInfo []string `json:"additional_info,omitempty"`
	CanSendMessage string `json:"can_send_message,omitempty"`
	EntityType string `json:"entity_type,omitempty"`
	Errors []map[string]interface{} `json:"errors,omitempty"`
	ID string `json:"id,omitempty"`
}

// WhatsAppBusinessHealthStatusForMessageSend represents the Facebook WhatsAppBusinessHealthStatusForMessageSend object
type WhatsAppBusinessHealthStatusForMessageSend struct {
	CanSendMessage string `json:"can_send_message,omitempty"`
	Entities []*WhatsAppBusinessHealthStatus `json:"entities,omitempty"`
}

// WhatsAppBusinessPartnerClientVerificationSubmission represents the Facebook WhatsAppBusinessPartnerClientVerificationSubmission object
type WhatsAppBusinessPartnerClientVerificationSubmission struct {
	ClientBusinessID string `json:"client_business_id,omitempty"`
	ID string `json:"id,omitempty"`
	RejectionReasons []WhatsappbusinesspartnerclientverificationsubmissionRejectionReasons `json:"rejection_reasons,omitempty"`
	SubmittedInfo map[string]interface{} `json:"submitted_info,omitempty"`
	SubmittedTime time.Time `json:"submitted_time,omitempty"`
	UpdateTime time.Time `json:"update_time,omitempty"`
	VerificationStatus WhatsappbusinesspartnerclientverificationsubmissionVerificationStatus `json:"verification_status,omitempty"`
}

// WhatsAppBusinessPreVerifiedPhoneNumber represents the Facebook WhatsAppBusinessPreVerifiedPhoneNumber object
type WhatsAppBusinessPreVerifiedPhoneNumber struct {
	CodeVerificationStatus WhatsappbusinesspreverifiedphonenumberCodeVerificationStatus `json:"code_verification_status,omitempty"`
	CodeVerificationTime time.Time `json:"code_verification_time,omitempty"`
	ID string `json:"id,omitempty"`
	OwnerBusiness *Business `json:"owner_business,omitempty"`
	PhoneNumber string `json:"phone_number,omitempty"`
	VerificationExpiryTime time.Time `json:"verification_expiry_time,omitempty"`
}

// WhatsAppBusinessProfile represents the Facebook WhatsAppBusinessProfile object
type WhatsAppBusinessProfile struct {
	ID string `json:"id,omitempty"`
	NameVerification map[string]interface{} `json:"name_verification,omitempty"`
	WhatsappBusinessAPIData map[string]interface{} `json:"whatsapp_business_api_data,omitempty"`
}

// WhatsAppPaymentCapabilities represents the Facebook WhatsAppPaymentCapabilities object
type WhatsAppPaymentCapabilities struct {
	IsEnabled bool `json:"is_enabled,omitempty"`
	PaymentCapabilityDetails []map[string]interface{} `json:"payment_capability_details,omitempty"`
}

// WhatsappSubscribedAppsInfo represents the Facebook WhatsappSubscribedAppsInfo object
type WhatsappSubscribedAppsInfo struct {
	PageWhatsappNumber string `json:"page_whatsapp_number,omitempty"`
	SubscribedApps []map[string]interface{} `json:"subscribed_apps,omitempty"`
}

// WhitehatFBDLRun represents the Facebook WhitehatFBDLRun object
type WhitehatFBDLRun struct {
	CreationTime time.Time `json:"creation_time,omitempty"`
	ID string `json:"id,omitempty"`
	IsPinned bool `json:"is_pinned,omitempty"`
	Note string `json:"note,omitempty"`
	Result []map[string]string `json:"result,omitempty"`
	RunCode string `json:"run_code,omitempty"`
	Status string `json:"status,omitempty"`
	UserType string `json:"user_type,omitempty"`
}

// WifiInformation represents the Facebook WifiInformation object
type WifiInformation struct {
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	NetworkAccessType string `json:"network_access_type,omitempty"`
}

// WindowsAppLink represents the Facebook WindowsAppLink object
type WindowsAppLink struct {
	AppID string `json:"app_id,omitempty"`
	AppName string `json:"app_name,omitempty"`
	PackageFamilyName string `json:"package_family_name,omitempty"`
	URL string `json:"url,omitempty"`
}

// WindowsPhoneAppLink represents the Facebook WindowsPhoneAppLink object
type WindowsPhoneAppLink struct {
	AppID string `json:"app_id,omitempty"`
	AppName string `json:"app_name,omitempty"`
	URL string `json:"url,omitempty"`
}

// WithAsset3D represents the Facebook WithAsset3D object
type WithAsset3D struct {
	ID string `json:"id,omitempty"`
}

// WoodhengePurchasedPAYGReceipt represents the Facebook WoodhengePurchasedPAYGReceipt object
type WoodhengePurchasedPAYGReceipt struct {
	ID string `json:"id,omitempty"`
	NumberOfSubscriptionsPurchased int `json:"number_of_subscriptions_purchased,omitempty"`
	PurchaseTime time.Time `json:"purchase_time,omitempty"`
	User *User `json:"user,omitempty"`
}

// WoodhengeSupporter represents the Facebook WoodhengeSupporter object
type WoodhengeSupporter struct {
	CreationTime time.Time `json:"creation_time,omitempty"`
	ID string `json:"id,omitempty"`
	IsGiftedSubscription bool `json:"is_gifted_subscription,omitempty"`
	MostRecentSubscriptionTime time.Time `json:"most_recent_subscription_time,omitempty"`
	NumberOfMonthsSubscribed uint `json:"number_of_months_subscribed,omitempty"`
	User *User `json:"user,omitempty"`
}

// WorkAccessCode represents the Facebook WorkAccessCode object
type WorkAccessCode struct {
	Code string `json:"code,omitempty"`
	ExpirationTime time.Time `json:"expiration_time,omitempty"`
}

// WorkExperience represents the Facebook WorkExperience object
type WorkExperience struct {
	Description string `json:"description,omitempty"`
	Employer *Page `json:"employer,omitempty"`
	EndDate string `json:"end_date,omitempty"`
	From *User `json:"from,omitempty"`
	ID string `json:"id,omitempty"`
	Location *Page `json:"location,omitempty"`
	Position *Page `json:"position,omitempty"`
	Projects []map[string]interface{} `json:"projects,omitempty"`
	StartDate string `json:"start_date,omitempty"`
	With []*User `json:"with,omitempty"`
}

// WorkSkill represents the Facebook WorkSkill object
type WorkSkill struct {
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
}

// WorkUserBadges represents the Facebook WorkUserBadges object
type WorkUserBadges struct {
	Category string `json:"category,omitempty"`
	Description string `json:"description,omitempty"`
	Icon string `json:"icon,omitempty"`
	ID string `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
}

// WorkUserFrontline represents the Facebook WorkUserFrontline object
type WorkUserFrontline struct {
	HasAccess bool `json:"has_access,omitempty"`
	IsFrontline bool `json:"is_frontline,omitempty"`
}

// Total objects with fields: 938
// Total fields: 8286
