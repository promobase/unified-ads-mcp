// Code generated by codegen. DO NOT EDIT.

package generated

import (
	"time"
)

// AIGeneratedProductImage represents the Facebook AIGeneratedProductImage object
type AIGeneratedProductImage struct {
	FlaggedForManualReview bool   `json:"flagged_for_manual_review,omitempty" jsonschema:"description=Flagged For Manual Review"`
	TransformedImageURL    string `json:"transformed_image_url,omitempty" jsonschema:"description=Transformed Image URL,format=uri"`
}

// ALMAdAccountInfo represents the Facebook ALMAdAccountInfo object
type ALMAdAccountInfo struct {
	AdAccountID        string   `json:"ad_account_id,omitempty" jsonschema:"description=ID of the Ad Account,pattern=^[0-9]+$"`
	ID                 string   `json:"id,omitempty" jsonschema:"description=ALMAdAccountInfo ID,required,pattern=^[0-9]+$"`
	ManagedBy          string   `json:"managed_by,omitempty" jsonschema:"description=Managed By"`
	OwnedBy            string   `json:"owned_by,omitempty" jsonschema:"description=Owned By"`
	ParentAdvertiserID string   `json:"parent_advertiser_id,omitempty" jsonschema:"description=ID of the Parent Advertiser,pattern=^[0-9]+$"`
	SubVertical        string   `json:"sub_vertical,omitempty" jsonschema:"description=Sub Vertical"`
	Tag                []string `json:"tag,omitempty" jsonschema:"description=Tag"`
	UserIDs            []string `json:"user_ids,omitempty" jsonschema:"description=User Ids,pattern=^[0-9]+$"`
	Vertical           string   `json:"vertical,omitempty" jsonschema:"description=Vertical"`
}

// ALMEndAdvertiserInfo represents the Facebook ALMEndAdvertiserInfo object
type ALMEndAdvertiserInfo struct {
	EstimatedAdBudget    int      `json:"estimated_ad_budget,omitempty" jsonschema:"description=Estimated Ad Budget,minimum=1"`
	ID                   string   `json:"id,omitempty" jsonschema:"description=ALMEndAdvertiserInfo ID,required,pattern=^[0-9]+$"`
	ParentAdvertiserID   string   `json:"parent_advertiser_id,omitempty" jsonschema:"description=ID of the Parent Advertiser,pattern=^[0-9]+$"`
	ParentAdvertiserName string   `json:"parent_advertiser_name,omitempty" jsonschema:"description=Parent Advertiser Name"`
	Tag                  []string `json:"tag,omitempty" jsonschema:"description=Tag"`
}

// ALMEvent represents the Facebook ALMEvent object
type ALMEvent struct {
	AdAccountIDs        []string  `json:"ad_account_ids,omitempty" jsonschema:"description=Ad Account Ids,pattern=^[0-9]+$"`
	CampaignIDs         []string  `json:"campaign_ids,omitempty" jsonschema:"description=Campaign Ids,pattern=^[0-9]+$"`
	Channel             string    `json:"channel,omitempty" jsonschema:"description=Channel"`
	Event               string    `json:"event,omitempty" jsonschema:"description=Event"`
	EventTime           time.Time `json:"event_time,omitempty" jsonschema:"description=Event Time,format=date-time"`
	Guidance            string    `json:"guidance,omitempty" jsonschema:"description=Guidance"`
	GuidanceDetail      string    `json:"guidance_detail,omitempty" jsonschema:"description=Guidance Detail"`
	ID                  string    `json:"id,omitempty" jsonschema:"description=ALMEvent ID,required,pattern=^[0-9]+$"`
	ParentAdvertiserIDs []string  `json:"parent_advertiser_ids,omitempty" jsonschema:"description=Parent Advertiser Ids,pattern=^[0-9]+$"`
	ResellerBusinessID  string    `json:"reseller_business_id,omitempty" jsonschema:"description=ID of the Reseller Business,pattern=^[0-9]+$"`
	SubChannel          string    `json:"sub_channel,omitempty" jsonschema:"description=Sub Channel"`
	UserID              string    `json:"user_id,omitempty" jsonschema:"description=ID of the User,pattern=^[0-9]+$"`
}

// ALMGuidance represents the Facebook ALMGuidance object
type ALMGuidance struct {
	AdAccountID          string                   `json:"ad_account_id,omitempty" jsonschema:"description=ID of the Ad Account,pattern=^[0-9]+$"`
	Guidances            []map[string]interface{} `json:"guidances,omitempty" jsonschema:"description=Guidances"`
	OpportunityScore     float64                  `json:"opportunity_score,omitempty" jsonschema:"description=Opportunity Score"`
	ParentAdvertiserID   string                   `json:"parent_advertiser_id,omitempty" jsonschema:"description=ID of the Parent Advertiser,pattern=^[0-9]+$"`
	ParentAdvertiserName string                   `json:"parent_advertiser_name,omitempty" jsonschema:"description=Parent Advertiser Name"`
}

// ALMGuidanceMetrics represents the Facebook ALMGuidanceMetrics object
type ALMGuidanceMetrics struct {
	AdAccountID        string                   `json:"ad_account_id,omitempty" jsonschema:"description=ID of the Ad Account,pattern=^[0-9]+$"`
	AdoptedObjects     []map[string]interface{} `json:"adopted_objects,omitempty" jsonschema:"description=Adopted Objects"`
	GuidanceName       string                   `json:"guidance_name,omitempty" jsonschema:"description=Guidance Name"`
	GuidanceType       string                   `json:"guidance_type,omitempty" jsonschema:"description=Guidance Type"`
	L28Adoption        int                      `json:"l28_adoption,omitempty" jsonschema:"description=L28 Adoption"`
	L28Available       int                      `json:"l28_available,omitempty" jsonschema:"description=L28 Available"`
	L28Click           int                      `json:"l28_click,omitempty" jsonschema:"description=L28 Click"`
	L28Conversion      int                      `json:"l28_conversion,omitempty" jsonschema:"description=L28 Conversion"`
	L28HasClick        bool                     `json:"l28_has_click,omitempty" jsonschema:"description=L28 Has Click"`
	L28HasImpression   bool                     `json:"l28_has_impression,omitempty" jsonschema:"description=L28 Has Impression"`
	L28Impression      int                      `json:"l28_impression,omitempty" jsonschema:"description=L28 Impression"`
	L28IsActioned      bool                     `json:"l28_is_actioned,omitempty" jsonschema:"description=L28 Is Actioned"`
	L28IsAdopted       bool                     `json:"l28_is_adopted,omitempty" jsonschema:"description=L28 Is Adopted"`
	L28IsAvailable     bool                     `json:"l28_is_available,omitempty" jsonschema:"description=L28 Is Available"`
	L28IsPitched       bool                     `json:"l28_is_pitched,omitempty" jsonschema:"description=L28 Is Pitched"`
	L28Pitch           int                      `json:"l28_pitch,omitempty" jsonschema:"description=L28 Pitch"`
	L28dAdoptedRevenue float64                  `json:"l28d_adopted_revenue,omitempty" jsonschema:"description=L28d Adopted Revenue"`
	LastActionedDs     string                   `json:"last_actioned_ds,omitempty" jsonschema:"description=Last Actioned Ds"`
	LastAdoptedDs      string                   `json:"last_adopted_ds,omitempty" jsonschema:"description=Last Adopted Ds"`
	LastPitchDs        string                   `json:"last_pitch_ds,omitempty" jsonschema:"description=Last Pitch Ds"`
	ParentAdvertiserID string                   `json:"parent_advertiser_id,omitempty" jsonschema:"description=ID of the Parent Advertiser,pattern=^[0-9]+$"`
	ReportDs           string                   `json:"report_ds,omitempty" jsonschema:"description=Report Ds"`
}

// AMOneshopSettings represents the Facebook AMOneshopSettings object
type AMOneshopSettings struct {
}

// ANBlockedBICategory represents the Facebook ANBlockedBICategory object
type ANBlockedBICategory struct {
	Key string `json:"key,omitempty" jsonschema:"description=Key"`
}

// AREffect represents the Facebook AREffect object
type AREffect struct {
	CreationTime     time.Time `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	ID               string    `json:"id,omitempty" jsonschema:"description=AREffect ID,required,pattern=^[0-9]+$"`
	LastModifiedTime time.Time `json:"last_modified_time,omitempty" jsonschema:"description=Last Modified Time,format=date-time"`
	Name             string    `json:"name,omitempty" jsonschema:"description=Name of the AREffect,required"`
	Status           string    `json:"status,omitempty" jsonschema:"description=Current status of the AREffect,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	Surfaces         []string  `json:"surfaces,omitempty" jsonschema:"description=Surfaces"`
}

// Ad represents the Facebook Ad object
type Ad struct {
	AccountID                         string                             `json:"account_id,omitempty" jsonschema:"description=ID of the Account,pattern=^[0-9]+$"`
	AdActiveTime                      string                             `json:"ad_active_time,omitempty" jsonschema:"description=Ad Active Time"`
	AdReviewFeedback                  *AdgroupReviewFeedback             `json:"ad_review_feedback,omitempty" jsonschema:"description=Ad Review Feedback"`
	AdScheduleEndTime                 time.Time                          `json:"ad_schedule_end_time,omitempty" jsonschema:"description=Ad Schedule End Time,format=date-time"`
	AdScheduleStartTime               time.Time                          `json:"ad_schedule_start_time,omitempty" jsonschema:"description=Ad Schedule Start Time,format=date-time"`
	Adlabels                          []*AdLabel                         `json:"adlabels,omitempty" jsonschema:"description=Adlabels"`
	Adset                             *AdSet                             `json:"adset,omitempty" jsonschema:"description=Adset"`
	AdsetID                           string                             `json:"adset_id,omitempty" jsonschema:"description=ID of the Adset,required,pattern=^[0-9]+$"`
	BidAmount                         int                                `json:"bid_amount,omitempty" jsonschema:"description=Bid Amount,minimum=1"`
	BidInfo                           map[string]uint                    `json:"bid_info,omitempty" jsonschema:"description=Bid Info"`
	BidType                           AdBidType                          `json:"bid_type,omitempty" jsonschema:"description=Bid Type"`
	Campaign                          *Campaign                          `json:"campaign,omitempty" jsonschema:"description=Campaign"`
	CampaignID                        string                             `json:"campaign_id,omitempty" jsonschema:"description=ID of the Campaign,pattern=^[0-9]+$"`
	ConfiguredStatus                  AdConfiguredStatus                 `json:"configured_status,omitempty" jsonschema:"description=Configured Status"`
	ConversionDomain                  string                             `json:"conversion_domain,omitempty" jsonschema:"description=Conversion Domain"`
	ConversionSpecs                   []*ConversionActionQuery           `json:"conversion_specs,omitempty" jsonschema:"description=Conversion Specs"`
	CreatedTime                       time.Time                          `json:"created_time,omitempty" jsonschema:"description=When the Ad was created,format=date-time"`
	Creative                          *AdCreative                        `json:"creative,omitempty" jsonschema:"description=Creative,required"`
	CreativeAssetGroupsSpec           *AdCreativeAssetGroupsSpec         `json:"creative_asset_groups_spec,omitempty" jsonschema:"description=Creative Asset Groups Spec"`
	DemolinkHash                      string                             `json:"demolink_hash,omitempty" jsonschema:"description=Demolink Hash"`
	DisplaySequence                   int                                `json:"display_sequence,omitempty" jsonschema:"description=Display Sequence"`
	EffectiveStatus                   AdEffectiveStatus                  `json:"effective_status,omitempty" jsonschema:"description=Effective Status"`
	EngagementAudience                bool                               `json:"engagement_audience,omitempty" jsonschema:"description=Engagement Audience"`
	FailedDeliveryChecks              []*DeliveryCheck                   `json:"failed_delivery_checks,omitempty" jsonschema:"description=Failed Delivery Checks"`
	ID                                string                             `json:"id,omitempty" jsonschema:"description=Ad ID,required,pattern=^[0-9]+$"`
	IssuesInfo                        []*AdgroupIssuesInfo               `json:"issues_info,omitempty" jsonschema:"description=Issues Info"`
	LastUpdatedByAppID                string                             `json:"last_updated_by_app_id,omitempty" jsonschema:"description=ID of the Last Updated By App,pattern=^[0-9]+$"`
	Name                              string                             `json:"name,omitempty" jsonschema:"description=Name of the Ad,required"`
	Placement                         *Placement                         `json:"placement,omitempty" jsonschema:"description=Placement"`
	PreviewShareableLink              string                             `json:"preview_shareable_link,omitempty" jsonschema:"description=Preview Shareable Link"`
	Priority                          uint                               `json:"priority,omitempty" jsonschema:"description=Priority"`
	Recommendations                   []*AdRecommendation                `json:"recommendations,omitempty" jsonschema:"description=Recommendations"`
	SourceAd                          *Ad                                `json:"source_ad,omitempty" jsonschema:"description=Source Ad"`
	SourceAdID                        string                             `json:"source_ad_id,omitempty" jsonschema:"description=ID of the Source Ad,pattern=^[0-9]+$"`
	Status                            AdStatus                           `json:"status,omitempty" jsonschema:"description=Current status of the Ad,required,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	Targeting                         *Targeting                         `json:"targeting,omitempty" jsonschema:"description=Targeting"`
	TrackingAndConversionWithDefaults *TrackingAndConversionWithDefaults `json:"tracking_and_conversion_with_defaults,omitempty" jsonschema:"description=Tracking And Conversion With Defaults"`
	TrackingSpecs                     []*ConversionActionQuery           `json:"tracking_specs,omitempty" jsonschema:"description=Tracking Specs"`
	UpdatedTime                       time.Time                          `json:"updated_time,omitempty" jsonschema:"description=When the Ad was last updated,format=date-time"`
}

// AdAccount represents the Facebook AdAccount object
type AdAccount struct {
	AccountID                         string                      `json:"account_id,omitempty" jsonschema:"description=ID of the Account,pattern=^[0-9]+$"`
	AccountStatus                     uint                        `json:"account_status,omitempty" jsonschema:"description=Account Status"`
	AdAccountPromotableObjects        *AdAccountPromotableObjects `json:"ad_account_promotable_objects,omitempty" jsonschema:"description=Ad Account Promotable Objects"`
	Age                               float64                     `json:"age,omitempty" jsonschema:"description=Age"`
	AgencyClientDeclaration           *AgencyClientDeclaration    `json:"agency_client_declaration,omitempty" jsonschema:"description=Agency Client Declaration"`
	AllCapabilities                   []string                    `json:"all_capabilities,omitempty" jsonschema:"description=All Capabilities"`
	AmountSpent                       string                      `json:"amount_spent,omitempty" jsonschema:"description=Amount Spent"`
	AttributionSpec                   []*AttributionSpec          `json:"attribution_spec,omitempty" jsonschema:"description=Attribution Spec"`
	Balance                           string                      `json:"balance,omitempty" jsonschema:"description=Balance"`
	BrandSafetyContentFilterLevels    []string                    `json:"brand_safety_content_filter_levels,omitempty" jsonschema:"description=Brand Safety Content Filter Levels"`
	Business                          *Business                   `json:"business,omitempty" jsonschema:"description=Business"`
	BusinessCity                      string                      `json:"business_city,omitempty" jsonschema:"description=Business City"`
	BusinessCountryCode               string                      `json:"business_country_code,omitempty" jsonschema:"description=Business Country Code"`
	BusinessName                      string                      `json:"business_name,omitempty" jsonschema:"description=Business Name"`
	BusinessState                     string                      `json:"business_state,omitempty" jsonschema:"description=Business State"`
	BusinessStreet                    string                      `json:"business_street,omitempty" jsonschema:"description=Business Street"`
	BusinessStreet2                   string                      `json:"business_street2,omitempty" jsonschema:"description=Business Street2"`
	BusinessZip                       string                      `json:"business_zip,omitempty" jsonschema:"description=Business Zip"`
	CanCreateBrandLiftStudy           bool                        `json:"can_create_brand_lift_study,omitempty" jsonschema:"description=Can Create Brand Lift Study"`
	Capabilities                      []string                    `json:"capabilities,omitempty" jsonschema:"description=Capabilities"`
	CreatedTime                       time.Time                   `json:"created_time,omitempty" jsonschema:"description=When the AdAccount was created,format=date-time"`
	Currency                          string                      `json:"currency,omitempty" jsonschema:"description=Currency"`
	CustomAudienceInfo                *CustomAudienceGroup        `json:"custom_audience_info,omitempty" jsonschema:"description=Custom Audience Info"`
	DefaultDsaBeneficiary             string                      `json:"default_dsa_beneficiary,omitempty" jsonschema:"description=Default Dsa Beneficiary"`
	DefaultDsaPayor                   string                      `json:"default_dsa_payor,omitempty" jsonschema:"description=Default Dsa Payor"`
	DisableReason                     uint                        `json:"disable_reason,omitempty" jsonschema:"description=Disable Reason"`
	EndAdvertiser                     string                      `json:"end_advertiser,omitempty" jsonschema:"description=End Advertiser"`
	EndAdvertiserName                 string                      `json:"end_advertiser_name,omitempty" jsonschema:"description=End Advertiser Name"`
	ExistingCustomers                 []string                    `json:"existing_customers,omitempty" jsonschema:"description=Existing Customers"`
	ExpiredFundingSourceDetails       *FundingSourceDetails       `json:"expired_funding_source_details,omitempty" jsonschema:"description=Expired Funding Source Details"`
	ExtendedCreditInvoiceGroup        *ExtendedCreditInvoiceGroup `json:"extended_credit_invoice_group,omitempty" jsonschema:"description=Extended Credit Invoice Group"`
	FailedDeliveryChecks              []*DeliveryCheck            `json:"failed_delivery_checks,omitempty" jsonschema:"description=Failed Delivery Checks"`
	FbEntity                          uint                        `json:"fb_entity,omitempty" jsonschema:"description=Fb Entity"`
	FundingSource                     string                      `json:"funding_source,omitempty" jsonschema:"description=Funding Source"`
	FundingSourceDetails              *FundingSourceDetails       `json:"funding_source_details,omitempty" jsonschema:"description=Funding Source Details"`
	HasMigratedPermissions            bool                        `json:"has_migrated_permissions,omitempty" jsonschema:"description=Has Migrated Permissions"`
	HasPageAuthorizedAdaccount        bool                        `json:"has_page_authorized_adaccount,omitempty" jsonschema:"description=Has Page Authorized Adaccount"`
	ID                                string                      `json:"id,omitempty" jsonschema:"description=AdAccount ID,required,pattern=^[0-9]+$"`
	IoNumber                          string                      `json:"io_number,omitempty" jsonschema:"description=Io Number"`
	IsAttributionSpecSystemDefault    bool                        `json:"is_attribution_spec_system_default,omitempty" jsonschema:"description=Is Attribution Spec System Default"`
	IsBaSkipDelayedEligible           bool                        `json:"is_ba_skip_delayed_eligible,omitempty" jsonschema:"description=Is Ba Skip Delayed Eligible"`
	IsDirectDealsEnabled              bool                        `json:"is_direct_deals_enabled,omitempty" jsonschema:"description=Is Direct Deals Enabled"`
	IsIn3dsAuthorizationEnabledMarket bool                        `json:"is_in_3ds_authorization_enabled_market,omitempty" jsonschema:"description=Is In 3ds Authorization Enabled Market"`
	IsNotificationsEnabled            bool                        `json:"is_notifications_enabled,omitempty" jsonschema:"description=Is Notifications Enabled"`
	IsPersonal                        uint                        `json:"is_personal,omitempty" jsonschema:"description=Is Personal"`
	IsPrepayAccount                   bool                        `json:"is_prepay_account,omitempty" jsonschema:"description=Is Prepay Account"`
	IsTaxIDRequired                   bool                        `json:"is_tax_id_required,omitempty" jsonschema:"description=Is Tax ID Required,pattern=^[0-9]+$"`
	LiableAddress                     *CRMAddress                 `json:"liable_address,omitempty" jsonschema:"description=Liable Address"`
	LineNumbers                       []int                       `json:"line_numbers,omitempty" jsonschema:"description=Line Numbers"`
	MediaAgency                       string                      `json:"media_agency,omitempty" jsonschema:"description=Media Agency"`
	MinCampaignGroupSpendCap          string                      `json:"min_campaign_group_spend_cap,omitempty" jsonschema:"description=Min Campaign Group Spend Cap"`
	MinDailyBudget                    uint                        `json:"min_daily_budget,omitempty" jsonschema:"description=Min Daily Budget,minimum=1"`
	Name                              string                      `json:"name,omitempty" jsonschema:"description=Name of the AdAccount,required"`
	OffsitePixelsTosAccepted          bool                        `json:"offsite_pixels_tos_accepted,omitempty" jsonschema:"description=Offsite Pixels Tos Accepted"`
	Owner                             string                      `json:"owner,omitempty" jsonschema:"description=Owner"`
	OwnerBusiness                     *Business                   `json:"owner_business,omitempty" jsonschema:"description=Owner Business"`
	Partner                           string                      `json:"partner,omitempty" jsonschema:"description=Partner"`
	RfSpec                            *ReachFrequencySpec         `json:"rf_spec,omitempty" jsonschema:"description=Rf Spec"`
	SendBillToAddress                 *CRMAddress                 `json:"send_bill_to_address,omitempty" jsonschema:"description=Send Bill To Address"`
	ShowCheckoutExperience            bool                        `json:"show_checkout_experience,omitempty" jsonschema:"description=Show Checkout Experience"`
	SoldToAddress                     *CRMAddress                 `json:"sold_to_address,omitempty" jsonschema:"description=Sold To Address"`
	SpendCap                          string                      `json:"spend_cap,omitempty" jsonschema:"description=Spend Cap"`
	TaxID                             string                      `json:"tax_id,omitempty" jsonschema:"description=ID of the Tax,pattern=^[0-9]+$"`
	TaxIDStatus                       uint                        `json:"tax_id_status,omitempty" jsonschema:"description=Tax ID Status,pattern=^[0-9]+$"`
	TaxIDType                         string                      `json:"tax_id_type,omitempty" jsonschema:"description=Tax ID Type,pattern=^[0-9]+$"`
	TimezoneID                        uint                        `json:"timezone_id,omitempty" jsonschema:"description=ID of the Timezone,pattern=^[0-9]+$"`
	TimezoneName                      string                      `json:"timezone_name,omitempty" jsonschema:"description=Timezone Name"`
	TimezoneOffsetHoursUtc            float64                     `json:"timezone_offset_hours_utc,omitempty" jsonschema:"description=Timezone Offset Hours Utc"`
	TosAccepted                       map[string]int              `json:"tos_accepted,omitempty" jsonschema:"description=Tos Accepted"`
	UserAccessExpireTime              time.Time                   `json:"user_access_expire_time,omitempty" jsonschema:"description=User Access Expire Time,format=date-time"`
	UserTasks                         []string                    `json:"user_tasks,omitempty" jsonschema:"description=User Tasks"`
	UserTosAccepted                   map[string]int              `json:"user_tos_accepted,omitempty" jsonschema:"description=User Tos Accepted"`
	ViewableBusiness                  *Business                   `json:"viewable_business,omitempty" jsonschema:"description=Viewable Business"`
}

// AdAccountAAACompatibleAdObjects represents the Facebook AdAccountAAACompatibleAdObjects object
type AdAccountAAACompatibleAdObjects struct {
	AdgroupIDs       []string `json:"adgroup_ids,omitempty" jsonschema:"description=Adgroup Ids,pattern=^[0-9]+$"`
	CampaignGroupIDs []string `json:"campaign_group_ids,omitempty" jsonschema:"description=Campaign Group Ids,pattern=^[0-9]+$"`
	CampaignIDs      []string `json:"campaign_ids,omitempty" jsonschema:"description=Campaign Ids,pattern=^[0-9]+$"`
}

// AdAccountAAASimilarCampaigns represents the Facebook AdAccountAAASimilarCampaigns object
type AdAccountAAASimilarCampaigns struct {
	SimilarCampaignLimit uint                                `json:"similar_campaign_limit,omitempty" jsonschema:"description=Similar Campaign Limit"`
	SimilarCampaignsInfo []map[string]map[string]interface{} `json:"similar_campaigns_info,omitempty" jsonschema:"description=Similar Campaigns Info"`
	UsedCampaignSlots    uint                                `json:"used_campaign_slots,omitempty" jsonschema:"description=Used Campaign Slots"`
}

// AdAccountASLSchedule represents the Facebook AdAccountASLSchedule object
type AdAccountASLSchedule struct {
	AdAccount   *AdAccount `json:"ad_account,omitempty" jsonschema:"description=Ad Account"`
	ID          string     `json:"id,omitempty" jsonschema:"description=AdAccountASLSchedule ID,required,pattern=^[0-9]+$"`
	TimeCreated time.Time  `json:"time_created,omitempty" jsonschema:"description=When the AdAccountASLSchedule was created,format=date-time"`
	TimeUpdated time.Time  `json:"time_updated,omitempty" jsonschema:"description=When the AdAccountASLSchedule was last updated,format=date-time"`
}

// AdAccountAdLimitsInsights represents the Facebook AdAccountAdLimitsInsights object
type AdAccountAdLimitsInsights struct {
	DateStart string `json:"date_start,omitempty" jsonschema:"description=Date Start"`
	DateStop  string `json:"date_stop,omitempty" jsonschema:"description=Date Stop"`
}

// AdAccountAdRulesCountByType represents the Facebook AdAccountAdRulesCountByType object
type AdAccountAdRulesCountByType struct {
	Count          int    `json:"count,omitempty" jsonschema:"description=Count"`
	EvaluationType string `json:"evaluation_type,omitempty" jsonschema:"description=Evaluation Type"`
}

// AdAccountAdRulesHistory represents the Facebook AdAccountAdRulesHistory object
type AdAccountAdRulesHistory struct {
	EvaluationSpec   *AdRuleEvaluationSpec  `json:"evaluation_spec,omitempty" jsonschema:"description=Evaluation Spec"`
	ExceptionCode    int                    `json:"exception_code,omitempty" jsonschema:"description=Exception Code"`
	ExceptionMessage string                 `json:"exception_message,omitempty" jsonschema:"description=Exception Message"`
	ExecutionSpec    *AdRuleExecutionSpec   `json:"execution_spec,omitempty" jsonschema:"description=Execution Spec"`
	IsManual         bool                   `json:"is_manual,omitempty" jsonschema:"description=Is Manual"`
	Results          []*AdRuleHistoryResult `json:"results,omitempty" jsonschema:"description=Results"`
	RuleID           int                    `json:"rule_id,omitempty" jsonschema:"description=ID of the Rule,pattern=^[0-9]+$"`
	ScheduleSpec     *AdRuleScheduleSpec    `json:"schedule_spec,omitempty" jsonschema:"description=Schedule Spec"`
	Timestamp        time.Time              `json:"timestamp,omitempty" jsonschema:"description=Timestamp,format=date-time"`
}

// AdAccountAdVolume represents the Facebook AdAccountAdVolume object
type AdAccountAdVolume struct {
	ActorID                                          string                   `json:"actor_id,omitempty" jsonschema:"description=ID of the Actor,pattern=^[0-9]+$"`
	ActorName                                        string                   `json:"actor_name,omitempty" jsonschema:"description=Actor Name"`
	AdLimitScopeBusiness                             *Business                `json:"ad_limit_scope_business,omitempty" jsonschema:"description=Ad Limit Scope Business"`
	AdLimitScopeBusinessManagerID                    string                   `json:"ad_limit_scope_business_manager_id,omitempty" jsonschema:"description=ID of the Ad Limit Scope Business Manager,pattern=^[0-9]+$"`
	AdLimitSetByPageAdmin                            uint                     `json:"ad_limit_set_by_page_admin,omitempty" jsonschema:"description=Ad Limit Set By Page Admin,minimum=13,maximum=100"`
	AdsRunningOrInReviewCount                        uint                     `json:"ads_running_or_in_review_count,omitempty" jsonschema:"description=Ads Running Or In Review Count"`
	AdsRunningOrInReviewCountSubjectToLimitSetByPage uint                     `json:"ads_running_or_in_review_count_subject_to_limit_set_by_page,omitempty" jsonschema:"description=Ads Running Or In Review Count Subject To Limit Set By Page,minimum=13,maximum=100"`
	CurrentAccountAdsRunningOrInReviewCount          uint                     `json:"current_account_ads_running_or_in_review_count,omitempty" jsonschema:"description=Current Account Ads Running Or In Review Count"`
	FutureLimitActivationDate                        string                   `json:"future_limit_activation_date,omitempty" jsonschema:"description=Future Limit Activation Date"`
	FutureLimitOnAdsRunningOrInReview                uint                     `json:"future_limit_on_ads_running_or_in_review,omitempty" jsonschema:"description=Future Limit On Ads Running Or In Review"`
	LimitOnAdsRunningOrInReview                      uint                     `json:"limit_on_ads_running_or_in_review,omitempty" jsonschema:"description=Limit On Ads Running Or In Review"`
	Recommendations                                  []map[string]interface{} `json:"recommendations,omitempty" jsonschema:"description=Recommendations"`
}

// AdAccountAdsRecommendedAudios represents the Facebook AdAccountAdsRecommendedAudios object
type AdAccountAdsRecommendedAudios struct {
	AudioAssets []int `json:"audio_assets,omitempty" jsonschema:"description=Audio Assets"`
}

// AdAccountAgencyFeeConfig represents the Facebook AdAccountAgencyFeeConfig object
type AdAccountAgencyFeeConfig struct {
	CanAddAgencyFeeToInvoice bool                           `json:"can_add_agency_fee_to_invoice,omitempty" jsonschema:"description=Can Add Agency Fee To Invoice"`
	DefaultAgencyFeePct      float64                        `json:"default_agency_fee_pct,omitempty" jsonschema:"description=Default Agency Fee Pct"`
	ID                       string                         `json:"id,omitempty" jsonschema:"description=AdAccountAgencyFeeConfig ID,required,pattern=^[0-9]+$"`
	IsAgencyFeeDisabled      bool                           `json:"is_agency_fee_disabled,omitempty" jsonschema:"description=Is Agency Fee Disabled"`
	Status                   AdaccountagencyfeeconfigStatus `json:"status,omitempty" jsonschema:"description=Current status of the AdAccountAgencyFeeConfig,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// AdAccountAllPaymentMethods represents the Facebook AdAccountAllPaymentMethods object
type AdAccountAllPaymentMethods struct {
}

// AdAccountAmountSpentHistory represents the Facebook AdAccountAmountSpentHistory object
type AdAccountAmountSpentHistory struct {
	AmountSpent int    `json:"amount_spent,omitempty" jsonschema:"description=Amount Spent,minimum=1"`
	SpendCap    int    `json:"spend_cap,omitempty" jsonschema:"description=Spend Cap"`
	TimeStart   string `json:"time_start,omitempty" jsonschema:"description=Time Start"`
	TimeStop    string `json:"time_stop,omitempty" jsonschema:"description=Time Stop"`
}

// AdAccountAppSetupRequirements represents the Facebook AdAccountAppSetupRequirements object
type AdAccountAppSetupRequirements struct {
}

// AdAccountBankInfoList represents the Facebook AdAccountBankInfoList object
type AdAccountBankInfoList struct {
	Banks []map[string]interface{} `json:"banks,omitempty" jsonschema:"description=Banks"`
}

// AdAccountBillingDatePreference represents the Facebook AdAccountBillingDatePreference object
type AdAccountBillingDatePreference struct {
	AdAccount     *AdAccount `json:"ad_account,omitempty" jsonschema:"description=Ad Account"`
	DayOfMonth    int        `json:"day_of_month,omitempty" jsonschema:"description=Day Of Month"`
	ID            string     `json:"id,omitempty" jsonschema:"description=AdAccountBillingDatePreference ID,required,pattern=^[0-9]+$"`
	NextBillDate  time.Time  `json:"next_bill_date,omitempty" jsonschema:"description=Next Bill Date,format=date-time"`
	TimeCreated   time.Time  `json:"time_created,omitempty" jsonschema:"description=When the AdAccountBillingDatePreference was created,format=date-time"`
	TimeEffective time.Time  `json:"time_effective,omitempty" jsonschema:"description=Time Effective,format=date-time"`
}

// AdAccountBusinessConstraints represents the Facebook AdAccountBusinessConstraints object
type AdAccountBusinessConstraints struct {
	AudienceControls   map[string]interface{}             `json:"audience_controls,omitempty" jsonschema:"description=Audience Controls"`
	CampaignsWithError []string                           `json:"campaigns_with_error,omitempty" jsonschema:"description=Campaigns With Error"`
	PlacementControls  map[string]interface{}             `json:"placement_controls,omitempty" jsonschema:"description=Placement Controls"`
	Status             AdaccountbusinessconstraintsStatus `json:"status,omitempty" jsonschema:"description=Current status of the AdAccountBusinessConstraints"`
}

// AdAccountCampaignAttributionOptionInfo represents the Facebook AdAccountCampaignAttributionOptionInfo object
type AdAccountCampaignAttributionOptionInfo struct {
	IsEligible bool   `json:"is_eligible,omitempty" jsonschema:"description=Is Eligible"`
	Value      string `json:"value,omitempty" jsonschema:"description=Value"`
}

// AdAccountCreationRequest represents the Facebook AdAccountCreationRequest object
type AdAccountCreationRequest struct {
	AdAccountsCurrency             string                   `json:"ad_accounts_currency,omitempty" jsonschema:"description=Ad Accounts Currency"`
	AdAccountsInfo                 []map[string]interface{} `json:"ad_accounts_info,omitempty" jsonschema:"description=Ad Accounts Info"`
	AdditionalComment              string                   `json:"additional_comment,omitempty" jsonschema:"description=Additional Comment"`
	AddressInChinese               string                   `json:"address_in_chinese,omitempty" jsonschema:"description=Address In Chinese"`
	AddressInEnglish               map[string]interface{}   `json:"address_in_english,omitempty" jsonschema:"description=Address In English"`
	AddressInLocalLanguage         string                   `json:"address_in_local_language,omitempty" jsonschema:"description=Address In Local Language"`
	AdvertiserBusiness             *Business                `json:"advertiser_business,omitempty" jsonschema:"description=Advertiser Business"`
	AppealReason                   map[string]interface{}   `json:"appeal_reason,omitempty" jsonschema:"description=Appeal Reason"`
	Business                       *Business                `json:"business,omitempty" jsonschema:"description=Business"`
	BusinessRegistrationID         string                   `json:"business_registration_id,omitempty" jsonschema:"description=ID of the Business Registration,pattern=^[0-9]+$"`
	ChineseLegalEntityName         string                   `json:"chinese_legal_entity_name,omitempty" jsonschema:"description=Chinese Legal Entity Name"`
	Contact                        map[string]interface{}   `json:"contact,omitempty" jsonschema:"description=Contact"`
	Creator                        *User                    `json:"creator,omitempty" jsonschema:"description=Creator"`
	CreditCardID                   string                   `json:"credit_card_id,omitempty" jsonschema:"description=ID of the Credit Card,pattern=^[0-9]+$"`
	DisapprovalReasons             []map[string]interface{} `json:"disapproval_reasons,omitempty" jsonschema:"description=Disapproval Reasons"`
	EnglishLegalEntityName         string                   `json:"english_legal_entity_name,omitempty" jsonschema:"description=English Legal Entity Name"`
	ExtendedCreditID               string                   `json:"extended_credit_id,omitempty" jsonschema:"description=ID of the Extended Credit,pattern=^[0-9]+$"`
	ID                             string                   `json:"id,omitempty" jsonschema:"description=AdAccountCreationRequest ID,required,pattern=^[0-9]+$"`
	IsSmb                          bool                     `json:"is_smb,omitempty" jsonschema:"description=Is Smb"`
	IsTest                         bool                     `json:"is_test,omitempty" jsonschema:"description=Is Test"`
	LegalEntityNameInLocalLanguage string                   `json:"legal_entity_name_in_local_language,omitempty" jsonschema:"description=Legal Entity Name In Local Language"`
	OeRequestID                    string                   `json:"oe_request_id,omitempty" jsonschema:"description=ID of the Oe Request,pattern=^[0-9]+$"`
	OfficialWebsiteURL             string                   `json:"official_website_url,omitempty" jsonschema:"description=Official Website URL,format=uri"`
	PlanningAgencyBusiness         *Business                `json:"planning_agency_business,omitempty" jsonschema:"description=Planning Agency Business"`
	PlanningAgencyBusinessID       string                   `json:"planning_agency_business_id,omitempty" jsonschema:"description=ID of the Planning Agency Business,pattern=^[0-9]+$"`
	PromotableAppIDs               []string                 `json:"promotable_app_ids,omitempty" jsonschema:"description=Promotable App Ids,pattern=^[0-9]+$"`
	PromotablePageIDs              []string                 `json:"promotable_page_ids,omitempty" jsonschema:"description=Promotable Page Ids,pattern=^[0-9]+$"`
	PromotableURLs                 []string                 `json:"promotable_urls,omitempty" jsonschema:"description=Promotable Urls,format=uri"`
	RequestChangeReasons           []map[string]interface{} `json:"request_change_reasons,omitempty" jsonschema:"description=Request Change Reasons"`
	Status                         string                   `json:"status,omitempty" jsonschema:"description=Current status of the AdAccountCreationRequest,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	Subvertical                    string                   `json:"subvertical,omitempty" jsonschema:"description=Subvertical"`
	SubverticalV2                  string                   `json:"subvertical_v2,omitempty" jsonschema:"description=Subvertical V2"`
	TimeCreated                    time.Time                `json:"time_created,omitempty" jsonschema:"description=When the AdAccountCreationRequest was created,format=date-time"`
	Vertical                       string                   `json:"vertical,omitempty" jsonschema:"description=Vertical"`
	VerticalV2                     string                   `json:"vertical_v2,omitempty" jsonschema:"description=Vertical V2"`
}

// AdAccountCustomAudienceLimits represents the Facebook AdAccountCustomAudienceLimits object
type AdAccountCustomAudienceLimits struct {
	AudienceUpdateQuotaInTotal      int     `json:"audience_update_quota_in_total,omitempty" jsonschema:"description=Audience Update Quota In Total"`
	AudienceUpdateQuotaLeft         float64 `json:"audience_update_quota_left,omitempty" jsonschema:"description=Audience Update Quota Left"`
	HasHitAudienceUpdateLimit       bool    `json:"has_hit_audience_update_limit,omitempty" jsonschema:"description=Has Hit Audience Update Limit"`
	NextAudienceUpdateAvailableTime string  `json:"next_audience_update_available_time,omitempty" jsonschema:"description=Next Audience Update Available Time"`
	RateLimitResetTime              string  `json:"rate_limit_reset_time,omitempty" jsonschema:"description=Rate Limit Reset Time"`
}

// AdAccountDefaultDestination represents the Facebook AdAccountDefaultDestination object
type AdAccountDefaultDestination struct {
	DestinationID  string `json:"destination_id,omitempty" jsonschema:"description=ID of the Destination,pattern=^[0-9]+$"`
	DestinationURL string `json:"destination_url,omitempty" jsonschema:"description=Destination URL,format=uri"`
}

// AdAccountDefaultObjective represents the Facebook AdAccountDefaultObjective object
type AdAccountDefaultObjective struct {
	DefaultObjectiveForUser AdaccountdefaultobjectiveDefaultObjectiveForUser `json:"default_objective_for_user,omitempty" jsonschema:"description=Default Objective For User"`
	ObjectiveForLevel       AdaccountdefaultobjectiveObjectiveForLevel       `json:"objective_for_level,omitempty" jsonschema:"description=Objective For Level"`
}

// AdAccountDeliveryEstimate represents the Facebook AdAccountDeliveryEstimate object
type AdAccountDeliveryEstimate struct {
	DailyOutcomesCurve         []*OutcomePredictionPoint `json:"daily_outcomes_curve,omitempty" jsonschema:"description=Daily Outcomes Curve"`
	EstimateDau                int                       `json:"estimate_dau,omitempty" jsonschema:"description=Estimate Dau"`
	EstimateMauLowerBound      int                       `json:"estimate_mau_lower_bound,omitempty" jsonschema:"description=Estimate Mau Lower Bound"`
	EstimateMauUpperBound      int                       `json:"estimate_mau_upper_bound,omitempty" jsonschema:"description=Estimate Mau Upper Bound"`
	EstimateReady              bool                      `json:"estimate_ready,omitempty" jsonschema:"description=Estimate Ready"`
	TargetingOptimizationTypes []map[string]int          `json:"targeting_optimization_types,omitempty" jsonschema:"description=Targeting Optimization Types"`
}

// AdAccountDsaRecommendations represents the Facebook AdAccountDsaRecommendations object
type AdAccountDsaRecommendations struct {
	Recommendations []string `json:"recommendations,omitempty" jsonschema:"description=Recommendations"`
}

// AdAccountIosFourteenCampaignLimits represents the Facebook AdAccountIosFourteenCampaignLimits object
type AdAccountIosFourteenCampaignLimits struct {
	CampaignGroupLimit         int                      `json:"campaign_group_limit,omitempty" jsonschema:"description=Campaign Group Limit"`
	CampaignGroupLimitsDetails []map[string]interface{} `json:"campaign_group_limits_details,omitempty" jsonschema:"description=Campaign Group Limits Details"`
	CampaignLimit              int                      `json:"campaign_limit,omitempty" jsonschema:"description=Campaign Limit"`
}

// AdAccountLiveVideoAdvertiser represents the Facebook AdAccountLiveVideoAdvertiser object
type AdAccountLiveVideoAdvertiser struct {
	IsLvaToggleOn              bool `json:"is_lva_toggle_on,omitempty" jsonschema:"description=Is Lva Toggle On"`
	LvaDefaultBudget           int  `json:"lva_default_budget,omitempty" jsonschema:"description=Lva Default Budget,minimum=1"`
	ShouldDefaultCurrentLive   bool `json:"should_default_current_live,omitempty" jsonschema:"description=Should Default Current Live"`
	ShouldDefaultScheduledLive bool `json:"should_default_scheduled_live,omitempty" jsonschema:"description=Should Default Scheduled Live"`
	ShouldShowLvaToggle        bool `json:"should_show_lva_toggle,omitempty" jsonschema:"description=Should Show Lva Toggle"`
}

// AdAccountMatchedSearchApplicationsEdgeData represents the Facebook AdAccountMatchedSearchApplicationsEdgeData object
type AdAccountMatchedSearchApplicationsEdgeData struct {
	AppID                   string `json:"app_id,omitempty" jsonschema:"description=ID of the App,pattern=^[0-9]+$"`
	AreAppEventsUnavailable bool   `json:"are_app_events_unavailable,omitempty" jsonschema:"description=Are App Events Unavailable"`
	IconURL                 string `json:"icon_url,omitempty" jsonschema:"description=Icon URL,format=uri"`
	Name                    string `json:"name,omitempty" jsonschema:"description=Name of the AdAccountMatchedSearchApplicationsEdgeData,required"`
	SearchSourceStore       string `json:"search_source_store,omitempty" jsonschema:"description=Search Source Store"`
	Store                   string `json:"store,omitempty" jsonschema:"description=Store"`
	UniqueID                string `json:"unique_id,omitempty" jsonschema:"description=ID of the Unique,pattern=^[0-9]+$"`
	URL                     string `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
}

// AdAccountMaxBid represents the Facebook AdAccountMaxBid object
type AdAccountMaxBid struct {
	MaxBid int `json:"max_bid,omitempty" jsonschema:"description=Max Bid"`
}

// AdAccountOptimizationGoalsAEMv2Eligibility represents the Facebook AdAccountOptimizationGoalsAEMv2Eligibility object
type AdAccountOptimizationGoalsAEMv2Eligibility struct {
	IsDisabled       bool                                                       `json:"is_disabled,omitempty" jsonschema:"description=Is Disabled"`
	OptimizationGoal Adaccountoptimizationgoalsaemv2eligibilityOptimizationGoal `json:"optimization_goal,omitempty" jsonschema:"description=Optimization Goal"`
}

// AdAccountPaymentDetails represents the Facebook AdAccountPaymentDetails object
type AdAccountPaymentDetails struct {
	Amount           *CurrencyAmount        `json:"amount,omitempty" jsonschema:"description=Amount"`
	CreateDate       int                    `json:"create_date,omitempty" jsonschema:"description=Create Date"`
	ID               string                 `json:"id,omitempty" jsonschema:"description=AdAccountPaymentDetails ID,required,pattern=^[0-9]+$"`
	LastActionStatus string                 `json:"last_action_status,omitempty" jsonschema:"description=Last Action Status"`
	Metadata         map[string]interface{} `json:"metadata,omitempty" jsonschema:"description=Metadata"`
	PaymentDetailsID string                 `json:"payment_details_id,omitempty" jsonschema:"description=ID of the Payment Details,pattern=^[0-9]+$"`
}

// AdAccountPaymentOptions represents the Facebook AdAccountPaymentOptions object
type AdAccountPaymentOptions struct {
	AvailableAltpayOptions  []map[string]interface{} `json:"available_altpay_options,omitempty" jsonschema:"description=Available Altpay Options"`
	AvailableCardTypes      []string                 `json:"available_card_types,omitempty" jsonschema:"description=Available Card Types"`
	AvailablePaymentOptions []string                 `json:"available_payment_options,omitempty" jsonschema:"description=Available Payment Options"`
	ExistingPaymentMethods  []map[string]interface{} `json:"existing_payment_methods,omitempty" jsonschema:"description=Existing Payment Methods"`
}

// AdAccountPrepayDetails represents the Facebook AdAccountPrepayDetails object
type AdAccountPrepayDetails struct {
	DefaultFundingAmount         *CurrencyAmount `json:"default_funding_amount,omitempty" jsonschema:"description=Default Funding Amount"`
	MaxAcceptableAmount          *CurrencyAmount `json:"max_acceptable_amount,omitempty" jsonschema:"description=Max Acceptable Amount"`
	MinAcceptableAmount          *CurrencyAmount `json:"min_acceptable_amount,omitempty" jsonschema:"description=Min Acceptable Amount"`
	ShouldCollectBusinessDetails bool            `json:"should_collect_business_details,omitempty" jsonschema:"description=Should Collect Business Details"`
}

// AdAccountPromotableObjects represents the Facebook AdAccountPromotableObjects object
type AdAccountPromotableObjects struct {
	PromotableAppIDs  []string `json:"promotable_app_ids,omitempty" jsonschema:"description=Promotable App Ids,pattern=^[0-9]+$"`
	PromotablePageIDs []string `json:"promotable_page_ids,omitempty" jsonschema:"description=Promotable Page Ids,pattern=^[0-9]+$"`
	PromotableURLs    []string `json:"promotable_urls,omitempty" jsonschema:"description=Promotable Urls,format=uri"`
}

// AdAccountPromotionProgressBar represents the Facebook AdAccountPromotionProgressBar object
type AdAccountPromotionProgressBar struct {
	AdaccountPermission    bool      `json:"adaccount_permission,omitempty" jsonschema:"description=Adaccount Permission"`
	CouponCurrency         string    `json:"coupon_currency,omitempty" jsonschema:"description=Coupon Currency"`
	CouponValue            int       `json:"coupon_value,omitempty" jsonschema:"description=Coupon Value"`
	ExpirationTime         time.Time `json:"expiration_time,omitempty" jsonschema:"description=Expiration Time,format=date-time"`
	ProgressCompleted      bool      `json:"progress_completed,omitempty" jsonschema:"description=Progress Completed"`
	PromotionType          string    `json:"promotion_type,omitempty" jsonschema:"description=Promotion Type"`
	SpendRequirementInCent int       `json:"spend_requirement_in_cent,omitempty" jsonschema:"description=Spend Requirement In Cent"`
	SpendSinceEnrollment   int       `json:"spend_since_enrollment,omitempty" jsonschema:"description=Spend Since Enrollment"`
}

// AdAccountReachEstimate represents the Facebook AdAccountReachEstimate object
type AdAccountReachEstimate struct {
	EstimateReady   bool `json:"estimate_ready,omitempty" jsonschema:"description=Estimate Ready"`
	UsersLowerBound int  `json:"users_lower_bound,omitempty" jsonschema:"description=Users Lower Bound"`
	UsersUpperBound int  `json:"users_upper_bound,omitempty" jsonschema:"description=Users Upper Bound"`
}

// AdAccountRecommendations represents the Facebook AdAccountRecommendations object
type AdAccountRecommendations struct {
	Recommendations []map[string]interface{} `json:"recommendations,omitempty" jsonschema:"description=Recommendations"`
}

// AdAccountRecommendedCamapaignBudget represents the Facebook AdAccountRecommendedCamapaignBudget object
type AdAccountRecommendedCamapaignBudget struct {
	Daily     string `json:"daily,omitempty" jsonschema:"description=Daily"`
	Lifetime  string `json:"lifetime,omitempty" jsonschema:"description=Lifetime"`
	Objective string `json:"objective,omitempty" jsonschema:"description=Objective"`
}

// AdAccountRelatedIcoStudy represents the Facebook AdAccountRelatedIcoStudy object
type AdAccountRelatedIcoStudy struct {
}

// AdAccountSmartSuggestedAds represents the Facebook AdAccountSmartSuggestedAds object
type AdAccountSmartSuggestedAds struct {
	AdCreativeSpec string   `json:"ad_creative_spec,omitempty" jsonschema:"description=Ad Creative Spec"`
	Description    string   `json:"description,omitempty" jsonschema:"description=Description"`
	GuidanceSpec   []string `json:"guidance_spec,omitempty" jsonschema:"description=Guidance Spec"`
	ThumbnailURL   string   `json:"thumbnail_url,omitempty" jsonschema:"description=Thumbnail URL,format=uri"`
}

// AdAccountSpendCapChangeHistory represents the Facebook AdAccountSpendCapChangeHistory object
type AdAccountSpendCapChangeHistory struct {
	Action    string `json:"action,omitempty" jsonschema:"description=Action"`
	SpendCap  int    `json:"spend_cap,omitempty" jsonschema:"description=Spend Cap"`
	TimeStart string `json:"time_start,omitempty" jsonschema:"description=Time Start"`
	TimeStop  string `json:"time_stop,omitempty" jsonschema:"description=Time Stop"`
}

// AdAccountSpendLimit represents the Facebook AdAccountSpendLimit object
type AdAccountSpendLimit struct {
	AmountSpent string `json:"amount_spent,omitempty" jsonschema:"description=Amount Spent"`
	GroupID     string `json:"group_id,omitempty" jsonschema:"description=ID of the Group,pattern=^[0-9]+$"`
	LimitID     string `json:"limit_id,omitempty" jsonschema:"description=ID of the Limit,pattern=^[0-9]+$"`
	LimitValue  string `json:"limit_value,omitempty" jsonschema:"description=Limit Value"`
	TimeCreated uint   `json:"time_created,omitempty" jsonschema:"description=When the AdAccountSpendLimit was created"`
	TimeStart   uint   `json:"time_start,omitempty" jsonschema:"description=Time Start"`
	TimeStop    uint   `json:"time_stop,omitempty" jsonschema:"description=Time Stop"`
}

// AdAccountSubscribedApps represents the Facebook AdAccountSubscribedApps object
type AdAccountSubscribedApps struct {
	AppID   string `json:"app_id,omitempty" jsonschema:"description=ID of the App,pattern=^[0-9]+$"`
	AppName string `json:"app_name,omitempty" jsonschema:"description=App Name"`
}

// AdAccountSubsidyAmountDetails represents the Facebook AdAccountSubsidyAmountDetails object
type AdAccountSubsidyAmountDetails struct {
	EnteredAmount *CurrencyAmount `json:"entered_amount,omitempty" jsonschema:"description=Entered Amount"`
	FeeAmount     *CurrencyAmount `json:"fee_amount,omitempty" jsonschema:"description=Fee Amount"`
	TotalAmount   *CurrencyAmount `json:"total_amount,omitempty" jsonschema:"description=Total Amount"`
}

// AdAccountTargetingUnified represents the Facebook AdAccountTargetingUnified object
type AdAccountTargetingUnified struct {
	AudienceSizeLowerBound uint     `json:"audience_size_lower_bound,omitempty" jsonschema:"description=Audience Size Lower Bound"`
	AudienceSizeUpperBound uint     `json:"audience_size_upper_bound,omitempty" jsonschema:"description=Audience Size Upper Bound"`
	ConversionLift         float64  `json:"conversion_lift,omitempty" jsonschema:"description=Conversion Lift"`
	Description            string   `json:"description,omitempty" jsonschema:"description=Description"`
	ID                     string   `json:"id,omitempty" jsonschema:"description=AdAccountTargetingUnified ID,required,pattern=^[0-9]+$"`
	Img                    string   `json:"img,omitempty" jsonschema:"description=Img"`
	Info                   string   `json:"info,omitempty" jsonschema:"description=Info"`
	InfoTitle              string   `json:"info_title,omitempty" jsonschema:"description=Info Title"`
	IsRecommendation       bool     `json:"is_recommendation,omitempty" jsonschema:"description=Is Recommendation"`
	Key                    string   `json:"key,omitempty" jsonschema:"description=Key"`
	Link                   string   `json:"link,omitempty" jsonschema:"description=Link"`
	Name                   string   `json:"name,omitempty" jsonschema:"description=Name of the AdAccountTargetingUnified,required"`
	Parent                 string   `json:"parent,omitempty" jsonschema:"description=Parent"`
	Partner                string   `json:"partner,omitempty" jsonschema:"description=Partner"`
	Path                   []string `json:"path,omitempty" jsonschema:"description=Path"`
	PerformanceRating      uint     `json:"performance_rating,omitempty" jsonschema:"description=Performance Rating"`
	RawName                string   `json:"raw_name,omitempty" jsonschema:"description=Raw Name"`
	RecommendationModel    string   `json:"recommendation_model,omitempty" jsonschema:"description=Recommendation Model"`
	SearchInterestID       string   `json:"search_interest_id,omitempty" jsonschema:"description=ID of the Search Interest,pattern=^[0-9]+$"`
	Source                 string   `json:"source,omitempty" jsonschema:"description=Source"`
	Spend                  float64  `json:"spend,omitempty" jsonschema:"description=Spend"`
	Type                   string   `json:"type,omitempty" jsonschema:"description=Type"`
	Valid                  bool     `json:"valid,omitempty" jsonschema:"description=Valid"`
}

// AdAccountTrackingData represents the Facebook AdAccountTrackingData object
type AdAccountTrackingData struct {
	TrackingSpecs *ConversionActionQuery `json:"tracking_specs,omitempty" jsonschema:"description=Tracking Specs"`
}

// AdAccountURLForAssetExtraction represents the Facebook AdAccountURLForAssetExtraction object
type AdAccountURLForAssetExtraction struct {
	SourceType string `json:"source_type,omitempty" jsonschema:"description=Source Type"`
	SourceURL  string `json:"source_url,omitempty" jsonschema:"description=Source URL,format=uri"`
}

// AdAccountUser represents the Facebook AdAccountUser object
type AdAccountUser struct {
	ID    string   `json:"id,omitempty" jsonschema:"description=AdAccountUser ID,required,pattern=^[0-9]+$"`
	Name  string   `json:"name,omitempty" jsonschema:"description=Name of the AdAccountUser,required"`
	Tasks []string `json:"tasks,omitempty" jsonschema:"description=Tasks"`
}

// AdAccountUserPermissions represents the Facebook AdAccountUserPermissions object
type AdAccountUserPermissions struct {
	Business        *Business              `json:"business,omitempty" jsonschema:"description=Business"`
	BusinessPersona map[string]interface{} `json:"business_persona,omitempty" jsonschema:"description=Business Persona"`
	CreatedBy       *User                  `json:"created_by,omitempty" jsonschema:"description=When the AdAccountUserPermissions was created"`
	CreatedTime     time.Time              `json:"created_time,omitempty" jsonschema:"description=When the AdAccountUserPermissions was created,format=date-time"`
	Email           string                 `json:"email,omitempty" jsonschema:"description=Email"`
	Status          string                 `json:"status,omitempty" jsonschema:"description=Current status of the AdAccountUserPermissions,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	Tasks           []string               `json:"tasks,omitempty" jsonschema:"description=Tasks"`
	UpdatedBy       *User                  `json:"updated_by,omitempty" jsonschema:"description=When the AdAccountUserPermissions was last updated"`
	UpdatedTime     time.Time              `json:"updated_time,omitempty" jsonschema:"description=When the AdAccountUserPermissions was last updated,format=date-time"`
	User            *User                  `json:"user,omitempty" jsonschema:"description=User"`
}

// AdAccountUserSettings represents the Facebook AdAccountUserSettings object
type AdAccountUserSettings struct {
	AcfShouldOptOutVideoAdjustments                     bool                                            `json:"acf_should_opt_out_video_adjustments,omitempty" jsonschema:"description=Acf Should Opt Out Video Adjustments"`
	AcoStickySettings                                   []map[string]string                             `json:"aco_sticky_settings,omitempty" jsonschema:"description=Aco Sticky Settings"`
	ActionsQuickViewCreated                             bool                                            `json:"actions_quick_view_created,omitempty" jsonschema:"description=When the AdAccountUserSettings was created"`
	ActiveAdsQuickViewCreated                           bool                                            `json:"active_ads_quick_view_created,omitempty" jsonschema:"description=When the AdAccountUserSettings was created"`
	AdAccount                                           *AdAccount                                      `json:"ad_account,omitempty" jsonschema:"description=Ad Account"`
	AdObjectExportFormat                                string                                          `json:"ad_object_export_format,omitempty" jsonschema:"description=Ad Object Export Format"`
	AdsManagerFooterRowToastImpressions                 int                                             `json:"ads_manager_footer_row_toast_impressions,omitempty" jsonschema:"description=Ads Manager Footer Row Toast Impressions,minimum=13,maximum=100"`
	AutoReviewVideoCaption                              bool                                            `json:"auto_review_video_caption,omitempty" jsonschema:"description=Auto Review Video Caption"`
	CampaignOverviewColumns                             []string                                        `json:"campaign_overview_columns,omitempty" jsonschema:"description=Campaign Overview Columns"`
	ColumnSuggestionStatus                              string                                          `json:"column_suggestion_status,omitempty" jsonschema:"description=Column Suggestion Status"`
	ConditionalFormattingRules                          []string                                        `json:"conditional_formatting_rules,omitempty" jsonschema:"description=Conditional Formatting Rules"`
	DefaultAccountOverviewAgegenderMetrics              []string                                        `json:"default_account_overview_agegender_metrics,omitempty" jsonschema:"description=Default Account Overview Agegender Metrics"`
	DefaultAccountOverviewLocationMetrics               []string                                        `json:"default_account_overview_location_metrics,omitempty" jsonschema:"description=Default Account Overview Location Metrics"`
	DefaultAccountOverviewMetrics                       []string                                        `json:"default_account_overview_metrics,omitempty" jsonschema:"description=Default Account Overview Metrics"`
	DefaultAccountOverviewTimeMetrics                   []string                                        `json:"default_account_overview_time_metrics,omitempty" jsonschema:"description=Default Account Overview Time Metrics"`
	DefaultBuiltinColumnPreset                          string                                          `json:"default_builtin_column_preset,omitempty" jsonschema:"description=Default Builtin Column Preset"`
	DefaultNamTimeRange                                 string                                          `json:"default_nam_time_range,omitempty" jsonschema:"description=Default Nam Time Range"`
	DraftModeEnabled                                    bool                                            `json:"draft_mode_enabled,omitempty" jsonschema:"description=Draft Mode Enabled"`
	ExportDeletedItemsWithDelivery                      bool                                            `json:"export_deleted_items_with_delivery,omitempty" jsonschema:"description=Export Deleted Items With Delivery"`
	ExportSummaryRow                                    bool                                            `json:"export_summary_row,omitempty" jsonschema:"description=Export Summary Row"`
	HadDeliveryQuickViewCreated                         bool                                            `json:"had_delivery_quick_view_created,omitempty" jsonschema:"description=When the AdAccountUserSettings was created"`
	HasSeenGroupsColumnFlexingExperience                bool                                            `json:"has_seen_groups_column_flexing_experience,omitempty" jsonschema:"description=Has Seen Groups Column Flexing Experience"`
	HasSeenInstagramColumnFlexingExperience             bool                                            `json:"has_seen_instagram_column_flexing_experience,omitempty" jsonschema:"description=Has Seen Instagram Column Flexing Experience"`
	HasSeenLeadsColumnFlexingExperience                 bool                                            `json:"has_seen_leads_column_flexing_experience,omitempty" jsonschema:"description=Has Seen Leads Column Flexing Experience"`
	HasSeenShopsAdsMetricsOnboardingTour                bool                                            `json:"has_seen_shops_ads_metrics_onboarding_tour,omitempty" jsonschema:"description=Has Seen Shops Ads Metrics Onboarding Tour"`
	HasSeenShopsColumnFlexingExperience                 bool                                            `json:"has_seen_shops_column_flexing_experience,omitempty" jsonschema:"description=Has Seen Shops Column Flexing Experience"`
	HiddenOptimizationTips                              []map[string]bool                               `json:"hidden_optimization_tips,omitempty" jsonschema:"description=Hidden Optimization Tips"`
	HighPerformingQuickViewCreated                      bool                                            `json:"high_performing_quick_view_created,omitempty" jsonschema:"description=When the AdAccountUserSettings was created"`
	ID                                                  string                                          `json:"id,omitempty" jsonschema:"description=AdAccountUserSettings ID,required,pattern=^[0-9]+$"`
	Is3pAuthSettingSet                                  bool                                            `json:"is_3p_auth_setting_set,omitempty" jsonschema:"description=Is 3p Auth Setting Set"`
	IsAdsManagerFooterRowPreferenceSet                  bool                                            `json:"is_ads_manager_footer_row_preference_set,omitempty" jsonschema:"description=Is Ads Manager Footer Row Preference Set"`
	IsAdsManagerFooterRowShown                          bool                                            `json:"is_ads_manager_footer_row_shown,omitempty" jsonschema:"description=Is Ads Manager Footer Row Shown"`
	IsTextVariationNuxClose                             bool                                            `json:"is_text_variation_nux_close,omitempty" jsonschema:"description=Is Text Variation Nux Close"`
	LastUsedColumns                                     map[string]interface{}                          `json:"last_used_columns,omitempty" jsonschema:"description=Last Used Columns"`
	LastUsedPeFilters                                   []map[string]interface{}                        `json:"last_used_pe_filters,omitempty" jsonschema:"description=Last Used Pe Filters"`
	LastUsedWebsiteURLs                                 []string                                        `json:"last_used_website_urls,omitempty" jsonschema:"description=Last Used Website Urls,format=uri"`
	OutlierPreferences                                  map[string]interface{}                          `json:"outlier_preferences,omitempty" jsonschema:"description=Outlier Preferences"`
	PinnedAdObjectIDs                                   []string                                        `json:"pinned_ad_object_ids,omitempty" jsonschema:"description=Pinned Ad Object Ids,pattern=^[0-9]+$"`
	RbExportFormat                                      string                                          `json:"rb_export_format,omitempty" jsonschema:"description=Rb Export Format"`
	RbExportRawData                                     bool                                            `json:"rb_export_raw_data,omitempty" jsonschema:"description=Rb Export Raw Data"`
	RbExportSummaryRow                                  bool                                            `json:"rb_export_summary_row,omitempty" jsonschema:"description=Rb Export Summary Row"`
	SaipAdvertiserSetupOptimisationGuidanceOverallState string                                          `json:"saip_advertiser_setup_optimisation_guidance_overall_state,omitempty" jsonschema:"description=Saip Advertiser Setup Optimisation Guidance Overall State"`
	SaipAdvertiserSetupOptimisationGuidanceState        []map[string]string                             `json:"saip_advertiser_setup_optimisation_guidance_state,omitempty" jsonschema:"description=Saip Advertiser Setup Optimisation Guidance State"`
	ShopsAdsMetricsOnboardingTourCloseCount             int                                             `json:"shops_ads_metrics_onboarding_tour_close_count,omitempty" jsonschema:"description=Shops Ads Metrics Onboarding Tour Close Count"`
	ShopsAdsMetricsOnboardingTourLastActionTime         time.Time                                       `json:"shops_ads_metrics_onboarding_tour_last_action_time,omitempty" jsonschema:"description=Shops Ads Metrics Onboarding Tour Last Action Time,format=date-time"`
	ShouldDefaultImageAutoCrop                          bool                                            `json:"should_default_image_auto_crop,omitempty" jsonschema:"description=Should Default Image Auto Crop"`
	ShouldDefaultImageAutoCropForTail                   bool                                            `json:"should_default_image_auto_crop_for_tail,omitempty" jsonschema:"description=Should Default Image Auto Crop For Tail"`
	ShouldDefaultImageAutoCropOptimization              bool                                            `json:"should_default_image_auto_crop_optimization,omitempty" jsonschema:"description=Should Default Image Auto Crop Optimization"`
	ShouldDefaultImageDofToggle                         bool                                            `json:"should_default_image_dof_toggle,omitempty" jsonschema:"description=Should Default Image Dof Toggle"`
	ShouldDefaultImageLppAdsToSquare                    bool                                            `json:"should_default_image_lpp_ads_to_square,omitempty" jsonschema:"description=Should Default Image Lpp Ads To Square"`
	ShouldDefaultInstagramProfileCardOptimization       bool                                            `json:"should_default_instagram_profile_card_optimization,omitempty" jsonschema:"description=Should Default Instagram Profile Card Optimization"`
	ShouldDefaultTextSwappingOptimization               bool                                            `json:"should_default_text_swapping_optimization,omitempty" jsonschema:"description=Should Default Text Swapping Optimization"`
	ShouldLogoutOf3pSourcing                            bool                                            `json:"should_logout_of_3p_sourcing,omitempty" jsonschema:"description=Should Logout Of 3p Sourcing"`
	ShouldShowShopsAdsMetricsOnboardingTour             bool                                            `json:"should_show_shops_ads_metrics_onboarding_tour,omitempty" jsonschema:"description=Should Show Shops Ads Metrics Onboarding Tour"`
	ShowArchivedData                                    bool                                            `json:"show_archived_data,omitempty" jsonschema:"description=Show Archived Data"`
	ShowTextVariationNuxTooltip                         bool                                            `json:"show_text_variation_nux_tooltip,omitempty" jsonschema:"description=Show Text Variation Nux Tooltip"`
	SydCampaignTrendsActivemetric                       string                                          `json:"syd_campaign_trends_activemetric,omitempty" jsonschema:"description=Syd Campaign Trends Activemetric"`
	SydCampaignTrendsAttribution                        string                                          `json:"syd_campaign_trends_attribution,omitempty" jsonschema:"description=Syd Campaign Trends Attribution"`
	SydCampaignTrendsMetrics                            []string                                        `json:"syd_campaign_trends_metrics,omitempty" jsonschema:"description=Syd Campaign Trends Metrics"`
	SydCampaignTrendsObjective                          AdaccountusersettingsSydCampaignTrendsObjective `json:"syd_campaign_trends_objective,omitempty" jsonschema:"description=Syd Campaign Trends Objective"`
	SydCampaignTrendsTimeRange                          string                                          `json:"syd_campaign_trends_time_range,omitempty" jsonschema:"description=Syd Campaign Trends Time Range"`
	SydLandingPageOptInStatus                           string                                          `json:"syd_landing_page_opt_in_status,omitempty" jsonschema:"description=Syd Landing Page Opt In Status"`
	TextGenPersonaOptInType                             string                                          `json:"text_gen_persona_opt_in_type,omitempty" jsonschema:"description=Text Gen Persona Opt In Type"`
	TextVariationsOptInOutTs                            time.Time                                       `json:"text_variations_opt_in_out_ts,omitempty" jsonschema:"description=Text Variations Opt In Out Ts,format=date-time"`
	TextVariationsOptInType                             string                                          `json:"text_variations_opt_in_type,omitempty" jsonschema:"description=Text Variations Opt In Type"`
	User                                                *User                                           `json:"user,omitempty" jsonschema:"description=User"`
}

// AdAccountYouthAdsAdvertiser represents the Facebook AdAccountYouthAdsAdvertiser object
type AdAccountYouthAdsAdvertiser struct {
	IsYouthAdsAdvertiser bool `json:"is_youth_ads_advertiser,omitempty" jsonschema:"description=Is Youth Ads Advertiser"`
}

// AdActivity represents the Facebook AdActivity object
type AdActivity struct {
	ActorID             string              `json:"actor_id,omitempty" jsonschema:"description=ID of the Actor,pattern=^[0-9]+$"`
	ActorName           string              `json:"actor_name,omitempty" jsonschema:"description=Actor Name"`
	ApplicationID       string              `json:"application_id,omitempty" jsonschema:"description=ID of the Application,pattern=^[0-9]+$"`
	ApplicationName     string              `json:"application_name,omitempty" jsonschema:"description=Application Name"`
	DateTimeInTimezone  string              `json:"date_time_in_timezone,omitempty" jsonschema:"description=Date Time In Timezone"`
	EventTime           time.Time           `json:"event_time,omitempty" jsonschema:"description=Event Time,format=date-time"`
	EventType           AdactivityEventType `json:"event_type,omitempty" jsonschema:"description=Event Type"`
	ExtraData           string              `json:"extra_data,omitempty" jsonschema:"description=Extra Data"`
	ObjectID            string              `json:"object_id,omitempty" jsonschema:"description=ID of the Object,pattern=^[0-9]+$"`
	ObjectName          string              `json:"object_name,omitempty" jsonschema:"description=Object Name"`
	ObjectType          string              `json:"object_type,omitempty" jsonschema:"description=Object Type"`
	TranslatedEventType string              `json:"translated_event_type,omitempty" jsonschema:"description=Translated Event Type"`
}

// AdAssetBody represents the Facebook AdAssetBody object
type AdAssetBody struct {
	ID      string `json:"id,omitempty" jsonschema:"description=AdAssetBody ID,required,pattern=^[0-9]+$"`
	Text    string `json:"text,omitempty" jsonschema:"description=Text"`
	URLTags string `json:"url_tags,omitempty" jsonschema:"description=URL Tags,format=uri"`
}

// AdAssetCallToActionType represents the Facebook AdAssetCallToActionType object
type AdAssetCallToActionType struct {
	ID   string `json:"id,omitempty" jsonschema:"description=AdAssetCallToActionType ID,required,pattern=^[0-9]+$"`
	Name string `json:"name,omitempty" jsonschema:"description=Name of the AdAssetCallToActionType,required"`
}

// AdAssetCustomizationRuleCustomizationSpec represents the Facebook AdAssetCustomizationRuleCustomizationSpec object
type AdAssetCustomizationRuleCustomizationSpec struct {
	AgeMax                   uint                                                       `json:"age_max,omitempty" jsonschema:"description=Age Max,minimum=13,maximum=100"`
	AgeMin                   uint                                                       `json:"age_min,omitempty" jsonschema:"description=Age Min,minimum=13,maximum=100"`
	AudienceNetworkPositions []string                                                   `json:"audience_network_positions,omitempty" jsonschema:"description=Audience Network Positions"`
	DevicePlatforms          []AdassetcustomizationrulecustomizationspecDevicePlatforms `json:"device_platforms,omitempty" jsonschema:"description=Device Platforms"`
	FacebookPositions        []string                                                   `json:"facebook_positions,omitempty" jsonschema:"description=Facebook Positions"`
	GeoLocations             *TargetingGeoLocation                                      `json:"geo_locations,omitempty" jsonschema:"description=Geo Locations"`
	InstagramPositions       []string                                                   `json:"instagram_positions,omitempty" jsonschema:"description=Instagram Positions"`
	Locales                  []uint                                                     `json:"locales,omitempty" jsonschema:"description=Locales"`
	MessengerPositions       []string                                                   `json:"messenger_positions,omitempty" jsonschema:"description=Messenger Positions"`
	PublisherPlatforms       []string                                                   `json:"publisher_platforms,omitempty" jsonschema:"description=Publisher Platforms"`
}

// AdAssetDescription represents the Facebook AdAssetDescription object
type AdAssetDescription struct {
	ID      string `json:"id,omitempty" jsonschema:"description=AdAssetDescription ID,required,pattern=^[0-9]+$"`
	Text    string `json:"text,omitempty" jsonschema:"description=Text"`
	URLTags string `json:"url_tags,omitempty" jsonschema:"description=URL Tags,format=uri"`
}

// AdAssetFeedAdditionalData represents the Facebook AdAssetFeedAdditionalData object
type AdAssetFeedAdditionalData struct {
	AutomatedProductTags           bool   `json:"automated_product_tags,omitempty" jsonschema:"description=Automated Product Tags"`
	BrandPageID                    string `json:"brand_page_id,omitempty" jsonschema:"description=ID of the Brand Page,pattern=^[0-9]+$"`
	IsClickToMessage               bool   `json:"is_click_to_message,omitempty" jsonschema:"description=Is Click To Message"`
	MultiShareEndCard              bool   `json:"multi_share_end_card,omitempty" jsonschema:"description=Multi Share End Card"`
	PageWelcomeMessage             string `json:"page_welcome_message,omitempty" jsonschema:"description=Page Welcome Message"`
	PartnerAppWelcomeMessageFlowID string `json:"partner_app_welcome_message_flow_id,omitempty" jsonschema:"description=ID of the Partner App Welcome Message Flow,pattern=^[0-9]+$"`
}

// AdAssetFeedAdditionalDataPageNudgeMessage represents the Facebook AdAssetFeedAdditionalDataPageNudgeMessage object
type AdAssetFeedAdditionalDataPageNudgeMessage struct {
	Enabled      bool                     `json:"enabled,omitempty" jsonschema:"description=Enabled"`
	QuickReplies []map[string]interface{} `json:"quick_replies,omitempty" jsonschema:"description=Quick Replies"`
	Text         string                   `json:"text,omitempty" jsonschema:"description=Text"`
}

// AdAssetFeedSpec represents the Facebook AdAssetFeedSpec object
type AdAssetFeedSpec struct {
	AdFormats               []string                                 `json:"ad_formats,omitempty" jsonschema:"description=Ad Formats"`
	AdditionalData          *AdAssetFeedAdditionalData               `json:"additional_data,omitempty" jsonschema:"description=Additional Data"`
	AppProductPageID        string                                   `json:"app_product_page_id,omitempty" jsonschema:"description=ID of the App Product Page,pattern=^[0-9]+$"`
	AssetCustomizationRules []*AdAssetFeedSpecAssetCustomizationRule `json:"asset_customization_rules,omitempty" jsonschema:"description=Asset Customization Rules"`
	Audios                  []map[string]interface{}                 `json:"audios,omitempty" jsonschema:"description=Audios"`
	Autotranslate           []string                                 `json:"autotranslate,omitempty" jsonschema:"description=Autotranslate"`
	Bodies                  []*AdAssetFeedSpecBody                   `json:"bodies,omitempty" jsonschema:"description=Bodies"`
	CallAdsConfiguration    map[string]interface{}                   `json:"call_ads_configuration,omitempty" jsonschema:"description=Call Ads Configuration"`
	CallToActionTypes       []AdassetfeedspecCallToActionTypes       `json:"call_to_action_types,omitempty" jsonschema:"description=Call To Action Types"`
	CallToActions           []*AdAssetFeedSpecCallToAction           `json:"call_to_actions,omitempty" jsonschema:"description=Call To Actions"`
	Captions                []*AdAssetFeedSpecCaption                `json:"captions,omitempty" jsonschema:"description=Captions"`
	Carousels               []*AdAssetFeedSpecCarousel               `json:"carousels,omitempty" jsonschema:"description=Carousels"`
	CtwaConsentData         []map[string]interface{}                 `json:"ctwa_consent_data,omitempty" jsonschema:"description=Ctwa Consent Data"`
	Descriptions            []*AdAssetFeedSpecDescription            `json:"descriptions,omitempty" jsonschema:"description=Descriptions"`
	Events                  []*AdAssetFeedSpecEvents                 `json:"events,omitempty" jsonschema:"description=Events"`
	Groups                  []*AdAssetFeedSpecGroupRule              `json:"groups,omitempty" jsonschema:"description=Groups"`
	Images                  []*AdAssetFeedSpecImage                  `json:"images,omitempty" jsonschema:"description=Images"`
	LinkURLs                []*AdAssetFeedSpecLinkURL                `json:"link_urls,omitempty" jsonschema:"description=Link Urls,format=uri"`
	MessageExtensions       []*AdAssetMessageExtensions              `json:"message_extensions,omitempty" jsonschema:"description=Message Extensions"`
	OnsiteDestinations      []*AdAssetOnsiteDestinations             `json:"onsite_destinations,omitempty" jsonschema:"description=Onsite Destinations"`
	OptimizationType        string                                   `json:"optimization_type,omitempty" jsonschema:"description=Optimization Type"`
	PromotionalMetadata     map[string]interface{}                   `json:"promotional_metadata,omitempty" jsonschema:"description=Promotional Metadata"`
	ReasonsToShop           bool                                     `json:"reasons_to_shop,omitempty" jsonschema:"description=Reasons To Shop"`
	ShopsBundle             bool                                     `json:"shops_bundle,omitempty" jsonschema:"description=Shops Bundle"`
	Titles                  []*AdAssetFeedSpecTitle                  `json:"titles,omitempty" jsonschema:"description=Titles"`
	Translations            []map[string]interface{}                 `json:"translations,omitempty" jsonschema:"description=Translations"`
	UpcomingEvents          []map[string]interface{}                 `json:"upcoming_events,omitempty" jsonschema:"description=Upcoming Events"`
	Videos                  []*AdAssetFeedSpecVideo                  `json:"videos,omitempty" jsonschema:"description=Videos"`
}

// AdAssetFeedSpecAssetCustomizationRule represents the Facebook AdAssetFeedSpecAssetCustomizationRule object
type AdAssetFeedSpecAssetCustomizationRule struct {
	BodyLabel             *AdAssetFeedSpecAssetLabel                 `json:"body_label,omitempty" jsonschema:"description=Body Label"`
	CallToActionLabel     *AdAssetFeedSpecAssetLabel                 `json:"call_to_action_label,omitempty" jsonschema:"description=Call To Action Label"`
	CallToActionTypeLabel *AdAssetFeedSpecAssetLabel                 `json:"call_to_action_type_label,omitempty" jsonschema:"description=Call To Action Type Label"`
	CaptionLabel          *AdAssetFeedSpecAssetLabel                 `json:"caption_label,omitempty" jsonschema:"description=Caption Label"`
	CarouselLabel         *AdAssetFeedSpecAssetLabel                 `json:"carousel_label,omitempty" jsonschema:"description=Carousel Label"`
	CustomizationSpec     *AdAssetCustomizationRuleCustomizationSpec `json:"customization_spec,omitempty" jsonschema:"description=Customization Spec"`
	DescriptionLabel      *AdAssetFeedSpecAssetLabel                 `json:"description_label,omitempty" jsonschema:"description=Description Label"`
	ImageLabel            *AdAssetFeedSpecAssetLabel                 `json:"image_label,omitempty" jsonschema:"description=Image Label"`
	IsDefault             bool                                       `json:"is_default,omitempty" jsonschema:"description=Is Default"`
	LinkURLLabel          *AdAssetFeedSpecAssetLabel                 `json:"link_url_label,omitempty" jsonschema:"description=Link URL Label,format=uri"`
	Priority              int                                        `json:"priority,omitempty" jsonschema:"description=Priority"`
	TitleLabel            *AdAssetFeedSpecAssetLabel                 `json:"title_label,omitempty" jsonschema:"description=Title Label"`
	VideoLabel            *AdAssetFeedSpecAssetLabel                 `json:"video_label,omitempty" jsonschema:"description=Video Label"`
}

// AdAssetFeedSpecAssetLabel represents the Facebook AdAssetFeedSpecAssetLabel object
type AdAssetFeedSpecAssetLabel struct {
	ID   string `json:"id,omitempty" jsonschema:"description=AdAssetFeedSpecAssetLabel ID,required,pattern=^[0-9]+$"`
	Name string `json:"name,omitempty" jsonschema:"description=Name of the AdAssetFeedSpecAssetLabel,required"`
}

// AdAssetFeedSpecBody represents the Facebook AdAssetFeedSpecBody object
type AdAssetFeedSpecBody struct {
	Adlabels []*AdAssetFeedSpecAssetLabel `json:"adlabels,omitempty" jsonschema:"description=Adlabels"`
	Text     string                       `json:"text,omitempty" jsonschema:"description=Text"`
	URLTags  string                       `json:"url_tags,omitempty" jsonschema:"description=URL Tags,format=uri"`
}

// AdAssetFeedSpecCallToAction represents the Facebook AdAssetFeedSpecCallToAction object
type AdAssetFeedSpecCallToAction struct {
	Adlabels []*AdAssetFeedSpecAssetLabel         `json:"adlabels,omitempty" jsonschema:"description=Adlabels"`
	Type     string                               `json:"type,omitempty" jsonschema:"description=Type"`
	Value    *AdCreativeLinkDataCallToActionValue `json:"value,omitempty" jsonschema:"description=Value"`
}

// AdAssetFeedSpecCaption represents the Facebook AdAssetFeedSpecCaption object
type AdAssetFeedSpecCaption struct {
	Adlabels []*AdAssetFeedSpecAssetLabel `json:"adlabels,omitempty" jsonschema:"description=Adlabels"`
	Text     string                       `json:"text,omitempty" jsonschema:"description=Text"`
	URLTags  string                       `json:"url_tags,omitempty" jsonschema:"description=URL Tags,format=uri"`
}

// AdAssetFeedSpecCarousel represents the Facebook AdAssetFeedSpecCarousel object
type AdAssetFeedSpecCarousel struct {
	Adlabels            []*AdAssetFeedSpecAssetLabel              `json:"adlabels,omitempty" jsonschema:"description=Adlabels"`
	ChildAttachments    []*AdAssetFeedSpecCarouselChildAttachment `json:"child_attachments,omitempty" jsonschema:"description=Child Attachments"`
	MultiShareEndCard   bool                                      `json:"multi_share_end_card,omitempty" jsonschema:"description=Multi Share End Card"`
	MultiShareOptimized bool                                      `json:"multi_share_optimized,omitempty" jsonschema:"description=Multi Share Optimized"`
}

// AdAssetFeedSpecCarouselChildAttachment represents the Facebook AdAssetFeedSpecCarouselChildAttachment object
type AdAssetFeedSpecCarouselChildAttachment struct {
	BodyLabel             *AdAssetFeedSpecAssetLabel `json:"body_label,omitempty" jsonschema:"description=Body Label"`
	CallToActionTypeLabel *AdAssetFeedSpecAssetLabel `json:"call_to_action_type_label,omitempty" jsonschema:"description=Call To Action Type Label"`
	CaptionLabel          *AdAssetFeedSpecAssetLabel `json:"caption_label,omitempty" jsonschema:"description=Caption Label"`
	DescriptionLabel      *AdAssetFeedSpecAssetLabel `json:"description_label,omitempty" jsonschema:"description=Description Label"`
	ImageLabel            *AdAssetFeedSpecAssetLabel `json:"image_label,omitempty" jsonschema:"description=Image Label"`
	LinkURLLabel          *AdAssetFeedSpecAssetLabel `json:"link_url_label,omitempty" jsonschema:"description=Link URL Label,format=uri"`
	PhoneDataIDsLabel     *AdAssetFeedSpecAssetLabel `json:"phone_data_ids_label,omitempty" jsonschema:"description=Phone Data Ids Label,pattern=^[0-9]+$"`
	StaticCard            bool                       `json:"static_card,omitempty" jsonschema:"description=Static Card"`
	TitleLabel            *AdAssetFeedSpecAssetLabel `json:"title_label,omitempty" jsonschema:"description=Title Label"`
	VideoLabel            *AdAssetFeedSpecAssetLabel `json:"video_label,omitempty" jsonschema:"description=Video Label"`
}

// AdAssetFeedSpecDescription represents the Facebook AdAssetFeedSpecDescription object
type AdAssetFeedSpecDescription struct {
	Adlabels []*AdAssetFeedSpecAssetLabel `json:"adlabels,omitempty" jsonschema:"description=Adlabels"`
	Text     string                       `json:"text,omitempty" jsonschema:"description=Text"`
	URLTags  string                       `json:"url_tags,omitempty" jsonschema:"description=URL Tags,format=uri"`
}

// AdAssetFeedSpecEvents represents the Facebook AdAssetFeedSpecEvents object
type AdAssetFeedSpecEvents struct {
	ID string `json:"id,omitempty" jsonschema:"description=AdAssetFeedSpecEvents ID,required,pattern=^[0-9]+$"`
}

// AdAssetFeedSpecGroupRule represents the Facebook AdAssetFeedSpecGroupRule object
type AdAssetFeedSpecGroupRule struct {
	BodyLabel        *AdAssetFeedSpecAssetLabel `json:"body_label,omitempty" jsonschema:"description=Body Label"`
	CaptionLabel     *AdAssetFeedSpecAssetLabel `json:"caption_label,omitempty" jsonschema:"description=Caption Label"`
	DescriptionLabel *AdAssetFeedSpecAssetLabel `json:"description_label,omitempty" jsonschema:"description=Description Label"`
	ImageLabel       *AdAssetFeedSpecAssetLabel `json:"image_label,omitempty" jsonschema:"description=Image Label"`
	LinkURLLabel     *AdAssetFeedSpecAssetLabel `json:"link_url_label,omitempty" jsonschema:"description=Link URL Label,format=uri"`
	TitleLabel       *AdAssetFeedSpecAssetLabel `json:"title_label,omitempty" jsonschema:"description=Title Label"`
	VideoLabel       *AdAssetFeedSpecAssetLabel `json:"video_label,omitempty" jsonschema:"description=Video Label"`
}

// AdAssetFeedSpecImage represents the Facebook AdAssetFeedSpecImage object
type AdAssetFeedSpecImage struct {
	Adlabels   []*AdAssetFeedSpecAssetLabel `json:"adlabels,omitempty" jsonschema:"description=Adlabels"`
	Hash       string                       `json:"hash,omitempty" jsonschema:"description=Hash"`
	ImageCrops *AdsImageCrops               `json:"image_crops,omitempty" jsonschema:"description=Image Crops"`
	URL        string                       `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
	URLTags    string                       `json:"url_tags,omitempty" jsonschema:"description=URL Tags,format=uri"`
}

// AdAssetFeedSpecLinkURL represents the Facebook AdAssetFeedSpecLinkURL object
type AdAssetFeedSpecLinkURL struct {
	Adlabels           []*AdAssetFeedSpecAssetLabel `json:"adlabels,omitempty" jsonschema:"description=Adlabels"`
	CarouselSeeMoreURL string                       `json:"carousel_see_more_url,omitempty" jsonschema:"description=Carousel See More URL,format=uri"`
	DeeplinkURL        string                       `json:"deeplink_url,omitempty" jsonschema:"description=Deeplink URL,format=uri"`
	DisplayURL         string                       `json:"display_url,omitempty" jsonschema:"description=Display URL,format=uri"`
	ObjectStoreURLs    []string                     `json:"object_store_urls,omitempty" jsonschema:"description=Object Store Urls,format=uri"`
	URLTags            string                       `json:"url_tags,omitempty" jsonschema:"description=URL Tags,format=uri"`
	WebsiteURL         string                       `json:"website_url,omitempty" jsonschema:"description=Website URL,format=uri"`
}

// AdAssetFeedSpecTitle represents the Facebook AdAssetFeedSpecTitle object
type AdAssetFeedSpecTitle struct {
	Adlabels []*AdAssetFeedSpecAssetLabel `json:"adlabels,omitempty" jsonschema:"description=Adlabels"`
	Text     string                       `json:"text,omitempty" jsonschema:"description=Text"`
	URLTags  string                       `json:"url_tags,omitempty" jsonschema:"description=URL Tags,format=uri"`
}

// AdAssetFeedSpecVideo represents the Facebook AdAssetFeedSpecVideo object
type AdAssetFeedSpecVideo struct {
	Adlabels      []*AdAssetFeedSpecAssetLabel `json:"adlabels,omitempty" jsonschema:"description=Adlabels"`
	CaptionIDs    []string                     `json:"caption_ids,omitempty" jsonschema:"description=Caption Ids,pattern=^[0-9]+$"`
	ThumbnailHash string                       `json:"thumbnail_hash,omitempty" jsonschema:"description=Thumbnail Hash"`
	ThumbnailURL  string                       `json:"thumbnail_url,omitempty" jsonschema:"description=Thumbnail URL,format=uri"`
	URLTags       string                       `json:"url_tags,omitempty" jsonschema:"description=URL Tags,format=uri"`
	VideoID       string                       `json:"video_id,omitempty" jsonschema:"description=ID of the Video,pattern=^[0-9]+$"`
}

// AdAssetImage represents the Facebook AdAssetImage object
type AdAssetImage struct {
	Hash       string         `json:"hash,omitempty" jsonschema:"description=Hash"`
	ID         string         `json:"id,omitempty" jsonschema:"description=AdAssetImage ID,required,pattern=^[0-9]+$"`
	ImageCrops *AdsImageCrops `json:"image_crops,omitempty" jsonschema:"description=Image Crops"`
	Name       string         `json:"name,omitempty" jsonschema:"description=Name of the AdAssetImage,required"`
	Tag        string         `json:"tag,omitempty" jsonschema:"description=Tag"`
	URL        string         `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
	URLTags    string         `json:"url_tags,omitempty" jsonschema:"description=URL Tags,format=uri"`
}

// AdAssetLinkURL represents the Facebook AdAssetLinkURL object
type AdAssetLinkURL struct {
	AndroidDeeplinkURL string `json:"android_deeplink_url,omitempty" jsonschema:"description=Android Deeplink URL,format=uri"`
	CarouselSeeMoreURL string `json:"carousel_see_more_url,omitempty" jsonschema:"description=Carousel See More URL,format=uri"`
	DeeplinkURL        string `json:"deeplink_url,omitempty" jsonschema:"description=Deeplink URL,format=uri"`
	DisplayURL         string `json:"display_url,omitempty" jsonschema:"description=Display URL,format=uri"`
	ID                 string `json:"id,omitempty" jsonschema:"description=AdAssetLinkURL ID,required,pattern=^[0-9]+$"`
	IpadDeeplinkURL    string `json:"ipad_deeplink_url,omitempty" jsonschema:"description=Ipad Deeplink URL,format=uri"`
	IphoneDeeplinkURL  string `json:"iphone_deeplink_url,omitempty" jsonschema:"description=Iphone Deeplink URL,format=uri"`
	URLTags            string `json:"url_tags,omitempty" jsonschema:"description=URL Tags,format=uri"`
	WebsiteURL         string `json:"website_url,omitempty" jsonschema:"description=Website URL,format=uri"`
}

// AdAssetMessageExtensions represents the Facebook AdAssetMessageExtensions object
type AdAssetMessageExtensions struct {
	Type string `json:"type,omitempty" jsonschema:"description=Type"`
}

// AdAssetOnsiteDestinations represents the Facebook AdAssetOnsiteDestinations object
type AdAssetOnsiteDestinations struct {
	AutoOptimization           string `json:"auto_optimization,omitempty" jsonschema:"description=Auto Optimization"`
	DetailsPageProductID       string `json:"details_page_product_id,omitempty" jsonschema:"description=ID of the Details Page Product,pattern=^[0-9]+$"`
	ShopCollectionProductSetID string `json:"shop_collection_product_set_id,omitempty" jsonschema:"description=ID of the Shop Collection Product Set,pattern=^[0-9]+$"`
	Source                     string `json:"source,omitempty" jsonschema:"description=Source"`
	StorefrontShopID           string `json:"storefront_shop_id,omitempty" jsonschema:"description=ID of the Storefront Shop,pattern=^[0-9]+$"`
}

// AdAssetTargetRuleTargeting represents the Facebook AdAssetTargetRuleTargeting object
type AdAssetTargetRuleTargeting struct {
	AgeMax                   uint                                        `json:"age_max,omitempty" jsonschema:"description=Age Max,minimum=13,maximum=100"`
	AgeMin                   uint                                        `json:"age_min,omitempty" jsonschema:"description=Age Min,minimum=13,maximum=100"`
	AudienceNetworkPositions []string                                    `json:"audience_network_positions,omitempty" jsonschema:"description=Audience Network Positions"`
	DevicePlatforms          []AdassettargetruletargetingDevicePlatforms `json:"device_platforms,omitempty" jsonschema:"description=Device Platforms"`
	FacebookPositions        []string                                    `json:"facebook_positions,omitempty" jsonschema:"description=Facebook Positions"`
	GeoLocations             *TargetingGeoLocation                       `json:"geo_locations,omitempty" jsonschema:"description=Geo Locations"`
	InstagramPositions       []string                                    `json:"instagram_positions,omitempty" jsonschema:"description=Instagram Positions"`
	PublisherPlatforms       []string                                    `json:"publisher_platforms,omitempty" jsonschema:"description=Publisher Platforms"`
	ThreadsPositions         []string                                    `json:"threads_positions,omitempty" jsonschema:"description=Threads Positions"`
}

// AdAssetTitle represents the Facebook AdAssetTitle object
type AdAssetTitle struct {
	ID      string `json:"id,omitempty" jsonschema:"description=AdAssetTitle ID,required,pattern=^[0-9]+$"`
	Text    string `json:"text,omitempty" jsonschema:"description=Text"`
	URLTags string `json:"url_tags,omitempty" jsonschema:"description=URL Tags,format=uri"`
}

// AdAssetVideo represents the Facebook AdAssetVideo object
type AdAssetVideo struct {
	CaptionIDs      []string `json:"caption_ids,omitempty" jsonschema:"description=Caption Ids,pattern=^[0-9]+$"`
	ID              string   `json:"id,omitempty" jsonschema:"description=AdAssetVideo ID,required,pattern=^[0-9]+$"`
	SourceImageURL  string   `json:"source_image_url,omitempty" jsonschema:"description=Source Image URL,format=uri"`
	Tag             string   `json:"tag,omitempty" jsonschema:"description=Tag"`
	ThumbnailHash   string   `json:"thumbnail_hash,omitempty" jsonschema:"description=Thumbnail Hash"`
	ThumbnailSource string   `json:"thumbnail_source,omitempty" jsonschema:"description=Thumbnail Source"`
	ThumbnailURL    string   `json:"thumbnail_url,omitempty" jsonschema:"description=Thumbnail URL,format=uri"`
	URL             string   `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
	URLTags         string   `json:"url_tags,omitempty" jsonschema:"description=URL Tags,format=uri"`
	VideoID         string   `json:"video_id,omitempty" jsonschema:"description=ID of the Video,pattern=^[0-9]+$"`
	VideoName       string   `json:"video_name,omitempty" jsonschema:"description=Video Name"`
}

// AdAsyncRequest represents the Facebook AdAsyncRequest object
type AdAsyncRequest struct {
	AsyncRequestSet *AdAsyncRequestSet     `json:"async_request_set,omitempty" jsonschema:"description=Async Request Set"`
	CreatedTime     time.Time              `json:"created_time,omitempty" jsonschema:"description=When the AdAsyncRequest was created,format=date-time"`
	ID              string                 `json:"id,omitempty" jsonschema:"description=AdAsyncRequest ID,required,pattern=^[0-9]+$"`
	Input           map[string]interface{} `json:"input,omitempty" jsonschema:"description=Input"`
	Result          map[string]interface{} `json:"result,omitempty" jsonschema:"description=Result"`
	ScopeObjectID   string                 `json:"scope_object_id,omitempty" jsonschema:"description=ID of the Scope Object,pattern=^[0-9]+$"`
	Status          string                 `json:"status,omitempty" jsonschema:"description=Current status of the AdAsyncRequest,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	Type            string                 `json:"type,omitempty" jsonschema:"description=Type"`
	UpdatedTime     time.Time              `json:"updated_time,omitempty" jsonschema:"description=When the AdAsyncRequest was last updated,format=date-time"`
}

// AdAsyncRequestSet represents the Facebook AdAsyncRequestSet object
type AdAsyncRequestSet struct {
	CanceledCount      int                                  `json:"canceled_count,omitempty" jsonschema:"description=Canceled Count"`
	CreatedTime        time.Time                            `json:"created_time,omitempty" jsonschema:"description=When the AdAsyncRequestSet was created,format=date-time"`
	ErrorCount         int                                  `json:"error_count,omitempty" jsonschema:"description=Error Count"`
	ID                 string                               `json:"id,omitempty" jsonschema:"description=AdAsyncRequestSet ID,required,pattern=^[0-9]+$"`
	InProgressCount    int                                  `json:"in_progress_count,omitempty" jsonschema:"description=In Progress Count"`
	InitialCount       uint                                 `json:"initial_count,omitempty" jsonschema:"description=Initial Count"`
	IsCompleted        bool                                 `json:"is_completed,omitempty" jsonschema:"description=Is Completed"`
	Name               string                               `json:"name,omitempty" jsonschema:"description=Name of the AdAsyncRequestSet,required"`
	NotificationMode   AdasyncrequestsetNotificationMode    `json:"notification_mode,omitempty" jsonschema:"description=Notification Mode"`
	NotificationResult *AdAsyncRequestSetNotificationResult `json:"notification_result,omitempty" jsonschema:"description=Notification Result"`
	NotificationStatus string                               `json:"notification_status,omitempty" jsonschema:"description=Notification Status"`
	NotificationUri    string                               `json:"notification_uri,omitempty" jsonschema:"description=Notification Uri"`
	OwnerID            string                               `json:"owner_id,omitempty" jsonschema:"description=ID of the Owner,pattern=^[0-9]+$"`
	SuccessCount       int                                  `json:"success_count,omitempty" jsonschema:"description=Success Count"`
	TotalCount         uint                                 `json:"total_count,omitempty" jsonschema:"description=Total Count"`
	UpdatedTime        time.Time                            `json:"updated_time,omitempty" jsonschema:"description=When the AdAsyncRequestSet was last updated,format=date-time"`
}

// AdAsyncRequestSetNotificationResult represents the Facebook AdAsyncRequestSetNotificationResult object
type AdAsyncRequestSetNotificationResult struct {
	Response string `json:"response,omitempty" jsonschema:"description=Response"`
	Status   string `json:"status,omitempty" jsonschema:"description=Current status of the AdAsyncRequestSetNotificationResult,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// AdBidAdjustments represents the Facebook AdBidAdjustments object
type AdBidAdjustments struct {
	AgeRange   map[string]float64     `json:"age_range,omitempty" jsonschema:"description=Age Range"`
	PageTypes  map[string]interface{} `json:"page_types,omitempty" jsonschema:"description=Page Types"`
	UserGroups string                 `json:"user_groups,omitempty" jsonschema:"description=User Groups"`
}

// AdCampaignBidConstraint represents the Facebook AdCampaignBidConstraint object
type AdCampaignBidConstraint struct {
	RoasAverageFloor int `json:"roas_average_floor,omitempty" jsonschema:"description=Roas Average Floor,minimum=13,maximum=100"`
}

// AdCampaignConversionValueExpressionSpec represents the Facebook AdCampaignConversionValueExpressionSpec object
type AdCampaignConversionValueExpressionSpec struct {
	AdjustmentSign   string `json:"adjustment_sign,omitempty" jsonschema:"description=Adjustment Sign"`
	AdjustmentWeight uint   `json:"adjustment_weight,omitempty" jsonschema:"description=Adjustment Weight"`
	DestinationType  string `json:"destination_type,omitempty" jsonschema:"description=Destination Type"`
}

// AdCampaignDeliveryEstimate represents the Facebook AdCampaignDeliveryEstimate object
type AdCampaignDeliveryEstimate struct {
	DailyOutcomesCurve         []*OutcomePredictionPoint `json:"daily_outcomes_curve,omitempty" jsonschema:"description=Daily Outcomes Curve"`
	EstimateDau                int                       `json:"estimate_dau,omitempty" jsonschema:"description=Estimate Dau"`
	EstimateMauLowerBound      int                       `json:"estimate_mau_lower_bound,omitempty" jsonschema:"description=Estimate Mau Lower Bound"`
	EstimateMauUpperBound      int                       `json:"estimate_mau_upper_bound,omitempty" jsonschema:"description=Estimate Mau Upper Bound"`
	EstimateReady              bool                      `json:"estimate_ready,omitempty" jsonschema:"description=Estimate Ready"`
	TargetingOptimizationTypes []map[string]int          `json:"targeting_optimization_types,omitempty" jsonschema:"description=Targeting Optimization Types"`
}

// AdCampaignDeliveryStats represents the Facebook AdCampaignDeliveryStats object
type AdCampaignDeliveryStats struct {
	BidRecommendation     int                                                     `json:"bid_recommendation,omitempty" jsonschema:"description=Bid Recommendation"`
	CurrentAverageCost    float64                                                 `json:"current_average_cost,omitempty" jsonschema:"description=Current Average Cost"`
	LastSignificantEditTs int                                                     `json:"last_significant_edit_ts,omitempty" jsonschema:"description=Last Significant Edit Ts"`
	LearningStageExitInfo map[string]interface{}                                  `json:"learning_stage_exit_info,omitempty" jsonschema:"description=Learning Stage Exit Info"`
	LearningStageInfo     *AdCampaignLearningStageInfo                            `json:"learning_stage_info,omitempty" jsonschema:"description=Learning Stage Info"`
	UnsupportedFeatures   []map[string]*AdCampaignDeliveryStatsUnsupportedReasons `json:"unsupported_features,omitempty" jsonschema:"description=Unsupported Features"`
}

// AdCampaignDeliveryStatsUnsupportedReasons represents the Facebook AdCampaignDeliveryStatsUnsupportedReasons object
type AdCampaignDeliveryStatsUnsupportedReasons struct {
	ReasonData []map[string]string `json:"reason_data,omitempty" jsonschema:"description=Reason Data"`
	ReasonType string              `json:"reason_type,omitempty" jsonschema:"description=Reason Type"`
}

// AdCampaignFrequencyControlSpecs represents the Facebook AdCampaignFrequencyControlSpecs object
type AdCampaignFrequencyControlSpecs struct {
	Event        string `json:"event,omitempty" jsonschema:"description=Event"`
	IntervalDays uint   `json:"interval_days,omitempty" jsonschema:"description=Interval Days"`
	MaxFrequency uint   `json:"max_frequency,omitempty" jsonschema:"description=Max Frequency"`
}

// AdCampaignGroupAdvantageState represents the Facebook AdCampaignGroupAdvantageState object
type AdCampaignGroupAdvantageState struct {
	AdvantageAudienceState  string `json:"advantage_audience_state,omitempty" jsonschema:"description=Advantage Audience State"`
	AdvantageBudgetState    string `json:"advantage_budget_state,omitempty" jsonschema:"description=Advantage Budget State"`
	AdvantagePlacementState string `json:"advantage_placement_state,omitempty" jsonschema:"description=Advantage Placement State"`
	AdvantageState          string `json:"advantage_state,omitempty" jsonschema:"description=Advantage State"`
}

// AdCampaignGroupAgencyFeeConfigForApi represents the Facebook AdCampaignGroupAgencyFeeConfigForApi object
type AdCampaignGroupAgencyFeeConfigForApi struct {
	AgencyFeePct        float64 `json:"agency_fee_pct,omitempty" jsonschema:"description=Agency Fee Pct"`
	IsAgencyFeeDisabled bool    `json:"is_agency_fee_disabled,omitempty" jsonschema:"description=Is Agency Fee Disabled"`
	IsDefaultAgencyFee  bool    `json:"is_default_agency_fee,omitempty" jsonschema:"description=Is Default Agency Fee"`
}

// AdCampaignGroupIncrementalConversionOptimizationConfig represents the Facebook AdCampaignGroupIncrementalConversionOptimizationConfig object
type AdCampaignGroupIncrementalConversionOptimizationConfig struct {
	ActionType       string                   `json:"action_type,omitempty" jsonschema:"description=Action Type"`
	AdStudyEndTime   time.Time                `json:"ad_study_end_time,omitempty" jsonschema:"description=Ad Study End Time,format=date-time"`
	AdStudyID        string                   `json:"ad_study_id,omitempty" jsonschema:"description=ID of the Ad Study,pattern=^[0-9]+$"`
	AdStudyName      string                   `json:"ad_study_name,omitempty" jsonschema:"description=Ad Study Name"`
	AdStudyStartTime time.Time                `json:"ad_study_start_time,omitempty" jsonschema:"description=Ad Study Start Time,format=date-time"`
	CellID           string                   `json:"cell_id,omitempty" jsonschema:"description=ID of the Cell,pattern=^[0-9]+$"`
	CellName         string                   `json:"cell_name,omitempty" jsonschema:"description=Cell Name"`
	HoldoutSize      float64                  `json:"holdout_size,omitempty" jsonschema:"description=Holdout Size"`
	IcoType          string                   `json:"ico_type,omitempty" jsonschema:"description=Ico Type"`
	Objectives       []map[string]interface{} `json:"objectives,omitempty" jsonschema:"description=Objectives"`
}

// AdCampaignGroupMetricsMetadata represents the Facebook AdCampaignGroupMetricsMetadata object
type AdCampaignGroupMetricsMetadata struct {
	BudgetOptimization  []string `json:"budget_optimization,omitempty" jsonschema:"description=Budget Optimization"`
	DuplicationFlowTips []string `json:"duplication_flow_tips,omitempty" jsonschema:"description=Duplication Flow Tips"`
}

// AdCampaignGroupStats represents the Facebook AdCampaignGroupStats object
type AdCampaignGroupStats struct {
	Actions                 map[string]int `json:"actions,omitempty" jsonschema:"description=Actions"`
	CampaignGroupID         string         `json:"campaign_group_id,omitempty" jsonschema:"description=ID of the Campaign Group,pattern=^[0-9]+$"`
	Clicks                  uint           `json:"clicks,omitempty" jsonschema:"description=Clicks"`
	EndTime                 time.Time      `json:"end_time,omitempty" jsonschema:"description=End Time,format=date-time"`
	Impressions             uint           `json:"impressions,omitempty" jsonschema:"description=Impressions"`
	InlineActions           map[string]int `json:"inline_actions,omitempty" jsonschema:"description=Inline Actions"`
	SocialClicks            uint           `json:"social_clicks,omitempty" jsonschema:"description=Social Clicks"`
	SocialImpressions       uint           `json:"social_impressions,omitempty" jsonschema:"description=Social Impressions"`
	SocialSpent             uint           `json:"social_spent,omitempty" jsonschema:"description=Social Spent"`
	SocialUniqueClicks      uint           `json:"social_unique_clicks,omitempty" jsonschema:"description=Social Unique Clicks"`
	SocialUniqueImpressions uint           `json:"social_unique_impressions,omitempty" jsonschema:"description=Social Unique Impressions"`
	Spent                   uint           `json:"spent,omitempty" jsonschema:"description=Spent"`
	StartTime               time.Time      `json:"start_time,omitempty" jsonschema:"description=Start Time,format=date-time"`
	UniqueClicks            uint           `json:"unique_clicks,omitempty" jsonschema:"description=Unique Clicks"`
	UniqueImpressions       uint           `json:"unique_impressions,omitempty" jsonschema:"description=Unique Impressions"`
}

// AdCampaignGroupStructureTree represents the Facebook AdCampaignGroupStructureTree object
type AdCampaignGroupStructureTree struct {
	Children    []*AdCampaignGroupStructureTree `json:"children,omitempty" jsonschema:"description=Children"`
	ID          string                          `json:"id,omitempty" jsonschema:"description=AdCampaignGroupStructureTree ID,required,pattern=^[0-9]+$"`
	Name        string                          `json:"name,omitempty" jsonschema:"description=Name of the AdCampaignGroupStructureTree,required"`
	TimeUpdated int                             `json:"time_updated,omitempty" jsonschema:"description=When the AdCampaignGroupStructureTree was last updated"`
}

// AdCampaignIssuesInfo represents the Facebook AdCampaignIssuesInfo object
type AdCampaignIssuesInfo struct {
	ErrorCode    int    `json:"error_code,omitempty" jsonschema:"description=Error Code"`
	ErrorMessage string `json:"error_message,omitempty" jsonschema:"description=Error Message"`
	ErrorSummary string `json:"error_summary,omitempty" jsonschema:"description=Error Summary"`
	ErrorType    string `json:"error_type,omitempty" jsonschema:"description=Error Type"`
	Level        string `json:"level,omitempty" jsonschema:"description=Level"`
	Mid          string `json:"mid,omitempty" jsonschema:"description=Mid"`
}

// AdCampaignLearningStageInfo represents the Facebook AdCampaignLearningStageInfo object
type AdCampaignLearningStageInfo struct {
	AttributionWindows []string `json:"attribution_windows,omitempty" jsonschema:"description=Attribution Windows"`
	Conversions        uint     `json:"conversions,omitempty" jsonschema:"description=Conversions"`
	LastSigEditTs      int      `json:"last_sig_edit_ts,omitempty" jsonschema:"description=Last Sig Edit Ts"`
	Status             string   `json:"status,omitempty" jsonschema:"description=Current status of the AdCampaignLearningStageInfo,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// AdCampaignMetricsMetadata represents the Facebook AdCampaignMetricsMetadata object
type AdCampaignMetricsMetadata struct {
	BoostedComponentOptimization []string                 `json:"boosted_component_optimization,omitempty" jsonschema:"description=Boosted Component Optimization"`
	CreationFlowTips             []string                 `json:"creation_flow_tips,omitempty" jsonschema:"description=Creation Flow Tips"`
	DefaultOptedInPlacements     []map[string]interface{} `json:"default_opted_in_placements,omitempty" jsonschema:"description=Default Opted In Placements"`
	DeliveryGrowthOptimizations  []map[string]interface{} `json:"delivery_growth_optimizations,omitempty" jsonschema:"description=Delivery Growth Optimizations"`
	DuplicationFlowTips          []string                 `json:"duplication_flow_tips,omitempty" jsonschema:"description=Duplication Flow Tips"`
	EditFlowTips                 []string                 `json:"edit_flow_tips,omitempty" jsonschema:"description=Edit Flow Tips"`
}

// AdCampaignMultiAds represents the Facebook AdCampaignMultiAds object
type AdCampaignMultiAds struct {
	EnrollStatus string `json:"enroll_status,omitempty" jsonschema:"description=Enroll Status"`
	SourceType   string `json:"source_type,omitempty" jsonschema:"description=Source Type"`
}

// AdCampaignOptimizationEvent represents the Facebook AdCampaignOptimizationEvent object
type AdCampaignOptimizationEvent struct {
	CustomConversionID string `json:"custom_conversion_id,omitempty" jsonschema:"description=ID of the Custom Conversion,pattern=^[0-9]+$"`
	EventSequence      uint   `json:"event_sequence,omitempty" jsonschema:"description=Event Sequence"`
	EventType          string `json:"event_type,omitempty" jsonschema:"description=Event Type"`
}

// AdCampaignPacedBidInfo represents the Facebook AdCampaignPacedBidInfo object
type AdCampaignPacedBidInfo struct {
	BiddingStatus string `json:"bidding_status,omitempty" jsonschema:"description=Bidding Status"`
}

// AdCampaignStats represents the Facebook AdCampaignStats object
type AdCampaignStats struct {
	AccountID               string                 `json:"account_id,omitempty" jsonschema:"description=ID of the Account,pattern=^[0-9]+$"`
	Actions                 map[string]interface{} `json:"actions,omitempty" jsonschema:"description=Actions"`
	AdgroupID               string                 `json:"adgroup_id,omitempty" jsonschema:"description=ID of the Adgroup,pattern=^[0-9]+$"`
	CampaignID              string                 `json:"campaign_id,omitempty" jsonschema:"description=ID of the Campaign,pattern=^[0-9]+$"`
	CampaignIDs             []string               `json:"campaign_ids,omitempty" jsonschema:"description=Campaign Ids,pattern=^[0-9]+$"`
	Clicks                  uint                   `json:"clicks,omitempty" jsonschema:"description=Clicks"`
	EndTime                 map[string]interface{} `json:"end_time,omitempty" jsonschema:"description=End Time"`
	ID                      string                 `json:"id,omitempty" jsonschema:"description=AdCampaignStats ID,required,pattern=^[0-9]+$"`
	Impressions             string                 `json:"impressions,omitempty" jsonschema:"description=Impressions"`
	InlineActions           map[string]interface{} `json:"inline_actions,omitempty" jsonschema:"description=Inline Actions"`
	IoNumber                uint                   `json:"io_number,omitempty" jsonschema:"description=Io Number"`
	IsCompleted             bool                   `json:"is_completed,omitempty" jsonschema:"description=Is Completed"`
	LineNumber              uint                   `json:"line_number,omitempty" jsonschema:"description=Line Number"`
	NewsfeedPosition        map[string]interface{} `json:"newsfeed_position,omitempty" jsonschema:"description=Newsfeed Position"`
	SocialClicks            uint                   `json:"social_clicks,omitempty" jsonschema:"description=Social Clicks"`
	SocialImpressions       string                 `json:"social_impressions,omitempty" jsonschema:"description=Social Impressions"`
	SocialSpent             uint                   `json:"social_spent,omitempty" jsonschema:"description=Social Spent"`
	SocialUniqueClicks      uint                   `json:"social_unique_clicks,omitempty" jsonschema:"description=Social Unique Clicks"`
	SocialUniqueImpressions string                 `json:"social_unique_impressions,omitempty" jsonschema:"description=Social Unique Impressions"`
	Spent                   int                    `json:"spent,omitempty" jsonschema:"description=Spent"`
	StartTime               map[string]interface{} `json:"start_time,omitempty" jsonschema:"description=Start Time"`
	ToplineID               string                 `json:"topline_id,omitempty" jsonschema:"description=ID of the Topline,pattern=^[0-9]+$"`
	UniqueClicks            uint                   `json:"unique_clicks,omitempty" jsonschema:"description=Unique Clicks"`
	UniqueImpressions       string                 `json:"unique_impressions,omitempty" jsonschema:"description=Unique Impressions"`
}

// AdColumnSizes represents the Facebook AdColumnSizes object
type AdColumnSizes struct {
	AdmarketAccount *AdAccount          `json:"admarket_account,omitempty" jsonschema:"description=Admarket Account"`
	AppID           string              `json:"app_id,omitempty" jsonschema:"description=ID of the App,pattern=^[0-9]+$"`
	Columns         []map[string]string `json:"columns,omitempty" jsonschema:"description=Columns"`
	ID              string              `json:"id,omitempty" jsonschema:"description=AdColumnSizes ID,required,pattern=^[0-9]+$"`
	Owner           *User               `json:"owner,omitempty" jsonschema:"description=Owner"`
	Page            string              `json:"page,omitempty" jsonschema:"description=Page"`
	Report          string              `json:"report,omitempty" jsonschema:"description=Report"`
	Tab             string              `json:"tab,omitempty" jsonschema:"description=Tab"`
	View            string              `json:"view,omitempty" jsonschema:"description=View"`
}

// AdContract represents the Facebook AdContract object
type AdContract struct {
	AccountID             string  `json:"account_id,omitempty" jsonschema:"description=ID of the Account,pattern=^[0-9]+$"`
	AccountMgrFbid        string  `json:"account_mgr_fbid,omitempty" jsonschema:"description=Account Mgr Fbid"`
	AccountMgrName        string  `json:"account_mgr_name,omitempty" jsonschema:"description=Account Mgr Name"`
	AdopsPersonName       string  `json:"adops_person_name,omitempty" jsonschema:"description=Adops Person Name"`
	AdvertiserAddressFbid string  `json:"advertiser_address_fbid,omitempty" jsonschema:"description=Advertiser Address Fbid"`
	AdvertiserFbid        string  `json:"advertiser_fbid,omitempty" jsonschema:"description=Advertiser Fbid"`
	AdvertiserName        string  `json:"advertiser_name,omitempty" jsonschema:"description=Advertiser Name"`
	AgencyDiscount        float64 `json:"agency_discount,omitempty" jsonschema:"description=Agency Discount"`
	AgencyName            string  `json:"agency_name,omitempty" jsonschema:"description=Agency Name"`
	BillToAddressFbid     string  `json:"bill_to_address_fbid,omitempty" jsonschema:"description=Bill To Address Fbid"`
	BillToFbid            string  `json:"bill_to_fbid,omitempty" jsonschema:"description=Bill To Fbid"`
	CampaignName          string  `json:"campaign_name,omitempty" jsonschema:"description=Campaign Name"`
	CreatedBy             string  `json:"created_by,omitempty" jsonschema:"description=When the AdContract was created"`
	CreatedDate           uint    `json:"created_date,omitempty" jsonschema:"description=When the AdContract was created"`
	CustomerIo            string  `json:"customer_io,omitempty" jsonschema:"description=Customer Io"`
	IoNumber              uint    `json:"io_number,omitempty" jsonschema:"description=Io Number"`
	IoTerms               string  `json:"io_terms,omitempty" jsonschema:"description=Io Terms"`
	IoType                string  `json:"io_type,omitempty" jsonschema:"description=Io Type"`
	LastUpdatedBy         string  `json:"last_updated_by,omitempty" jsonschema:"description=When the AdContract was last updated"`
	LastUpdatedDate       uint    `json:"last_updated_date,omitempty" jsonschema:"description=When the AdContract was last updated"`
	MaxEndDate            uint    `json:"max_end_date,omitempty" jsonschema:"description=Max End Date"`
	MdcFbid               string  `json:"mdc_fbid,omitempty" jsonschema:"description=Mdc Fbid"`
	MediaPlanNumber       string  `json:"media_plan_number,omitempty" jsonschema:"description=Media Plan Number"`
	MinStartDate          uint    `json:"min_start_date,omitempty" jsonschema:"description=Min Start Date"`
	MsaContract           string  `json:"msa_contract,omitempty" jsonschema:"description=Msa Contract"`
	PaymentTerms          string  `json:"payment_terms,omitempty" jsonschema:"description=Payment Terms"`
	RevHoldFlag           bool    `json:"rev_hold_flag,omitempty" jsonschema:"description=Rev Hold Flag"`
	RevHoldReleasedBy     int     `json:"rev_hold_released_by,omitempty" jsonschema:"description=Rev Hold Released By"`
	RevHoldReleasedOn     uint    `json:"rev_hold_released_on,omitempty" jsonschema:"description=Rev Hold Released On"`
	SalesrepFbid          string  `json:"salesrep_fbid,omitempty" jsonschema:"description=Salesrep Fbid"`
	SalesrepName          string  `json:"salesrep_name,omitempty" jsonschema:"description=Salesrep Name"`
	SoldToAddressFbid     string  `json:"sold_to_address_fbid,omitempty" jsonschema:"description=Sold To Address Fbid"`
	SoldToFbid            string  `json:"sold_to_fbid,omitempty" jsonschema:"description=Sold To Fbid"`
	Status                string  `json:"status,omitempty" jsonschema:"description=Current status of the AdContract,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	Subvertical           string  `json:"subvertical,omitempty" jsonschema:"description=Subvertical"`
	ThirdpartyBilled      uint    `json:"thirdparty_billed,omitempty" jsonschema:"description=Thirdparty Billed"`
	ThirdpartyUid         string  `json:"thirdparty_uid,omitempty" jsonschema:"description=Thirdparty Uid"`
	ThirdpartyURL         string  `json:"thirdparty_url,omitempty" jsonschema:"description=Thirdparty URL,format=uri"`
	VatCountry            string  `json:"vat_country,omitempty" jsonschema:"description=Vat Country"`
	Version               uint    `json:"version,omitempty" jsonschema:"description=Version"`
	Vertical              string  `json:"vertical,omitempty" jsonschema:"description=Vertical"`
}

// AdConversionValues represents the Facebook AdConversionValues object
type AdConversionValues struct {
	AdgroupID  string      `json:"adgroup_id,omitempty" jsonschema:"description=ID of the Adgroup,pattern=^[0-9]+$"`
	CampaignID string      `json:"campaign_id,omitempty" jsonschema:"description=ID of the Campaign,pattern=^[0-9]+$"`
	Values     interface{} `json:"values,omitempty" jsonschema:"description=Values"`
}

// AdConversions represents the Facebook AdConversions object
type AdConversions struct {
	AccountID  string      `json:"account_id,omitempty" jsonschema:"description=ID of the Account,pattern=^[0-9]+$"`
	AdgroupID  string      `json:"adgroup_id,omitempty" jsonschema:"description=ID of the Adgroup,pattern=^[0-9]+$"`
	CampaignID string      `json:"campaign_id,omitempty" jsonschema:"description=ID of the Campaign,pattern=^[0-9]+$"`
	Values     interface{} `json:"values,omitempty" jsonschema:"description=Values"`
}

// AdCreationPackageConfig represents the Facebook AdCreationPackageConfig object
type AdCreationPackageConfig struct {
	APIVersion                string `json:"api_version,omitempty" jsonschema:"description=API Version"`
	ID                        string `json:"id,omitempty" jsonschema:"description=AdCreationPackageConfig ID,required,pattern=^[0-9]+$"`
	IsEligibleForDefaultOptIn bool   `json:"is_eligible_for_default_opt_in,omitempty" jsonschema:"description=Is Eligible For Default Opt In"`
	Objective                 string `json:"objective,omitempty" jsonschema:"description=Objective"`
	PackageID                 string `json:"package_id,omitempty" jsonschema:"description=ID of the Package,pattern=^[0-9]+$"`
	Status                    string `json:"status,omitempty" jsonschema:"description=Current status of the AdCreationPackageConfig,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// AdCreative represents the Facebook AdCreative object
type AdCreative struct {
	AccountID                        string                                  `json:"account_id,omitempty" jsonschema:"description=ID of the Account,pattern=^[0-9]+$"`
	ActorID                          string                                  `json:"actor_id,omitempty" jsonschema:"description=ID of the Actor,pattern=^[0-9]+$"`
	AdDisclaimerSpec                 *AdCreativeAdDisclaimer                 `json:"ad_disclaimer_spec,omitempty" jsonschema:"description=Ad Disclaimer Spec"`
	Adlabels                         []*AdLabel                              `json:"adlabels,omitempty" jsonschema:"description=Adlabels"`
	ApplinkTreatment                 string                                  `json:"applink_treatment,omitempty" jsonschema:"description=Applink Treatment"`
	AssetFeedSpec                    *AdAssetFeedSpec                        `json:"asset_feed_spec,omitempty" jsonschema:"description=Asset Feed Spec"`
	AuthorizationCategory            string                                  `json:"authorization_category,omitempty" jsonschema:"description=Authorization Category"`
	AutoUpdate                       bool                                    `json:"auto_update,omitempty" jsonschema:"description=Auto Update"`
	Body                             string                                  `json:"body,omitempty" jsonschema:"description=Body"`
	BrandedContent                   *AdCreativeBrandedContentAds            `json:"branded_content,omitempty" jsonschema:"description=Branded Content"`
	BrandedContentSponsorPageID      string                                  `json:"branded_content_sponsor_page_id,omitempty" jsonschema:"description=ID of the Branded Content Sponsor Page,pattern=^[0-9]+$"`
	BundleFolderID                   string                                  `json:"bundle_folder_id,omitempty" jsonschema:"description=ID of the Bundle Folder,pattern=^[0-9]+$"`
	CallToAction                     *AdCreativeLinkDataCallToAction         `json:"call_to_action,omitempty" jsonschema:"description=Call To Action"`
	CallToActionType                 AdcreativeCallToActionType              `json:"call_to_action_type,omitempty" jsonschema:"description=Call To Action Type"`
	CategorizationCriteria           string                                  `json:"categorization_criteria,omitempty" jsonschema:"description=Categorization Criteria"`
	CategoryMediaSource              string                                  `json:"category_media_source,omitempty" jsonschema:"description=Category Media Source"`
	CollaborativeAdsLsbImageBankID   string                                  `json:"collaborative_ads_lsb_image_bank_id,omitempty" jsonschema:"description=ID of the Collaborative Ads Lsb Image Bank,pattern=^[0-9]+$"`
	ContextualMultiAds               *AdCreativeContextualMultiAds           `json:"contextual_multi_ads,omitempty" jsonschema:"description=Contextual Multi Ads"`
	CreativeSourcingSpec             *AdCreativeSourcingSpec                 `json:"creative_sourcing_spec,omitempty" jsonschema:"description=Creative Sourcing Spec"`
	DegreesOfFreedomSpec             *AdCreativeDegreesOfFreedomSpec         `json:"degrees_of_freedom_spec,omitempty" jsonschema:"description=Degrees Of Freedom Spec"`
	DestinationSetID                 string                                  `json:"destination_set_id,omitempty" jsonschema:"description=ID of the Destination Set,pattern=^[0-9]+$"`
	DynamicAdVoice                   string                                  `json:"dynamic_ad_voice,omitempty" jsonschema:"description=Dynamic Ad Voice"`
	EffectiveAuthorizationCategory   string                                  `json:"effective_authorization_category,omitempty" jsonschema:"description=Effective Authorization Category"`
	EffectiveInstagramMediaID        string                                  `json:"effective_instagram_media_id,omitempty" jsonschema:"description=ID of the Effective Instagram Media,pattern=^[0-9]+$"`
	EffectiveObjectStoryID           string                                  `json:"effective_object_story_id,omitempty" jsonschema:"description=ID of the Effective Object Story,pattern=^[0-9]+$"`
	EnableDirectInstall              bool                                    `json:"enable_direct_install,omitempty" jsonschema:"description=Enable Direct Install"`
	EnableLaunchInstantApp           bool                                    `json:"enable_launch_instant_app,omitempty" jsonschema:"description=Enable Launch Instant App"`
	FacebookBrandedContent           *AdCreativeFacebookBrandedContent       `json:"facebook_branded_content,omitempty" jsonschema:"description=Facebook Branded Content"`
	ID                               string                                  `json:"id,omitempty" jsonschema:"description=AdCreative ID,required,pattern=^[0-9]+$"`
	ImageCrops                       *AdsImageCrops                          `json:"image_crops,omitempty" jsonschema:"description=Image Crops"`
	ImageHash                        string                                  `json:"image_hash,omitempty" jsonschema:"description=Image Hash"`
	ImageURL                         string                                  `json:"image_url,omitempty" jsonschema:"description=Image URL,format=uri"`
	InstagramBrandedContent          *AdCreativeInstagramBrandedContent      `json:"instagram_branded_content,omitempty" jsonschema:"description=Instagram Branded Content"`
	InstagramPermalinkURL            string                                  `json:"instagram_permalink_url,omitempty" jsonschema:"description=Instagram Permalink URL,format=uri"`
	InstagramUserID                  string                                  `json:"instagram_user_id,omitempty" jsonschema:"description=ID of the Instagram User,pattern=^[0-9]+$"`
	InteractiveComponentsSpec        *AdCreativeInteractiveComponentsSpec    `json:"interactive_components_spec,omitempty" jsonschema:"description=Interactive Components Spec"`
	LinkDeepLinkURL                  string                                  `json:"link_deep_link_url,omitempty" jsonschema:"description=Link Deep Link URL,format=uri"`
	LinkDestinationDisplayURL        string                                  `json:"link_destination_display_url,omitempty" jsonschema:"description=Link Destination Display URL,format=uri"`
	LinkOgID                         string                                  `json:"link_og_id,omitempty" jsonschema:"description=ID of the Link Og,pattern=^[0-9]+$"`
	LinkURL                          string                                  `json:"link_url,omitempty" jsonschema:"description=Link URL,format=uri"`
	MessengerSponsoredMessage        string                                  `json:"messenger_sponsored_message,omitempty" jsonschema:"description=Messenger Sponsored Message"`
	Name                             string                                  `json:"name,omitempty" jsonschema:"description=Name of the AdCreative,required"`
	ObjectID                         string                                  `json:"object_id,omitempty" jsonschema:"description=ID of the Object,pattern=^[0-9]+$"`
	ObjectStoreURL                   string                                  `json:"object_store_url,omitempty" jsonschema:"description=Object Store URL,format=uri"`
	ObjectStoryID                    string                                  `json:"object_story_id,omitempty" jsonschema:"description=ID of the Object Story,pattern=^[0-9]+$"`
	ObjectStorySpec                  *AdCreativeObjectStorySpec              `json:"object_story_spec,omitempty" jsonschema:"description=Object Story Spec"`
	ObjectType                       AdcreativeObjectType                    `json:"object_type,omitempty" jsonschema:"description=Object Type"`
	ObjectURL                        string                                  `json:"object_url,omitempty" jsonschema:"description=Object URL,format=uri"`
	OmnichannelLinkSpec              *AdCreativeOmnichannelLinkSpec          `json:"omnichannel_link_spec,omitempty" jsonschema:"description=Omnichannel Link Spec"`
	PageWelcomeMessage               string                                  `json:"page_welcome_message,omitempty" jsonschema:"description=Page Welcome Message"`
	PhotoAlbumSourceObjectStoryID    string                                  `json:"photo_album_source_object_story_id,omitempty" jsonschema:"description=ID of the Photo Album Source Object Story,pattern=^[0-9]+$"`
	PlacePageSetID                   string                                  `json:"place_page_set_id,omitempty" jsonschema:"description=ID of the Place Page Set,pattern=^[0-9]+$"`
	PlatformCustomizations           *AdCreativePlatformCustomization        `json:"platform_customizations,omitempty" jsonschema:"description=Platform Customizations"`
	PlayableAssetID                  string                                  `json:"playable_asset_id,omitempty" jsonschema:"description=ID of the Playable Asset,pattern=^[0-9]+$"`
	PortraitCustomizations           *AdCreativePortraitCustomizations       `json:"portrait_customizations,omitempty" jsonschema:"description=Portrait Customizations"`
	ProductData                      []*AdCreativeProductData                `json:"product_data,omitempty" jsonschema:"description=Product Data"`
	ProductSetID                     string                                  `json:"product_set_id,omitempty" jsonschema:"description=ID of the Product Set,pattern=^[0-9]+$"`
	RecommenderSettings              *AdCreativeRecommenderSettings          `json:"recommender_settings,omitempty" jsonschema:"description=Recommender Settings"`
	RegionalRegulationDisclaimerSpec *AdCreativeRegionalRegulationDisclaimer `json:"regional_regulation_disclaimer_spec,omitempty" jsonschema:"description=Regional Regulation Disclaimer Spec"`
	SourceFacebookPostID             string                                  `json:"source_facebook_post_id,omitempty" jsonschema:"description=ID of the Source Facebook Post,pattern=^[0-9]+$"`
	SourceInstagramMediaID           string                                  `json:"source_instagram_media_id,omitempty" jsonschema:"description=ID of the Source Instagram Media,pattern=^[0-9]+$"`
	Status                           AdcreativeStatus                        `json:"status,omitempty" jsonschema:"description=Current status of the AdCreative,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	TemplateURL                      string                                  `json:"template_url,omitempty" jsonschema:"description=Template URL,format=uri"`
	TemplateURLSpec                  *AdCreativeTemplateURLSpec              `json:"template_url_spec,omitempty" jsonschema:"description=Template URL Spec,format=uri"`
	ThumbnailID                      string                                  `json:"thumbnail_id,omitempty" jsonschema:"description=ID of the Thumbnail,pattern=^[0-9]+$"`
	ThumbnailURL                     string                                  `json:"thumbnail_url,omitempty" jsonschema:"description=Thumbnail URL,format=uri"`
	Title                            string                                  `json:"title,omitempty" jsonschema:"description=Title"`
	URLTags                          string                                  `json:"url_tags,omitempty" jsonschema:"description=URL Tags,format=uri"`
	UsePageActorOverride             bool                                    `json:"use_page_actor_override,omitempty" jsonschema:"description=Use Page Actor Override"`
	VideoID                          string                                  `json:"video_id,omitempty" jsonschema:"description=ID of the Video,pattern=^[0-9]+$"`
}

// AdCreativeAdDisclaimer represents the Facebook AdCreativeAdDisclaimer object
type AdCreativeAdDisclaimer struct {
	Text  string `json:"text,omitempty" jsonschema:"description=Text"`
	Title string `json:"title,omitempty" jsonschema:"description=Title"`
	URL   string `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
}

// AdCreativeAssetGroupsSpec represents the Facebook AdCreativeAssetGroupsSpec object
type AdCreativeAssetGroupsSpec struct {
	Groups []map[string]interface{} `json:"groups,omitempty" jsonschema:"description=Groups"`
	Origin string                   `json:"origin,omitempty" jsonschema:"description=Origin"`
}

// AdCreativeBrandedContentAds represents the Facebook AdCreativeBrandedContentAds object
type AdCreativeBrandedContentAds struct {
	AdFormat                         int                                    `json:"ad_format,omitempty" jsonschema:"description=Ad Format"`
	ContentSearchInput               string                                 `json:"content_search_input,omitempty" jsonschema:"description=Content Search Input"`
	CreatorAdPermissionType          string                                 `json:"creator_ad_permission_type,omitempty" jsonschema:"description=Creator Ad Permission Type"`
	FacebookBoostPostAccessToken     string                                 `json:"facebook_boost_post_access_token,omitempty" jsonschema:"description=Facebook Boost Post Access Token"`
	InstagramBoostPostAccessToken    string                                 `json:"instagram_boost_post_access_token,omitempty" jsonschema:"description=Instagram Boost Post Access Token"`
	IsMcaInternal                    bool                                   `json:"is_mca_internal,omitempty" jsonschema:"description=Is Mca Internal"`
	ParentSourceFacebookPostID       string                                 `json:"parent_source_facebook_post_id,omitempty" jsonschema:"description=ID of the Parent Source Facebook Post,pattern=^[0-9]+$"`
	ParentSourceInstagramMediaID     string                                 `json:"parent_source_instagram_media_id,omitempty" jsonschema:"description=ID of the Parent Source Instagram Media,pattern=^[0-9]+$"`
	Partners                         []*AdCreativeBrandedContentAdsPartners `json:"partners,omitempty" jsonschema:"description=Partners"`
	ProductSetPartnerSelectionStatus string                                 `json:"product_set_partner_selection_status,omitempty" jsonschema:"description=Product Set Partner Selection Status"`
	PromotedPageID                   string                                 `json:"promoted_page_id,omitempty" jsonschema:"description=ID of the Promoted Page,pattern=^[0-9]+$"`
	Testimonial                      string                                 `json:"testimonial,omitempty" jsonschema:"description=Testimonial"`
	TestimonialLocale                string                                 `json:"testimonial_locale,omitempty" jsonschema:"description=Testimonial Locale"`
	UiVersion                        int                                    `json:"ui_version,omitempty" jsonschema:"description=Ui Version"`
}

// AdCreativeBrandedContentAdsPartners represents the Facebook AdCreativeBrandedContentAdsPartners object
type AdCreativeBrandedContentAdsPartners struct {
	FbPageID           string `json:"fb_page_id,omitempty" jsonschema:"description=ID of the Fb Page,pattern=^[0-9]+$"`
	HasCreateAdsAccess bool   `json:"has_create_ads_access,omitempty" jsonschema:"description=Has Create Ads Access"`
	IDentityType       string `json:"identity_type,omitempty" jsonschema:"description=Identity Type"`
	IgAssetID          string `json:"ig_asset_id,omitempty" jsonschema:"description=ID of the Ig Asset,pattern=^[0-9]+$"`
	IgUserID           string `json:"ig_user_id,omitempty" jsonschema:"description=ID of the Ig User,pattern=^[0-9]+$"`
}

// AdCreativeCollectionThumbnailInfo represents the Facebook AdCreativeCollectionThumbnailInfo object
type AdCreativeCollectionThumbnailInfo struct {
	ElementChildIndex int            `json:"element_child_index,omitempty" jsonschema:"description=Element Child Index"`
	ElementCrops      *AdsImageCrops `json:"element_crops,omitempty" jsonschema:"description=Element Crops"`
	ElementID         string         `json:"element_id,omitempty" jsonschema:"description=ID of the Element,pattern=^[0-9]+$"`
}

// AdCreativeContextualMultiAds represents the Facebook AdCreativeContextualMultiAds object
type AdCreativeContextualMultiAds struct {
	EnrollStatus string `json:"enroll_status,omitempty" jsonschema:"description=Enroll Status"`
}

// AdCreativeDegreesOfFreedomSpec represents the Facebook AdCreativeDegreesOfFreedomSpec object
type AdCreativeDegreesOfFreedomSpec struct {
	AdHandleType                 string                  `json:"ad_handle_type,omitempty" jsonschema:"description=Ad Handle Type"`
	CreativeFeaturesSpec         *AdCreativeFeaturesSpec `json:"creative_features_spec,omitempty" jsonschema:"description=Creative Features Spec"`
	DegreesOfFreedomType         string                  `json:"degrees_of_freedom_type,omitempty" jsonschema:"description=Degrees Of Freedom Type"`
	ImageTransformationTypes     []string                `json:"image_transformation_types,omitempty" jsonschema:"description=Image Transformation Types"`
	MultiMediaTransformationType string                  `json:"multi_media_transformation_type,omitempty" jsonschema:"description=Multi Media Transformation Type"`
	StoriesTransformationTypes   []string                `json:"stories_transformation_types,omitempty" jsonschema:"description=Stories Transformation Types"`
	TextTransformationTypes      []string                `json:"text_transformation_types,omitempty" jsonschema:"description=Text Transformation Types"`
	VideoTransformationTypes     []string                `json:"video_transformation_types,omitempty" jsonschema:"description=Video Transformation Types"`
}

// AdCreativeDestinationSpec represents the Facebook AdCreativeDestinationSpec object
type AdCreativeDestinationSpec struct {
	DestinationType string `json:"destination_type,omitempty" jsonschema:"description=Destination Type"`
}

// AdCreativeFacebookBrandedContent represents the Facebook AdCreativeFacebookBrandedContent object
type AdCreativeFacebookBrandedContent struct {
	SharedToSponsorStatus string `json:"shared_to_sponsor_status,omitempty" jsonschema:"description=Shared To Sponsor Status"`
	SponsorPageID         string `json:"sponsor_page_id,omitempty" jsonschema:"description=ID of the Sponsor Page,pattern=^[0-9]+$"`
	SponsorRelationship   string `json:"sponsor_relationship,omitempty" jsonschema:"description=Sponsor Relationship"`
}

// AdCreativeFeatureActionMetadata represents the Facebook AdCreativeFeatureActionMetadata object
type AdCreativeFeatureActionMetadata struct {
	Type string `json:"type,omitempty" jsonschema:"description=Type"`
}

// AdCreativeFeatureCustomizations represents the Facebook AdCreativeFeatureCustomizations object
type AdCreativeFeatureCustomizations struct {
	BackgroundColor     string                 `json:"background_color,omitempty" jsonschema:"description=Background Color"`
	CatalogFeedTagName  string                 `json:"catalog_feed_tag_name,omitempty" jsonschema:"description=Catalog Feed Tag Name"`
	FontName            string                 `json:"font_name,omitempty" jsonschema:"description=Font Name"`
	ImageCropStyle      string                 `json:"image_crop_style,omitempty" jsonschema:"description=Image Crop Style"`
	PeCarousel          map[string]interface{} `json:"pe_carousel,omitempty" jsonschema:"description=Pe Carousel"`
	ShowcaseCardDisplay string                 `json:"showcase_card_display,omitempty" jsonschema:"description=Showcase Card Display"`
	TextExtraction      map[string]interface{} `json:"text_extraction,omitempty" jsonschema:"description=Text Extraction"`
	TextStyle           string                 `json:"text_style,omitempty" jsonschema:"description=Text Style"`
}

// AdCreativeFeatureDetails represents the Facebook AdCreativeFeatureDetails object
type AdCreativeFeatureDetails struct {
	Customizations *AdCreativeFeatureCustomizations `json:"customizations,omitempty" jsonschema:"description=Customizations"`
	EnrollStatus   string                           `json:"enroll_status,omitempty" jsonschema:"description=Enroll Status"`
}

// AdCreativeFeaturesSpec represents the Facebook AdCreativeFeaturesSpec object
type AdCreativeFeaturesSpec struct {
	AdaptToPlacement               *AdCreativeFeatureDetails `json:"adapt_to_placement,omitempty" jsonschema:"description=Adapt To Placement"`
	AddTextOverlay                 *AdCreativeFeatureDetails `json:"add_text_overlay,omitempty" jsonschema:"description=Add Text Overlay"`
	AdsWithBenefits                *AdCreativeFeatureDetails `json:"ads_with_benefits,omitempty" jsonschema:"description=Ads With Benefits"`
	AdvantagePlusCreative          *AdCreativeFeatureDetails `json:"advantage_plus_creative,omitempty" jsonschema:"description=Advantage Plus Creative"`
	AppHighlights                  *AdCreativeFeatureDetails `json:"app_highlights,omitempty" jsonschema:"description=App Highlights"`
	Audio                          *AdCreativeFeatureDetails `json:"audio,omitempty" jsonschema:"description=Audio"`
	BizAi                          *AdCreativeFeatureDetails `json:"biz_ai,omitempty" jsonschema:"description=Biz Ai"`
	CarouselToVideo                *AdCreativeFeatureDetails `json:"carousel_to_video,omitempty" jsonschema:"description=Carousel To Video"`
	CatalogFeedTag                 *AdCreativeFeatureDetails `json:"catalog_feed_tag,omitempty" jsonschema:"description=Catalog Feed Tag"`
	CustomizeProductRecommendation *AdCreativeFeatureDetails `json:"customize_product_recommendation,omitempty" jsonschema:"description=Customize Product Recommendation"`
	CvTransformation               *AdCreativeFeatureDetails `json:"cv_transformation,omitempty" jsonschema:"description=Cv Transformation"`
	DescriptionAutomation          *AdCreativeFeatureDetails `json:"description_automation,omitempty" jsonschema:"description=Description Automation"`
	DhaOptimization                *AdCreativeFeatureDetails `json:"dha_optimization,omitempty" jsonschema:"description=Dha Optimization"`
	DynamicPartnerContent          *AdCreativeFeatureDetails `json:"dynamic_partner_content,omitempty" jsonschema:"description=Dynamic Partner Content"`
	EnhanceCta                     *AdCreativeFeatureDetails `json:"enhance_cta,omitempty" jsonschema:"description=Enhance Cta"`
	FbFeedTag                      *AdCreativeFeatureDetails `json:"fb_feed_tag,omitempty" jsonschema:"description=Fb Feed Tag"`
	FbReelsTag                     *AdCreativeFeatureDetails `json:"fb_reels_tag,omitempty" jsonschema:"description=Fb Reels Tag"`
	FbStoryTag                     *AdCreativeFeatureDetails `json:"fb_story_tag,omitempty" jsonschema:"description=Fb Story Tag"`
	FeedCaptionOptimization        *AdCreativeFeatureDetails `json:"feed_caption_optimization,omitempty" jsonschema:"description=Feed Caption Optimization"`
	HidePrice                      *AdCreativeFeatureDetails `json:"hide_price,omitempty" jsonschema:"description=Hide Price"`
	IgFeedTag                      *AdCreativeFeatureDetails `json:"ig_feed_tag,omitempty" jsonschema:"description=Ig Feed Tag"`
	IgGladosFeed                   *AdCreativeFeatureDetails `json:"ig_glados_feed,omitempty" jsonschema:"description=Ig Glados Feed"`
	IgReelsTag                     *AdCreativeFeatureDetails `json:"ig_reels_tag,omitempty" jsonschema:"description=Ig Reels Tag"`
	IgStreamTag                    *AdCreativeFeatureDetails `json:"ig_stream_tag,omitempty" jsonschema:"description=Ig Stream Tag"`
	ImageAnimation                 *AdCreativeFeatureDetails `json:"image_animation,omitempty" jsonschema:"description=Image Animation"`
	ImageAutoCrop                  *AdCreativeFeatureDetails `json:"image_auto_crop,omitempty" jsonschema:"description=Image Auto Crop"`
	ImageBackgroundGen             *AdCreativeFeatureDetails `json:"image_background_gen,omitempty" jsonschema:"description=Image Background Gen"`
	ImageBrightnessAndContrast     *AdCreativeFeatureDetails `json:"image_brightness_and_contrast,omitempty" jsonschema:"description=Image Brightness And Contrast"`
	ImageEnhancement               *AdCreativeFeatureDetails `json:"image_enhancement,omitempty" jsonschema:"description=Image Enhancement"`
	ImageTemplates                 *AdCreativeFeatureDetails `json:"image_templates,omitempty" jsonschema:"description=Image Templates"`
	ImageTouchups                  *AdCreativeFeatureDetails `json:"image_touchups,omitempty" jsonschema:"description=Image Touchups"`
	ImageUncrop                    *AdCreativeFeatureDetails `json:"image_uncrop,omitempty" jsonschema:"description=Image Uncrop"`
	InlineComment                  *AdCreativeFeatureDetails `json:"inline_comment,omitempty" jsonschema:"description=Inline Comment"`
	LocalStoreExtension            *AdCreativeFeatureDetails `json:"local_store_extension,omitempty" jsonschema:"description=Local Store Extension"`
	MediaLiquidityAnimatedImage    *AdCreativeFeatureDetails `json:"media_liquidity_animated_image,omitempty" jsonschema:"description=Media Liquidity Animated Image"`
	MediaOrder                     *AdCreativeFeatureDetails `json:"media_order,omitempty" jsonschema:"description=Media Order"`
	MediaTypeAutomation            *AdCreativeFeatureDetails `json:"media_type_automation,omitempty" jsonschema:"description=Media Type Automation"`
	MultiPhotoToVideo              *AdCreativeFeatureDetails `json:"multi_photo_to_video,omitempty" jsonschema:"description=Multi Photo To Video"`
	MusicGeneration                *AdCreativeFeatureDetails `json:"music_generation,omitempty" jsonschema:"description=Music Generation"`
	PacRelaxation                  *AdCreativeFeatureDetails `json:"pac_relaxation,omitempty" jsonschema:"description=Pac Relaxation"`
	ProductExtensions              *AdCreativeFeatureDetails `json:"product_extensions,omitempty" jsonschema:"description=Product Extensions"`
	ProductMetadataAutomation      *AdCreativeFeatureDetails `json:"product_metadata_automation,omitempty" jsonschema:"description=Product Metadata Automation"`
	ProductTags                    *AdCreativeFeatureDetails `json:"product_tags,omitempty" jsonschema:"description=Product Tags"`
	ProfileCard                    *AdCreativeFeatureDetails `json:"profile_card,omitempty" jsonschema:"description=Profile Card"`
	ProfileExtension               *AdCreativeFeatureDetails `json:"profile_extension,omitempty" jsonschema:"description=Profile Extension"`
	ShowSummary                    *AdCreativeFeatureDetails `json:"show_summary,omitempty" jsonschema:"description=Show Summary"`
	SiteExtensions                 *AdCreativeFeatureDetails `json:"site_extensions,omitempty" jsonschema:"description=Site Extensions"`
	StandardEnhancements           *AdCreativeFeatureDetails `json:"standard_enhancements,omitempty" jsonschema:"description=Standard Enhancements"`
	StandardEnhancementsCatalog    *AdCreativeFeatureDetails `json:"standard_enhancements_catalog,omitempty" jsonschema:"description=Standard Enhancements Catalog"`
	TextGeneration                 *AdCreativeFeatureDetails `json:"text_generation,omitempty" jsonschema:"description=Text Generation"`
	TextOptimizations              *AdCreativeFeatureDetails `json:"text_optimizations,omitempty" jsonschema:"description=Text Optimizations"`
	TextTranslation                *AdCreativeFeatureDetails `json:"text_translation,omitempty" jsonschema:"description=Text Translation"`
	VideoAutoCrop                  *AdCreativeFeatureDetails `json:"video_auto_crop,omitempty" jsonschema:"description=Video Auto Crop"`
	VideoFiltering                 *AdCreativeFeatureDetails `json:"video_filtering,omitempty" jsonschema:"description=Video Filtering"`
	VideoHighlight                 *AdCreativeFeatureDetails `json:"video_highlight,omitempty" jsonschema:"description=Video Highlight"`
	VideoToImage                   *AdCreativeFeatureDetails `json:"video_to_image,omitempty" jsonschema:"description=Video To Image"`
	VideoUncrop                    *AdCreativeFeatureDetails `json:"video_uncrop,omitempty" jsonschema:"description=Video Uncrop"`
}

// AdCreativeFormatTransformationSpec represents the Facebook AdCreativeFormatTransformationSpec object
type AdCreativeFormatTransformationSpec struct {
	DataSource []string `json:"data_source,omitempty" jsonschema:"description=Data Source"`
	Format     string   `json:"format,omitempty" jsonschema:"description=Format"`
}

// AdCreativeGenerativeAssetSpec represents the Facebook AdCreativeGenerativeAssetSpec object
type AdCreativeGenerativeAssetSpec struct {
}

// AdCreativeHouseShopsAdsSellerContent represents the Facebook AdCreativeHouseShopsAdsSellerContent object
type AdCreativeHouseShopsAdsSellerContent struct {
}

// AdCreativeImageDataMediaElements represents the Facebook AdCreativeImageDataMediaElements object
type AdCreativeImageDataMediaElements struct {
	ElementID   string  `json:"element_id,omitempty" jsonschema:"description=ID of the Element,pattern=^[0-9]+$"`
	ElementType string  `json:"element_type,omitempty" jsonschema:"description=Element Type"`
	X           float64 `json:"x,omitempty" jsonschema:"description=X"`
	Y           float64 `json:"y,omitempty" jsonschema:"description=Y"`
}

// AdCreativeInsights represents the Facebook AdCreativeInsights object
type AdCreativeInsights struct {
	Aesthetics []map[string]string `json:"aesthetics,omitempty" jsonschema:"description=Aesthetics"`
}

// AdCreativeInstagramBrandedContent represents the Facebook AdCreativeInstagramBrandedContent object
type AdCreativeInstagramBrandedContent struct {
	SponsorID string `json:"sponsor_id,omitempty" jsonschema:"description=ID of the Sponsor,pattern=^[0-9]+$"`
}

// AdCreativeInteractiveComponentsSpec represents the Facebook AdCreativeInteractiveComponentsSpec object
type AdCreativeInteractiveComponentsSpec struct {
	ChildAttachments []map[string]interface{} `json:"child_attachments,omitempty" jsonschema:"description=Child Attachments"`
	Components       []map[string]interface{} `json:"components,omitempty" jsonschema:"description=Components"`
}

// AdCreativeLinkData represents the Facebook AdCreativeLinkData object
type AdCreativeLinkData struct {
	AdContext                           string                               `json:"ad_context,omitempty" jsonschema:"description=Ad Context"`
	AdditionalImageIndex                int                                  `json:"additional_image_index,omitempty" jsonschema:"description=Additional Image Index,minimum=13,maximum=100"`
	AppLinkSpec                         *AdCreativeLinkDataAppLinkSpec       `json:"app_link_spec,omitempty" jsonschema:"description=App Link Spec"`
	AttachmentStyle                     string                               `json:"attachment_style,omitempty" jsonschema:"description=Attachment Style"`
	AutomatedProductTags                bool                                 `json:"automated_product_tags,omitempty" jsonschema:"description=Automated Product Tags"`
	BoostedProductSetID                 string                               `json:"boosted_product_set_id,omitempty" jsonschema:"description=ID of the Boosted Product Set,pattern=^[0-9]+$"`
	BrandedContentSharedToSponsorStatus string                               `json:"branded_content_shared_to_sponsor_status,omitempty" jsonschema:"description=Branded Content Shared To Sponsor Status"`
	BrandedContentSponsorPageID         string                               `json:"branded_content_sponsor_page_id,omitempty" jsonschema:"description=ID of the Branded Content Sponsor Page,pattern=^[0-9]+$"`
	CallToAction                        *AdCreativeLinkDataCallToAction      `json:"call_to_action,omitempty" jsonschema:"description=Call To Action"`
	Caption                             string                               `json:"caption,omitempty" jsonschema:"description=Caption"`
	ChildAttachments                    []*AdCreativeLinkDataChildAttachment `json:"child_attachments,omitempty" jsonschema:"description=Child Attachments"`
	CollectionThumbnails                []*AdCreativeCollectionThumbnailInfo `json:"collection_thumbnails,omitempty" jsonschema:"description=Collection Thumbnails"`
	CustomizationRulesSpec              []*AdCustomizationRuleSpec           `json:"customization_rules_spec,omitempty" jsonschema:"description=Customization Rules Spec"`
	Description                         string                               `json:"description,omitempty" jsonschema:"description=Description"`
	EventID                             string                               `json:"event_id,omitempty" jsonschema:"description=ID of the Event,pattern=^[0-9]+$"`
	ForceSingleLink                     bool                                 `json:"force_single_link,omitempty" jsonschema:"description=Force Single Link"`
	FormatOption                        AdcreativelinkdataFormatOption       `json:"format_option,omitempty" jsonschema:"description=Format Option"`
	ImageCrops                          *AdsImageCrops                       `json:"image_crops,omitempty" jsonschema:"description=Image Crops"`
	ImageHash                           string                               `json:"image_hash,omitempty" jsonschema:"description=Image Hash"`
	ImageLayerSpecs                     []*AdCreativeLinkDataImageLayerSpec  `json:"image_layer_specs,omitempty" jsonschema:"description=Image Layer Specs"`
	ImageOverlaySpec                    *AdCreativeLinkDataImageOverlaySpec  `json:"image_overlay_spec,omitempty" jsonschema:"description=Image Overlay Spec"`
	Link                                string                               `json:"link,omitempty" jsonschema:"description=Link"`
	Message                             string                               `json:"message,omitempty" jsonschema:"description=Message"`
	MultiShareEndCard                   bool                                 `json:"multi_share_end_card,omitempty" jsonschema:"description=Multi Share End Card"`
	MultiShareOptimized                 bool                                 `json:"multi_share_optimized,omitempty" jsonschema:"description=Multi Share Optimized"`
	Name                                string                               `json:"name,omitempty" jsonschema:"description=Name of the AdCreativeLinkData,required"`
	OfferID                             string                               `json:"offer_id,omitempty" jsonschema:"description=ID of the Offer,pattern=^[0-9]+$"`
	PageWelcomeMessage                  string                               `json:"page_welcome_message,omitempty" jsonschema:"description=Page Welcome Message"`
	Picture                             string                               `json:"picture,omitempty" jsonschema:"description=Picture"`
	PostClickConfiguration              *AdCreativePostClickConfiguration    `json:"post_click_configuration,omitempty" jsonschema:"description=Post Click Configuration"`
	PreferredImageTags                  []string                             `json:"preferred_image_tags,omitempty" jsonschema:"description=Preferred Image Tags"`
	PreferredVideoTags                  []string                             `json:"preferred_video_tags,omitempty" jsonschema:"description=Preferred Video Tags"`
	RetailerItemIDs                     []string                             `json:"retailer_item_ids,omitempty" jsonschema:"description=Retailer Item Ids,pattern=^[0-9]+$"`
	ShowMultipleImages                  bool                                 `json:"show_multiple_images,omitempty" jsonschema:"description=Show Multiple Images"`
	StaticFallbackSpec                  *AdCreativeStaticFallbackSpec        `json:"static_fallback_spec,omitempty" jsonschema:"description=Static Fallback Spec"`
	UseFlexibleImageAspectRatio         bool                                 `json:"use_flexible_image_aspect_ratio,omitempty" jsonschema:"description=Use Flexible Image Aspect Ratio"`
}

// AdCreativeLinkDataAppLinkSpec represents the Facebook AdCreativeLinkDataAppLinkSpec object
type AdCreativeLinkDataAppLinkSpec struct {
	Android []*AndroidAppLink `json:"android,omitempty" jsonschema:"description=Android"`
	IOS     []*IosAppLink     `json:"ios,omitempty" jsonschema:"description=Ios"`
	Ipad    []*IosAppLink     `json:"ipad,omitempty" jsonschema:"description=Ipad"`
	Iphone  []*IosAppLink     `json:"iphone,omitempty" jsonschema:"description=Iphone"`
}

// AdCreativeLinkDataCallToAction represents the Facebook AdCreativeLinkDataCallToAction object
type AdCreativeLinkDataCallToAction struct {
	Type  AdcreativelinkdatacalltoactionType   `json:"type,omitempty" jsonschema:"description=Type"`
	Value *AdCreativeLinkDataCallToActionValue `json:"value,omitempty" jsonschema:"description=Value"`
}

// AdCreativeLinkDataCallToActionValue represents the Facebook AdCreativeLinkDataCallToActionValue object
type AdCreativeLinkDataCallToActionValue struct {
	AppDestination  string   `json:"app_destination,omitempty" jsonschema:"description=App Destination"`
	AppLink         string   `json:"app_link,omitempty" jsonschema:"description=App Link"`
	Application     string   `json:"application,omitempty" jsonschema:"description=Application"`
	EventID         string   `json:"event_id,omitempty" jsonschema:"description=ID of the Event,pattern=^[0-9]+$"`
	LeadGenFormID   string   `json:"lead_gen_form_id,omitempty" jsonschema:"description=ID of the Lead Gen Form,pattern=^[0-9]+$"`
	Link            string   `json:"link,omitempty" jsonschema:"description=Link"`
	LinkCaption     string   `json:"link_caption,omitempty" jsonschema:"description=Link Caption"`
	LinkFormat      string   `json:"link_format,omitempty" jsonschema:"description=Link Format"`
	ObjectStoreURLs []string `json:"object_store_urls,omitempty" jsonschema:"description=Object Store Urls,format=uri"`
	Page            string   `json:"page,omitempty" jsonschema:"description=Page"`
	ProductLink     string   `json:"product_link,omitempty" jsonschema:"description=Product Link"`
	WhatsappNumber  string   `json:"whatsapp_number,omitempty" jsonschema:"description=Whatsapp Number"`
}

// AdCreativeLinkDataChildAttachment represents the Facebook AdCreativeLinkDataChildAttachment object
type AdCreativeLinkDataChildAttachment struct {
	CallToAction *AdCreativeLinkDataCallToAction `json:"call_to_action,omitempty" jsonschema:"description=Call To Action"`
	Caption      string                          `json:"caption,omitempty" jsonschema:"description=Caption"`
	Description  string                          `json:"description,omitempty" jsonschema:"description=Description"`
	ImageCrops   *AdsImageCrops                  `json:"image_crops,omitempty" jsonschema:"description=Image Crops"`
	ImageHash    string                          `json:"image_hash,omitempty" jsonschema:"description=Image Hash"`
	Link         string                          `json:"link,omitempty" jsonschema:"description=Link"`
	Name         string                          `json:"name,omitempty" jsonschema:"description=Name of the AdCreativeLinkDataChildAttachment,required"`
	Picture      string                          `json:"picture,omitempty" jsonschema:"description=Picture"`
	PlaceData    *AdCreativePlaceData            `json:"place_data,omitempty" jsonschema:"description=Place Data"`
	StaticCard   bool                            `json:"static_card,omitempty" jsonschema:"description=Static Card"`
	VideoID      string                          `json:"video_id,omitempty" jsonschema:"description=ID of the Video,pattern=^[0-9]+$"`
}

// AdCreativeLinkDataCustomOverlaySpec represents the Facebook AdCreativeLinkDataCustomOverlaySpec object
type AdCreativeLinkDataCustomOverlaySpec struct {
	BackgroundColor AdcreativelinkdatacustomoverlayspecBackgroundColor `json:"background_color,omitempty" jsonschema:"description=Background Color"`
	FloatWithMargin bool                                               `json:"float_with_margin,omitempty" jsonschema:"description=Float With Margin"`
	Font            AdcreativelinkdatacustomoverlayspecFont            `json:"font,omitempty" jsonschema:"description=Font"`
	Option          AdcreativelinkdatacustomoverlayspecOption          `json:"option,omitempty" jsonschema:"description=Option"`
	Position        AdcreativelinkdatacustomoverlayspecPosition        `json:"position,omitempty" jsonschema:"description=Position"`
	RenderWithIcon  bool                                               `json:"render_with_icon,omitempty" jsonschema:"description=Render With Icon"`
	Template        AdcreativelinkdatacustomoverlayspecTemplate        `json:"template,omitempty" jsonschema:"description=Template"`
	TextColor       AdcreativelinkdatacustomoverlayspecTextColor       `json:"text_color,omitempty" jsonschema:"description=Text Color"`
}

// AdCreativeLinkDataImageLayerSpec represents the Facebook AdCreativeLinkDataImageLayerSpec object
type AdCreativeLinkDataImageLayerSpec struct {
	BlendingMode              AdcreativelinkdataimagelayerspecBlendingMode    `json:"blending_mode,omitempty" jsonschema:"description=Blending Mode"`
	Content                   map[string]interface{}                          `json:"content,omitempty" jsonschema:"description=Content"`
	FrameAutoShowEnrollStatus string                                          `json:"frame_auto_show_enroll_status,omitempty" jsonschema:"description=Frame Auto Show Enroll Status"`
	FrameImageHash            string                                          `json:"frame_image_hash,omitempty" jsonschema:"description=Frame Image Hash"`
	FrameSource               AdcreativelinkdataimagelayerspecFrameSource     `json:"frame_source,omitempty" jsonschema:"description=Frame Source"`
	ImageSource               AdcreativelinkdataimagelayerspecImageSource     `json:"image_source,omitempty" jsonschema:"description=Image Source"`
	LayerType                 AdcreativelinkdataimagelayerspecLayerType       `json:"layer_type,omitempty" jsonschema:"description=Layer Type"`
	Opacity                   int                                             `json:"opacity,omitempty" jsonschema:"description=Opacity"`
	OverlayPosition           AdcreativelinkdataimagelayerspecOverlayPosition `json:"overlay_position,omitempty" jsonschema:"description=Overlay Position"`
	OverlayShape              AdcreativelinkdataimagelayerspecOverlayShape    `json:"overlay_shape,omitempty" jsonschema:"description=Overlay Shape"`
	Scale                     int                                             `json:"scale,omitempty" jsonschema:"description=Scale"`
	ShapeColor                string                                          `json:"shape_color,omitempty" jsonschema:"description=Shape Color"`
	TextColor                 string                                          `json:"text_color,omitempty" jsonschema:"description=Text Color"`
	TextFont                  AdcreativelinkdataimagelayerspecTextFont        `json:"text_font,omitempty" jsonschema:"description=Text Font"`
}

// AdCreativeLinkDataImageOverlaySpec represents the Facebook AdCreativeLinkDataImageOverlaySpec object
type AdCreativeLinkDataImageOverlaySpec struct {
	CustomTextType   AdcreativelinkdataimageoverlayspecCustomTextType  `json:"custom_text_type,omitempty" jsonschema:"description=Custom Text Type"`
	FloatWithMargin  bool                                              `json:"float_with_margin,omitempty" jsonschema:"description=Float With Margin"`
	OverlayTemplate  AdcreativelinkdataimageoverlayspecOverlayTemplate `json:"overlay_template,omitempty" jsonschema:"description=Overlay Template"`
	Position         AdcreativelinkdataimageoverlayspecPosition        `json:"position,omitempty" jsonschema:"description=Position"`
	TextFont         AdcreativelinkdataimageoverlayspecTextFont        `json:"text_font,omitempty" jsonschema:"description=Text Font"`
	TextTemplateTags []string                                          `json:"text_template_tags,omitempty" jsonschema:"description=Text Template Tags"`
	TextType         AdcreativelinkdataimageoverlayspecTextType        `json:"text_type,omitempty" jsonschema:"description=Text Type"`
	ThemeColor       AdcreativelinkdataimageoverlayspecThemeColor      `json:"theme_color,omitempty" jsonschema:"description=Theme Color"`
}

// AdCreativeLinkDataMoment represents the Facebook AdCreativeLinkDataMoment object
type AdCreativeLinkDataMoment struct {
	ID   string                       `json:"id,omitempty" jsonschema:"description=AdCreativeLinkDataMoment ID,required,pattern=^[0-9]+$"`
	Type AdcreativelinkdatamomentType `json:"type,omitempty" jsonschema:"description=Type"`
}

// AdCreativeLinkDataSponsorshipInfoSpec represents the Facebook AdCreativeLinkDataSponsorshipInfoSpec object
type AdCreativeLinkDataSponsorshipInfoSpec struct {
	SponsorImageURL string `json:"sponsor_image_url,omitempty" jsonschema:"description=Sponsor Image URL,format=uri"`
	SponsorName     string `json:"sponsor_name,omitempty" jsonschema:"description=Sponsor Name"`
}

// AdCreativeLinkDataTemplateVideoSpec represents the Facebook AdCreativeLinkDataTemplateVideoSpec object
type AdCreativeLinkDataTemplateVideoSpec struct {
	CategorizationCriteria string              `json:"categorization_criteria,omitempty" jsonschema:"description=Categorization Criteria"`
	Customization          []map[string]string `json:"customization,omitempty" jsonschema:"description=Customization"`
	TemplateID             string              `json:"template_id,omitempty" jsonschema:"description=ID of the Template,pattern=^[0-9]+$"`
}

// AdCreativeMarketingMessageStructuredSpec represents the Facebook AdCreativeMarketingMessageStructuredSpec object
type AdCreativeMarketingMessageStructuredSpec struct {
	Buttons                       []map[string]interface{} `json:"buttons,omitempty" jsonschema:"description=Buttons"`
	Footer                        string                   `json:"footer,omitempty" jsonschema:"description=Footer"`
	Greeting                      string                   `json:"greeting,omitempty" jsonschema:"description=Greeting"`
	IsOptimizedText               bool                     `json:"is_optimized_text,omitempty" jsonschema:"description=Is Optimized Text"`
	Language                      string                   `json:"language,omitempty" jsonschema:"description=Language"`
	ReferencedAdgroupID           string                   `json:"referenced_adgroup_id,omitempty" jsonschema:"description=ID of the Referenced Adgroup,pattern=^[0-9]+$"`
	WhatsAppBusinessPhoneNumberID string                   `json:"whats_app_business_phone_number_id,omitempty" jsonschema:"description=ID of the Whats App Business Phone Number,pattern=^[0-9]+$"`
}

// AdCreativeMediaSourcingSpec represents the Facebook AdCreativeMediaSourcingSpec object
type AdCreativeMediaSourcingSpec struct {
}

// AdCreativeObjectStorySpec represents the Facebook AdCreativeObjectStorySpec object
type AdCreativeObjectStorySpec struct {
	InstagramUserID string                   `json:"instagram_user_id,omitempty" jsonschema:"description=ID of the Instagram User,pattern=^[0-9]+$"`
	LinkData        *AdCreativeLinkData      `json:"link_data,omitempty" jsonschema:"description=Link Data"`
	PageID          string                   `json:"page_id,omitempty" jsonschema:"description=ID of the Page,pattern=^[0-9]+$"`
	PhotoData       *AdCreativePhotoData     `json:"photo_data,omitempty" jsonschema:"description=Photo Data"`
	ProductData     []*AdCreativeProductData `json:"product_data,omitempty" jsonschema:"description=Product Data"`
	TemplateData    *AdCreativeLinkData      `json:"template_data,omitempty" jsonschema:"description=Template Data"`
	TextData        *AdCreativeTextData      `json:"text_data,omitempty" jsonschema:"description=Text Data"`
	VideoData       *AdCreativeVideoData     `json:"video_data,omitempty" jsonschema:"description=Video Data"`
}

// AdCreativeOmnichannelLinkSpec represents the Facebook AdCreativeOmnichannelLinkSpec object
type AdCreativeOmnichannelLinkSpec struct {
	App map[string]interface{} `json:"app,omitempty" jsonschema:"description=App"`
	Web map[string]interface{} `json:"web,omitempty" jsonschema:"description=Web"`
}

// AdCreativePhotoData represents the Facebook AdCreativePhotoData object
type AdCreativePhotoData struct {
	BrandedContentSharedToSponsorStatus string `json:"branded_content_shared_to_sponsor_status,omitempty" jsonschema:"description=Branded Content Shared To Sponsor Status"`
	BrandedContentSponsorPageID         string `json:"branded_content_sponsor_page_id,omitempty" jsonschema:"description=ID of the Branded Content Sponsor Page,pattern=^[0-9]+$"`
	Caption                             string `json:"caption,omitempty" jsonschema:"description=Caption"`
	ImageHash                           string `json:"image_hash,omitempty" jsonschema:"description=Image Hash"`
	PageWelcomeMessage                  string `json:"page_welcome_message,omitempty" jsonschema:"description=Page Welcome Message"`
	URL                                 string `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
}

// AdCreativePhotoDataMediaElements represents the Facebook AdCreativePhotoDataMediaElements object
type AdCreativePhotoDataMediaElements struct {
	ElementID   string  `json:"element_id,omitempty" jsonschema:"description=ID of the Element,pattern=^[0-9]+$"`
	ElementType string  `json:"element_type,omitempty" jsonschema:"description=Element Type"`
	X           float64 `json:"x,omitempty" jsonschema:"description=X"`
	Y           float64 `json:"y,omitempty" jsonschema:"description=Y"`
}

// AdCreativePlaceData represents the Facebook AdCreativePlaceData object
type AdCreativePlaceData struct {
	AddressString    string  `json:"address_string,omitempty" jsonschema:"description=Address String"`
	Label            string  `json:"label,omitempty" jsonschema:"description=Label"`
	Latitude         float64 `json:"latitude,omitempty" jsonschema:"description=Latitude"`
	LocationSourceID string  `json:"location_source_id,omitempty" jsonschema:"description=ID of the Location Source,pattern=^[0-9]+$"`
	Longitude        float64 `json:"longitude,omitempty" jsonschema:"description=Longitude"`
	Type             string  `json:"type,omitempty" jsonschema:"description=Type"`
}

// AdCreativePlatformCustomization represents the Facebook AdCreativePlatformCustomization object
type AdCreativePlatformCustomization struct {
	Instagram map[string]interface{} `json:"instagram,omitempty" jsonschema:"description=Instagram"`
}

// AdCreativePortraitCustomizations represents the Facebook AdCreativePortraitCustomizations object
type AdCreativePortraitCustomizations struct {
	CarouselDeliveryMode string                   `json:"carousel_delivery_mode,omitempty" jsonschema:"description=Carousel Delivery Mode"`
	Specifications       []map[string]interface{} `json:"specifications,omitempty" jsonschema:"description=Specifications"`
}

// AdCreativePostClickConfiguration represents the Facebook AdCreativePostClickConfiguration object
type AdCreativePostClickConfiguration struct {
	PostClickItemDescription string `json:"post_click_item_description,omitempty" jsonschema:"description=Post Click Item Description"`
	PostClickItemHeadline    string `json:"post_click_item_headline,omitempty" jsonschema:"description=Post Click Item Headline"`
}

// AdCreativeProductData represents the Facebook AdCreativeProductData object
type AdCreativeProductData struct {
	ProductID     string `json:"product_id,omitempty" jsonschema:"description=ID of the Product,pattern=^[0-9]+$"`
	ProductSource string `json:"product_source,omitempty" jsonschema:"description=Product Source"`
}

// AdCreativePromotionMetadataSpec represents the Facebook AdCreativePromotionMetadataSpec object
type AdCreativePromotionMetadataSpec struct {
	EndDate         int     `json:"end_date,omitempty" jsonschema:"description=End Date"`
	ID              string  `json:"id,omitempty" jsonschema:"description=AdCreativePromotionMetadataSpec ID,required,pattern=^[0-9]+$"`
	PromotionSource string  `json:"promotion_source,omitempty" jsonschema:"description=Promotion Source"`
	PromotionType   string  `json:"promotion_type,omitempty" jsonschema:"description=Promotion Type"`
	PromotionValue  float64 `json:"promotion_value,omitempty" jsonschema:"description=Promotion Value"`
	RequiredCode    string  `json:"required_code,omitempty" jsonschema:"description=Required Code"`
	StartDate       int     `json:"start_date,omitempty" jsonschema:"description=Start Date"`
}

// AdCreativeRecommenderSettings represents the Facebook AdCreativeRecommenderSettings object
type AdCreativeRecommenderSettings struct {
	PreferredEvents     []string `json:"preferred_events,omitempty" jsonschema:"description=Preferred Events"`
	ProductSalesChannel string   `json:"product_sales_channel,omitempty" jsonschema:"description=Product Sales Channel"`
}

// AdCreativeRegionalRegulationDisclaimer represents the Facebook AdCreativeRegionalRegulationDisclaimer object
type AdCreativeRegionalRegulationDisclaimer struct {
	AustraliaFinserv   map[string]interface{} `json:"australia_finserv,omitempty" jsonschema:"description=Australia Finserv"`
	IndiaFinserv       map[string]interface{} `json:"india_finserv,omitempty" jsonschema:"description=India Finserv"`
	SingaporeUniversal map[string]interface{} `json:"singapore_universal,omitempty" jsonschema:"description=Singapore Universal"`
	TaiwanFinserv      map[string]interface{} `json:"taiwan_finserv,omitempty" jsonschema:"description=Taiwan Finserv"`
	TaiwanUniversal    map[string]interface{} `json:"taiwan_universal,omitempty" jsonschema:"description=Taiwan Universal"`
}

// AdCreativeRewardInfo represents the Facebook AdCreativeRewardInfo object
type AdCreativeRewardInfo struct {
	RewardOfferID   string `json:"reward_offer_id,omitempty" jsonschema:"description=ID of the Reward Offer,pattern=^[0-9]+$"`
	RewardProgramID string `json:"reward_program_id,omitempty" jsonschema:"description=ID of the Reward Program,pattern=^[0-9]+$"`
}

// AdCreativeShopSpec represents the Facebook AdCreativeShopSpec object
type AdCreativeShopSpec struct {
	CollectionID string `json:"collection_id,omitempty" jsonschema:"description=ID of the Collection,pattern=^[0-9]+$"`
	LandingView  string `json:"landing_view,omitempty" jsonschema:"description=Landing View"`
	ShopID       string `json:"shop_id,omitempty" jsonschema:"description=ID of the Shop,pattern=^[0-9]+$"`
}

// AdCreativeSiteLinksSpec represents the Facebook AdCreativeSiteLinksSpec object
type AdCreativeSiteLinksSpec struct {
	IsSiteLinkSticky           bool   `json:"is_site_link_sticky,omitempty" jsonschema:"description=Is Site Link Sticky"`
	SiteLinkHash               string `json:"site_link_hash,omitempty" jsonschema:"description=Site Link Hash"`
	SiteLinkID                 string `json:"site_link_id,omitempty" jsonschema:"description=ID of the Site Link,pattern=^[0-9]+$"`
	SiteLinkImageHash          string `json:"site_link_image_hash,omitempty" jsonschema:"description=Site Link Image Hash"`
	SiteLinkImageURL           string `json:"site_link_image_url,omitempty" jsonschema:"description=Site Link Image URL,format=uri"`
	SiteLinkRecommendationType string `json:"site_link_recommendation_type,omitempty" jsonschema:"description=Site Link Recommendation Type"`
	SiteLinkTitle              string `json:"site_link_title,omitempty" jsonschema:"description=Site Link Title"`
	SiteLinkURL                string `json:"site_link_url,omitempty" jsonschema:"description=Site Link URL,format=uri"`
}

// AdCreativeSourcingSpec represents the Facebook AdCreativeSourcingSpec object
type AdCreativeSourcingSpec struct {
	AssociatedProductSetID           string                             `json:"associated_product_set_id,omitempty" jsonschema:"description=ID of the Associated Product Set,pattern=^[0-9]+$"`
	Brand                            map[string]interface{}             `json:"brand,omitempty" jsonschema:"description=Brand"`
	DynamicSiteLinksSpec             map[string]interface{}             `json:"dynamic_site_links_spec,omitempty" jsonschema:"description=Dynamic Site Links Spec"`
	EnableSocialFeedbackPreservation bool                               `json:"enable_social_feedback_preservation,omitempty" jsonschema:"description=Enable Social Feedback Preservation"`
	PromotionMetadataSpec            []*AdCreativePromotionMetadataSpec `json:"promotion_metadata_spec,omitempty" jsonschema:"description=Promotion Metadata Spec"`
	SiteLinksSpec                    []*AdCreativeSiteLinksSpec         `json:"site_links_spec,omitempty" jsonschema:"description=Site Links Spec"`
	SourceURL                        string                             `json:"source_url,omitempty" jsonschema:"description=Source URL,format=uri"`
}

// AdCreativeStaticFallbackSpec represents the Facebook AdCreativeStaticFallbackSpec object
type AdCreativeStaticFallbackSpec struct {
	CallToAction *AdCreativeLinkDataCallToAction `json:"call_to_action,omitempty" jsonschema:"description=Call To Action"`
	Description  string                          `json:"description,omitempty" jsonschema:"description=Description"`
	ImageHash    string                          `json:"image_hash,omitempty" jsonschema:"description=Image Hash"`
	Link         string                          `json:"link,omitempty" jsonschema:"description=Link"`
	Message      string                          `json:"message,omitempty" jsonschema:"description=Message"`
	Name         string                          `json:"name,omitempty" jsonschema:"description=Name of the AdCreativeStaticFallbackSpec,required"`
}

// AdCreativeTemplateURLSpec represents the Facebook AdCreativeTemplateURLSpec object
type AdCreativeTemplateURLSpec struct {
	Android      map[string]interface{} `json:"android,omitempty" jsonschema:"description=Android"`
	Config       map[string]interface{} `json:"config,omitempty" jsonschema:"description=Config"`
	IOS          map[string]interface{} `json:"ios,omitempty" jsonschema:"description=Ios"`
	Ipad         map[string]interface{} `json:"ipad,omitempty" jsonschema:"description=Ipad"`
	Iphone       map[string]interface{} `json:"iphone,omitempty" jsonschema:"description=Iphone"`
	Web          map[string]interface{} `json:"web,omitempty" jsonschema:"description=Web"`
	WindowsPhone map[string]interface{} `json:"windows_phone,omitempty" jsonschema:"description=Windows Phone"`
}

// AdCreativeTextData represents the Facebook AdCreativeTextData object
type AdCreativeTextData struct {
	Message string `json:"message,omitempty" jsonschema:"description=Message"`
}

// AdCreativeVideoData represents the Facebook AdCreativeVideoData object
type AdCreativeVideoData struct {
	AdditionalImageIndex                int                                  `json:"additional_image_index,omitempty" jsonschema:"description=Additional Image Index,minimum=13,maximum=100"`
	BrandedContentSharedToSponsorStatus string                               `json:"branded_content_shared_to_sponsor_status,omitempty" jsonschema:"description=Branded Content Shared To Sponsor Status"`
	BrandedContentSponsorPageID         string                               `json:"branded_content_sponsor_page_id,omitempty" jsonschema:"description=ID of the Branded Content Sponsor Page,pattern=^[0-9]+$"`
	CallToAction                        *AdCreativeLinkDataCallToAction      `json:"call_to_action,omitempty" jsonschema:"description=Call To Action"`
	CollectionThumbnails                []*AdCreativeCollectionThumbnailInfo `json:"collection_thumbnails,omitempty" jsonschema:"description=Collection Thumbnails"`
	CustomizationRulesSpec              []*AdCustomizationRuleSpec           `json:"customization_rules_spec,omitempty" jsonschema:"description=Customization Rules Spec"`
	ImageHash                           string                               `json:"image_hash,omitempty" jsonschema:"description=Image Hash"`
	ImageURL                            string                               `json:"image_url,omitempty" jsonschema:"description=Image URL,format=uri"`
	LinkDescription                     string                               `json:"link_description,omitempty" jsonschema:"description=Link Description"`
	Message                             string                               `json:"message,omitempty" jsonschema:"description=Message"`
	OfferID                             string                               `json:"offer_id,omitempty" jsonschema:"description=ID of the Offer,pattern=^[0-9]+$"`
	PageWelcomeMessage                  string                               `json:"page_welcome_message,omitempty" jsonschema:"description=Page Welcome Message"`
	PostClickConfiguration              *AdCreativePostClickConfiguration    `json:"post_click_configuration,omitempty" jsonschema:"description=Post Click Configuration"`
	RetailerItemIDs                     []string                             `json:"retailer_item_ids,omitempty" jsonschema:"description=Retailer Item Ids,pattern=^[0-9]+$"`
	Targeting                           *Targeting                           `json:"targeting,omitempty" jsonschema:"description=Targeting"`
	Title                               string                               `json:"title,omitempty" jsonschema:"description=Title"`
	VideoID                             string                               `json:"video_id,omitempty" jsonschema:"description=ID of the Video,pattern=^[0-9]+$"`
}

// AdCreativeVideoDataCustomOverlaySpec represents the Facebook AdCreativeVideoDataCustomOverlaySpec object
type AdCreativeVideoDataCustomOverlaySpec struct {
	BackgroundColor   string                                                `json:"background_color,omitempty" jsonschema:"description=Background Color"`
	BackgroundOpacity AdcreativevideodatacustomoverlayspecBackgroundOpacity `json:"background_opacity,omitempty" jsonschema:"description=Background Opacity"`
	Duration          int                                                   `json:"duration,omitempty" jsonschema:"description=Duration"`
	FloatWithMargin   bool                                                  `json:"float_with_margin,omitempty" jsonschema:"description=Float With Margin"`
	FullWidth         bool                                                  `json:"full_width,omitempty" jsonschema:"description=Full Width"`
	Option            AdcreativevideodatacustomoverlayspecOption            `json:"option,omitempty" jsonschema:"description=Option"`
	Position          AdcreativevideodatacustomoverlayspecPosition          `json:"position,omitempty" jsonschema:"description=Position"`
	Start             int                                                   `json:"start,omitempty" jsonschema:"description=Start"`
	Template          AdcreativevideodatacustomoverlayspecTemplate          `json:"template,omitempty" jsonschema:"description=Template"`
	TextColor         string                                                `json:"text_color,omitempty" jsonschema:"description=Text Color"`
}

// AdCreativeVideoDataMediaElements represents the Facebook AdCreativeVideoDataMediaElements object
type AdCreativeVideoDataMediaElements struct {
	ElementID   string `json:"element_id,omitempty" jsonschema:"description=ID of the Element,pattern=^[0-9]+$"`
	ElementType string `json:"element_type,omitempty" jsonschema:"description=Element Type"`
}

// AdCreativeWhatsAppChannelSpec represents the Facebook AdCreativeWhatsAppChannelSpec object
type AdCreativeWhatsAppChannelSpec struct {
	ChannelID  string `json:"channel_id,omitempty" jsonschema:"description=ID of the Channel,pattern=^[0-9]+$"`
	ChannelURL string `json:"channel_url,omitempty" jsonschema:"description=Channel URL,format=uri"`
}

// AdCustomDerivedMetrics represents the Facebook AdCustomDerivedMetrics object
type AdCustomDerivedMetrics struct {
	AdAccountID                string    `json:"ad_account_id,omitempty" jsonschema:"description=ID of the Ad Account,pattern=^[0-9]+$"`
	Business                   *Business `json:"business,omitempty" jsonschema:"description=Business"`
	CreationTime               time.Time `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	Creator                    *Profile  `json:"creator,omitempty" jsonschema:"description=Creator"`
	CustomDerivedMetricType    string    `json:"custom_derived_metric_type,omitempty" jsonschema:"description=Custom Derived Metric Type"`
	DeletionTime               time.Time `json:"deletion_time,omitempty" jsonschema:"description=Deletion Time,format=date-time"`
	Deletor                    *Profile  `json:"deletor,omitempty" jsonschema:"description=Deletor"`
	Description                string    `json:"description,omitempty" jsonschema:"description=Description"`
	FormatType                 string    `json:"format_type,omitempty" jsonschema:"description=Format Type"`
	Formula                    string    `json:"formula,omitempty" jsonschema:"description=Formula"`
	HasAttributionWindows      bool      `json:"has_attribution_windows,omitempty" jsonschema:"description=Has Attribution Windows"`
	HasInlineAttributionWindow bool      `json:"has_inline_attribution_window,omitempty" jsonschema:"description=Has Inline Attribution Window"`
	ID                         string    `json:"id,omitempty" jsonschema:"description=AdCustomDerivedMetrics ID,required,pattern=^[0-9]+$"`
	Name                       string    `json:"name,omitempty" jsonschema:"description=Name of the AdCustomDerivedMetrics,required"`
	Permission                 string    `json:"permission,omitempty" jsonschema:"description=Permission"`
	SavedReportID              string    `json:"saved_report_id,omitempty" jsonschema:"description=ID of the Saved Report,pattern=^[0-9]+$"`
	Scope                      string    `json:"scope,omitempty" jsonschema:"description=Scope"`
}

// AdCustomizationRuleSpec represents the Facebook AdCustomizationRuleSpec object
type AdCustomizationRuleSpec struct {
	Caption           string                     `json:"caption,omitempty" jsonschema:"description=Caption"`
	CustomizationSpec map[string]interface{}     `json:"customization_spec,omitempty" jsonschema:"description=Customization Spec"`
	Description       string                     `json:"description,omitempty" jsonschema:"description=Description"`
	ImageHash         string                     `json:"image_hash,omitempty" jsonschema:"description=Image Hash"`
	Link              string                     `json:"link,omitempty" jsonschema:"description=Link"`
	Message           string                     `json:"message,omitempty" jsonschema:"description=Message"`
	Name              string                     `json:"name,omitempty" jsonschema:"description=Name of the AdCustomizationRuleSpec,required"`
	Priority          int                        `json:"priority,omitempty" jsonschema:"description=Priority"`
	TemplateURLSpec   *AdCreativeTemplateURLSpec `json:"template_url_spec,omitempty" jsonschema:"description=Template URL Spec,format=uri"`
	VideoID           int                        `json:"video_id,omitempty" jsonschema:"description=ID of the Video,pattern=^[0-9]+$"`
}

// AdDefaultValues represents the Facebook AdDefaultValues object
type AdDefaultValues struct {
	CampaignGroup map[string]interface{} `json:"campaign_group,omitempty" jsonschema:"description=Campaign Group"`
}

// AdDraft represents the Facebook AdDraft object
type AdDraft struct {
	AccountID       string                 `json:"account_id,omitempty" jsonschema:"description=ID of the Account,pattern=^[0-9]+$"`
	APIVersion      string                 `json:"api_version,omitempty" jsonschema:"description=API Version"`
	AsyncRequestSet *AdAsyncRequestSet     `json:"async_request_set,omitempty" jsonschema:"description=Async Request Set"`
	AuthorID        string                 `json:"author_id,omitempty" jsonschema:"description=ID of the Author,pattern=^[0-9]+$"`
	CreatedBy       string                 `json:"created_by,omitempty" jsonschema:"description=When the AdDraft was created"`
	DraftVersion    string                 `json:"draft_version,omitempty" jsonschema:"description=Draft Version"`
	ID              string                 `json:"id,omitempty" jsonschema:"description=AdDraft ID,required,pattern=^[0-9]+$"`
	IsActive        bool                   `json:"is_active,omitempty" jsonschema:"description=Is Active"`
	Name            string                 `json:"name,omitempty" jsonschema:"description=Name of the AdDraft,required"`
	OwnershipType   string                 `json:"ownership_type,omitempty" jsonschema:"description=Ownership Type"`
	PublishStatus   map[string]interface{} `json:"publish_status,omitempty" jsonschema:"description=Publish Status"`
	State           string                 `json:"state,omitempty" jsonschema:"description=State"`
	Summary         string                 `json:"summary,omitempty" jsonschema:"description=Summary"`
	TimeCreated     time.Time              `json:"time_created,omitempty" jsonschema:"description=When the AdDraft was created,format=date-time"`
	TimeUpdated     time.Time              `json:"time_updated,omitempty" jsonschema:"description=When the AdDraft was last updated,format=date-time"`
}

// AdDynamicCreative represents the Facebook AdDynamicCreative object
type AdDynamicCreative struct {
	PreviewURL string `json:"preview_url,omitempty" jsonschema:"description=Preview URL,format=uri"`
}

// AdEntityTargetSpend represents the Facebook AdEntityTargetSpend object
type AdEntityTargetSpend struct {
	Amount     string `json:"amount,omitempty" jsonschema:"description=Amount"`
	HasError   bool   `json:"has_error,omitempty" jsonschema:"description=Has Error"`
	IsAccurate bool   `json:"is_accurate,omitempty" jsonschema:"description=Is Accurate"`
	IsProrated bool   `json:"is_prorated,omitempty" jsonschema:"description=Is Prorated"`
	IsUpdating bool   `json:"is_updating,omitempty" jsonschema:"description=Is Updating"`
}

// AdExportPreset represents the Facebook AdExportPreset object
type AdExportPreset struct {
	CreatedTime time.Time `json:"created_time,omitempty" jsonschema:"description=When the AdExportPreset was created,format=date-time"`
	Fields      []string  `json:"fields,omitempty" jsonschema:"description=Fields"`
	ID          string    `json:"id,omitempty" jsonschema:"description=AdExportPreset ID,required,pattern=^[0-9]+$"`
	Name        string    `json:"name,omitempty" jsonschema:"description=Name of the AdExportPreset,required"`
	Owner       *User     `json:"owner,omitempty" jsonschema:"description=Owner"`
	UpdatedTime time.Time `json:"updated_time,omitempty" jsonschema:"description=When the AdExportPreset was last updated,format=date-time"`
}

// AdImage represents the Facebook AdImage object
type AdImage struct {
	AccountID                       string        `json:"account_id,omitempty" jsonschema:"description=ID of the Account,pattern=^[0-9]+$"`
	CreatedTime                     time.Time     `json:"created_time,omitempty" jsonschema:"description=When the AdImage was created,format=date-time"`
	Creatives                       []string      `json:"creatives,omitempty" jsonschema:"description=Creatives"`
	Hash                            string        `json:"hash,omitempty" jsonschema:"description=Hash"`
	Height                          uint          `json:"height,omitempty" jsonschema:"description=Height"`
	ID                              string        `json:"id,omitempty" jsonschema:"description=AdImage ID,required,pattern=^[0-9]+$"`
	IsAssociatedCreativesInAdgroups bool          `json:"is_associated_creatives_in_adgroups,omitempty" jsonschema:"description=Is Associated Creatives In Adgroups"`
	Name                            string        `json:"name,omitempty" jsonschema:"description=Name of the AdImage,required"`
	OriginalHeight                  uint          `json:"original_height,omitempty" jsonschema:"description=Original Height"`
	OriginalWidth                   uint          `json:"original_width,omitempty" jsonschema:"description=Original Width"`
	OwnerBusiness                   *Business     `json:"owner_business,omitempty" jsonschema:"description=Owner Business"`
	PermalinkURL                    string        `json:"permalink_url,omitempty" jsonschema:"description=Permalink URL,format=uri"`
	Status                          AdimageStatus `json:"status,omitempty" jsonschema:"description=Current status of the AdImage,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	UpdatedTime                     time.Time     `json:"updated_time,omitempty" jsonschema:"description=When the AdImage was last updated,format=date-time"`
	URL                             string        `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
	URL128                          string        `json:"url_128,omitempty" jsonschema:"description=URL 128,format=uri"`
	Width                           uint          `json:"width,omitempty" jsonschema:"description=Width"`
}

// AdKeywordStats represents the Facebook AdKeywordStats object
type AdKeywordStats struct {
	Actions            []*AdsActionStats `json:"actions,omitempty" jsonschema:"description=Actions"`
	Clicks             uint              `json:"clicks,omitempty" jsonschema:"description=Clicks"`
	CostPerTotalAction float64           `json:"cost_per_total_action,omitempty" jsonschema:"description=Cost Per Total Action"`
	CostPerUniqueClick float64           `json:"cost_per_unique_click,omitempty" jsonschema:"description=Cost Per Unique Click"`
	Cpc                float64           `json:"cpc,omitempty" jsonschema:"description=Cpc"`
	Cpm                float64           `json:"cpm,omitempty" jsonschema:"description=Cpm"`
	Cpp                float64           `json:"cpp,omitempty" jsonschema:"description=Cpp"`
	Ctr                float64           `json:"ctr,omitempty" jsonschema:"description=Ctr"`
	Frequency          float64           `json:"frequency,omitempty" jsonschema:"description=Frequency"`
	ID                 string            `json:"id,omitempty" jsonschema:"description=AdKeywordStats ID,required,pattern=^[0-9]+$"`
	Impressions        uint              `json:"impressions,omitempty" jsonschema:"description=Impressions"`
	Name               string            `json:"name,omitempty" jsonschema:"description=Name of the AdKeywordStats,required"`
	Reach              uint              `json:"reach,omitempty" jsonschema:"description=Reach"`
	Spend              float64           `json:"spend,omitempty" jsonschema:"description=Spend"`
	TotalActions       uint              `json:"total_actions,omitempty" jsonschema:"description=Total Actions"`
	TotalUniqueActions uint              `json:"total_unique_actions,omitempty" jsonschema:"description=Total Unique Actions"`
	UniqueActions      []*AdsActionStats `json:"unique_actions,omitempty" jsonschema:"description=Unique Actions"`
	UniqueClicks       uint              `json:"unique_clicks,omitempty" jsonschema:"description=Unique Clicks"`
	UniqueCtr          float64           `json:"unique_ctr,omitempty" jsonschema:"description=Unique Ctr"`
	UniqueImpressions  uint              `json:"unique_impressions,omitempty" jsonschema:"description=Unique Impressions"`
}

// AdKeywords represents the Facebook AdKeywords object
type AdKeywords struct {
	Brands            []string `json:"brands,omitempty" jsonschema:"description=Brands"`
	ProductCategories []string `json:"product_categories,omitempty" jsonschema:"description=Product Categories"`
	ProductNames      []string `json:"product_names,omitempty" jsonschema:"description=Product Names"`
	SearchTerms       []string `json:"search_terms,omitempty" jsonschema:"description=Search Terms"`
}

// AdKpiShift represents the Facebook AdKpiShift object
type AdKpiShift struct {
	AdSet               *AdSet  `json:"ad_set,omitempty" jsonschema:"description=Ad Set"`
	CostPerResultShift  float64 `json:"cost_per_result_shift,omitempty" jsonschema:"description=Cost Per Result Shift"`
	EnoughEffectiveDays bool    `json:"enough_effective_days,omitempty" jsonschema:"description=Enough Effective Days"`
	ResultIndicator     string  `json:"result_indicator,omitempty" jsonschema:"description=Result Indicator"`
	ResultShift         float64 `json:"result_shift,omitempty" jsonschema:"description=Result Shift"`
	SpendShift          float64 `json:"spend_shift,omitempty" jsonschema:"description=Spend Shift"`
}

// AdLabel represents the Facebook AdLabel object
type AdLabel struct {
	Account     *AdAccount `json:"account,omitempty" jsonschema:"description=Account"`
	CreatedTime time.Time  `json:"created_time,omitempty" jsonschema:"description=When the AdLabel was created,format=date-time"`
	ID          string     `json:"id,omitempty" jsonschema:"description=AdLabel ID,required,pattern=^[0-9]+$"`
	Name        string     `json:"name,omitempty" jsonschema:"description=Name of the AdLabel,required"`
	UpdatedTime time.Time  `json:"updated_time,omitempty" jsonschema:"description=When the AdLabel was last updated,format=date-time"`
}

// AdLightAdgroup represents the Facebook AdLightAdgroup object
type AdLightAdgroup struct {
	AdsetID string `json:"adset_id,omitempty" jsonschema:"description=ID of the Adset,pattern=^[0-9]+$"`
	ID      string `json:"id,omitempty" jsonschema:"description=AdLightAdgroup ID,required,pattern=^[0-9]+$"`
}

// AdLightCampaign represents the Facebook AdLightCampaign object
type AdLightCampaign struct {
	CampaignID string `json:"campaign_id,omitempty" jsonschema:"description=ID of the Campaign,pattern=^[0-9]+$"`
	ID         string `json:"id,omitempty" jsonschema:"description=AdLightCampaign ID,required,pattern=^[0-9]+$"`
}

// AdLightCampaignGroup represents the Facebook AdLightCampaignGroup object
type AdLightCampaignGroup struct {
	ID string `json:"id,omitempty" jsonschema:"description=AdLightCampaignGroup ID,required,pattern=^[0-9]+$"`
}

// AdLimitSetting represents the Facebook AdLimitSetting object
type AdLimitSetting struct {
	LimitAllocationByPageAdvertisers []map[string]int `json:"limit_allocation_by_page_advertisers,omitempty" jsonschema:"description=Limit Allocation By Page Advertisers,minimum=13,maximum=100"`
}

// AdLimitsEnforcementData represents the Facebook AdLimitsEnforcementData object
type AdLimitsEnforcementData struct {
	AdLimitOnPage   int    `json:"ad_limit_on_page,omitempty" jsonschema:"description=Ad Limit On Page,minimum=13,maximum=100"`
	AdLimitOnScope  int    `json:"ad_limit_on_scope,omitempty" jsonschema:"description=Ad Limit On Scope"`
	AdVolumeOnPage  int    `json:"ad_volume_on_page,omitempty" jsonschema:"description=Ad Volume On Page,minimum=13,maximum=100"`
	AdVolumeOnScope int    `json:"ad_volume_on_scope,omitempty" jsonschema:"description=Ad Volume On Scope"`
	IsAdmin         bool   `json:"is_admin,omitempty" jsonschema:"description=Is Admin"`
	PageName        string `json:"page_name,omitempty" jsonschema:"description=Page Name"`
}

// AdMonetizationProperty represents the Facebook AdMonetizationProperty object
type AdMonetizationProperty struct {
	OwnerBusiness *Business `json:"owner_business,omitempty" jsonschema:"description=Owner Business"`
}

// AdNetworkAnalyticsAsyncQueryExport represents the Facebook AdNetworkAnalyticsAsyncQueryExport object
type AdNetworkAnalyticsAsyncQueryExport struct {
	ExportLink string `json:"export_link,omitempty" jsonschema:"description=Export Link"`
	QueryID    string `json:"query_id,omitempty" jsonschema:"description=ID of the Query,pattern=^[0-9]+$"`
	Status     string `json:"status,omitempty" jsonschema:"description=Current status of the AdNetworkAnalyticsAsyncQueryExport,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// AdNetworkAnalyticsAsyncQueryResult represents the Facebook AdNetworkAnalyticsAsyncQueryResult object
type AdNetworkAnalyticsAsyncQueryResult struct {
	Data           map[string]interface{}   `json:"data,omitempty" jsonschema:"description=Data"`
	OmittedResults []map[string]interface{} `json:"omitted_results,omitempty" jsonschema:"description=Omitted Results"`
	QueryID        string                   `json:"query_id,omitempty" jsonschema:"description=ID of the Query,pattern=^[0-9]+$"`
	Results        []map[string]interface{} `json:"results,omitempty" jsonschema:"description=Results"`
	Status         string                   `json:"status,omitempty" jsonschema:"description=Current status of the AdNetworkAnalyticsAsyncQueryResult,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// AdNetworkAnalyticsSyncQueryResult represents the Facebook AdNetworkAnalyticsSyncQueryResult object
type AdNetworkAnalyticsSyncQueryResult struct {
	OmittedResults []map[string]interface{} `json:"omitted_results,omitempty" jsonschema:"description=Omitted Results"`
	QueryID        string                   `json:"query_id,omitempty" jsonschema:"description=ID of the Query,pattern=^[0-9]+$"`
	Results        []map[string]interface{} `json:"results,omitempty" jsonschema:"description=Results"`
}

// AdPlacePageSet represents the Facebook AdPlacePageSet object
type AdPlacePageSet struct {
	AccountID     string   `json:"account_id,omitempty" jsonschema:"description=ID of the Account,pattern=^[0-9]+$"`
	ID            string   `json:"id,omitempty" jsonschema:"description=AdPlacePageSet ID,required,pattern=^[0-9]+$"`
	LocationTypes []string `json:"location_types,omitempty" jsonschema:"description=Location Types"`
	Name          string   `json:"name,omitempty" jsonschema:"description=Name of the AdPlacePageSet,required"`
	PagesCount    int      `json:"pages_count,omitempty" jsonschema:"description=Pages Count,minimum=13,maximum=100"`
	ParentPage    *Page    `json:"parent_page,omitempty" jsonschema:"description=Parent Page"`
}

// AdPlacePageSetMetadata represents the Facebook AdPlacePageSetMetadata object
type AdPlacePageSetMetadata struct {
	Audience    map[string]interface{} `json:"audience,omitempty" jsonschema:"description=Audience"`
	Custom      map[string]interface{} `json:"custom,omitempty" jsonschema:"description=Custom"`
	ExtraData   string                 `json:"extra_data,omitempty" jsonschema:"description=Extra Data"`
	FixedRadius map[string]interface{} `json:"fixed_radius,omitempty" jsonschema:"description=Fixed Radius"`
}

// AdPlacement represents the Facebook AdPlacement object
type AdPlacement struct {
	BundleID            string                 `json:"bundle_id,omitempty" jsonschema:"description=ID of the Bundle,pattern=^[0-9]+$"`
	DisplayFormat       string                 `json:"display_format,omitempty" jsonschema:"description=Display Format"`
	ExternalPlacementID string                 `json:"external_placement_id,omitempty" jsonschema:"description=ID of the External Placement,pattern=^[0-9]+$"`
	GoogleDisplayFormat string                 `json:"google_display_format,omitempty" jsonschema:"description=Google Display Format"`
	ID                  string                 `json:"id,omitempty" jsonschema:"description=AdPlacement ID,required,pattern=^[0-9]+$"`
	Name                string                 `json:"name,omitempty" jsonschema:"description=Name of the AdPlacement,required"`
	PlacementGroup      map[string]interface{} `json:"placement_group,omitempty" jsonschema:"description=Placement Group"`
	Platform            string                 `json:"platform,omitempty" jsonschema:"description=Platform"`
	Status              string                 `json:"status,omitempty" jsonschema:"description=Current status of the AdPlacement,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// AdPreview represents the Facebook AdPreview object
type AdPreview struct {
	Body               string                 `json:"body,omitempty" jsonschema:"description=Body"`
	TransformationSpec map[string]interface{} `json:"transformation_spec,omitempty" jsonschema:"description=Transformation Spec"`
}

// AdPromotedObject represents the Facebook AdPromotedObject object
type AdPromotedObject struct {
	ApplicationID                 string                                 `json:"application_id,omitempty" jsonschema:"description=ID of the Application,pattern=^[0-9]+$"`
	BoostedProductSetID           string                                 `json:"boosted_product_set_id,omitempty" jsonschema:"description=ID of the Boosted Product Set,pattern=^[0-9]+$"`
	ConversionGoalID              string                                 `json:"conversion_goal_id,omitempty" jsonschema:"description=ID of the Conversion Goal,pattern=^[0-9]+$"`
	CustomConversionID            string                                 `json:"custom_conversion_id,omitempty" jsonschema:"description=ID of the Custom Conversion,pattern=^[0-9]+$"`
	CustomEventStr                string                                 `json:"custom_event_str,omitempty" jsonschema:"description=Custom Event Str"`
	CustomEventType               AdpromotedobjectCustomEventType        `json:"custom_event_type,omitempty" jsonschema:"description=Custom Event Type"`
	EventID                       string                                 `json:"event_id,omitempty" jsonschema:"description=ID of the Event,pattern=^[0-9]+$"`
	FundraiserCampaignID          string                                 `json:"fundraiser_campaign_id,omitempty" jsonschema:"description=ID of the Fundraiser Campaign,pattern=^[0-9]+$"`
	LeadAdsCustomEventStr         string                                 `json:"lead_ads_custom_event_str,omitempty" jsonschema:"description=Lead Ads Custom Event Str"`
	LeadAdsCustomEventType        AdpromotedobjectLeadAdsCustomEventType `json:"lead_ads_custom_event_type,omitempty" jsonschema:"description=Lead Ads Custom Event Type"`
	LeadAdsFormEventSourceType    string                                 `json:"lead_ads_form_event_source_type,omitempty" jsonschema:"description=Lead Ads Form Event Source Type"`
	LeadAdsOffsiteConversionType  string                                 `json:"lead_ads_offsite_conversion_type,omitempty" jsonschema:"description=Lead Ads Offsite Conversion Type"`
	McmeConversionID              string                                 `json:"mcme_conversion_id,omitempty" jsonschema:"description=ID of the Mcme Conversion,pattern=^[0-9]+$"`
	ObjectStoreURL                string                                 `json:"object_store_url,omitempty" jsonschema:"description=Object Store URL,format=uri"`
	OfferID                       string                                 `json:"offer_id,omitempty" jsonschema:"description=ID of the Offer,pattern=^[0-9]+$"`
	OfflineConversionDataSetID    string                                 `json:"offline_conversion_data_set_id,omitempty" jsonschema:"description=ID of the Offline Conversion Data Set,pattern=^[0-9]+$"`
	OffsiteConversionEventID      string                                 `json:"offsite_conversion_event_id,omitempty" jsonschema:"description=ID of the Offsite Conversion Event,pattern=^[0-9]+$"`
	OmnichannelObject             map[string]interface{}                 `json:"omnichannel_object,omitempty" jsonschema:"description=Omnichannel Object"`
	PageID                        string                                 `json:"page_id,omitempty" jsonschema:"description=ID of the Page,pattern=^[0-9]+$"`
	PixelAggregationRule          string                                 `json:"pixel_aggregation_rule,omitempty" jsonschema:"description=Pixel Aggregation Rule"`
	PixelID                       string                                 `json:"pixel_id,omitempty" jsonschema:"description=ID of the Pixel,pattern=^[0-9]+$"`
	PixelRule                     string                                 `json:"pixel_rule,omitempty" jsonschema:"description=Pixel Rule"`
	PlacePageSet                  *AdPlacePageSet                        `json:"place_page_set,omitempty" jsonschema:"description=Place Page Set"`
	PlacePageSetID                string                                 `json:"place_page_set_id,omitempty" jsonschema:"description=ID of the Place Page Set,pattern=^[0-9]+$"`
	ProductCatalogID              string                                 `json:"product_catalog_id,omitempty" jsonschema:"description=ID of the Product Catalog,pattern=^[0-9]+$"`
	ProductItemID                 string                                 `json:"product_item_id,omitempty" jsonschema:"description=ID of the Product Item,pattern=^[0-9]+$"`
	ProductSet                    *ProductSet                            `json:"product_set,omitempty" jsonschema:"description=Product Set"`
	ProductSetID                  string                                 `json:"product_set_id,omitempty" jsonschema:"description=ID of the Product Set,pattern=^[0-9]+$"`
	ProductSetOptimization        string                                 `json:"product_set_optimization,omitempty" jsonschema:"description=Product Set Optimization"`
	RetentionDays                 string                                 `json:"retention_days,omitempty" jsonschema:"description=Retention Days"`
	ValueSemanticType             string                                 `json:"value_semantic_type,omitempty" jsonschema:"description=Value Semantic Type"`
	Variation                     string                                 `json:"variation,omitempty" jsonschema:"description=Variation"`
	WhatsAppBusinessPhoneNumberID string                                 `json:"whats_app_business_phone_number_id,omitempty" jsonschema:"description=ID of the Whats App Business Phone Number,pattern=^[0-9]+$"`
	WhatsappPhoneNumber           string                                 `json:"whatsapp_phone_number,omitempty" jsonschema:"description=Whatsapp Phone Number"`
}

// AdProposal represents the Facebook AdProposal object
type AdProposal struct {
	AdProposalTypeName   string     `json:"ad_proposal_type_name,omitempty" jsonschema:"description=Ad Proposal Type Name"`
	Adaccount            *AdAccount `json:"adaccount,omitempty" jsonschema:"description=Adaccount"`
	CreationTime         time.Time  `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	Creator              *User      `json:"creator,omitempty" jsonschema:"description=Creator"`
	DeliveryInterface    string     `json:"delivery_interface,omitempty" jsonschema:"description=Delivery Interface"`
	ExpirationTime       time.Time  `json:"expiration_time,omitempty" jsonschema:"description=Expiration Time,format=date-time"`
	HasConflict          bool       `json:"has_conflict,omitempty" jsonschema:"description=Has Conflict"`
	ID                   string     `json:"id,omitempty" jsonschema:"description=AdProposal ID,required,pattern=^[0-9]+$"`
	KpiMetric            string     `json:"kpi_metric,omitempty" jsonschema:"description=Kpi Metric"`
	Message              string     `json:"message,omitempty" jsonschema:"description=Message"`
	Name                 string     `json:"name,omitempty" jsonschema:"description=Name of the AdProposal,required"`
	ProposalDtsTemplate  string     `json:"proposal_dts_template,omitempty" jsonschema:"description=Proposal Dts Template"`
	ProposalTemplateName string     `json:"proposal_template_name,omitempty" jsonschema:"description=Proposal Template Name"`
	Recommendation       string     `json:"recommendation,omitempty" jsonschema:"description=Recommendation"`
	ReviewTime           time.Time  `json:"review_time,omitempty" jsonschema:"description=Review Time,format=date-time"`
	ReviewedBy           *User      `json:"reviewed_by,omitempty" jsonschema:"description=Reviewed By"`
	SendTime             time.Time  `json:"send_time,omitempty" jsonschema:"description=Send Time,format=date-time"`
	Status               string     `json:"status,omitempty" jsonschema:"description=Current status of the AdProposal,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	UseTesting           bool       `json:"use_testing,omitempty" jsonschema:"description=Use Testing"`
}

// AdRecommendation represents the Facebook AdRecommendation object
type AdRecommendation struct {
	BlameField         string                     `json:"blame_field,omitempty" jsonschema:"description=Blame Field"`
	Code               int                        `json:"code,omitempty" jsonschema:"description=Code"`
	Confidence         AdrecommendationConfidence `json:"confidence,omitempty" jsonschema:"description=Confidence"`
	Importance         AdrecommendationImportance `json:"importance,omitempty" jsonschema:"description=Importance"`
	Message            string                     `json:"message,omitempty" jsonschema:"description=Message"`
	RecommendationData *AdRecommendationData      `json:"recommendation_data,omitempty" jsonschema:"description=Recommendation Data"`
	Title              string                     `json:"title,omitempty" jsonschema:"description=Title"`
	Value              string                     `json:"value,omitempty" jsonschema:"description=Value"`
}

// AdRecommendationData represents the Facebook AdRecommendationData object
type AdRecommendationData struct {
	Link string `json:"link,omitempty" jsonschema:"description=Link"`
}

// AdReportRun represents the Facebook AdReportRun object
type AdReportRun struct {
	AccountID              string   `json:"account_id,omitempty" jsonschema:"description=ID of the Account,pattern=^[0-9]+$"`
	AsyncPercentCompletion uint     `json:"async_percent_completion,omitempty" jsonschema:"description=Async Percent Completion"`
	AsyncReportURL         string   `json:"async_report_url,omitempty" jsonschema:"description=Async Report URL,format=uri"`
	AsyncStatus            string   `json:"async_status,omitempty" jsonschema:"description=Async Status"`
	DateStart              string   `json:"date_start,omitempty" jsonschema:"description=Date Start"`
	DateStop               string   `json:"date_stop,omitempty" jsonschema:"description=Date Stop"`
	Emails                 []string `json:"emails,omitempty" jsonschema:"description=Emails"`
	ErrorCode              uint     `json:"error_code,omitempty" jsonschema:"description=Error Code"`
	FriendlyName           string   `json:"friendly_name,omitempty" jsonschema:"description=Friendly Name"`
	ID                     string   `json:"id,omitempty" jsonschema:"description=AdReportRun ID,required,pattern=^[0-9]+$"`
	IsAsyncExport          int      `json:"is_async_export,omitempty" jsonschema:"description=Is Async Export"`
	IsBookmarked           bool     `json:"is_bookmarked,omitempty" jsonschema:"description=Is Bookmarked"`
	IsRunning              bool     `json:"is_running,omitempty" jsonschema:"description=Is Running"`
	ScheduleID             string   `json:"schedule_id,omitempty" jsonschema:"description=ID of the Schedule,pattern=^[0-9]+$"`
	TimeCompleted          uint     `json:"time_completed,omitempty" jsonschema:"description=Time Completed"`
	TimeRef                uint     `json:"time_ref,omitempty" jsonschema:"description=Time Ref"`
}

// AdRule represents the Facebook AdRule object
type AdRule struct {
	AccountID        string                `json:"account_id,omitempty" jsonschema:"description=ID of the Account,pattern=^[0-9]+$"`
	CreatedBy        *User                 `json:"created_by,omitempty" jsonschema:"description=When the AdRule was created"`
	CreatedTime      time.Time             `json:"created_time,omitempty" jsonschema:"description=When the AdRule was created,format=date-time"`
	DisableErrorCode int                   `json:"disable_error_code,omitempty" jsonschema:"description=Disable Error Code"`
	EvaluationSpec   *AdRuleEvaluationSpec `json:"evaluation_spec,omitempty" jsonschema:"description=Evaluation Spec"`
	ExecutionSpec    *AdRuleExecutionSpec  `json:"execution_spec,omitempty" jsonschema:"description=Execution Spec"`
	ID               string                `json:"id,omitempty" jsonschema:"description=AdRule ID,required,pattern=^[0-9]+$"`
	Name             string                `json:"name,omitempty" jsonschema:"description=Name of the AdRule,required"`
	ScheduleSpec     *AdRuleScheduleSpec   `json:"schedule_spec,omitempty" jsonschema:"description=Schedule Spec"`
	Status           string                `json:"status,omitempty" jsonschema:"description=Current status of the AdRule,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	UpdatedTime      time.Time             `json:"updated_time,omitempty" jsonschema:"description=When the AdRule was last updated,format=date-time"`
}

// AdRuleEvaluationSpec represents the Facebook AdRuleEvaluationSpec object
type AdRuleEvaluationSpec struct {
	EvaluationType AdruleevaluationspecEvaluationType `json:"evaluation_type,omitempty" jsonschema:"description=Evaluation Type"`
	Filters        []*AdRuleFilters                   `json:"filters,omitempty" jsonschema:"description=Filters"`
	Trigger        *AdRuleTrigger                     `json:"trigger,omitempty" jsonschema:"description=Trigger"`
}

// AdRuleExecutionOptions represents the Facebook AdRuleExecutionOptions object
type AdRuleExecutionOptions struct {
	Field    string                         `json:"field,omitempty" jsonschema:"description=Field"`
	Operator AdruleexecutionoptionsOperator `json:"operator,omitempty" jsonschema:"description=Operator"`
	Value    map[string]interface{}         `json:"value,omitempty" jsonschema:"description=Value"`
}

// AdRuleExecutionSpec represents the Facebook AdRuleExecutionSpec object
type AdRuleExecutionSpec struct {
	ExecutionOptions []*AdRuleExecutionOptions        `json:"execution_options,omitempty" jsonschema:"description=Execution Options"`
	ExecutionType    AdruleexecutionspecExecutionType `json:"execution_type,omitempty" jsonschema:"description=Execution Type"`
	IsOnceOff        bool                             `json:"is_once_off,omitempty" jsonschema:"description=Is Once Off"`
}

// AdRuleFilters represents the Facebook AdRuleFilters object
type AdRuleFilters struct {
	Field    string                 `json:"field,omitempty" jsonschema:"description=Field"`
	Operator AdrulefiltersOperator  `json:"operator,omitempty" jsonschema:"description=Operator"`
	Value    map[string]interface{} `json:"value,omitempty" jsonschema:"description=Value"`
}

// AdRuleHistory represents the Facebook AdRuleHistory object
type AdRuleHistory struct {
	EvaluationSpec   *AdRuleEvaluationSpec  `json:"evaluation_spec,omitempty" jsonschema:"description=Evaluation Spec"`
	ExceptionCode    int                    `json:"exception_code,omitempty" jsonschema:"description=Exception Code"`
	ExceptionMessage string                 `json:"exception_message,omitempty" jsonschema:"description=Exception Message"`
	ExecutionSpec    *AdRuleExecutionSpec   `json:"execution_spec,omitempty" jsonschema:"description=Execution Spec"`
	IsManual         bool                   `json:"is_manual,omitempty" jsonschema:"description=Is Manual"`
	Results          []*AdRuleHistoryResult `json:"results,omitempty" jsonschema:"description=Results"`
	ScheduleSpec     *AdRuleScheduleSpec    `json:"schedule_spec,omitempty" jsonschema:"description=Schedule Spec"`
	Timestamp        time.Time              `json:"timestamp,omitempty" jsonschema:"description=Timestamp,format=date-time"`
}

// AdRuleHistoryResult represents the Facebook AdRuleHistoryResult object
type AdRuleHistoryResult struct {
	Actions    []*AdRuleHistoryResultAction  `json:"actions,omitempty" jsonschema:"description=Actions"`
	ObjectID   string                        `json:"object_id,omitempty" jsonschema:"description=ID of the Object,pattern=^[0-9]+$"`
	ObjectType AdrulehistoryresultObjectType `json:"object_type,omitempty" jsonschema:"description=Object Type"`
}

// AdRuleHistoryResultAction represents the Facebook AdRuleHistoryResultAction object
type AdRuleHistoryResultAction struct {
	Action   string `json:"action,omitempty" jsonschema:"description=Action"`
	Field    string `json:"field,omitempty" jsonschema:"description=Field"`
	NewValue string `json:"new_value,omitempty" jsonschema:"description=New Value"`
	OldValue string `json:"old_value,omitempty" jsonschema:"description=Old Value"`
}

// AdRuleSchedule represents the Facebook AdRuleSchedule object
type AdRuleSchedule struct {
	Days        []int `json:"days,omitempty" jsonschema:"description=Days"`
	EndMinute   int   `json:"end_minute,omitempty" jsonschema:"description=End Minute"`
	StartMinute int   `json:"start_minute,omitempty" jsonschema:"description=Start Minute"`
}

// AdRuleScheduleSpec represents the Facebook AdRuleScheduleSpec object
type AdRuleScheduleSpec struct {
	Schedule     []*AdRuleSchedule `json:"schedule,omitempty" jsonschema:"description=Schedule"`
	ScheduleType string            `json:"schedule_type,omitempty" jsonschema:"description=Schedule Type"`
}

// AdRuleTrigger represents the Facebook AdRuleTrigger object
type AdRuleTrigger struct {
	Field    string                 `json:"field,omitempty" jsonschema:"description=Field"`
	Operator AdruletriggerOperator  `json:"operator,omitempty" jsonschema:"description=Operator"`
	Type     AdruletriggerType      `json:"type,omitempty" jsonschema:"description=Type"`
	Value    map[string]interface{} `json:"value,omitempty" jsonschema:"description=Value"`
}

// AdSavedKeywords represents the Facebook AdSavedKeywords object
type AdSavedKeywords struct {
	Account     *AdAccount  `json:"account,omitempty" jsonschema:"description=Account"`
	ID          string      `json:"id,omitempty" jsonschema:"description=AdSavedKeywords ID,required,pattern=^[0-9]+$"`
	Keywords    *AdKeywords `json:"keywords,omitempty" jsonschema:"description=Keywords"`
	Name        string      `json:"name,omitempty" jsonschema:"description=Name of the AdSavedKeywords,required"`
	RunStatus   string      `json:"run_status,omitempty" jsonschema:"description=Run Status"`
	TimeCreated time.Time   `json:"time_created,omitempty" jsonschema:"description=When the AdSavedKeywords was created,format=date-time"`
	TimeUpdated time.Time   `json:"time_updated,omitempty" jsonschema:"description=When the AdSavedKeywords was last updated,format=date-time"`
}

// AdSavedLocation represents the Facebook AdSavedLocation object
type AdSavedLocation struct {
	Cities            []*TargetingGeoLocationCity           `json:"cities,omitempty" jsonschema:"description=Cities"`
	Countries         []string                              `json:"countries,omitempty" jsonschema:"description=Countries"`
	CountryGroups     []string                              `json:"country_groups,omitempty" jsonschema:"description=Country Groups"`
	CustomLocations   []*TargetingGeoLocationCustomLocation `json:"custom_locations,omitempty" jsonschema:"description=Custom Locations"`
	GeoMarkets        []*TargetingGeoLocationMarket         `json:"geo_markets,omitempty" jsonschema:"description=Geo Markets"`
	ID                string                                `json:"id,omitempty" jsonschema:"description=AdSavedLocation ID,required,pattern=^[0-9]+$"`
	LocationSentences []string                              `json:"location_sentences,omitempty" jsonschema:"description=Location Sentences"`
	Name              string                                `json:"name,omitempty" jsonschema:"description=Name of the AdSavedLocation,required"`
	Regions           []*TargetingGeoLocationRegion         `json:"regions,omitempty" jsonschema:"description=Regions"`
	Zips              []*TargetingGeoLocationZip            `json:"zips,omitempty" jsonschema:"description=Zips"`
}

// AdSavedReport represents the Facebook AdSavedReport object
type AdSavedReport struct {
	AppOwner               *Application             `json:"app_owner,omitempty" jsonschema:"description=App Owner"`
	Breakdowns             []string                 `json:"breakdowns,omitempty" jsonschema:"description=Breakdowns"`
	BuiltinColumnSet       string                   `json:"builtin_column_set,omitempty" jsonschema:"description=Builtin Column Set"`
	CreationSource         string                   `json:"creation_source,omitempty" jsonschema:"description=Creation Source"`
	DateInterval           map[string]interface{}   `json:"date_interval,omitempty" jsonschema:"description=Date Interval"`
	DatePreset             string                   `json:"date_preset,omitempty" jsonschema:"description=Date Preset"`
	FormatVersion          int                      `json:"format_version,omitempty" jsonschema:"description=Format Version"`
	ID                     string                   `json:"id,omitempty" jsonschema:"description=AdSavedReport ID,required,pattern=^[0-9]+$"`
	InsightsSection        map[string]interface{}   `json:"insights_section,omitempty" jsonschema:"description=Insights Section"`
	IsSharedUnread         bool                     `json:"is_shared_unread,omitempty" jsonschema:"description=Is Shared Unread"`
	Level                  string                   `json:"level,omitempty" jsonschema:"description=Level"`
	Name                   string                   `json:"name,omitempty" jsonschema:"description=Name of the AdSavedReport,required"`
	NormalizedFilter       interface{}              `json:"normalized_filter,omitempty" jsonschema:"description=Normalized Filter"`
	Sort                   []map[string]interface{} `json:"sort,omitempty" jsonschema:"description=Sort"`
	UserAttributionWindows []string                 `json:"user_attribution_windows,omitempty" jsonschema:"description=User Attribution Windows"`
	UserColumns            []string                 `json:"user_columns,omitempty" jsonschema:"description=User Columns"`
	UserFilter             interface{}              `json:"user_filter,omitempty" jsonschema:"description=User Filter"`
	UserOwner              *User                    `json:"user_owner,omitempty" jsonschema:"description=User Owner"`
}

// AdSet represents the Facebook AdSet object
type AdSet struct {
	AccountID                         string                             `json:"account_id,omitempty" jsonschema:"description=ID of the Account,pattern=^[0-9]+$"`
	Adlabels                          []*AdLabel                         `json:"adlabels,omitempty" jsonschema:"description=Adlabels"`
	AdsetSchedule                     []*DayPart                         `json:"adset_schedule,omitempty" jsonschema:"description=Adset Schedule"`
	AssetFeedID                       string                             `json:"asset_feed_id,omitempty" jsonschema:"description=ID of the Asset Feed,pattern=^[0-9]+$"`
	AttributionSpec                   []*AttributionSpec                 `json:"attribution_spec,omitempty" jsonschema:"description=Attribution Spec"`
	BidAdjustments                    *AdBidAdjustments                  `json:"bid_adjustments,omitempty" jsonschema:"description=Bid Adjustments"`
	BidAmount                         uint                               `json:"bid_amount,omitempty" jsonschema:"description=Bid Amount,minimum=1"`
	BidConstraints                    *AdCampaignBidConstraint           `json:"bid_constraints,omitempty" jsonschema:"description=Bid Constraints"`
	BidInfo                           map[string]uint                    `json:"bid_info,omitempty" jsonschema:"description=Bid Info"`
	BidStrategy                       AdsetBidStrategy                   `json:"bid_strategy,omitempty" jsonschema:"description=Bid Strategy"`
	BillingEvent                      AdsetBillingEvent                  `json:"billing_event,omitempty" jsonschema:"description=Billing Event,required"`
	BrandSafetyConfig                 *BrandSafetyCampaignConfig         `json:"brand_safety_config,omitempty" jsonschema:"description=Brand Safety Config"`
	BudgetRemaining                   string                             `json:"budget_remaining,omitempty" jsonschema:"description=Budget Remaining"`
	Campaign                          *Campaign                          `json:"campaign,omitempty" jsonschema:"description=Campaign"`
	CampaignActiveTime                string                             `json:"campaign_active_time,omitempty" jsonschema:"description=Campaign Active Time"`
	CampaignAttribution               string                             `json:"campaign_attribution,omitempty" jsonschema:"description=Campaign Attribution"`
	CampaignID                        string                             `json:"campaign_id,omitempty" jsonschema:"description=ID of the Campaign,required,pattern=^[0-9]+$"`
	ConfiguredStatus                  AdsetConfiguredStatus              `json:"configured_status,omitempty" jsonschema:"description=Configured Status"`
	CreatedTime                       time.Time                          `json:"created_time,omitempty" jsonschema:"description=When the AdSet was created,format=date-time"`
	CreativeSequence                  []string                           `json:"creative_sequence,omitempty" jsonschema:"description=Creative Sequence"`
	CreativeSequenceRepetitionPattern string                             `json:"creative_sequence_repetition_pattern,omitempty" jsonschema:"description=Creative Sequence Repetition Pattern"`
	DailyBudget                       string                             `json:"daily_budget,omitempty" jsonschema:"description=Daily Budget"`
	DailyMinSpendTarget               string                             `json:"daily_min_spend_target,omitempty" jsonschema:"description=Daily Min Spend Target"`
	DailySpendCap                     string                             `json:"daily_spend_cap,omitempty" jsonschema:"description=Daily Spend Cap"`
	DestinationType                   string                             `json:"destination_type,omitempty" jsonschema:"description=Destination Type"`
	DsaBeneficiary                    string                             `json:"dsa_beneficiary,omitempty" jsonschema:"description=Dsa Beneficiary"`
	DsaPayor                          string                             `json:"dsa_payor,omitempty" jsonschema:"description=Dsa Payor"`
	EffectiveStatus                   AdsetEffectiveStatus               `json:"effective_status,omitempty" jsonschema:"description=Effective Status"`
	EndTime                           time.Time                          `json:"end_time,omitempty" jsonschema:"description=End Time,format=date-time"`
	ExistingCustomerBudgetPercentage  uint                               `json:"existing_customer_budget_percentage,omitempty" jsonschema:"description=Existing Customer Budget Percentage,minimum=13,maximum=100"`
	FrequencyControlSpecs             []*AdCampaignFrequencyControlSpecs `json:"frequency_control_specs,omitempty" jsonschema:"description=Frequency Control Specs"`
	FullFunnelExplorationMode         string                             `json:"full_funnel_exploration_mode,omitempty" jsonschema:"description=Full Funnel Exploration Mode"`
	ID                                string                             `json:"id,omitempty" jsonschema:"description=AdSet ID,required,pattern=^[0-9]+$"`
	InstagramUserID                   string                             `json:"instagram_user_id,omitempty" jsonschema:"description=ID of the Instagram User,pattern=^[0-9]+$"`
	IsBaSkipDelayedEligible           bool                               `json:"is_ba_skip_delayed_eligible,omitempty" jsonschema:"description=Is Ba Skip Delayed Eligible"`
	IsBudgetScheduleEnabled           bool                               `json:"is_budget_schedule_enabled,omitempty" jsonschema:"description=Is Budget Schedule Enabled"`
	IsDynamicCreative                 bool                               `json:"is_dynamic_creative,omitempty" jsonschema:"description=Is Dynamic Creative"`
	IsIncrementalAttributionEnabled   bool                               `json:"is_incremental_attribution_enabled,omitempty" jsonschema:"description=Is Incremental Attribution Enabled"`
	IssuesInfo                        []*AdCampaignIssuesInfo            `json:"issues_info,omitempty" jsonschema:"description=Issues Info"`
	LearningStageInfo                 *AdCampaignLearningStageInfo       `json:"learning_stage_info,omitempty" jsonschema:"description=Learning Stage Info"`
	LifetimeBudget                    string                             `json:"lifetime_budget,omitempty" jsonschema:"description=Lifetime Budget"`
	LifetimeImps                      int                                `json:"lifetime_imps,omitempty" jsonschema:"description=Lifetime Imps"`
	LifetimeMinSpendTarget            string                             `json:"lifetime_min_spend_target,omitempty" jsonschema:"description=Lifetime Min Spend Target"`
	LifetimeSpendCap                  string                             `json:"lifetime_spend_cap,omitempty" jsonschema:"description=Lifetime Spend Cap"`
	MaxBudgetSpendPercentage          string                             `json:"max_budget_spend_percentage,omitempty" jsonschema:"description=Max Budget Spend Percentage"`
	MinBudgetSpendPercentage          string                             `json:"min_budget_spend_percentage,omitempty" jsonschema:"description=Min Budget Spend Percentage"`
	MultiOptimizationGoalWeight       string                             `json:"multi_optimization_goal_weight,omitempty" jsonschema:"description=Multi Optimization Goal Weight"`
	Name                              string                             `json:"name,omitempty" jsonschema:"description=Name of the AdSet,required"`
	OptimizationGoal                  AdsetOptimizationGoal              `json:"optimization_goal,omitempty" jsonschema:"description=Optimization Goal,required"`
	OptimizationSubEvent              string                             `json:"optimization_sub_event,omitempty" jsonschema:"description=Optimization Sub Event"`
	PacingType                        []string                           `json:"pacing_type,omitempty" jsonschema:"description=Pacing Type"`
	PromotedObject                    *AdPromotedObject                  `json:"promoted_object,omitempty" jsonschema:"description=Promoted Object"`
	Recommendations                   []*AdRecommendation                `json:"recommendations,omitempty" jsonschema:"description=Recommendations"`
	RecurringBudgetSemantics          bool                               `json:"recurring_budget_semantics,omitempty" jsonschema:"description=Recurring Budget Semantics"`
	RegionalRegulatedCategories       []string                           `json:"regional_regulated_categories,omitempty" jsonschema:"description=Regional Regulated Categories"`
	RegionalRegulationIDentities      *RegionalRegulationIdentities      `json:"regional_regulation_identities,omitempty" jsonschema:"description=Regional Regulation Identities,pattern=^[0-9]+$"`
	ReviewFeedback                    string                             `json:"review_feedback,omitempty" jsonschema:"description=Review Feedback"`
	RfPredictionID                    string                             `json:"rf_prediction_id,omitempty" jsonschema:"description=ID of the Rf Prediction,pattern=^[0-9]+$"`
	SourceAdset                       *AdSet                             `json:"source_adset,omitempty" jsonschema:"description=Source Adset"`
	SourceAdsetID                     string                             `json:"source_adset_id,omitempty" jsonschema:"description=ID of the Source Adset,pattern=^[0-9]+$"`
	StartTime                         time.Time                          `json:"start_time,omitempty" jsonschema:"description=Start Time,format=date-time"`
	Status                            AdsetStatus                        `json:"status,omitempty" jsonschema:"description=Current status of the AdSet,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	Targeting                         *Targeting                         `json:"targeting,omitempty" jsonschema:"description=Targeting,required"`
	TargetingOptimizationTypes        []map[string]int                   `json:"targeting_optimization_types,omitempty" jsonschema:"description=Targeting Optimization Types"`
	TimeBasedAdRotationIDBlocks       [][]int                            `json:"time_based_ad_rotation_id_blocks,omitempty" jsonschema:"description=Time Based Ad Rotation ID Blocks,pattern=^[0-9]+$"`
	TimeBasedAdRotationIntervals      []uint                             `json:"time_based_ad_rotation_intervals,omitempty" jsonschema:"description=Time Based Ad Rotation Intervals"`
	UpdatedTime                       time.Time                          `json:"updated_time,omitempty" jsonschema:"description=When the AdSet was last updated,format=date-time"`
	UseNewAppClick                    bool                               `json:"use_new_app_click,omitempty" jsonschema:"description=Use New App Click"`
}

// AdStudy represents the Facebook AdStudy object
type AdStudy struct {
	Business                  *Business `json:"business,omitempty" jsonschema:"description=Business"`
	CanceledTime              time.Time `json:"canceled_time,omitempty" jsonschema:"description=Canceled Time,format=date-time"`
	ClientBusiness            *Business `json:"client_business,omitempty" jsonschema:"description=Client Business"`
	CooldownStartTime         time.Time `json:"cooldown_start_time,omitempty" jsonschema:"description=Cooldown Start Time,format=date-time"`
	CreatedBy                 *User     `json:"created_by,omitempty" jsonschema:"description=When the AdStudy was created"`
	CreatedTime               time.Time `json:"created_time,omitempty" jsonschema:"description=When the AdStudy was created,format=date-time"`
	Description               string    `json:"description,omitempty" jsonschema:"description=Description"`
	EndTime                   time.Time `json:"end_time,omitempty" jsonschema:"description=End Time,format=date-time"`
	ID                        string    `json:"id,omitempty" jsonschema:"description=AdStudy ID,required,pattern=^[0-9]+$"`
	MeasurementContact        *User     `json:"measurement_contact,omitempty" jsonschema:"description=Measurement Contact"`
	Name                      string    `json:"name,omitempty" jsonschema:"description=Name of the AdStudy,required"`
	ObservationEndTime        time.Time `json:"observation_end_time,omitempty" jsonschema:"description=Observation End Time,format=date-time"`
	ResultsFirstAvailableDate string    `json:"results_first_available_date,omitempty" jsonschema:"description=Results First Available Date"`
	SalesContact              *User     `json:"sales_contact,omitempty" jsonschema:"description=Sales Contact"`
	StartTime                 time.Time `json:"start_time,omitempty" jsonschema:"description=Start Time,format=date-time"`
	Type                      string    `json:"type,omitempty" jsonschema:"description=Type"`
	UpdatedBy                 *User     `json:"updated_by,omitempty" jsonschema:"description=When the AdStudy was last updated"`
	UpdatedTime               time.Time `json:"updated_time,omitempty" jsonschema:"description=When the AdStudy was last updated,format=date-time"`
}

// AdStudyCell represents the Facebook AdStudyCell object
type AdStudyCell struct {
	AdEntitiesCount     uint    `json:"ad_entities_count,omitempty" jsonschema:"description=Ad Entities Count"`
	ControlPercentage   float64 `json:"control_percentage,omitempty" jsonschema:"description=Control Percentage"`
	ID                  string  `json:"id,omitempty" jsonschema:"description=AdStudyCell ID,required,pattern=^[0-9]+$"`
	Name                string  `json:"name,omitempty" jsonschema:"description=Name of the AdStudyCell,required"`
	TreatmentPercentage float64 `json:"treatment_percentage,omitempty" jsonschema:"description=Treatment Percentage"`
}

// AdStudyObjective represents the Facebook AdStudyObjective object
type AdStudyObjective struct {
	ID                 string   `json:"id,omitempty" jsonschema:"description=AdStudyObjective ID,required,pattern=^[0-9]+$"`
	IsPrimary          bool     `json:"is_primary,omitempty" jsonschema:"description=Is Primary"`
	LastUpdatedResults string   `json:"last_updated_results,omitempty" jsonschema:"description=When the AdStudyObjective was last updated"`
	Name               string   `json:"name,omitempty" jsonschema:"description=Name of the AdStudyObjective,required"`
	Results            []string `json:"results,omitempty" jsonschema:"description=Results"`
	Type               string   `json:"type,omitempty" jsonschema:"description=Type"`
}

// AdStudyObjectiveID represents the Facebook AdStudyObjectiveID object
type AdStudyObjectiveID struct {
	EventNames []string `json:"event_names,omitempty" jsonschema:"description=Event Names"`
	ID         string   `json:"id,omitempty" jsonschema:"description=AdStudyObjectiveID ID,required,pattern=^[0-9]+$"`
	Type       string   `json:"type,omitempty" jsonschema:"description=Type"`
}

// AdStudyObjectiveOffsiteDatasets represents the Facebook AdStudyObjectiveOffsiteDatasets object
type AdStudyObjectiveOffsiteDatasets struct {
	EventNames []string `json:"event_names,omitempty" jsonschema:"description=Event Names"`
	ID         string   `json:"id,omitempty" jsonschema:"description=AdStudyObjectiveOffsiteDatasets ID,required,pattern=^[0-9]+$"`
}

// AdTopline represents the Facebook AdTopline object
type AdTopline struct {
	AccountID                string    `json:"account_id,omitempty" jsonschema:"description=ID of the Account,pattern=^[0-9]+$"`
	ClientApprovalDate       time.Time `json:"client_approval_date,omitempty" jsonschema:"description=Client Approval Date,format=date-time"`
	CreatedBy                string    `json:"created_by,omitempty" jsonschema:"description=When the AdTopline was created"`
	CreatedDate              time.Time `json:"created_date,omitempty" jsonschema:"description=When the AdTopline was created,format=date-time"`
	Description              string    `json:"description,omitempty" jsonschema:"description=Description"`
	FlightEndDate            time.Time `json:"flight_end_date,omitempty" jsonschema:"description=Flight End Date,format=date-time"`
	FlightStartDate          time.Time `json:"flight_start_date,omitempty" jsonschema:"description=Flight Start Date,format=date-time"`
	FuncCapAmount            string    `json:"func_cap_amount,omitempty" jsonschema:"description=Func Cap Amount"`
	FuncCapAmountWithOffset  string    `json:"func_cap_amount_with_offset,omitempty" jsonschema:"description=Func Cap Amount With Offset"`
	FuncLineAmount           string    `json:"func_line_amount,omitempty" jsonschema:"description=Func Line Amount"`
	FuncLineAmountWithOffset string    `json:"func_line_amount_with_offset,omitempty" jsonschema:"description=Func Line Amount With Offset"`
	FuncPrice                string    `json:"func_price,omitempty" jsonschema:"description=Func Price"`
	FuncPriceWithOffset      string    `json:"func_price_with_offset,omitempty" jsonschema:"description=Func Price With Offset"`
	Gender                   string    `json:"gender,omitempty" jsonschema:"description=Gender"`
	ID                       string    `json:"id,omitempty" jsonschema:"description=AdTopline ID,required,pattern=^[0-9]+$"`
	Impressions              int       `json:"impressions,omitempty" jsonschema:"description=Impressions"`
	IoNumber                 int       `json:"io_number,omitempty" jsonschema:"description=Io Number"`
	IsBonusLine              int       `json:"is_bonus_line,omitempty" jsonschema:"description=Is Bonus Line"`
	Keywords                 string    `json:"keywords,omitempty" jsonschema:"description=Keywords"`
	LastUpdatedBy            string    `json:"last_updated_by,omitempty" jsonschema:"description=When the AdTopline was last updated"`
	LastUpdatedDate          time.Time `json:"last_updated_date,omitempty" jsonschema:"description=When the AdTopline was last updated,format=date-time"`
	LineNumber               int       `json:"line_number,omitempty" jsonschema:"description=Line Number"`
	LinePosition             int       `json:"line_position,omitempty" jsonschema:"description=Line Position"`
	LineType                 string    `json:"line_type,omitempty" jsonschema:"description=Line Type"`
	Location                 string    `json:"location,omitempty" jsonschema:"description=Location"`
	MaxAge                   string    `json:"max_age,omitempty" jsonschema:"description=Max Age"`
	MaxBudget                string    `json:"max_budget,omitempty" jsonschema:"description=Max Budget"`
	MinAge                   string    `json:"min_age,omitempty" jsonschema:"description=Min Age"`
	PricePerTrp              string    `json:"price_per_trp,omitempty" jsonschema:"description=Price Per Trp"`
	ProductType              string    `json:"product_type,omitempty" jsonschema:"description=Product Type"`
	RevAssuranceApprovalDate time.Time `json:"rev_assurance_approval_date,omitempty" jsonschema:"description=Rev Assurance Approval Date,format=date-time"`
	Targets                  string    `json:"targets,omitempty" jsonschema:"description=Targets"`
	TrpUpdatedTime           int       `json:"trp_updated_time,omitempty" jsonschema:"description=When the AdTopline was last updated"`
	TrpValue                 string    `json:"trp_value,omitempty" jsonschema:"description=Trp Value"`
	Uom                      string    `json:"uom,omitempty" jsonschema:"description=Uom"`
}

// AdToplineDetail represents the Facebook AdToplineDetail object
type AdToplineDetail struct {
	ActiveStatus    int       `json:"active_status,omitempty" jsonschema:"description=Active Status"`
	AdAccountID     string    `json:"ad_account_id,omitempty" jsonschema:"description=ID of the Ad Account,pattern=^[0-9]+$"`
	FlightEndDate   time.Time `json:"flight_end_date,omitempty" jsonschema:"description=Flight End Date,format=date-time"`
	FlightStartDate time.Time `json:"flight_start_date,omitempty" jsonschema:"description=Flight Start Date,format=date-time"`
	ID              string    `json:"id,omitempty" jsonschema:"description=AdToplineDetail ID,required,pattern=^[0-9]+$"`
	IoNumber        int       `json:"io_number,omitempty" jsonschema:"description=Io Number"`
	LineNumber      int       `json:"line_number,omitempty" jsonschema:"description=Line Number"`
	Price           float64   `json:"price,omitempty" jsonschema:"description=Price"`
	Quantity        float64   `json:"quantity,omitempty" jsonschema:"description=Quantity"`
	SfDetailLineID  string    `json:"sf_detail_line_id,omitempty" jsonschema:"description=ID of the Sf Detail Line,pattern=^[0-9]+$"`
	SublineID       string    `json:"subline_id,omitempty" jsonschema:"description=ID of the Subline,pattern=^[0-9]+$"`
	Targets         string    `json:"targets,omitempty" jsonschema:"description=Targets"`
	TimeCreated     time.Time `json:"time_created,omitempty" jsonschema:"description=When the AdToplineDetail was created,format=date-time"`
	TimeUpdated     time.Time `json:"time_updated,omitempty" jsonschema:"description=When the AdToplineDetail was last updated,format=date-time"`
}

// AdVideo represents the Facebook AdVideo object
type AdVideo struct {
	AdBreaks                  []int                    `json:"ad_breaks,omitempty" jsonschema:"description=Ad Breaks"`
	AdminCreator              *User                    `json:"admin_creator,omitempty" jsonschema:"description=Admin Creator"`
	AudioIsrc                 *AudioIsrc               `json:"audio_isrc,omitempty" jsonschema:"description=Audio Isrc"`
	BackdatedTime             time.Time                `json:"backdated_time,omitempty" jsonschema:"description=Backdated Time,format=date-time"`
	BackdatedTimeGranularity  string                   `json:"backdated_time_granularity,omitempty" jsonschema:"description=Backdated Time Granularity"`
	BoostEligibilityInfo      map[string]interface{}   `json:"boost_eligibility_info,omitempty" jsonschema:"description=Boost Eligibility Info"`
	ContentCategory           string                   `json:"content_category,omitempty" jsonschema:"description=Content Category"`
	ContentTags               []string                 `json:"content_tags,omitempty" jsonschema:"description=Content Tags"`
	Copyright                 *VideoCopyright          `json:"copyright,omitempty" jsonschema:"description=Copyright"`
	CopyrightCheckInformation map[string]interface{}   `json:"copyright_check_information,omitempty" jsonschema:"description=Copyright Check Information"`
	CopyrightMonitoringStatus string                   `json:"copyright_monitoring_status,omitempty" jsonschema:"description=Copyright Monitoring Status"`
	CreatedTime               time.Time                `json:"created_time,omitempty" jsonschema:"description=When the AdVideo was created,format=date-time"`
	CustomLabels              []string                 `json:"custom_labels,omitempty" jsonschema:"description=Custom Labels"`
	Description               string                   `json:"description,omitempty" jsonschema:"description=Description"`
	EmbedHtml                 map[string]interface{}   `json:"embed_html,omitempty" jsonschema:"description=Embed Html"`
	Embeddable                bool                     `json:"embeddable,omitempty" jsonschema:"description=Embeddable"`
	Event                     *Event                   `json:"event,omitempty" jsonschema:"description=Event"`
	Expiration                map[string]interface{}   `json:"expiration,omitempty" jsonschema:"description=Expiration"`
	Format                    []map[string]interface{} `json:"format,omitempty" jsonschema:"description=Format"`
	From                      map[string]interface{}   `json:"from,omitempty" jsonschema:"description=From"`
	Icon                      string                   `json:"icon,omitempty" jsonschema:"description=Icon"`
	ID                        string                   `json:"id,omitempty" jsonschema:"description=AdVideo ID,required,pattern=^[0-9]+$"`
	IsCrosspostVideo          bool                     `json:"is_crosspost_video,omitempty" jsonschema:"description=Is Crosspost Video"`
	IsCrosspostingEligible    bool                     `json:"is_crossposting_eligible,omitempty" jsonschema:"description=Is Crossposting Eligible"`
	IsEpisode                 bool                     `json:"is_episode,omitempty" jsonschema:"description=Is Episode"`
	IsInstagramEligible       bool                     `json:"is_instagram_eligible,omitempty" jsonschema:"description=Is Instagram Eligible"`
	IsReferenceOnly           bool                     `json:"is_reference_only,omitempty" jsonschema:"description=Is Reference Only"`
	Length                    float64                  `json:"length,omitempty" jsonschema:"description=Length"`
	LiveAudienceCount         uint                     `json:"live_audience_count,omitempty" jsonschema:"description=Live Audience Count"`
	LiveStatus                string                   `json:"live_status,omitempty" jsonschema:"description=Live Status"`
	MusicVideoCopyright       *MusicVideoCopyright     `json:"music_video_copyright,omitempty" jsonschema:"description=Music Video Copyright"`
	PermalinkURL              string                   `json:"permalink_url,omitempty" jsonschema:"description=Permalink URL,format=uri"`
	Picture                   string                   `json:"picture,omitempty" jsonschema:"description=Picture"`
	Place                     *Place                   `json:"place,omitempty" jsonschema:"description=Place"`
	PostID                    string                   `json:"post_id,omitempty" jsonschema:"description=ID of the Post,pattern=^[0-9]+$"`
	PostViews                 uint                     `json:"post_views,omitempty" jsonschema:"description=Post Views"`
	PremiereLivingRoomStatus  string                   `json:"premiere_living_room_status,omitempty" jsonschema:"description=Premiere Living Room Status"`
	Privacy                   *Privacy                 `json:"privacy,omitempty" jsonschema:"description=Privacy"`
	Published                 bool                     `json:"published,omitempty" jsonschema:"description=Published"`
	ScheduledPublishTime      time.Time                `json:"scheduled_publish_time,omitempty" jsonschema:"description=Scheduled Publish Time,format=date-time"`
	Source                    string                   `json:"source,omitempty" jsonschema:"description=Source"`
	Spherical                 bool                     `json:"spherical,omitempty" jsonschema:"description=Spherical"`
	Status                    *VideoStatus             `json:"status,omitempty" jsonschema:"description=Current status of the AdVideo,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	Title                     string                   `json:"title,omitempty" jsonschema:"description=Title"`
	UniversalVideoID          string                   `json:"universal_video_id,omitempty" jsonschema:"description=ID of the Universal Video,pattern=^[0-9]+$"`
	UpdatedTime               time.Time                `json:"updated_time,omitempty" jsonschema:"description=When the AdVideo was last updated,format=date-time"`
	Views                     uint                     `json:"views,omitempty" jsonschema:"description=Views"`
}

// AdVolume represents the Facebook AdVolume object
type AdVolume struct {
	AdVolumeBreakDown                 []map[string]interface{} `json:"ad_volume_break_down,omitempty" jsonschema:"description=Ad Volume Break Down"`
	AdsRunningOrInReviewCount         uint                     `json:"ads_running_or_in_review_count,omitempty" jsonschema:"description=Ads Running Or In Review Count"`
	FutureLimitActivationDate         string                   `json:"future_limit_activation_date,omitempty" jsonschema:"description=Future Limit Activation Date"`
	FutureLimitOnAdsRunningOrInReview uint                     `json:"future_limit_on_ads_running_or_in_review,omitempty" jsonschema:"description=Future Limit On Ads Running Or In Review"`
	IndividualAccountsAdVolume        int                      `json:"individual_accounts_ad_volume,omitempty" jsonschema:"description=Individual Accounts Ad Volume"`
	IsGpaPage                         bool                     `json:"is_gpa_page,omitempty" jsonschema:"description=Is Gpa Page"`
	LimitOnAdsRunningOrInReview       uint                     `json:"limit_on_ads_running_or_in_review,omitempty" jsonschema:"description=Limit On Ads Running Or In Review"`
	OwningBusinessAdVolume            int                      `json:"owning_business_ad_volume,omitempty" jsonschema:"description=Owning Business Ad Volume"`
	PartnerBusinessAdVolume           int                      `json:"partner_business_ad_volume,omitempty" jsonschema:"description=Partner Business Ad Volume"`
	UserRole                          string                   `json:"user_role,omitempty" jsonschema:"description=User Role"`
}

// AdgroupFacebookFeedback represents the Facebook AdgroupFacebookFeedback object
type AdgroupFacebookFeedback struct {
	ID      string `json:"id,omitempty" jsonschema:"description=AdgroupFacebookFeedback ID,required,pattern=^[0-9]+$"`
	Preview string `json:"preview,omitempty" jsonschema:"description=Preview"`
}

// AdgroupIssuesInfo represents the Facebook AdgroupIssuesInfo object
type AdgroupIssuesInfo struct {
	ErrorCode    int    `json:"error_code,omitempty" jsonschema:"description=Error Code"`
	ErrorMessage string `json:"error_message,omitempty" jsonschema:"description=Error Message"`
	ErrorSummary string `json:"error_summary,omitempty" jsonschema:"description=Error Summary"`
	ErrorType    string `json:"error_type,omitempty" jsonschema:"description=Error Type"`
	Level        string `json:"level,omitempty" jsonschema:"description=Level"`
	Mid          string `json:"mid,omitempty" jsonschema:"description=Mid"`
}

// AdgroupMetadata represents the Facebook AdgroupMetadata object
type AdgroupMetadata struct {
	AdStandardEnhancementsEditSource int    `json:"ad_standard_enhancements_edit_source,omitempty" jsonschema:"description=Ad Standard Enhancements Edit Source"`
	AdgroupCreationSource            string `json:"adgroup_creation_source,omitempty" jsonschema:"description=Adgroup Creation Source"`
	AdgroupEditSource                string `json:"adgroup_edit_source,omitempty" jsonschema:"description=Adgroup Edit Source"`
	CarouselStyle                    string `json:"carousel_style,omitempty" jsonschema:"description=Carousel Style"`
	CarouselWithStaticCardStyle      string `json:"carousel_with_static_card_style,omitempty" jsonschema:"description=Carousel With Static Card Style"`
}

// AdgroupPlacementSpecificReviewFeedback represents the Facebook AdgroupPlacementSpecificReviewFeedback object
type AdgroupPlacementSpecificReviewFeedback struct {
	AccountAdmin              map[string]string `json:"account_admin,omitempty" jsonschema:"description=Account Admin"`
	Ad                        map[string]string `json:"ad,omitempty" jsonschema:"description=Ad"`
	AdsConversionExperiences  map[string]string `json:"ads_conversion_experiences,omitempty" jsonschema:"description=Ads Conversion Experiences"`
	B2c                       map[string]string `json:"b2c,omitempty" jsonschema:"description=B2c"`
	B2cCommerceUnified        map[string]string `json:"b2c_commerce_unified,omitempty" jsonschema:"description=B2c Commerce Unified"`
	Bsg                       map[string]string `json:"bsg,omitempty" jsonschema:"description=Bsg"`
	CityCommunity             map[string]string `json:"city_community,omitempty" jsonschema:"description=City Community"`
	Commerce                  map[string]string `json:"commerce,omitempty" jsonschema:"description=Commerce"`
	Compromise                map[string]string `json:"compromise,omitempty" jsonschema:"description=Compromise"`
	DailyDeals                map[string]string `json:"daily_deals,omitempty" jsonschema:"description=Daily Deals"`
	DailyDealsLegacy          map[string]string `json:"daily_deals_legacy,omitempty" jsonschema:"description=Daily Deals Legacy"`
	Dpa                       map[string]string `json:"dpa,omitempty" jsonschema:"description=Dpa"`
	DriCopyright              map[string]string `json:"dri_copyright,omitempty" jsonschema:"description=Dri Copyright"`
	DriCounterfeit            map[string]string `json:"dri_counterfeit,omitempty" jsonschema:"description=Dri Counterfeit"`
	Facebook                  map[string]string `json:"facebook,omitempty" jsonschema:"description=Facebook"`
	FacebookPagesLiveShopping map[string]string `json:"facebook_pages_live_shopping,omitempty" jsonschema:"description=Facebook Pages Live Shopping"`
	IndependentWork           map[string]string `json:"independent_work,omitempty" jsonschema:"description=Independent Work"`
	Instagram                 map[string]string `json:"instagram,omitempty" jsonschema:"description=Instagram"`
	InstagramShop             map[string]string `json:"instagram_shop,omitempty" jsonschema:"description=Instagram Shop"`
	JobSearch                 map[string]string `json:"job_search,omitempty" jsonschema:"description=Job Search"`
	LeadGenHoneypot           map[string]string `json:"lead_gen_honeypot,omitempty" jsonschema:"description=Lead Gen Honeypot"`
	Marketplace               map[string]string `json:"marketplace,omitempty" jsonschema:"description=Marketplace"`
	MarketplaceHomeRentals    map[string]string `json:"marketplace_home_rentals,omitempty" jsonschema:"description=Marketplace Home Rentals"`
	MarketplaceHomeSales      map[string]string `json:"marketplace_home_sales,omitempty" jsonschema:"description=Marketplace Home Sales"`
	MarketplaceMotors         map[string]string `json:"marketplace_motors,omitempty" jsonschema:"description=Marketplace Motors"`
	MarketplaceShops          map[string]string `json:"marketplace_shops,omitempty" jsonschema:"description=Marketplace Shops"`
	MaxReviewPlacements       map[string]string `json:"max_review_placements,omitempty" jsonschema:"description=Max Review Placements"`
	Neighborhoods             map[string]string `json:"neighborhoods,omitempty" jsonschema:"description=Neighborhoods"`
	PageAdmin                 map[string]string `json:"page_admin,omitempty" jsonschema:"description=Page Admin"`
	Product                   map[string]string `json:"product,omitempty" jsonschema:"description=Product"`
	ProductService            map[string]string `json:"product_service,omitempty" jsonschema:"description=Product Service"`
	Profile                   map[string]string `json:"profile,omitempty" jsonschema:"description=Profile"`
	Seller                    map[string]string `json:"seller,omitempty" jsonschema:"description=Seller"`
	Shops                     map[string]string `json:"shops,omitempty" jsonschema:"description=Shops"`
	TrafficQuality            map[string]string `json:"traffic_quality,omitempty" jsonschema:"description=Traffic Quality"`
	UnifiedCommerceContent    map[string]string `json:"unified_commerce_content,omitempty" jsonschema:"description=Unified Commerce Content"`
	Whatsapp                  map[string]string `json:"whatsapp,omitempty" jsonschema:"description=Whatsapp"`
}

// AdgroupReviewFeedback represents the Facebook AdgroupReviewFeedback object
type AdgroupReviewFeedback struct {
	Global            map[string]string                       `json:"global,omitempty" jsonschema:"description=Global"`
	PlacementSpecific *AdgroupPlacementSpecificReviewFeedback `json:"placement_specific,omitempty" jsonschema:"description=Placement Specific"`
}

// AdjacentContentDeliveryReport represents the Facebook AdjacentContentDeliveryReport object
type AdjacentContentDeliveryReport struct {
	AdID         string                   `json:"ad_id,omitempty" jsonschema:"description=ID of the Ad,pattern=^[0-9]+$"`
	Content      []map[string]interface{} `json:"content,omitempty" jsonschema:"description=Content"`
	ImpressionID string                   `json:"impression_id,omitempty" jsonschema:"description=ID of the Impression,pattern=^[0-9]+$"`
}

// AdsActionStats represents the Facebook AdsActionStats object
type AdsActionStats struct {
	X1dClick                            string `json:"1d_click,omitempty" jsonschema:"description=1d Click"`
	X1dClickAllConversions              string `json:"1d_click_all_conversions,omitempty" jsonschema:"description=1d Click All Conversions"`
	X1dClickFirstConversion             string `json:"1d_click_first_conversion,omitempty" jsonschema:"description=1d Click First Conversion"`
	X1dEv                               string `json:"1d_ev,omitempty" jsonschema:"description=1d Ev"`
	X1dEvAllConversions                 string `json:"1d_ev_all_conversions,omitempty" jsonschema:"description=1d Ev All Conversions"`
	X1dEvFirstConversion                string `json:"1d_ev_first_conversion,omitempty" jsonschema:"description=1d Ev First Conversion"`
	X1dView                             string `json:"1d_view,omitempty" jsonschema:"description=1d View"`
	X1dViewAllConversions               string `json:"1d_view_all_conversions,omitempty" jsonschema:"description=1d View All Conversions"`
	X1dViewFirstConversion              string `json:"1d_view_first_conversion,omitempty" jsonschema:"description=1d View First Conversion"`
	X28dClick                           string `json:"28d_click,omitempty" jsonschema:"description=28d Click"`
	X28dClickAllConversions             string `json:"28d_click_all_conversions,omitempty" jsonschema:"description=28d Click All Conversions"`
	X28dClickFirstConversion            string `json:"28d_click_first_conversion,omitempty" jsonschema:"description=28d Click First Conversion"`
	X28dView                            string `json:"28d_view,omitempty" jsonschema:"description=28d View"`
	X28dViewAllConversions              string `json:"28d_view_all_conversions,omitempty" jsonschema:"description=28d View All Conversions"`
	X28dViewFirstConversion             string `json:"28d_view_first_conversion,omitempty" jsonschema:"description=28d View First Conversion"`
	X7dClick                            string `json:"7d_click,omitempty" jsonschema:"description=7d Click"`
	X7dClickAllConversions              string `json:"7d_click_all_conversions,omitempty" jsonschema:"description=7d Click All Conversions"`
	X7dClickFirstConversion             string `json:"7d_click_first_conversion,omitempty" jsonschema:"description=7d Click First Conversion"`
	X7dView                             string `json:"7d_view,omitempty" jsonschema:"description=7d View"`
	X7dViewAllConversions               string `json:"7d_view_all_conversions,omitempty" jsonschema:"description=7d View All Conversions"`
	X7dViewFirstConversion              string `json:"7d_view_first_conversion,omitempty" jsonschema:"description=7d View First Conversion"`
	ActionBrand                         string `json:"action_brand,omitempty" jsonschema:"description=Action Brand"`
	ActionCanvasComponentID             string `json:"action_canvas_component_id,omitempty" jsonschema:"description=ID of the Action Canvas Component,pattern=^[0-9]+$"`
	ActionCanvasComponentName           string `json:"action_canvas_component_name,omitempty" jsonschema:"description=Action Canvas Component Name"`
	ActionCarouselCardID                string `json:"action_carousel_card_id,omitempty" jsonschema:"description=ID of the Action Carousel Card,pattern=^[0-9]+$"`
	ActionCarouselCardName              string `json:"action_carousel_card_name,omitempty" jsonschema:"description=Action Carousel Card Name"`
	ActionCategory                      string `json:"action_category,omitempty" jsonschema:"description=Action Category"`
	ActionConvertedProductID            string `json:"action_converted_product_id,omitempty" jsonschema:"description=ID of the Action Converted Product,pattern=^[0-9]+$"`
	ActionDestination                   string `json:"action_destination,omitempty" jsonschema:"description=Action Destination"`
	ActionDevice                        string `json:"action_device,omitempty" jsonschema:"description=Action Device"`
	ActionEventChannel                  string `json:"action_event_channel,omitempty" jsonschema:"description=Action Event Channel"`
	ActionLinkClickDestination          string `json:"action_link_click_destination,omitempty" jsonschema:"description=Action Link Click Destination"`
	ActionLocationCode                  string `json:"action_location_code,omitempty" jsonschema:"description=Action Location Code"`
	ActionReaction                      string `json:"action_reaction,omitempty" jsonschema:"description=Action Reaction"`
	ActionTargetID                      string `json:"action_target_id,omitempty" jsonschema:"description=ID of the Action Target,pattern=^[0-9]+$"`
	ActionType                          string `json:"action_type,omitempty" jsonschema:"description=Action Type"`
	ActionVideoAssetID                  string `json:"action_video_asset_id,omitempty" jsonschema:"description=ID of the Action Video Asset,pattern=^[0-9]+$"`
	ActionVideoSound                    string `json:"action_video_sound,omitempty" jsonschema:"description=Action Video Sound"`
	ActionVideoType                     string `json:"action_video_type,omitempty" jsonschema:"description=Action Video Type"`
	Dda                                 string `json:"dda,omitempty" jsonschema:"description=Dda"`
	Incrementality                      string `json:"incrementality,omitempty" jsonschema:"description=Incrementality"`
	IncrementalityAllConversions        string `json:"incrementality_all_conversions,omitempty" jsonschema:"description=Incrementality All Conversions"`
	IncrementalityFirstConversion       string `json:"incrementality_first_conversion,omitempty" jsonschema:"description=Incrementality First Conversion"`
	Inline                              string `json:"inline,omitempty" jsonschema:"description=Inline"`
	InteractiveComponentStickerID       string `json:"interactive_component_sticker_id,omitempty" jsonschema:"description=ID of the Interactive Component Sticker,pattern=^[0-9]+$"`
	InteractiveComponentStickerResponse string `json:"interactive_component_sticker_response,omitempty" jsonschema:"description=Interactive Component Sticker Response"`
	SkanClick                           string `json:"skan_click,omitempty" jsonschema:"description=Skan Click"`
	SkanClickSecondPostback             string `json:"skan_click_second_postback,omitempty" jsonschema:"description=Skan Click Second Postback"`
	SkanClickThirdPostback              string `json:"skan_click_third_postback,omitempty" jsonschema:"description=Skan Click Third Postback"`
	SkanView                            string `json:"skan_view,omitempty" jsonschema:"description=Skan View"`
	SkanViewSecondPostback              string `json:"skan_view_second_postback,omitempty" jsonschema:"description=Skan View Second Postback"`
	SkanViewThirdPostback               string `json:"skan_view_third_postback,omitempty" jsonschema:"description=Skan View Third Postback"`
	Value                               string `json:"value,omitempty" jsonschema:"description=Value"`
}

// AdsAnomalyDetection represents the Facebook AdsAnomalyDetection object
type AdsAnomalyDetection struct {
	AnomalyData []map[string]interface{} `json:"anomaly_data,omitempty" jsonschema:"description=Anomaly Data"`
	Day         uint                     `json:"day,omitempty" jsonschema:"description=Day"`
}

// AdsConversionGoal represents the Facebook AdsConversionGoal object
type AdsConversionGoal struct {
	AdAccountID                string `json:"ad_account_id,omitempty" jsonschema:"description=ID of the Ad Account,pattern=^[0-9]+$"`
	ConversionEventValueSource string `json:"conversion_event_value_source,omitempty" jsonschema:"description=Conversion Event Value Source"`
	Description                string `json:"description,omitempty" jsonschema:"description=Description"`
	GoalCreationMethod         string `json:"goal_creation_method,omitempty" jsonschema:"description=Goal Creation Method"`
	ID                         string `json:"id,omitempty" jsonschema:"description=AdsConversionGoal ID,required,pattern=^[0-9]+$"`
	Name                       string `json:"name,omitempty" jsonschema:"description=Name of the AdsConversionGoal,required"`
	PerformanceGoal            string `json:"performance_goal,omitempty" jsonschema:"description=Performance Goal"`
	UpdateStatus               string `json:"update_status,omitempty" jsonschema:"description=Update Status"`
}

// AdsCreationSavedState represents the Facebook AdsCreationSavedState object
type AdsCreationSavedState struct {
	AdAccount           *AdAccount             `json:"ad_account,omitempty" jsonschema:"description=Ad Account"`
	ID                  string                 `json:"id,omitempty" jsonschema:"description=AdsCreationSavedState ID,required,pattern=^[0-9]+$"`
	SerializedStoreData string                 `json:"serialized_store_data,omitempty" jsonschema:"description=Serialized Store Data"`
	TimeUpdated         time.Time              `json:"time_updated,omitempty" jsonschema:"description=When the AdsCreationSavedState was last updated,format=date-time"`
	User                map[string]interface{} `json:"user,omitempty" jsonschema:"description=User"`
}

// AdsCustomPivotsPreview represents the Facebook AdsCustomPivotsPreview object
type AdsCustomPivotsPreview struct {
	AccountID       string   `json:"account_id,omitempty" jsonschema:"description=ID of the Account,pattern=^[0-9]+$"`
	AccountName     string   `json:"account_name,omitempty" jsonschema:"description=Account Name"`
	AdID            string   `json:"ad_id,omitempty" jsonschema:"description=ID of the Ad,pattern=^[0-9]+$"`
	AdName          string   `json:"ad_name,omitempty" jsonschema:"description=Ad Name"`
	AdsetID         string   `json:"adset_id,omitempty" jsonschema:"description=ID of the Adset,pattern=^[0-9]+$"`
	AdsetName       string   `json:"adset_name,omitempty" jsonschema:"description=Adset Name"`
	CampaignID      string   `json:"campaign_id,omitempty" jsonschema:"description=ID of the Campaign,pattern=^[0-9]+$"`
	CampaignName    string   `json:"campaign_name,omitempty" jsonschema:"description=Campaign Name"`
	CustomBreakdown []string `json:"custom_breakdown,omitempty" jsonschema:"description=Custom Breakdown"`
}

// AdsDataset represents the Facebook AdsDataset object
type AdsDataset struct {
	CanProxy                                               bool                                 `json:"can_proxy,omitempty" jsonschema:"description=Can Proxy"`
	CollectionRate                                         float64                              `json:"collection_rate,omitempty" jsonschema:"description=Collection Rate"`
	Config                                                 string                               `json:"config,omitempty" jsonschema:"description=Config"`
	CreationTime                                           time.Time                            `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	Creator                                                *User                                `json:"creator,omitempty" jsonschema:"description=Creator"`
	DatasetID                                              string                               `json:"dataset_id,omitempty" jsonschema:"description=ID of the Dataset,pattern=^[0-9]+$"`
	Description                                            string                               `json:"description,omitempty" jsonschema:"description=Description"`
	DuplicateEntries                                       int                                  `json:"duplicate_entries,omitempty" jsonschema:"description=Duplicate Entries"`
	EnableAutoAssignToAccounts                             bool                                 `json:"enable_auto_assign_to_accounts,omitempty" jsonschema:"description=Enable Auto Assign To Accounts"`
	EnableAutomaticEvents                                  bool                                 `json:"enable_automatic_events,omitempty" jsonschema:"description=Enable Automatic Events"`
	EnableAutomaticMatching                                bool                                 `json:"enable_automatic_matching,omitempty" jsonschema:"description=Enable Automatic Matching"`
	EnableRealTimeEventLog                                 bool                                 `json:"enable_real_time_event_log,omitempty" jsonschema:"description=Enable Real Time Event Log"`
	EventStats                                             string                               `json:"event_stats,omitempty" jsonschema:"description=Event Stats"`
	EventTimeMax                                           int                                  `json:"event_time_max,omitempty" jsonschema:"description=Event Time Max"`
	EventTimeMin                                           int                                  `json:"event_time_min,omitempty" jsonschema:"description=Event Time Min"`
	FirstPartyCookieStatus                                 string                               `json:"first_party_cookie_status,omitempty" jsonschema:"description=First Party Cookie Status"`
	HasBapiDomains                                         bool                                 `json:"has_bapi_domains,omitempty" jsonschema:"description=Has Bapi Domains"`
	HasCatalogMicrodataActivity                            bool                                 `json:"has_catalog_microdata_activity,omitempty" jsonschema:"description=Has Catalog Microdata Activity"`
	HasOfaRedactedKeys                                     bool                                 `json:"has_ofa_redacted_keys,omitempty" jsonschema:"description=Has Ofa Redacted Keys"`
	HasSentPii                                             bool                                 `json:"has_sent_pii,omitempty" jsonschema:"description=Has Sent Pii"`
	ID                                                     string                               `json:"id,omitempty" jsonschema:"description=AdsDataset ID,required,pattern=^[0-9]+$"`
	IsConsolidatedContainer                                bool                                 `json:"is_consolidated_container,omitempty" jsonschema:"description=Is Consolidated Container"`
	IsCreatedByBusiness                                    bool                                 `json:"is_created_by_business,omitempty" jsonschema:"description=When the AdsDataset was created"`
	IsCrm                                                  bool                                 `json:"is_crm,omitempty" jsonschema:"description=Is Crm"`
	IsEligibleForSharingToAdAccount                        bool                                 `json:"is_eligible_for_sharing_to_ad_account,omitempty" jsonschema:"description=Is Eligible For Sharing To Ad Account"`
	IsEligibleForSharingToBusiness                         bool                                 `json:"is_eligible_for_sharing_to_business,omitempty" jsonschema:"description=Is Eligible For Sharing To Business"`
	IsEligibleForValueOptimization                         bool                                 `json:"is_eligible_for_value_optimization,omitempty" jsonschema:"description=Is Eligible For Value Optimization"`
	IsMtaUse                                               bool                                 `json:"is_mta_use,omitempty" jsonschema:"description=Is Mta Use"`
	IsRestrictedUse                                        bool                                 `json:"is_restricted_use,omitempty" jsonschema:"description=Is Restricted Use"`
	IsUnavailable                                          bool                                 `json:"is_unavailable,omitempty" jsonschema:"description=Is Unavailable"`
	LastFiredTime                                          time.Time                            `json:"last_fired_time,omitempty" jsonschema:"description=Last Fired Time,format=date-time"`
	LastUploadApp                                          string                               `json:"last_upload_app,omitempty" jsonschema:"description=Last Upload App"`
	LastUploadAppChangedTime                               int                                  `json:"last_upload_app_changed_time,omitempty" jsonschema:"description=Last Upload App Changed Time"`
	LastUploadTime                                         int                                  `json:"last_upload_time,omitempty" jsonschema:"description=Last Upload Time"`
	LateUploadReminderEligibility                          bool                                 `json:"late_upload_reminder_eligibility,omitempty" jsonschema:"description=Late Upload Reminder Eligibility"`
	MatchRateApprox                                        int                                  `json:"match_rate_approx,omitempty" jsonschema:"description=Match Rate Approx"`
	MatchedEntries                                         int                                  `json:"matched_entries,omitempty" jsonschema:"description=Matched Entries"`
	Name                                                   string                               `json:"name,omitempty" jsonschema:"description=Name of the AdsDataset,required"`
	NoAdsTrackedForWeeklyUploadedEventsReminderEligibility bool                                 `json:"no_ads_tracked_for_weekly_uploaded_events_reminder_eligibility,omitempty" jsonschema:"description=No Ads Tracked For Weekly Uploaded Events Reminder Eligibility"`
	NumActiveAdSetTracked                                  int                                  `json:"num_active_ad_set_tracked,omitempty" jsonschema:"description=Num Active Ad Set Tracked"`
	NumRecentOfflineConversionsUploaded                    int                                  `json:"num_recent_offline_conversions_uploaded,omitempty" jsonschema:"description=Num Recent Offline Conversions Uploaded"`
	NumUploads                                             int                                  `json:"num_uploads,omitempty" jsonschema:"description=Num Uploads"`
	OwnerAdAccount                                         *AdAccount                           `json:"owner_ad_account,omitempty" jsonschema:"description=Owner Ad Account"`
	OwnerBusiness                                          *Business                            `json:"owner_business,omitempty" jsonschema:"description=Owner Business"`
	PercentageOfLateUploadsInExternalSuboptimalWindow      int                                  `json:"percentage_of_late_uploads_in_external_suboptimal_window,omitempty" jsonschema:"description=Percentage Of Late Uploads In External Suboptimal Window,minimum=13,maximum=100"`
	Permissions                                            *OfflineConversionDataSetPermissions `json:"permissions,omitempty" jsonschema:"description=Permissions"`
	ServerLastFiredTime                                    time.Time                            `json:"server_last_fired_time,omitempty" jsonschema:"description=Server Last Fired Time,format=date-time"`
	ShowAutomaticEvents                                    bool                                 `json:"show_automatic_events,omitempty" jsonschema:"description=Show Automatic Events"`
	UploadRate                                             float64                              `json:"upload_rate,omitempty" jsonschema:"description=Upload Rate"`
	UploadReminderEligibility                              bool                                 `json:"upload_reminder_eligibility,omitempty" jsonschema:"description=Upload Reminder Eligibility"`
	Usage                                                  *OfflineConversionDataSetUsage       `json:"usage,omitempty" jsonschema:"description=Usage"`
	ValidEntries                                           int                                  `json:"valid_entries,omitempty" jsonschema:"description=Valid Entries"`
}

// AdsEligibility represents the Facebook AdsEligibility object
type AdsEligibility struct {
	LiveShopping map[string]interface{} `json:"live_shopping,omitempty" jsonschema:"description=Live Shopping"`
}

// AdsGuidanceQEExposure represents the Facebook AdsGuidanceQEExposure object
type AdsGuidanceQEExposure struct {
	AccountExposed bool `json:"account_exposed,omitempty" jsonschema:"description=Account Exposed"`
}

// AdsHistogramStats represents the Facebook AdsHistogramStats object
type AdsHistogramStats struct {
	X1dClick                            []int  `json:"1d_click,omitempty" jsonschema:"description=1d Click"`
	X1dClickAllConversions              []int  `json:"1d_click_all_conversions,omitempty" jsonschema:"description=1d Click All Conversions"`
	X1dClickFirstConversion             []int  `json:"1d_click_first_conversion,omitempty" jsonschema:"description=1d Click First Conversion"`
	X1dEv                               []int  `json:"1d_ev,omitempty" jsonschema:"description=1d Ev"`
	X1dEvAllConversions                 []int  `json:"1d_ev_all_conversions,omitempty" jsonschema:"description=1d Ev All Conversions"`
	X1dEvFirstConversion                []int  `json:"1d_ev_first_conversion,omitempty" jsonschema:"description=1d Ev First Conversion"`
	X1dView                             []int  `json:"1d_view,omitempty" jsonschema:"description=1d View"`
	X1dViewAllConversions               []int  `json:"1d_view_all_conversions,omitempty" jsonschema:"description=1d View All Conversions"`
	X1dViewFirstConversion              []int  `json:"1d_view_first_conversion,omitempty" jsonschema:"description=1d View First Conversion"`
	X28dClick                           []int  `json:"28d_click,omitempty" jsonschema:"description=28d Click"`
	X28dClickAllConversions             []int  `json:"28d_click_all_conversions,omitempty" jsonschema:"description=28d Click All Conversions"`
	X28dClickFirstConversion            []int  `json:"28d_click_first_conversion,omitempty" jsonschema:"description=28d Click First Conversion"`
	X28dView                            []int  `json:"28d_view,omitempty" jsonschema:"description=28d View"`
	X28dViewAllConversions              []int  `json:"28d_view_all_conversions,omitempty" jsonschema:"description=28d View All Conversions"`
	X28dViewFirstConversion             []int  `json:"28d_view_first_conversion,omitempty" jsonschema:"description=28d View First Conversion"`
	X7dClick                            []int  `json:"7d_click,omitempty" jsonschema:"description=7d Click"`
	X7dClickAllConversions              []int  `json:"7d_click_all_conversions,omitempty" jsonschema:"description=7d Click All Conversions"`
	X7dClickFirstConversion             []int  `json:"7d_click_first_conversion,omitempty" jsonschema:"description=7d Click First Conversion"`
	X7dView                             []int  `json:"7d_view,omitempty" jsonschema:"description=7d View"`
	X7dViewAllConversions               []int  `json:"7d_view_all_conversions,omitempty" jsonschema:"description=7d View All Conversions"`
	X7dViewFirstConversion              []int  `json:"7d_view_first_conversion,omitempty" jsonschema:"description=7d View First Conversion"`
	ActionBrand                         string `json:"action_brand,omitempty" jsonschema:"description=Action Brand"`
	ActionCanvasComponentID             string `json:"action_canvas_component_id,omitempty" jsonschema:"description=ID of the Action Canvas Component,pattern=^[0-9]+$"`
	ActionCanvasComponentName           string `json:"action_canvas_component_name,omitempty" jsonschema:"description=Action Canvas Component Name"`
	ActionCarouselCardID                string `json:"action_carousel_card_id,omitempty" jsonschema:"description=ID of the Action Carousel Card,pattern=^[0-9]+$"`
	ActionCarouselCardName              string `json:"action_carousel_card_name,omitempty" jsonschema:"description=Action Carousel Card Name"`
	ActionCategory                      string `json:"action_category,omitempty" jsonschema:"description=Action Category"`
	ActionConvertedProductID            string `json:"action_converted_product_id,omitempty" jsonschema:"description=ID of the Action Converted Product,pattern=^[0-9]+$"`
	ActionDestination                   string `json:"action_destination,omitempty" jsonschema:"description=Action Destination"`
	ActionDevice                        string `json:"action_device,omitempty" jsonschema:"description=Action Device"`
	ActionEventChannel                  string `json:"action_event_channel,omitempty" jsonschema:"description=Action Event Channel"`
	ActionLinkClickDestination          string `json:"action_link_click_destination,omitempty" jsonschema:"description=Action Link Click Destination"`
	ActionLocationCode                  string `json:"action_location_code,omitempty" jsonschema:"description=Action Location Code"`
	ActionReaction                      string `json:"action_reaction,omitempty" jsonschema:"description=Action Reaction"`
	ActionTargetID                      string `json:"action_target_id,omitempty" jsonschema:"description=ID of the Action Target,pattern=^[0-9]+$"`
	ActionType                          string `json:"action_type,omitempty" jsonschema:"description=Action Type"`
	ActionVideoAssetID                  string `json:"action_video_asset_id,omitempty" jsonschema:"description=ID of the Action Video Asset,pattern=^[0-9]+$"`
	ActionVideoSound                    string `json:"action_video_sound,omitempty" jsonschema:"description=Action Video Sound"`
	ActionVideoType                     string `json:"action_video_type,omitempty" jsonschema:"description=Action Video Type"`
	Dda                                 []int  `json:"dda,omitempty" jsonschema:"description=Dda"`
	Incrementality                      []int  `json:"incrementality,omitempty" jsonschema:"description=Incrementality"`
	IncrementalityAllConversions        []int  `json:"incrementality_all_conversions,omitempty" jsonschema:"description=Incrementality All Conversions"`
	IncrementalityFirstConversion       []int  `json:"incrementality_first_conversion,omitempty" jsonschema:"description=Incrementality First Conversion"`
	Inline                              []int  `json:"inline,omitempty" jsonschema:"description=Inline"`
	InteractiveComponentStickerID       string `json:"interactive_component_sticker_id,omitempty" jsonschema:"description=ID of the Interactive Component Sticker,pattern=^[0-9]+$"`
	InteractiveComponentStickerResponse string `json:"interactive_component_sticker_response,omitempty" jsonschema:"description=Interactive Component Sticker Response"`
	SkanClick                           []int  `json:"skan_click,omitempty" jsonschema:"description=Skan Click"`
	SkanClickSecondPostback             []int  `json:"skan_click_second_postback,omitempty" jsonschema:"description=Skan Click Second Postback"`
	SkanClickThirdPostback              []int  `json:"skan_click_third_postback,omitempty" jsonschema:"description=Skan Click Third Postback"`
	SkanView                            []int  `json:"skan_view,omitempty" jsonschema:"description=Skan View"`
	SkanViewSecondPostback              []int  `json:"skan_view_second_postback,omitempty" jsonschema:"description=Skan View Second Postback"`
	SkanViewThirdPostback               []int  `json:"skan_view_third_postback,omitempty" jsonschema:"description=Skan View Third Postback"`
	Value                               []int  `json:"value,omitempty" jsonschema:"description=Value"`
}

// AdsImageCrops represents the Facebook AdsImageCrops object
type AdsImageCrops struct {
	X100x100 []interface{} `json:"100x100,omitempty" jsonschema:"description=100x100"`
	X100x72  []interface{} `json:"100x72,omitempty" jsonschema:"description=100x72"`
	X191x100 []interface{} `json:"191x100,omitempty" jsonschema:"description=191x100"`
	X400x150 []interface{} `json:"400x150,omitempty" jsonschema:"description=400x150"`
	X400x500 []interface{} `json:"400x500,omitempty" jsonschema:"description=400x500"`
	X600x360 []interface{} `json:"600x360,omitempty" jsonschema:"description=600x360"`
	X90x160  []interface{} `json:"90x160,omitempty" jsonschema:"description=90x160"`
}

// AdsInsights represents the Facebook AdsInsights object
type AdsInsights struct {
	AccountCurrency                                             string                   `json:"account_currency,omitempty" jsonschema:"description=Account Currency"`
	AccountID                                                   string                   `json:"account_id,omitempty" jsonschema:"description=ID of the Account,pattern=^[0-9]+$"`
	AccountName                                                 string                   `json:"account_name,omitempty" jsonschema:"description=Account Name"`
	ActionValues                                                []*AdsActionStats        `json:"action_values,omitempty" jsonschema:"description=Action Values"`
	Actions                                                     []*AdsActionStats        `json:"actions,omitempty" jsonschema:"description=Actions"`
	AdClickActions                                              []*AdsActionStats        `json:"ad_click_actions,omitempty" jsonschema:"description=Ad Click Actions"`
	AdID                                                        string                   `json:"ad_id,omitempty" jsonschema:"description=ID of the Ad,pattern=^[0-9]+$"`
	AdImpressionActions                                         []*AdsActionStats        `json:"ad_impression_actions,omitempty" jsonschema:"description=Ad Impression Actions"`
	AdName                                                      string                   `json:"ad_name,omitempty" jsonschema:"description=Ad Name"`
	AdsetEnd                                                    string                   `json:"adset_end,omitempty" jsonschema:"description=Adset End"`
	AdsetID                                                     string                   `json:"adset_id,omitempty" jsonschema:"description=ID of the Adset,pattern=^[0-9]+$"`
	AdsetName                                                   string                   `json:"adset_name,omitempty" jsonschema:"description=Adset Name"`
	AdsetStart                                                  string                   `json:"adset_start,omitempty" jsonschema:"description=Adset Start"`
	AgeTargeting                                                string                   `json:"age_targeting,omitempty" jsonschema:"description=Age Targeting"`
	AttributionSetting                                          string                   `json:"attribution_setting,omitempty" jsonschema:"description=Attribution Setting"`
	AuctionBid                                                  string                   `json:"auction_bid,omitempty" jsonschema:"description=Auction Bid"`
	AuctionCompetitiveness                                      string                   `json:"auction_competitiveness,omitempty" jsonschema:"description=Auction Competitiveness"`
	AuctionMaxCompetitorBid                                     string                   `json:"auction_max_competitor_bid,omitempty" jsonschema:"description=Auction Max Competitor Bid"`
	AveragePurchasesConversionValue                             []*AdsActionStats        `json:"average_purchases_conversion_value,omitempty" jsonschema:"description=Average Purchases Conversion Value"`
	BuyingType                                                  string                   `json:"buying_type,omitempty" jsonschema:"description=Buying Type"`
	CampaignID                                                  string                   `json:"campaign_id,omitempty" jsonschema:"description=ID of the Campaign,pattern=^[0-9]+$"`
	CampaignName                                                string                   `json:"campaign_name,omitempty" jsonschema:"description=Campaign Name"`
	CanvasAvgViewPercent                                        string                   `json:"canvas_avg_view_percent,omitempty" jsonschema:"description=Canvas Avg View Percent"`
	CanvasAvgViewTime                                           string                   `json:"canvas_avg_view_time,omitempty" jsonschema:"description=Canvas Avg View Time"`
	CatalogSegmentActions                                       []*AdsActionStats        `json:"catalog_segment_actions,omitempty" jsonschema:"description=Catalog Segment Actions"`
	CatalogSegmentValue                                         []*AdsActionStats        `json:"catalog_segment_value,omitempty" jsonschema:"description=Catalog Segment Value"`
	CatalogSegmentValueMobilePurchaseRoas                       []*AdsActionStats        `json:"catalog_segment_value_mobile_purchase_roas,omitempty" jsonschema:"description=Catalog Segment Value Mobile Purchase Roas"`
	CatalogSegmentValueOmniPurchaseRoas                         []*AdsActionStats        `json:"catalog_segment_value_omni_purchase_roas,omitempty" jsonschema:"description=Catalog Segment Value Omni Purchase Roas"`
	CatalogSegmentValueWebsitePurchaseRoas                      []*AdsActionStats        `json:"catalog_segment_value_website_purchase_roas,omitempty" jsonschema:"description=Catalog Segment Value Website Purchase Roas"`
	Clicks                                                      string                   `json:"clicks,omitempty" jsonschema:"description=Clicks"`
	ConversionLeadRate                                          []*AdsActionStats        `json:"conversion_lead_rate,omitempty" jsonschema:"description=Conversion Lead Rate"`
	ConversionLeads                                             []*AdsActionStats        `json:"conversion_leads,omitempty" jsonschema:"description=Conversion Leads"`
	ConversionRateRanking                                       string                   `json:"conversion_rate_ranking,omitempty" jsonschema:"description=Conversion Rate Ranking"`
	ConversionValues                                            []*AdsActionStats        `json:"conversion_values,omitempty" jsonschema:"description=Conversion Values"`
	Conversions                                                 []*AdsActionStats        `json:"conversions,omitempty" jsonschema:"description=Conversions"`
	ConvertedProductAppCustomEventFbMobilePurchase              []*AdsActionStats        `json:"converted_product_app_custom_event_fb_mobile_purchase,omitempty" jsonschema:"description=Converted Product App Custom Event Fb Mobile Purchase"`
	ConvertedProductAppCustomEventFbMobilePurchaseValue         []*AdsActionStats        `json:"converted_product_app_custom_event_fb_mobile_purchase_value,omitempty" jsonschema:"description=Converted Product App Custom Event Fb Mobile Purchase Value"`
	ConvertedProductOfflinePurchase                             []*AdsActionStats        `json:"converted_product_offline_purchase,omitempty" jsonschema:"description=Converted Product Offline Purchase"`
	ConvertedProductOfflinePurchaseValue                        []*AdsActionStats        `json:"converted_product_offline_purchase_value,omitempty" jsonschema:"description=Converted Product Offline Purchase Value"`
	ConvertedProductOmniPurchase                                []*AdsActionStats        `json:"converted_product_omni_purchase,omitempty" jsonschema:"description=Converted Product Omni Purchase"`
	ConvertedProductOmniPurchaseValues                          []*AdsActionStats        `json:"converted_product_omni_purchase_values,omitempty" jsonschema:"description=Converted Product Omni Purchase Values"`
	ConvertedProductQuantity                                    []*AdsActionStats        `json:"converted_product_quantity,omitempty" jsonschema:"description=Converted Product Quantity"`
	ConvertedProductValue                                       []*AdsActionStats        `json:"converted_product_value,omitempty" jsonschema:"description=Converted Product Value"`
	ConvertedProductWebsitePixelPurchase                        []*AdsActionStats        `json:"converted_product_website_pixel_purchase,omitempty" jsonschema:"description=Converted Product Website Pixel Purchase"`
	ConvertedProductWebsitePixelPurchaseValue                   []*AdsActionStats        `json:"converted_product_website_pixel_purchase_value,omitempty" jsonschema:"description=Converted Product Website Pixel Purchase Value"`
	ConvertedPromotedProductAppCustomEventFbMobilePurchase      []*AdsActionStats        `json:"converted_promoted_product_app_custom_event_fb_mobile_purchase,omitempty" jsonschema:"description=Converted Promoted Product App Custom Event Fb Mobile Purchase"`
	ConvertedPromotedProductAppCustomEventFbMobilePurchaseValue []*AdsActionStats        `json:"converted_promoted_product_app_custom_event_fb_mobile_purchase_value,omitempty" jsonschema:"description=Converted Promoted Product App Custom Event Fb Mobile Purchase Value"`
	ConvertedPromotedProductOfflinePurchase                     []*AdsActionStats        `json:"converted_promoted_product_offline_purchase,omitempty" jsonschema:"description=Converted Promoted Product Offline Purchase"`
	ConvertedPromotedProductOfflinePurchaseValue                []*AdsActionStats        `json:"converted_promoted_product_offline_purchase_value,omitempty" jsonschema:"description=Converted Promoted Product Offline Purchase Value"`
	ConvertedPromotedProductOmniPurchase                        []*AdsActionStats        `json:"converted_promoted_product_omni_purchase,omitempty" jsonschema:"description=Converted Promoted Product Omni Purchase"`
	ConvertedPromotedProductOmniPurchaseValues                  []*AdsActionStats        `json:"converted_promoted_product_omni_purchase_values,omitempty" jsonschema:"description=Converted Promoted Product Omni Purchase Values"`
	ConvertedPromotedProductQuantity                            []*AdsActionStats        `json:"converted_promoted_product_quantity,omitempty" jsonschema:"description=Converted Promoted Product Quantity"`
	ConvertedPromotedProductValue                               []*AdsActionStats        `json:"converted_promoted_product_value,omitempty" jsonschema:"description=Converted Promoted Product Value"`
	ConvertedPromotedProductWebsitePixelPurchase                []*AdsActionStats        `json:"converted_promoted_product_website_pixel_purchase,omitempty" jsonschema:"description=Converted Promoted Product Website Pixel Purchase"`
	ConvertedPromotedProductWebsitePixelPurchaseValue           []*AdsActionStats        `json:"converted_promoted_product_website_pixel_purchase_value,omitempty" jsonschema:"description=Converted Promoted Product Website Pixel Purchase Value"`
	CostPer15SecVideoView                                       []*AdsActionStats        `json:"cost_per_15_sec_video_view,omitempty" jsonschema:"description=Cost Per 15 Sec Video View"`
	CostPer2SecContinuousVideoView                              []*AdsActionStats        `json:"cost_per_2_sec_continuous_video_view,omitempty" jsonschema:"description=Cost Per 2 Sec Continuous Video View"`
	CostPerActionType                                           []*AdsActionStats        `json:"cost_per_action_type,omitempty" jsonschema:"description=Cost Per Action Type"`
	CostPerAdClick                                              []*AdsActionStats        `json:"cost_per_ad_click,omitempty" jsonschema:"description=Cost Per Ad Click"`
	CostPerConversion                                           []*AdsActionStats        `json:"cost_per_conversion,omitempty" jsonschema:"description=Cost Per Conversion"`
	CostPerConversionLead                                       []*AdsActionStats        `json:"cost_per_conversion_lead,omitempty" jsonschema:"description=Cost Per Conversion Lead"`
	CostPerDdaCountbyConvs                                      string                   `json:"cost_per_dda_countby_convs,omitempty" jsonschema:"description=Cost Per Dda Countby Convs"`
	CostPerEstimatedAdRecallers                                 string                   `json:"cost_per_estimated_ad_recallers,omitempty" jsonschema:"description=Cost Per Estimated Ad Recallers"`
	CostPerInlineLinkClick                                      string                   `json:"cost_per_inline_link_click,omitempty" jsonschema:"description=Cost Per Inline Link Click"`
	CostPerInlinePostEngagement                                 string                   `json:"cost_per_inline_post_engagement,omitempty" jsonschema:"description=Cost Per Inline Post Engagement"`
	CostPerObjectiveResult                                      []map[string]interface{} `json:"cost_per_objective_result,omitempty" jsonschema:"description=Cost Per Objective Result"`
	CostPerOneThousandAdImpression                              []*AdsActionStats        `json:"cost_per_one_thousand_ad_impression,omitempty" jsonschema:"description=Cost Per One Thousand Ad Impression"`
	CostPerOutboundClick                                        []*AdsActionStats        `json:"cost_per_outbound_click,omitempty" jsonschema:"description=Cost Per Outbound Click"`
	CostPerResult                                               []map[string]interface{} `json:"cost_per_result,omitempty" jsonschema:"description=Cost Per Result"`
	CostPerThruplay                                             []*AdsActionStats        `json:"cost_per_thruplay,omitempty" jsonschema:"description=Cost Per Thruplay"`
	CostPerUniqueActionType                                     []*AdsActionStats        `json:"cost_per_unique_action_type,omitempty" jsonschema:"description=Cost Per Unique Action Type"`
	CostPerUniqueClick                                          string                   `json:"cost_per_unique_click,omitempty" jsonschema:"description=Cost Per Unique Click"`
	CostPerUniqueConversion                                     []*AdsActionStats        `json:"cost_per_unique_conversion,omitempty" jsonschema:"description=Cost Per Unique Conversion"`
	CostPerUniqueInlineLinkClick                                string                   `json:"cost_per_unique_inline_link_click,omitempty" jsonschema:"description=Cost Per Unique Inline Link Click"`
	CostPerUniqueOutboundClick                                  []*AdsActionStats        `json:"cost_per_unique_outbound_click,omitempty" jsonschema:"description=Cost Per Unique Outbound Click"`
	Cpc                                                         string                   `json:"cpc,omitempty" jsonschema:"description=Cpc"`
	Cpm                                                         string                   `json:"cpm,omitempty" jsonschema:"description=Cpm"`
	Cpp                                                         string                   `json:"cpp,omitempty" jsonschema:"description=Cpp"`
	CreatedTime                                                 string                   `json:"created_time,omitempty" jsonschema:"description=When the AdsInsights was created"`
	CreativeMediaType                                           string                   `json:"creative_media_type,omitempty" jsonschema:"description=Creative Media Type"`
	Ctr                                                         string                   `json:"ctr,omitempty" jsonschema:"description=Ctr"`
	DateStart                                                   string                   `json:"date_start,omitempty" jsonschema:"description=Date Start"`
	DateStop                                                    string                   `json:"date_stop,omitempty" jsonschema:"description=Date Stop"`
	DdaCountbyConvs                                             string                   `json:"dda_countby_convs,omitempty" jsonschema:"description=Dda Countby Convs"`
	DdaResults                                                  []map[string]interface{} `json:"dda_results,omitempty" jsonschema:"description=Dda Results"`
	EngagementRateRanking                                       string                   `json:"engagement_rate_ranking,omitempty" jsonschema:"description=Engagement Rate Ranking"`
	EstimatedAdRecallRate                                       string                   `json:"estimated_ad_recall_rate,omitempty" jsonschema:"description=Estimated Ad Recall Rate"`
	EstimatedAdRecallRateLowerBound                             string                   `json:"estimated_ad_recall_rate_lower_bound,omitempty" jsonschema:"description=Estimated Ad Recall Rate Lower Bound"`
	EstimatedAdRecallRateUpperBound                             string                   `json:"estimated_ad_recall_rate_upper_bound,omitempty" jsonschema:"description=Estimated Ad Recall Rate Upper Bound"`
	EstimatedAdRecallers                                        string                   `json:"estimated_ad_recallers,omitempty" jsonschema:"description=Estimated Ad Recallers"`
	EstimatedAdRecallersLowerBound                              string                   `json:"estimated_ad_recallers_lower_bound,omitempty" jsonschema:"description=Estimated Ad Recallers Lower Bound"`
	EstimatedAdRecallersUpperBound                              string                   `json:"estimated_ad_recallers_upper_bound,omitempty" jsonschema:"description=Estimated Ad Recallers Upper Bound"`
	Frequency                                                   string                   `json:"frequency,omitempty" jsonschema:"description=Frequency"`
	FullViewImpressions                                         string                   `json:"full_view_impressions,omitempty" jsonschema:"description=Full View Impressions"`
	FullViewReach                                               string                   `json:"full_view_reach,omitempty" jsonschema:"description=Full View Reach"`
	GenderTargeting                                             string                   `json:"gender_targeting,omitempty" jsonschema:"description=Gender Targeting"`
	Impressions                                                 string                   `json:"impressions,omitempty" jsonschema:"description=Impressions"`
	InlineLinkClickCtr                                          string                   `json:"inline_link_click_ctr,omitempty" jsonschema:"description=Inline Link Click Ctr"`
	InlineLinkClicks                                            string                   `json:"inline_link_clicks,omitempty" jsonschema:"description=Inline Link Clicks"`
	InlinePostEngagement                                        string                   `json:"inline_post_engagement,omitempty" jsonschema:"description=Inline Post Engagement"`
	InstagramUpcomingEventRemindersSet                          string                   `json:"instagram_upcoming_event_reminders_set,omitempty" jsonschema:"description=Instagram Upcoming Event Reminders Set"`
	InstantExperienceClicksToOpen                               string                   `json:"instant_experience_clicks_to_open,omitempty" jsonschema:"description=Instant Experience Clicks To Open"`
	InstantExperienceClicksToStart                              string                   `json:"instant_experience_clicks_to_start,omitempty" jsonschema:"description=Instant Experience Clicks To Start"`
	InstantExperienceOutboundClicks                             []*AdsActionStats        `json:"instant_experience_outbound_clicks,omitempty" jsonschema:"description=Instant Experience Outbound Clicks"`
	InteractiveComponentTap                                     []*AdsActionStats        `json:"interactive_component_tap,omitempty" jsonschema:"description=Interactive Component Tap"`
	Labels                                                      string                   `json:"labels,omitempty" jsonschema:"description=Labels"`
	LandingPageViewActionsPerLinkClick                          string                   `json:"landing_page_view_actions_per_link_click,omitempty" jsonschema:"description=Landing Page View Actions Per Link Click"`
	LandingPageViewPerLinkClick                                 string                   `json:"landing_page_view_per_link_click,omitempty" jsonschema:"description=Landing Page View Per Link Click"`
	LandingPageViewPerPurchaseRate                              string                   `json:"landing_page_view_per_purchase_rate,omitempty" jsonschema:"description=Landing Page View Per Purchase Rate"`
	Location                                                    string                   `json:"location,omitempty" jsonschema:"description=Location"`
	MarketingMessagesClickRateBenchmark                         string                   `json:"marketing_messages_click_rate_benchmark,omitempty" jsonschema:"description=Marketing Messages Click Rate Benchmark"`
	MarketingMessagesCostPerDelivered                           string                   `json:"marketing_messages_cost_per_delivered,omitempty" jsonschema:"description=Marketing Messages Cost Per Delivered"`
	MarketingMessagesCostPerLinkBtnClick                        string                   `json:"marketing_messages_cost_per_link_btn_click,omitempty" jsonschema:"description=Marketing Messages Cost Per Link Btn Click"`
	MarketingMessagesDelivered                                  string                   `json:"marketing_messages_delivered,omitempty" jsonschema:"description=Marketing Messages Delivered"`
	MarketingMessagesDeliveryRate                               string                   `json:"marketing_messages_delivery_rate,omitempty" jsonschema:"description=Marketing Messages Delivery Rate"`
	MarketingMessagesLinkBtnClick                               string                   `json:"marketing_messages_link_btn_click,omitempty" jsonschema:"description=Marketing Messages Link Btn Click"`
	MarketingMessagesLinkBtnClickRate                           string                   `json:"marketing_messages_link_btn_click_rate,omitempty" jsonschema:"description=Marketing Messages Link Btn Click Rate"`
	MarketingMessagesMediaViewRate                              string                   `json:"marketing_messages_media_view_rate,omitempty" jsonschema:"description=Marketing Messages Media View Rate"`
	MarketingMessagesPhoneCallBtnClickRate                      string                   `json:"marketing_messages_phone_call_btn_click_rate,omitempty" jsonschema:"description=Marketing Messages Phone Call Btn Click Rate"`
	MarketingMessagesQuickReplyBtnClick                         string                   `json:"marketing_messages_quick_reply_btn_click,omitempty" jsonschema:"description=Marketing Messages Quick Reply Btn Click"`
	MarketingMessagesQuickReplyBtnClickRate                     string                   `json:"marketing_messages_quick_reply_btn_click_rate,omitempty" jsonschema:"description=Marketing Messages Quick Reply Btn Click Rate"`
	MarketingMessagesRead                                       string                   `json:"marketing_messages_read,omitempty" jsonschema:"description=Marketing Messages Read"`
	MarketingMessagesReadRate                                   string                   `json:"marketing_messages_read_rate,omitempty" jsonschema:"description=Marketing Messages Read Rate"`
	MarketingMessagesReadRateBenchmark                          string                   `json:"marketing_messages_read_rate_benchmark,omitempty" jsonschema:"description=Marketing Messages Read Rate Benchmark"`
	MarketingMessagesSent                                       string                   `json:"marketing_messages_sent,omitempty" jsonschema:"description=Marketing Messages Sent"`
	MarketingMessagesSpend                                      string                   `json:"marketing_messages_spend,omitempty" jsonschema:"description=Marketing Messages Spend"`
	MarketingMessagesSpendCurrency                              string                   `json:"marketing_messages_spend_currency,omitempty" jsonschema:"description=Marketing Messages Spend Currency"`
	MarketingMessagesWebsiteAddToCart                           string                   `json:"marketing_messages_website_add_to_cart,omitempty" jsonschema:"description=Marketing Messages Website Add To Cart"`
	MarketingMessagesWebsiteInitiateCheckout                    string                   `json:"marketing_messages_website_initiate_checkout,omitempty" jsonschema:"description=Marketing Messages Website Initiate Checkout"`
	MarketingMessagesWebsitePurchase                            string                   `json:"marketing_messages_website_purchase,omitempty" jsonschema:"description=Marketing Messages Website Purchase"`
	MarketingMessagesWebsitePurchaseValues                      string                   `json:"marketing_messages_website_purchase_values,omitempty" jsonschema:"description=Marketing Messages Website Purchase Values"`
	MobileAppPurchaseRoas                                       []*AdsActionStats        `json:"mobile_app_purchase_roas,omitempty" jsonschema:"description=Mobile App Purchase Roas"`
	Objective                                                   string                   `json:"objective,omitempty" jsonschema:"description=Objective"`
	ObjectiveResultRate                                         []map[string]interface{} `json:"objective_result_rate,omitempty" jsonschema:"description=Objective Result Rate"`
	ObjectiveResults                                            []map[string]interface{} `json:"objective_results,omitempty" jsonschema:"description=Objective Results"`
	OnsiteConversionMessagingDetectedPurchaseDeduped            []*AdsActionStats        `json:"onsite_conversion_messaging_detected_purchase_deduped,omitempty" jsonschema:"description=Onsite Conversion Messaging Detected Purchase Deduped"`
	OptimizationGoal                                            string                   `json:"optimization_goal,omitempty" jsonschema:"description=Optimization Goal"`
	OutboundClicks                                              []*AdsActionStats        `json:"outbound_clicks,omitempty" jsonschema:"description=Outbound Clicks"`
	OutboundClicksCtr                                           []*AdsActionStats        `json:"outbound_clicks_ctr,omitempty" jsonschema:"description=Outbound Clicks Ctr"`
	PlacePageName                                               string                   `json:"place_page_name,omitempty" jsonschema:"description=Place Page Name"`
	ProductBrand                                                string                   `json:"product_brand,omitempty" jsonschema:"description=Product Brand"`
	ProductCategory                                             string                   `json:"product_category,omitempty" jsonschema:"description=Product Category"`
	ProductContentID                                            string                   `json:"product_content_id,omitempty" jsonschema:"description=ID of the Product Content,pattern=^[0-9]+$"`
	ProductCustomLabel0                                         string                   `json:"product_custom_label_0,omitempty" jsonschema:"description=Product Custom Label 0"`
	ProductCustomLabel1                                         string                   `json:"product_custom_label_1,omitempty" jsonschema:"description=Product Custom Label 1"`
	ProductCustomLabel2                                         string                   `json:"product_custom_label_2,omitempty" jsonschema:"description=Product Custom Label 2"`
	ProductCustomLabel3                                         string                   `json:"product_custom_label_3,omitempty" jsonschema:"description=Product Custom Label 3"`
	ProductCustomLabel4                                         string                   `json:"product_custom_label_4,omitempty" jsonschema:"description=Product Custom Label 4"`
	ProductGroupContentID                                       string                   `json:"product_group_content_id,omitempty" jsonschema:"description=ID of the Product Group Content,pattern=^[0-9]+$"`
	ProductGroupRetailerID                                      string                   `json:"product_group_retailer_id,omitempty" jsonschema:"description=ID of the Product Group Retailer,pattern=^[0-9]+$"`
	ProductName                                                 string                   `json:"product_name,omitempty" jsonschema:"description=Product Name"`
	ProductRetailerID                                           string                   `json:"product_retailer_id,omitempty" jsonschema:"description=ID of the Product Retailer,pattern=^[0-9]+$"`
	PurchasePerLandingPageView                                  string                   `json:"purchase_per_landing_page_view,omitempty" jsonschema:"description=Purchase Per Landing Page View"`
	PurchaseRoas                                                []*AdsActionStats        `json:"purchase_roas,omitempty" jsonschema:"description=Purchase Roas"`
	PurchasesPerLinkClick                                       string                   `json:"purchases_per_link_click,omitempty" jsonschema:"description=Purchases Per Link Click"`
	QualifyingQuestionQualifyAnswerRate                         string                   `json:"qualifying_question_qualify_answer_rate,omitempty" jsonschema:"description=Qualifying Question Qualify Answer Rate"`
	QualityRanking                                              string                   `json:"quality_ranking,omitempty" jsonschema:"description=Quality Ranking"`
	Reach                                                       string                   `json:"reach,omitempty" jsonschema:"description=Reach"`
	ResultRate                                                  []map[string]interface{} `json:"result_rate,omitempty" jsonschema:"description=Result Rate"`
	ResultValuesPerformanceIndicator                            string                   `json:"result_values_performance_indicator,omitempty" jsonschema:"description=Result Values Performance Indicator"`
	Results                                                     []map[string]interface{} `json:"results,omitempty" jsonschema:"description=Results"`
	ShopsAssistedPurchases                                      string                   `json:"shops_assisted_purchases,omitempty" jsonschema:"description=Shops Assisted Purchases"`
	SocialSpend                                                 string                   `json:"social_spend,omitempty" jsonschema:"description=Social Spend"`
	Spend                                                       string                   `json:"spend,omitempty" jsonschema:"description=Spend"`
	TotalPostbacks                                              string                   `json:"total_postbacks,omitempty" jsonschema:"description=Total Postbacks"`
	TotalPostbacksDetailed                                      []*AdsActionStats        `json:"total_postbacks_detailed,omitempty" jsonschema:"description=Total Postbacks Detailed"`
	TotalPostbacksDetailedV4                                    []*AdsActionStats        `json:"total_postbacks_detailed_v4,omitempty" jsonschema:"description=Total Postbacks Detailed V4"`
	UniqueActions                                               []*AdsActionStats        `json:"unique_actions,omitempty" jsonschema:"description=Unique Actions"`
	UniqueClicks                                                string                   `json:"unique_clicks,omitempty" jsonschema:"description=Unique Clicks"`
	UniqueConversions                                           []*AdsActionStats        `json:"unique_conversions,omitempty" jsonschema:"description=Unique Conversions"`
	UniqueCtr                                                   string                   `json:"unique_ctr,omitempty" jsonschema:"description=Unique Ctr"`
	UniqueInlineLinkClickCtr                                    string                   `json:"unique_inline_link_click_ctr,omitempty" jsonschema:"description=Unique Inline Link Click Ctr"`
	UniqueInlineLinkClicks                                      string                   `json:"unique_inline_link_clicks,omitempty" jsonschema:"description=Unique Inline Link Clicks"`
	UniqueLinkClicksCtr                                         string                   `json:"unique_link_clicks_ctr,omitempty" jsonschema:"description=Unique Link Clicks Ctr"`
	UniqueOutboundClicks                                        []*AdsActionStats        `json:"unique_outbound_clicks,omitempty" jsonschema:"description=Unique Outbound Clicks"`
	UniqueOutboundClicksCtr                                     []*AdsActionStats        `json:"unique_outbound_clicks_ctr,omitempty" jsonschema:"description=Unique Outbound Clicks Ctr"`
	UniqueVideoContinuous2SecWatchedActions                     []*AdsActionStats        `json:"unique_video_continuous_2_sec_watched_actions,omitempty" jsonschema:"description=Unique Video Continuous 2 Sec Watched Actions"`
	UniqueVideoView15Sec                                        []*AdsActionStats        `json:"unique_video_view_15_sec,omitempty" jsonschema:"description=Unique Video View 15 Sec"`
	UpdatedTime                                                 string                   `json:"updated_time,omitempty" jsonschema:"description=When the AdsInsights was last updated"`
	Video15SecWatchedActions                                    []*AdsActionStats        `json:"video_15_sec_watched_actions,omitempty" jsonschema:"description=Video 15 Sec Watched Actions"`
	Video30SecWatchedActions                                    []*AdsActionStats        `json:"video_30_sec_watched_actions,omitempty" jsonschema:"description=Video 30 Sec Watched Actions"`
	VideoAvgTimeWatchedActions                                  []*AdsActionStats        `json:"video_avg_time_watched_actions,omitempty" jsonschema:"description=Video Avg Time Watched Actions"`
	VideoContinuous2SecWatchedActions                           []*AdsActionStats        `json:"video_continuous_2_sec_watched_actions,omitempty" jsonschema:"description=Video Continuous 2 Sec Watched Actions"`
	VideoP100WatchedActions                                     []*AdsActionStats        `json:"video_p100_watched_actions,omitempty" jsonschema:"description=Video P100 Watched Actions"`
	VideoP25WatchedActions                                      []*AdsActionStats        `json:"video_p25_watched_actions,omitempty" jsonschema:"description=Video P25 Watched Actions"`
	VideoP50WatchedActions                                      []*AdsActionStats        `json:"video_p50_watched_actions,omitempty" jsonschema:"description=Video P50 Watched Actions"`
	VideoP75WatchedActions                                      []*AdsActionStats        `json:"video_p75_watched_actions,omitempty" jsonschema:"description=Video P75 Watched Actions"`
	VideoP95WatchedActions                                      []*AdsActionStats        `json:"video_p95_watched_actions,omitempty" jsonschema:"description=Video P95 Watched Actions"`
	VideoPlayActions                                            []*AdsActionStats        `json:"video_play_actions,omitempty" jsonschema:"description=Video Play Actions"`
	VideoPlayCurveActions                                       []*AdsHistogramStats     `json:"video_play_curve_actions,omitempty" jsonschema:"description=Video Play Curve Actions"`
	VideoPlayRetention0To15sActions                             []*AdsHistogramStats     `json:"video_play_retention_0_to_15s_actions,omitempty" jsonschema:"description=Video Play Retention 0 To 15s Actions"`
	VideoPlayRetention20To60sActions                            []*AdsHistogramStats     `json:"video_play_retention_20_to_60s_actions,omitempty" jsonschema:"description=Video Play Retention 20 To 60s Actions"`
	VideoPlayRetentionGraphActions                              []*AdsHistogramStats     `json:"video_play_retention_graph_actions,omitempty" jsonschema:"description=Video Play Retention Graph Actions"`
	VideoThruplayWatchedActions                                 []*AdsActionStats        `json:"video_thruplay_watched_actions,omitempty" jsonschema:"description=Video Thruplay Watched Actions"`
	VideoTimeWatchedActions                                     []*AdsActionStats        `json:"video_time_watched_actions,omitempty" jsonschema:"description=Video Time Watched Actions"`
	VideoViewPerImpression                                      []*AdsActionStats        `json:"video_view_per_impression,omitempty" jsonschema:"description=Video View Per Impression"`
	WebsiteCtr                                                  []*AdsActionStats        `json:"website_ctr,omitempty" jsonschema:"description=Website Ctr"`
	WebsitePurchaseRoas                                         []*AdsActionStats        `json:"website_purchase_roas,omitempty" jsonschema:"description=Website Purchase Roas"`
	WishBid                                                     string                   `json:"wish_bid,omitempty" jsonschema:"description=Wish Bid"`
}

// AdsMcmeConversion represents the Facebook AdsMcmeConversion object
type AdsMcmeConversion struct {
	CreationTime        time.Time `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	Description         string    `json:"description,omitempty" jsonschema:"description=Description"`
	ID                  string    `json:"id,omitempty" jsonschema:"description=AdsMcmeConversion ID,required,pattern=^[0-9]+$"`
	IsArchived          bool      `json:"is_archived,omitempty" jsonschema:"description=Is Archived"`
	McmeConversionType  string    `json:"mcme_conversion_type,omitempty" jsonschema:"description=Mcme Conversion Type"`
	Name                string    `json:"name,omitempty" jsonschema:"description=Name of the AdsMcmeConversion,required"`
	OmnichannelObjectID string    `json:"omnichannel_object_id,omitempty" jsonschema:"description=ID of the Omnichannel Object,pattern=^[0-9]+$"`
}

// AdsNamingTemplate represents the Facebook AdsNamingTemplate object
type AdsNamingTemplate struct {
	APIFields         [][]map[string][]map[string]string `json:"api_fields,omitempty" jsonschema:"description=API Fields"`
	APIVersion        string                             `json:"api_version,omitempty" jsonschema:"description=API Version"`
	FieldOrder        []string                           `json:"field_order,omitempty" jsonschema:"description=Field Order"`
	ID                string                             `json:"id,omitempty" jsonschema:"description=AdsNamingTemplate ID,required,pattern=^[0-9]+$"`
	Level             AdsnamingtemplateLevel             `json:"level,omitempty" jsonschema:"description=Level"`
	Separator         string                             `json:"separator,omitempty" jsonschema:"description=Separator"`
	TemplateVersion   string                             `json:"template_version,omitempty" jsonschema:"description=Template Version"`
	UserDefinedFields [][]map[string][]string            `json:"user_defined_fields,omitempty" jsonschema:"description=User Defined Fields"`
	ValueSeparator    string                             `json:"value_separator,omitempty" jsonschema:"description=Value Separator"`
}

// AdsOptimalDeliveryGrowthOpportunity represents the Facebook AdsOptimalDeliveryGrowthOpportunity object
type AdsOptimalDeliveryGrowthOpportunity struct {
	ChildMetadata    []map[string]map[string]interface{} `json:"child_metadata,omitempty" jsonschema:"description=Child Metadata"`
	Metadata         map[string]interface{}              `json:"metadata,omitempty" jsonschema:"description=Metadata"`
	OptimizationType string                              `json:"optimization_type,omitempty" jsonschema:"description=Optimization Type"`
}

// AdsPaymentCycle represents the Facebook AdsPaymentCycle object
type AdsPaymentCycle struct {
	AccountID                string    `json:"account_id,omitempty" jsonschema:"description=ID of the Account,pattern=^[0-9]+$"`
	CreatedTime              time.Time `json:"created_time,omitempty" jsonschema:"description=When the AdsPaymentCycle was created,format=date-time"`
	Multiplier               uint      `json:"multiplier,omitempty" jsonschema:"description=Multiplier"`
	RequestedThresholdAmount uint      `json:"requested_threshold_amount,omitempty" jsonschema:"description=Requested Threshold Amount,minimum=1"`
	ThresholdAmount          uint      `json:"threshold_amount,omitempty" jsonschema:"description=Threshold Amount,minimum=1"`
	UpdatedTime              time.Time `json:"updated_time,omitempty" jsonschema:"description=When the AdsPaymentCycle was last updated,format=date-time"`
}

// AdsPivotRules represents the Facebook AdsPivotRules object
type AdsPivotRules struct {
	CreationTime time.Time                `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	Creator      *Profile                 `json:"creator,omitempty" jsonschema:"description=Creator"`
	Description  string                   `json:"description,omitempty" jsonschema:"description=Description"`
	ID           string                   `json:"id,omitempty" jsonschema:"description=AdsPivotRules ID,required,pattern=^[0-9]+$"`
	Name         string                   `json:"name,omitempty" jsonschema:"description=Name of the AdsPivotRules,required"`
	Permission   string                   `json:"permission,omitempty" jsonschema:"description=Permission"`
	Rules        []map[string]interface{} `json:"rules,omitempty" jsonschema:"description=Rules"`
	Scope        string                   `json:"scope,omitempty" jsonschema:"description=Scope"`
	UpdateBy     *Profile                 `json:"update_by,omitempty" jsonschema:"description=Update By"`
	UpdateTime   time.Time                `json:"update_time,omitempty" jsonschema:"description=Update Time,format=date-time"`
}

// AdsPixel represents the Facebook AdsPixel object
type AdsPixel struct {
	AutomaticMatchingFields    []string                       `json:"automatic_matching_fields,omitempty" jsonschema:"description=Automatic Matching Fields"`
	CanProxy                   bool                           `json:"can_proxy,omitempty" jsonschema:"description=Can Proxy"`
	Code                       string                         `json:"code,omitempty" jsonschema:"description=Code"`
	Config                     string                         `json:"config,omitempty" jsonschema:"description=Config"`
	CreationTime               time.Time                      `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	Creator                    *User                          `json:"creator,omitempty" jsonschema:"description=Creator"`
	DataUseSetting             string                         `json:"data_use_setting,omitempty" jsonschema:"description=Data Use Setting"`
	Description                string                         `json:"description,omitempty" jsonschema:"description=Description"`
	DuplicateEntries           int                            `json:"duplicate_entries,omitempty" jsonschema:"description=Duplicate Entries"`
	EnableAutoAssignToAccounts bool                           `json:"enable_auto_assign_to_accounts,omitempty" jsonschema:"description=Enable Auto Assign To Accounts"`
	EnableAutomaticMatching    bool                           `json:"enable_automatic_matching,omitempty" jsonschema:"description=Enable Automatic Matching"`
	EventStats                 string                         `json:"event_stats,omitempty" jsonschema:"description=Event Stats"`
	EventTimeMax               int                            `json:"event_time_max,omitempty" jsonschema:"description=Event Time Max"`
	EventTimeMin               int                            `json:"event_time_min,omitempty" jsonschema:"description=Event Time Min"`
	FirstPartyCookieStatus     string                         `json:"first_party_cookie_status,omitempty" jsonschema:"description=First Party Cookie Status"`
	Has1pPixelEvent            bool                           `json:"has_1p_pixel_event,omitempty" jsonschema:"description=Has 1p Pixel Event"`
	ID                         string                         `json:"id,omitempty" jsonschema:"description=AdsPixel ID,required,pattern=^[0-9]+$"`
	IsConsolidatedContainer    bool                           `json:"is_consolidated_container,omitempty" jsonschema:"description=Is Consolidated Container"`
	IsCreatedByBusiness        bool                           `json:"is_created_by_business,omitempty" jsonschema:"description=When the AdsPixel was created"`
	IsCrm                      bool                           `json:"is_crm,omitempty" jsonschema:"description=Is Crm"`
	IsMtaUse                   bool                           `json:"is_mta_use,omitempty" jsonschema:"description=Is Mta Use"`
	IsRestrictedUse            bool                           `json:"is_restricted_use,omitempty" jsonschema:"description=Is Restricted Use"`
	IsUnavailable              bool                           `json:"is_unavailable,omitempty" jsonschema:"description=Is Unavailable"`
	LastFiredTime              time.Time                      `json:"last_fired_time,omitempty" jsonschema:"description=Last Fired Time,format=date-time"`
	LastUploadApp              string                         `json:"last_upload_app,omitempty" jsonschema:"description=Last Upload App"`
	LastUploadAppChangedTime   int                            `json:"last_upload_app_changed_time,omitempty" jsonschema:"description=Last Upload App Changed Time"`
	MatchRateApprox            int                            `json:"match_rate_approx,omitempty" jsonschema:"description=Match Rate Approx"`
	MatchedEntries             int                            `json:"matched_entries,omitempty" jsonschema:"description=Matched Entries"`
	Name                       string                         `json:"name,omitempty" jsonschema:"description=Name of the AdsPixel,required"`
	OwnerAdAccount             *AdAccount                     `json:"owner_ad_account,omitempty" jsonschema:"description=Owner Ad Account"`
	OwnerBusiness              *Business                      `json:"owner_business,omitempty" jsonschema:"description=Owner Business"`
	Usage                      *OfflineConversionDataSetUsage `json:"usage,omitempty" jsonschema:"description=Usage"`
	UserAccessExpireTime       time.Time                      `json:"user_access_expire_time,omitempty" jsonschema:"description=User Access Expire Time,format=date-time"`
	ValidEntries               int                            `json:"valid_entries,omitempty" jsonschema:"description=Valid Entries"`
}

// AdsPixelCAPIIntegrationQuality represents the Facebook AdsPixelCAPIIntegrationQuality object
type AdsPixelCAPIIntegrationQuality struct {
	Acr                          map[string]interface{}   `json:"acr,omitempty" jsonschema:"description=Acr"`
	DataFreshness                map[string]interface{}   `json:"data_freshness,omitempty" jsonschema:"description=Data Freshness"`
	DedupeKeyFeedback            []map[string]interface{} `json:"dedupe_key_feedback,omitempty" jsonschema:"description=Dedupe Key Feedback"`
	EventCoverage                map[string]interface{}   `json:"event_coverage,omitempty" jsonschema:"description=Event Coverage"`
	EventMatchQuality            map[string]interface{}   `json:"event_match_quality,omitempty" jsonschema:"description=Event Match Quality"`
	EventName                    string                   `json:"event_name,omitempty" jsonschema:"description=Event Name"`
	EventPotentialAlyAcrIncrease map[string]interface{}   `json:"event_potential_aly_acr_increase,omitempty" jsonschema:"description=Event Potential Aly Acr Increase"`
}

// AdsPixelCapabilityOverride represents the Facebook AdsPixelCapabilityOverride object
type AdsPixelCapabilityOverride struct {
	Capability    string `json:"capability,omitempty" jsonschema:"description=Capability"`
	ID            string `json:"id,omitempty" jsonschema:"description=AdsPixelCapabilityOverride ID,required,pattern=^[0-9]+$"`
	OverrideValue string `json:"override_value,omitempty" jsonschema:"description=Override Value"`
	Reason        string `json:"reason,omitempty" jsonschema:"description=Reason"`
}

// AdsPixelDeliveryRecommendations represents the Facebook AdsPixelDeliveryRecommendations object
type AdsPixelDeliveryRecommendations struct {
	CustomEventType  string `json:"custom_event_type,omitempty" jsonschema:"description=Custom Event Type"`
	OptimizationGoal string `json:"optimization_goal,omitempty" jsonschema:"description=Optimization Goal"`
}

// AdsPixelDomainControlRule represents the Facebook AdsPixelDomainControlRule object
type AdsPixelDomainControlRule struct {
	DomainList []map[string]interface{} `json:"domain_list,omitempty" jsonschema:"description=Domain List"`
	Type       string                   `json:"type,omitempty" jsonschema:"description=Type"`
}

// AdsPixelDomainLastFiredTime represents the Facebook AdsPixelDomainLastFiredTime object
type AdsPixelDomainLastFiredTime struct {
	DomainName    string `json:"domain_name,omitempty" jsonschema:"description=Domain Name"`
	LastFiredTime int    `json:"last_fired_time,omitempty" jsonschema:"description=Last Fired Time"`
}

// AdsPixelEventLastFiredTime represents the Facebook AdsPixelEventLastFiredTime object
type AdsPixelEventLastFiredTime struct {
	Event         string `json:"event,omitempty" jsonschema:"description=Event"`
	LastFiredTime int    `json:"last_fired_time,omitempty" jsonschema:"description=Last Fired Time"`
}

// AdsPixelEventPrediction represents the Facebook AdsPixelEventPrediction object
type AdsPixelEventPrediction struct {
	Dismissed bool   `json:"dismissed,omitempty" jsonschema:"description=Dismissed"`
	EventType string `json:"event_type,omitempty" jsonschema:"description=Event Type"`
	Rule      string `json:"rule,omitempty" jsonschema:"description=Rule"`
}

// AdsPixelEventSuggestionRule represents the Facebook AdsPixelEventSuggestionRule object
type AdsPixelEventSuggestionRule struct {
	X7dVolume  int       `json:"7d_volume,omitempty" jsonschema:"description=7d Volume"`
	Dismissed  bool      `json:"dismissed,omitempty" jsonschema:"description=Dismissed"`
	EndTime    time.Time `json:"end_time,omitempty" jsonschema:"description=End Time,format=date-time"`
	EventType  string    `json:"event_type,omitempty" jsonschema:"description=Event Type"`
	Rank       int       `json:"rank,omitempty" jsonschema:"description=Rank"`
	Rule       string    `json:"rule,omitempty" jsonschema:"description=Rule"`
	SampleURLs []string  `json:"sample_urls,omitempty" jsonschema:"description=Sample Urls,format=uri"`
	StartTime  time.Time `json:"start_time,omitempty" jsonschema:"description=Start Time,format=date-time"`
}

// AdsPixelItemPrice represents the Facebook AdsPixelItemPrice object
type AdsPixelItemPrice struct {
	Date              string `json:"date,omitempty" jsonschema:"description=Date"`
	ItemPriceCoverage string `json:"item_price_coverage,omitempty" jsonschema:"description=Item Price Coverage"`
}

// AdsPixelMicrodataStats represents the Facebook AdsPixelMicrodataStats object
type AdsPixelMicrodataStats struct {
	AllowedDomains                  []string                 `json:"allowed_domains,omitempty" jsonschema:"description=Allowed Domains"`
	ErrorsStatsForTimeRanges        []map[string]interface{} `json:"errors_stats_for_time_ranges,omitempty" jsonschema:"description=Errors Stats For Time Ranges"`
	HasValidEvents                  bool                     `json:"has_valid_events,omitempty" jsonschema:"description=Has Valid Events"`
	SuggestedAllowedDomainsCountMax int                      `json:"suggested_allowed_domains_count_max,omitempty" jsonschema:"description=Suggested Allowed Domains Count Max"`
	SuggestedTrustedDomains         []string                 `json:"suggested_trusted_domains,omitempty" jsonschema:"description=Suggested Trusted Domains"`
}

// AdsPixelRawFiresResult represents the Facebook AdsPixelRawFiresResult object
type AdsPixelRawFiresResult struct {
	DataJson             string    `json:"data_json,omitempty" jsonschema:"description=Data Json"`
	DeviceType           string    `json:"device_type,omitempty" jsonschema:"description=Device Type"`
	Event                string    `json:"event,omitempty" jsonschema:"description=Event"`
	EventDetectionMethod string    `json:"event_detection_method,omitempty" jsonschema:"description=Event Detection Method"`
	EventSrc             string    `json:"event_src,omitempty" jsonschema:"description=Event Src"`
	PlacedURL            string    `json:"placed_url,omitempty" jsonschema:"description=Placed URL,format=uri"`
	Timestamp            time.Time `json:"timestamp,omitempty" jsonschema:"description=Timestamp,format=date-time"`
	UserPiiKeys          string    `json:"user_pii_keys,omitempty" jsonschema:"description=User Pii Keys"`
}

// AdsPixelRealTimeEventLogResult represents the Facebook AdsPixelRealTimeEventLogResult object
type AdsPixelRealTimeEventLogResult struct {
	DataJson                   string `json:"data_json,omitempty" jsonschema:"description=Data Json"`
	DedupData                  string `json:"dedup_data,omitempty" jsonschema:"description=Dedup Data"`
	DeviceType                 string `json:"device_type,omitempty" jsonschema:"description=Device Type"`
	DomainControlRuleRejection string `json:"domain_control_rule_rejection,omitempty" jsonschema:"description=Domain Control Rule Rejection"`
	Event                      string `json:"event,omitempty" jsonschema:"description=Event"`
	EventDetectionMethod       string `json:"event_detection_method,omitempty" jsonschema:"description=Event Detection Method"`
	InIframe                   bool   `json:"in_iframe,omitempty" jsonschema:"description=In Iframe"`
	MatchedRuleConditions      string `json:"matched_rule_conditions,omitempty" jsonschema:"description=Matched Rule Conditions"`
	ResolvedLink               string `json:"resolved_link,omitempty" jsonschema:"description=Resolved Link"`
	SourceRuleCondition        string `json:"source_rule_condition,omitempty" jsonschema:"description=Source Rule Condition"`
	Timestamp                  string `json:"timestamp,omitempty" jsonschema:"description=Timestamp"`
	TraceID                    string `json:"trace_id,omitempty" jsonschema:"description=ID of the Trace,pattern=^[0-9]+$"`
	URL                        string `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
}

// AdsPixelRecentEventsResult represents the Facebook AdsPixelRecentEventsResult object
type AdsPixelRecentEventsResult struct {
	Count int    `json:"count,omitempty" jsonschema:"description=Count"`
	Event string `json:"event,omitempty" jsonschema:"description=Event"`
}

// AdsPixelSignalsIWLFeedbackNux represents the Facebook AdsPixelSignalsIWLFeedbackNux object
type AdsPixelSignalsIWLFeedbackNux struct {
	ShouldAskToRate bool `json:"should_ask_to_rate,omitempty" jsonschema:"description=Should Ask To Rate"`
}

// AdsPixelSignalsIWLNux represents the Facebook AdsPixelSignalsIWLNux object
type AdsPixelSignalsIWLNux struct {
	BackgroundColor string `json:"background_color,omitempty" jsonschema:"description=Background Color"`
	Content         string `json:"content,omitempty" jsonschema:"description=Content"`
	ContentColor    string `json:"content_color,omitempty" jsonschema:"description=Content Color"`
	ContentSize     string `json:"content_size,omitempty" jsonschema:"description=Content Size"`
	ImgURL          string `json:"img_url,omitempty" jsonschema:"description=Img URL,format=uri"`
}

// AdsPixelStats represents the Facebook AdsPixelStats object
type AdsPixelStats struct {
	Count                          int       `json:"count,omitempty" jsonschema:"description=Count"`
	DiagnosticsHourlyLastTimestamp time.Time `json:"diagnostics_hourly_last_timestamp,omitempty" jsonschema:"description=Diagnostics Hourly Last Timestamp,format=uri"`
	Event                          string    `json:"event,omitempty" jsonschema:"description=Event"`
	Value                          string    `json:"value,omitempty" jsonschema:"description=Value"`
}

// AdsPixelStatsResult represents the Facebook AdsPixelStatsResult object
type AdsPixelStatsResult struct {
	Aggregation string           `json:"aggregation,omitempty" jsonschema:"description=Aggregation"`
	Data        []*AdsPixelStats `json:"data,omitempty" jsonschema:"description=Data"`
	StartTime   time.Time        `json:"start_time,omitempty" jsonschema:"description=Start Time,format=date-time"`
}

// AdsQuickViews represents the Facebook AdsQuickViews object
type AdsQuickViews struct {
	AttributionWindows []string                 `json:"attribution_windows,omitempty" jsonschema:"description=Attribution Windows"`
	Breakdowns         []string                 `json:"breakdowns,omitempty" jsonschema:"description=Breakdowns"`
	ColumnFields       []string                 `json:"column_fields,omitempty" jsonschema:"description=Column Fields"`
	Description        string                   `json:"description,omitempty" jsonschema:"description=Description"`
	ID                 string                   `json:"id,omitempty" jsonschema:"description=AdsQuickViews ID,required,pattern=^[0-9]+$"`
	Name               string                   `json:"name,omitempty" jsonschema:"description=Name of the AdsQuickViews,required"`
	Owner              *Profile                 `json:"owner,omitempty" jsonschema:"description=Owner"`
	Permission         string                   `json:"permission,omitempty" jsonschema:"description=Permission"`
	QuickViewType      string                   `json:"quick_view_type,omitempty" jsonschema:"description=Quick View Type"`
	Sort               []map[string]interface{} `json:"sort,omitempty" jsonschema:"description=Sort"`
}

// AdsReportBuilder represents the Facebook AdsReportBuilder object
type AdsReportBuilder struct {
	Headers             map[string]interface{}   `json:"headers,omitempty" jsonschema:"description=Headers"`
	Rows                []map[string]interface{} `json:"rows,omitempty" jsonschema:"description=Rows"`
	SkanReadinessStatus []map[string]string      `json:"skan_readiness_status,omitempty" jsonschema:"description=Skan Readiness Status"`
}

// AdsReportBuilderExportCore represents the Facebook AdsReportBuilderExportCore object
type AdsReportBuilderExportCore struct {
	AsyncPercentCompletion    int       `json:"async_percent_completion,omitempty" jsonschema:"description=Async Percent Completion"`
	AsyncReportURL            string    `json:"async_report_url,omitempty" jsonschema:"description=Async Report URL,format=uri"`
	AsyncStatus               string    `json:"async_status,omitempty" jsonschema:"description=Async Status"`
	ClientCreationValue       string    `json:"client_creation_value,omitempty" jsonschema:"description=Client Creation Value"`
	ExpiryTime                time.Time `json:"expiry_time,omitempty" jsonschema:"description=Expiry Time,format=date-time"`
	ExportDownloadTime        time.Time `json:"export_download_time,omitempty" jsonschema:"description=Export Download Time,format=date-time"`
	ExportFormat              string    `json:"export_format,omitempty" jsonschema:"description=Export Format"`
	ExportName                string    `json:"export_name,omitempty" jsonschema:"description=Export Name"`
	ExportType                string    `json:"export_type,omitempty" jsonschema:"description=Export Type"`
	HasSeen                   bool      `json:"has_seen,omitempty" jsonschema:"description=Has Seen"`
	ID                        string    `json:"id,omitempty" jsonschema:"description=AdsReportBuilderExportCore ID,required,pattern=^[0-9]+$"`
	IsSharing                 bool      `json:"is_sharing,omitempty" jsonschema:"description=Is Sharing"`
	LinkSharingExpirationTime time.Time `json:"link_sharing_expiration_time,omitempty" jsonschema:"description=Link Sharing Expiration Time,format=date-time"`
	LinkSharingUri            string    `json:"link_sharing_uri,omitempty" jsonschema:"description=Link Sharing Uri"`
	TimeCompleted             time.Time `json:"time_completed,omitempty" jsonschema:"description=Time Completed,format=date-time"`
	TimeStart                 time.Time `json:"time_start,omitempty" jsonschema:"description=Time Start,format=date-time"`
}

// AdsReportBuilderMMMReport represents the Facebook AdsReportBuilderMMMReport object
type AdsReportBuilderMMMReport struct {
	AsyncStatus  string    `json:"async_status,omitempty" jsonschema:"description=Async Status"`
	ExportFormat string    `json:"export_format,omitempty" jsonschema:"description=Export Format"`
	ExportName   string    `json:"export_name,omitempty" jsonschema:"description=Export Name"`
	ExportType   string    `json:"export_type,omitempty" jsonschema:"description=Export Type"`
	HasSeen      bool      `json:"has_seen,omitempty" jsonschema:"description=Has Seen"`
	ID           string    `json:"id,omitempty" jsonschema:"description=AdsReportBuilderMMMReport ID,required,pattern=^[0-9]+$"`
	MmmStatus    string    `json:"mmm_status,omitempty" jsonschema:"description=Mmm Status"`
	TimeStart    time.Time `json:"time_start,omitempty" jsonschema:"description=Time Start,format=date-time"`
}

// AdsReportBuilderMMMReportScheduler represents the Facebook AdsReportBuilderMMMReportScheduler object
type AdsReportBuilderMMMReportScheduler struct {
	AdAccountIDs      []string                 `json:"ad_account_ids,omitempty" jsonschema:"description=Ad Account Ids,pattern=^[0-9]+$"`
	Filtering         []map[string]interface{} `json:"filtering,omitempty" jsonschema:"description=Filtering"`
	ID                string                   `json:"id,omitempty" jsonschema:"description=AdsReportBuilderMMMReportScheduler ID,required,pattern=^[0-9]+$"`
	ReportName        string                   `json:"report_name,omitempty" jsonschema:"description=Report Name"`
	ScheduleFrequency string                   `json:"schedule_frequency,omitempty" jsonschema:"description=Schedule Frequency"`
}

// AdsReportBuilderSavedReport represents the Facebook AdsReportBuilderSavedReport object
type AdsReportBuilderSavedReport struct {
	ActionReportTime                     string                                `json:"action_report_time,omitempty" jsonschema:"description=Action Report Time"`
	AdAccountID                          string                                `json:"ad_account_id,omitempty" jsonschema:"description=ID of the Ad Account,pattern=^[0-9]+$"`
	AttributionWindows                   []string                              `json:"attribution_windows,omitempty" jsonschema:"description=Attribution Windows"`
	ComparisonDateInterval               map[string]interface{}                `json:"comparison_date_interval,omitempty" jsonschema:"description=Comparison Date Interval"`
	CreationSource                       string                                `json:"creation_source,omitempty" jsonschema:"description=Creation Source"`
	CreationTime                         time.Time                             `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	Currency                             string                                `json:"currency,omitempty" jsonschema:"description=Currency"`
	DateInterval                         map[string]interface{}                `json:"date_interval,omitempty" jsonschema:"description=Date Interval"`
	DatePreset                           string                                `json:"date_preset,omitempty" jsonschema:"description=Date Preset"`
	DefaultAttributionWindows            []string                              `json:"default_attribution_windows,omitempty" jsonschema:"description=Default Attribution Windows"`
	DimensionGroups                      [][]string                            `json:"dimension_groups,omitempty" jsonschema:"description=Dimension Groups"`
	Dimensions                           []string                              `json:"dimensions,omitempty" jsonschema:"description=Dimensions"`
	Filtering                            interface{}                           `json:"filtering,omitempty" jsonschema:"description=Filtering"`
	Formatting                           []map[string][]map[string]interface{} `json:"formatting,omitempty" jsonschema:"description=Formatting"`
	ID                                   string                                `json:"id,omitempty" jsonschema:"description=AdsReportBuilderSavedReport ID,required,pattern=^[0-9]+$"`
	LastAccessBy                         *Profile                              `json:"last_access_by,omitempty" jsonschema:"description=Last Access By"`
	LastAccessTime                       time.Time                             `json:"last_access_time,omitempty" jsonschema:"description=Last Access Time,format=date-time"`
	LastReportSnapshotID                 string                                `json:"last_report_snapshot_id,omitempty" jsonschema:"description=ID of the Last Report Snapshot,pattern=^[0-9]+$"`
	LastReportSnapshotTime               time.Time                             `json:"last_report_snapshot_time,omitempty" jsonschema:"description=Last Report Snapshot Time,format=date-time"`
	LastSharedReportExpiration           time.Time                             `json:"last_shared_report_expiration,omitempty" jsonschema:"description=Last Shared Report Expiration,format=date-time"`
	Limit                                int                                   `json:"limit,omitempty" jsonschema:"description=Limit"`
	LockedDimensions                     int                                   `json:"locked_dimensions,omitempty" jsonschema:"description=Locked Dimensions"`
	Metrics                              []string                              `json:"metrics,omitempty" jsonschema:"description=Metrics"`
	ReportName                           string                                `json:"report_name,omitempty" jsonschema:"description=Report Name"`
	ReportSnapshotAsyncPercentCompletion int                                   `json:"report_snapshot_async_percent_completion,omitempty" jsonschema:"description=Report Snapshot Async Percent Completion"`
	ReportSnapshotAsyncStatus            string                                `json:"report_snapshot_async_status,omitempty" jsonschema:"description=Report Snapshot Async Status"`
	ScheduleFrequency                    string                                `json:"schedule_frequency,omitempty" jsonschema:"description=Schedule Frequency"`
	Scope                                string                                `json:"scope,omitempty" jsonschema:"description=Scope"`
	ShowDeprecateAwBanner                bool                                  `json:"show_deprecate_aw_banner,omitempty" jsonschema:"description=Show Deprecate Aw Banner"`
	Sorting                              []map[string]interface{}              `json:"sorting,omitempty" jsonschema:"description=Sorting"`
	StartDate                            string                                `json:"start_date,omitempty" jsonschema:"description=Start Date"`
	Status                               string                                `json:"status,omitempty" jsonschema:"description=Current status of the AdsReportBuilderSavedReport,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	Subscribers                          []string                              `json:"subscribers,omitempty" jsonschema:"description=Subscribers"`
	UpdateBy                             *Profile                              `json:"update_by,omitempty" jsonschema:"description=Update By"`
	UpdateTime                           time.Time                             `json:"update_time,omitempty" jsonschema:"description=Update Time,format=date-time"`
	User                                 *Profile                              `json:"user,omitempty" jsonschema:"description=User"`
	UserDimensions                       []string                              `json:"user_dimensions,omitempty" jsonschema:"description=User Dimensions"`
	UserMetrics                          []string                              `json:"user_metrics,omitempty" jsonschema:"description=User Metrics"`
	ViewType                             string                                `json:"view_type,omitempty" jsonschema:"description=View Type"`
}

// AdsSegments represents the Facebook AdsSegments object
type AdsSegments struct {
	DailyAudienceSize     int      `json:"daily_audience_size,omitempty" jsonschema:"description=Daily Audience Size"`
	DailyImpressions      int      `json:"daily_impressions,omitempty" jsonschema:"description=Daily Impressions"`
	Description           string   `json:"description,omitempty" jsonschema:"description=Description"`
	ID                    string   `json:"id,omitempty" jsonschema:"description=AdsSegments ID,required,pattern=^[0-9]+$"`
	Name                  string   `json:"name,omitempty" jsonschema:"description=Name of the AdsSegments,required"`
	Path                  []string `json:"path,omitempty" jsonschema:"description=Path"`
	Popularity            float64  `json:"popularity,omitempty" jsonschema:"description=Popularity"`
	ProjectedCpm          int      `json:"projected_cpm,omitempty" jsonschema:"description=Projected Cpm"`
	ProjectedDailyRevenue int      `json:"projected_daily_revenue,omitempty" jsonschema:"description=Projected Daily Revenue"`
}

// AdsSignalDiagnosticIssue represents the Facebook AdsSignalDiagnosticIssue object
type AdsSignalDiagnosticIssue struct {
	DataSourceID                 *AdsPixel `json:"data_source_id,omitempty" jsonschema:"description=ID of the Data Source,pattern=^[0-9]+$"`
	DataSourceType               string    `json:"data_source_type,omitempty" jsonschema:"description=Data Source Type"`
	DiagnosticType               string    `json:"diagnostic_type,omitempty" jsonschema:"description=Diagnostic Type"`
	EventName                    string    `json:"event_name,omitempty" jsonschema:"description=Event Name"`
	TrafficAnomalyDropPercentage float64   `json:"traffic_anomaly_drop_percentage,omitempty" jsonschema:"description=Traffic Anomaly Drop Percentage"`
	TrafficAnomalyDropTimestamp  time.Time `json:"traffic_anomaly_drop_timestamp,omitempty" jsonschema:"description=Traffic Anomaly Drop Timestamp,format=date-time"`
}

// AdsStartYourDayWidget represents the Facebook AdsStartYourDayWidget object
type AdsStartYourDayWidget struct {
	ID       string `json:"id,omitempty" jsonschema:"description=AdsStartYourDayWidget ID,required,pattern=^[0-9]+$"`
	WidgetID string `json:"widget_id,omitempty" jsonschema:"description=ID of the Widget,pattern=^[0-9]+$"`
}

// AdsTabular represents the Facebook AdsTabular object
type AdsTabular struct {
	Rows []map[string]interface{} `json:"rows,omitempty" jsonschema:"description=Rows"`
}

// AdsTargetingInsights represents the Facebook AdsTargetingInsights object
type AdsTargetingInsights struct {
	AudienceSize   int     `json:"audience_size,omitempty" jsonschema:"description=Audience Size"`
	Clicks         uint    `json:"clicks,omitempty" jsonschema:"description=Clicks"`
	ConversionCost float64 `json:"conversion_cost,omitempty" jsonschema:"description=Conversion Cost"`
	Conversions    uint    `json:"conversions,omitempty" jsonschema:"description=Conversions"`
	Description    string  `json:"description,omitempty" jsonschema:"description=Description"`
	ID             string  `json:"id,omitempty" jsonschema:"description=AdsTargetingInsights ID,required,pattern=^[0-9]+$"`
	Impressions    string  `json:"impressions,omitempty" jsonschema:"description=Impressions"`
	Name           string  `json:"name,omitempty" jsonschema:"description=Name of the AdsTargetingInsights,required"`
	Revenue        float64 `json:"revenue,omitempty" jsonschema:"description=Revenue"`
	Spend          float64 `json:"spend,omitempty" jsonschema:"description=Spend"`
	Type           string  `json:"type,omitempty" jsonschema:"description=Type"`
}

// AdsTextSuggestions represents the Facebook AdsTextSuggestions object
type AdsTextSuggestions struct {
	AdAccountID          string                   `json:"ad_account_id,omitempty" jsonschema:"description=ID of the Ad Account,pattern=^[0-9]+$"`
	Bodies               []map[string]interface{} `json:"bodies,omitempty" jsonschema:"description=Bodies"`
	Descriptions         []map[string]interface{} `json:"descriptions,omitempty" jsonschema:"description=Descriptions"`
	InactiveSessionTally int                      `json:"inactive_session_tally,omitempty" jsonschema:"description=Inactive Session Tally"`
	Long                 []map[string]interface{} `json:"long,omitempty" jsonschema:"description=Long"`
	Short                []map[string]interface{} `json:"short,omitempty" jsonschema:"description=Short"`
	Titles               []map[string]interface{} `json:"titles,omitempty" jsonschema:"description=Titles"`
}

// AdsUserSettings represents the Facebook AdsUserSettings object
type AdsUserSettings struct {
	APlusCSurveySeen                                     bool                     `json:"a_plus_c_survey_seen,omitempty" jsonschema:"description=A Plus C Survey Seen"`
	AddOverlaysOptInStatus                               string                   `json:"add_overlays_opt_in_status,omitempty" jsonschema:"description=Add Overlays Opt In Status"`
	AdgroupNameTemplate                                  map[string]interface{}   `json:"adgroup_name_template,omitempty" jsonschema:"description=Adgroup Name Template"`
	AdsCsCatalogOptOutTimestamp                          []map[string]int         `json:"ads_cs_catalog_opt_out_timestamp,omitempty" jsonschema:"description=Ads Cs Catalog Opt Out Timestamp"`
	AdsToolVisits                                        []map[string]interface{} `json:"ads_tool_visits,omitempty" jsonschema:"description=Ads Tool Visits"`
	ApluscCarouselCdaOptInStatus                         string                   `json:"aplusc_carousel_cda_opt_in_status,omitempty" jsonschema:"description=Aplusc Carousel Cda Opt In Status"`
	ApluscCarouselInlineCommentOptInStatus               string                   `json:"aplusc_carousel_inline_comment_opt_in_status,omitempty" jsonschema:"description=Aplusc Carousel Inline Comment Opt In Status"`
	ApluscEnhanceCtaOptInStatus                          string                   `json:"aplusc_enhance_cta_opt_in_status,omitempty" jsonschema:"description=Aplusc Enhance Cta Opt In Status"`
	ApluscEpaOptInStatus                                 string                   `json:"aplusc_epa_opt_in_status,omitempty" jsonschema:"description=Aplusc Epa Opt In Status"`
	ApluscLocalStoreExtensionOptInStatus                 string                   `json:"aplusc_local_store_extension_opt_in_status,omitempty" jsonschema:"description=Aplusc Local Store Extension Opt In Status"`
	ApluscOptOutFriction                                 []string                 `json:"aplusc_opt_out_friction,omitempty" jsonschema:"description=Aplusc Opt Out Friction"`
	ApluscVideofilterOptInStatus                         string                   `json:"aplusc_videofilter_opt_in_status,omitempty" jsonschema:"description=Aplusc Videofilter Opt In Status"`
	ApluscVideouncropOptInStatus                         string                   `json:"aplusc_videouncrop_opt_in_status,omitempty" jsonschema:"description=Aplusc Videouncrop Opt In Status"`
	AutoflowLiteOptInStatus                              string                   `json:"autoflow_lite_opt_in_status,omitempty" jsonschema:"description=Autoflow Lite Opt In Status"`
	AutoflowLiteShouldOptIn                              bool                     `json:"autoflow_lite_should_opt_in,omitempty" jsonschema:"description=Autoflow Lite Should Opt In"`
	BlendedAdsCreationDefaultingOptInStatus              string                   `json:"blended_ads_creation_defaulting_opt_in_status,omitempty" jsonschema:"description=Blended Ads Creation Defaulting Opt In Status"`
	BlendedAdsCreationDefaultingOptOutCampaignGroupIDs   []int                    `json:"blended_ads_creation_defaulting_opt_out_campaign_group_ids,omitempty" jsonschema:"description=Blended Ads Creation Defaulting Opt Out Campaign Group Ids,pattern=^[0-9]+$"`
	BookmarkedPages                                      []*Page                  `json:"bookmarked_pages,omitempty" jsonschema:"description=Bookmarked Pages"`
	CampaignGroupNameTemplate                            map[string]interface{}   `json:"campaign_group_name_template,omitempty" jsonschema:"description=Campaign Group Name Template"`
	CampaignNameTemplate                                 map[string]interface{}   `json:"campaign_name_template,omitempty" jsonschema:"description=Campaign Name Template"`
	CarouselToVideoOptInStatus                           string                   `json:"carousel_to_video_opt_in_status,omitempty" jsonschema:"description=Carousel To Video Opt In Status"`
	ConnectedSourcesCatalogOptInStatus                   string                   `json:"connected_sources_catalog_opt_in_status,omitempty" jsonschema:"description=Connected Sources Catalog Opt In Status"`
	DaAddOverlaysOptInStatus                             string                   `json:"da_add_overlays_opt_in_status,omitempty" jsonschema:"description=Da Add Overlays Opt In Status"`
	DaHidePriceOptInStatus                               string                   `json:"da_hide_price_opt_in_status,omitempty" jsonschema:"description=Da Hide Price Opt In Status"`
	DefaultCreationMode                                  string                   `json:"default_creation_mode,omitempty" jsonschema:"description=Default Creation Mode"`
	DynamicPartnershipAdsOptInStatus                     string                   `json:"dynamic_partnership_ads_opt_in_status,omitempty" jsonschema:"description=Dynamic Partnership Ads Opt In Status"`
	EnhanceCtaTextExtractionOptInStatus                  string                   `json:"enhance_cta_text_extraction_opt_in_status,omitempty" jsonschema:"description=Enhance Cta Text Extraction Opt In Status"`
	ExportFormatDefault                                  string                   `json:"export_format_default,omitempty" jsonschema:"description=Export Format Default"`
	FocusModeDefault                                     string                   `json:"focus_mode_default,omitempty" jsonschema:"description=Focus Mode Default"`
	GenAiAlphaTestStatus                                 int                      `json:"gen_ai_alpha_test_status,omitempty" jsonschema:"description=Gen Ai Alpha Test Status"`
	ID                                                   string                   `json:"id,omitempty" jsonschema:"description=AdsUserSettings ID,required,pattern=^[0-9]+$"`
	ImageBackgroundGenerationOptInStatus                 string                   `json:"image_background_generation_opt_in_status,omitempty" jsonschema:"description=Image Background Generation Opt In Status"`
	ImageBrightnessAndContrastOptInStatus                string                   `json:"image_brightness_and_contrast_opt_in_status,omitempty" jsonschema:"description=Image Brightness And Contrast Opt In Status"`
	ImageExpansionOptInStatus                            string                   `json:"image_expansion_opt_in_status,omitempty" jsonschema:"description=Image Expansion Opt In Status"`
	IsAdsAiConsented                                     bool                     `json:"is_ads_ai_consented,omitempty" jsonschema:"description=Is Ads Ai Consented"`
	IsCboDefaultOn                                       bool                     `json:"is_cbo_default_on,omitempty" jsonschema:"description=Is Cbo Default On"`
	IsSeRemovalGuidanceDismissed                         bool                     `json:"is_se_removal_guidance_dismissed,omitempty" jsonschema:"description=Is Se Removal Guidance Dismissed"`
	LastUsedPostFormat                                   string                   `json:"last_used_post_format,omitempty" jsonschema:"description=Last Used Post Format"`
	LastVisitedTime                                      time.Time                `json:"last_visited_time,omitempty" jsonschema:"description=Last Visited Time,format=date-time"`
	MetadataBrandKitOptInStatus                          string                   `json:"metadata_brand_kit_opt_in_status,omitempty" jsonschema:"description=Metadata Brand Kit Opt In Status"`
	MusicOnReelsOptIn                                    []map[string]string      `json:"music_on_reels_opt_in,omitempty" jsonschema:"description=Music On Reels Opt In"`
	MutedCboMidflightEducationMessages                   []string                 `json:"muted_cbo_midflight_education_messages,omitempty" jsonschema:"description=Muted Cbo Midflight Education Messages"`
	OnsiteDestinationOptimizationOptIn                   string                   `json:"onsite_destination_optimization_opt_in,omitempty" jsonschema:"description=Onsite Destination Optimization Opt In"`
	OpenTabs                                             []string                 `json:"open_tabs,omitempty" jsonschema:"description=Open Tabs"`
	PacRelaxationOptInStatus                             string                   `json:"pac_relaxation_opt_in_status,omitempty" jsonschema:"description=Pac Relaxation Opt In Status"`
	PlacementGroupSquareOptInStatus                      string                   `json:"placement_group_square_opt_in_status,omitempty" jsonschema:"description=Placement Group Square Opt In Status"`
	PlacementGroupVerticalOptInStatus                    string                   `json:"placement_group_vertical_opt_in_status,omitempty" jsonschema:"description=Placement Group Vertical Opt In Status"`
	PreviouslySeenRecommendations                        []string                 `json:"previously_seen_recommendations,omitempty" jsonschema:"description=Previously Seen Recommendations"`
	ProductExtensionsOptIn                               string                   `json:"product_extensions_opt_in,omitempty" jsonschema:"description=Product Extensions Opt In"`
	SaOffConvLocSeen                                     string                   `json:"sa_off_conv_loc_seen,omitempty" jsonschema:"description=Sa Off Conv Loc Seen"`
	SaoffPublishedL2ConvLocSeen                          string                   `json:"saoff_published_l2_conv_loc_seen,omitempty" jsonschema:"description=Saoff Published L2 Conv Loc Seen"`
	SaonMigrL1SeenStatus                                 string                   `json:"saon_migr_l1_seen_status,omitempty" jsonschema:"description=Saon Migr L1 Seen Status"`
	SelectedAdAccount                                    *AdAccount               `json:"selected_ad_account,omitempty" jsonschema:"description=Selected Ad Account"`
	SelectedComparisonTimerange                          map[string]interface{}   `json:"selected_comparison_timerange,omitempty" jsonschema:"description=Selected Comparison Timerange"`
	SelectedMetricCic                                    string                   `json:"selected_metric_cic,omitempty" jsonschema:"description=Selected Metric Cic"`
	SelectedMetricsCic                                   []string                 `json:"selected_metrics_cic,omitempty" jsonschema:"description=Selected Metrics Cic"`
	SelectedPage                                         *Page                    `json:"selected_page,omitempty" jsonschema:"description=Selected Page"`
	SelectedPageSection                                  string                   `json:"selected_page_section,omitempty" jsonschema:"description=Selected Page Section"`
	SelectedPowerEditorPane                              string                   `json:"selected_power_editor_pane,omitempty" jsonschema:"description=Selected Power Editor Pane"`
	SelectedStatRange                                    map[string]interface{}   `json:"selected_stat_range,omitempty" jsonschema:"description=Selected Stat Range"`
	ShouldExportFilterEmptyCols                          string                   `json:"should_export_filter_empty_cols,omitempty" jsonschema:"description=Should Export Filter Empty Cols"`
	ShouldExportRowsWithoutUnsupportedFeature            string                   `json:"should_export_rows_without_unsupported_feature,omitempty" jsonschema:"description=Should Export Rows Without Unsupported Feature"`
	ShouldNotAutoExpandTreeTable                         bool                     `json:"should_not_auto_expand_tree_table,omitempty" jsonschema:"description=Should Not Auto Expand Tree Table"`
	ShouldNotShowCboCampaignToggleOffConfirmationMessage bool                     `json:"should_not_show_cbo_campaign_toggle_off_confirmation_message,omitempty" jsonschema:"description=Should Not Show Cbo Campaign Toggle Off Confirmation Message"`
	ShouldNotShowPublishMessageOnEditorClose             bool                     `json:"should_not_show_publish_message_on_editor_close,omitempty" jsonschema:"description=Should Not Show Publish Message On Editor Close"`
	ShowOriginalVideosOptIn                              string                   `json:"show_original_videos_opt_in,omitempty" jsonschema:"description=Show Original Videos Opt In"`
	StaticAdProductExtensionsOptIn                       string                   `json:"static_ad_product_extensions_opt_in,omitempty" jsonschema:"description=Static Ad Product Extensions Opt In"`
	StickySettingAfterDefaultOn                          string                   `json:"sticky_setting_after_default_on,omitempty" jsonschema:"description=Sticky Setting After Default On"`
	SydCampaignTrendsMetric                              string                   `json:"syd_campaign_trends_metric,omitempty" jsonschema:"description=Syd Campaign Trends Metric"`
	TextOptimizationsTextExtractionOptInStatus           string                   `json:"text_optimizations_text_extraction_opt_in_status,omitempty" jsonschema:"description=Text Optimizations Text Extraction Opt In Status"`
	TextTranslationOptInStatus                           string                   `json:"text_translation_opt_in_status,omitempty" jsonschema:"description=Text Translation Opt In Status"`
	TextVariationsStickyOptInStatus                      string                   `json:"text_variations_sticky_opt_in_status,omitempty" jsonschema:"description=Text Variations Sticky Opt In Status"`
	TotalCouponSydDismissals                             int                      `json:"total_coupon_syd_dismissals,omitempty" jsonschema:"description=Total Coupon Syd Dismissals"`
	TotalCouponUpsellDismissals                          int                      `json:"total_coupon_upsell_dismissals,omitempty" jsonschema:"description=Total Coupon Upsell Dismissals"`
	URLPrefillRemovalTimestamp                           int                      `json:"url_prefill_removal_timestamp,omitempty" jsonschema:"description=URL Prefill Removal Timestamp"`
	UsePeCreateFlow                                      bool                     `json:"use_pe_create_flow,omitempty" jsonschema:"description=Use Pe Create Flow"`
	UseStepperPrimaryEntry                               bool                     `json:"use_stepper_primary_entry,omitempty" jsonschema:"description=Use Stepper Primary Entry"`
	User                                                 *User                    `json:"user,omitempty" jsonschema:"description=User"`
}

// AdsValueAdjustmentRuleCollection represents the Facebook AdsValueAdjustmentRuleCollection object
type AdsValueAdjustmentRuleCollection struct {
	ID               string `json:"id,omitempty" jsonschema:"description=AdsValueAdjustmentRuleCollection ID,required,pattern=^[0-9]+$"`
	IsDefaultSetting bool   `json:"is_default_setting,omitempty" jsonschema:"description=Is Default Setting"`
	Name             string `json:"name,omitempty" jsonschema:"description=Name of the AdsValueAdjustmentRuleCollection,required"`
	ProductType      string `json:"product_type,omitempty" jsonschema:"description=Product Type"`
	Status           string `json:"status,omitempty" jsonschema:"description=Current status of the AdsValueAdjustmentRuleCollection,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// AdvAInstance represents the Facebook AdvAInstance object
type AdvAInstance struct {
	ID            string    `json:"id,omitempty" jsonschema:"description=AdvAInstance ID,required,pattern=^[0-9]+$"`
	InstanceType  string    `json:"instance_type,omitempty" jsonschema:"description=Instance Type"`
	Name          string    `json:"name,omitempty" jsonschema:"description=Name of the AdvAInstance,required"`
	OwnerBusiness *Business `json:"owner_business,omitempty" jsonschema:"description=Owner Business"`
}

// AdvertiserVerificationStatus represents the Facebook AdvertiserVerificationStatus object
type AdvertiserVerificationStatus struct {
	BannerType         string    `json:"banner_type,omitempty" jsonschema:"description=Banner Type"`
	GracePeriodEndsAt  time.Time `json:"grace_period_ends_at,omitempty" jsonschema:"description=Grace Period Ends At,format=date-time"`
	UfacRedirectUri    string    `json:"ufac_redirect_uri,omitempty" jsonschema:"description=Ufac Redirect Uri"`
	VerificationStatus string    `json:"verification_status,omitempty" jsonschema:"description=Verification Status"`
}

// AgeRange represents the Facebook AgeRange object
type AgeRange struct {
	Max uint `json:"max,omitempty" jsonschema:"description=Max"`
	Min uint `json:"min,omitempty" jsonschema:"description=Min"`
}

// AgencyClientDeclaration represents the Facebook AgencyClientDeclaration object
type AgencyClientDeclaration struct {
	AgencyRepresentingClient        uint   `json:"agency_representing_client,omitempty" jsonschema:"description=Agency Representing Client,minimum=13,maximum=100"`
	ClientBasedInFrance             uint   `json:"client_based_in_france,omitempty" jsonschema:"description=Client Based In France"`
	ClientCity                      string `json:"client_city,omitempty" jsonschema:"description=Client City"`
	ClientCountryCode               string `json:"client_country_code,omitempty" jsonschema:"description=Client Country Code"`
	ClientEmailAddress              string `json:"client_email_address,omitempty" jsonschema:"description=Client Email Address"`
	ClientName                      string `json:"client_name,omitempty" jsonschema:"description=Client Name"`
	ClientPostalCode                string `json:"client_postal_code,omitempty" jsonschema:"description=Client Postal Code"`
	ClientProvince                  string `json:"client_province,omitempty" jsonschema:"description=Client Province"`
	ClientStreet                    string `json:"client_street,omitempty" jsonschema:"description=Client Street"`
	ClientStreet2                   string `json:"client_street2,omitempty" jsonschema:"description=Client Street2"`
	HasWrittenMandateFromAdvertiser uint   `json:"has_written_mandate_from_advertiser,omitempty" jsonschema:"description=Has Written Mandate From Advertiser"`
	IsClientPayingInvoices          uint   `json:"is_client_paying_invoices,omitempty" jsonschema:"description=Is Client Paying Invoices"`
}

// Album represents the Facebook Album object
type Album struct {
	BackdatedTime            time.Time              `json:"backdated_time,omitempty" jsonschema:"description=Backdated Time,format=date-time"`
	BackdatedTimeGranularity string                 `json:"backdated_time_granularity,omitempty" jsonschema:"description=Backdated Time Granularity"`
	CanBackdate              bool                   `json:"can_backdate,omitempty" jsonschema:"description=Can Backdate"`
	CanUpload                bool                   `json:"can_upload,omitempty" jsonschema:"description=Can Upload"`
	Count                    uint                   `json:"count,omitempty" jsonschema:"description=Count"`
	CoverPhoto               *Photo                 `json:"cover_photo,omitempty" jsonschema:"description=Cover Photo"`
	CreatedTime              time.Time              `json:"created_time,omitempty" jsonschema:"description=When the Album was created,format=date-time"`
	Description              string                 `json:"description,omitempty" jsonschema:"description=Description"`
	EditLink                 string                 `json:"edit_link,omitempty" jsonschema:"description=Edit Link"`
	Event                    *Event                 `json:"event,omitempty" jsonschema:"description=Event"`
	From                     map[string]interface{} `json:"from,omitempty" jsonschema:"description=From"`
	ID                       string                 `json:"id,omitempty" jsonschema:"description=Album ID,required,pattern=^[0-9]+$"`
	IsUserFacing             bool                   `json:"is_user_facing,omitempty" jsonschema:"description=Is User Facing"`
	Link                     string                 `json:"link,omitempty" jsonschema:"description=Link"`
	Location                 string                 `json:"location,omitempty" jsonschema:"description=Location"`
	ModifiedMajor            time.Time              `json:"modified_major,omitempty" jsonschema:"description=Modified Major,format=date-time"`
	Name                     string                 `json:"name,omitempty" jsonschema:"description=Name of the Album,required"`
	PhotoCount               uint                   `json:"photo_count,omitempty" jsonschema:"description=Photo Count"`
	Place                    *Place                 `json:"place,omitempty" jsonschema:"description=Place"`
	Privacy                  string                 `json:"privacy,omitempty" jsonschema:"description=Privacy"`
	Type                     string                 `json:"type,omitempty" jsonschema:"description=Type"`
	UpdatedTime              time.Time              `json:"updated_time,omitempty" jsonschema:"description=When the Album was last updated,format=date-time"`
	VideoCount               uint                   `json:"video_count,omitempty" jsonschema:"description=Video Count"`
}

// AnalyticsConfig represents the Facebook AnalyticsConfig object
type AnalyticsConfig struct {
	AnalyticsAccessForAuthorizedAdAccount       bool                     `json:"analytics_access_for_authorized_ad_account,omitempty" jsonschema:"description=Analytics Access For Authorized Ad Account"`
	BreakdownsConfig                            []map[string]interface{} `json:"breakdowns_config,omitempty" jsonschema:"description=Breakdowns Config"`
	BuiltinFieldsConfig                         []map[string]interface{} `json:"builtin_fields_config,omitempty" jsonschema:"description=Builtin Fields Config"`
	DeprecatedEventsConfig                      []map[string]interface{} `json:"deprecated_events_config,omitempty" jsonschema:"description=Deprecated Events Config"`
	EventsConfig                                []map[string]interface{} `json:"events_config,omitempty" jsonschema:"description=Events Config"`
	IOSPurchaseValidationSecret                 string                   `json:"ios_purchase_validation_secret,omitempty" jsonschema:"description=Ios Purchase Validation Secret"`
	IsAnyRoleAbleToSeeRestrictedInsights        bool                     `json:"is_any_role_able_to_see_restricted_insights,omitempty" jsonschema:"description=Is Any Role Able To See Restricted Insights"`
	IsImplicitPurchaseLoggingOnAndroidSupported bool                     `json:"is_implicit_purchase_logging_on_android_supported,omitempty" jsonschema:"description=Is Implicit Purchase Logging On Android Supported"`
	IsImplicitPurchaseLoggingOnIOSSupported     bool                     `json:"is_implicit_purchase_logging_on_ios_supported,omitempty" jsonschema:"description=Is Implicit Purchase Logging On Ios Supported"`
	IsTrackIOSAppUninstallSupported             bool                     `json:"is_track_ios_app_uninstall_supported,omitempty" jsonschema:"description=Is Track Ios App Uninstall Supported"`
	JourneyBackfillStatus                       string                   `json:"journey_backfill_status,omitempty" jsonschema:"description=Journey Backfill Status"`
	JourneyConversionEvents                     []string                 `json:"journey_conversion_events,omitempty" jsonschema:"description=Journey Conversion Events"`
	JourneyEnabled                              bool                     `json:"journey_enabled,omitempty" jsonschema:"description=Journey Enabled"`
	JourneyImpactingChangeTime                  time.Time                `json:"journey_impacting_change_time,omitempty" jsonschema:"description=Journey Impacting Change Time,format=date-time"`
	JourneyTimeout                              string                   `json:"journey_timeout,omitempty" jsonschema:"description=Journey Timeout"`
	LatestSdkVersions                           map[string]string        `json:"latest_sdk_versions,omitempty" jsonschema:"description=Latest Sdk Versions"`
	LogAndroidImplicitPurchaseEvents            bool                     `json:"log_android_implicit_purchase_events,omitempty" jsonschema:"description=Log Android Implicit Purchase Events"`
	LogAutomaticAnalyticsEvents                 bool                     `json:"log_automatic_analytics_events,omitempty" jsonschema:"description=Log Automatic Analytics Events"`
	LogImplicitPurchaseEvents                   bool                     `json:"log_implicit_purchase_events,omitempty" jsonschema:"description=Log Implicit Purchase Events"`
	PrevJourneyConversionEvents                 []string                 `json:"prev_journey_conversion_events,omitempty" jsonschema:"description=Prev Journey Conversion Events"`
	QueryApproximationAccuracyLevel             string                   `json:"query_approximation_accuracy_level,omitempty" jsonschema:"description=Query Approximation Accuracy Level"`
	QueryCurrency                               string                   `json:"query_currency,omitempty" jsonschema:"description=Query Currency"`
	QueryTimezone                               string                   `json:"query_timezone,omitempty" jsonschema:"description=Query Timezone"`
	RecentEventsUpdateTime                      time.Time                `json:"recent_events_update_time,omitempty" jsonschema:"description=Recent Events Update Time,format=date-time"`
	SessionTimeoutInterval                      uint                     `json:"session_timeout_interval,omitempty" jsonschema:"description=Session Timeout Interval"`
	TrackIOSAppUninstall                        bool                     `json:"track_ios_app_uninstall,omitempty" jsonschema:"description=Track Ios App Uninstall"`
}

// AnalyticsEntityUserConfig represents the Facebook AnalyticsEntityUserConfig object
type AnalyticsEntityUserConfig struct {
	DismissedNotices []string `json:"dismissed_notices,omitempty" jsonschema:"description=Dismissed Notices"`
}

// AnalyticsFunnelQueryResult represents the Facebook AnalyticsFunnelQueryResult object
type AnalyticsFunnelQueryResult struct {
	QueryID string `json:"query_id,omitempty" jsonschema:"description=ID of the Query,pattern=^[0-9]+$"`
	Status  string `json:"status,omitempty" jsonschema:"description=Current status of the AnalyticsFunnelQueryResult,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// AnalyticsPlatformMetricsConfig represents the Facebook AnalyticsPlatformMetricsConfig object
type AnalyticsPlatformMetricsConfig struct {
	HasA2u                bool `json:"has_a2u,omitempty" jsonschema:"description=Has A2u"`
	HasAPICalls           bool `json:"has_api_calls,omitempty" jsonschema:"description=Has API Calls"`
	HasAppInvites         bool `json:"has_app_invites,omitempty" jsonschema:"description=Has App Invites"`
	HasFbLogin            bool `json:"has_fb_login,omitempty" jsonschema:"description=Has Fb Login"`
	HasGameRequests       bool `json:"has_game_requests,omitempty" jsonschema:"description=Has Game Requests"`
	HasPayments           bool `json:"has_payments,omitempty" jsonschema:"description=Has Payments"`
	HasReferrals          bool `json:"has_referrals,omitempty" jsonschema:"description=Has Referrals"`
	HasStories            bool `json:"has_stories,omitempty" jsonschema:"description=Has Stories"`
	HasStructuredRequests bool `json:"has_structured_requests,omitempty" jsonschema:"description=Has Structured Requests"`
}

// AnalyticsQueryResult represents the Facebook AnalyticsQueryResult object
type AnalyticsQueryResult struct {
	QueryID string `json:"query_id,omitempty" jsonschema:"description=ID of the Query,pattern=^[0-9]+$"`
	Status  string `json:"status,omitempty" jsonschema:"description=Current status of the AnalyticsQueryResult,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// AnalyticsSegment represents the Facebook AnalyticsSegment object
type AnalyticsSegment struct {
	CustomAudienceIneligiblityReasons []string                 `json:"custom_audience_ineligiblity_reasons,omitempty" jsonschema:"description=Custom Audience Ineligiblity Reasons"`
	Description                       string                   `json:"description,omitempty" jsonschema:"description=Description"`
	EstimatedCustomAudienceSize       uint                     `json:"estimated_custom_audience_size,omitempty" jsonschema:"description=Estimated Custom Audience Size"`
	EventInfoRules                    []map[string]interface{} `json:"event_info_rules,omitempty" jsonschema:"description=Event Info Rules"`
	EventRules                        []map[string]interface{} `json:"event_rules,omitempty" jsonschema:"description=Event Rules"`
	FilterSet                         string                   `json:"filter_set,omitempty" jsonschema:"description=Filter Set"`
	HasDemographicRules               bool                     `json:"has_demographic_rules,omitempty" jsonschema:"description=Has Demographic Rules"`
	ID                                string                   `json:"id,omitempty" jsonschema:"description=AnalyticsSegment ID,required,pattern=^[0-9]+$"`
	IsAllUser                         bool                     `json:"is_all_user,omitempty" jsonschema:"description=Is All User"`
	IsEligibleForPushCampaign         bool                     `json:"is_eligible_for_push_campaign,omitempty" jsonschema:"description=Is Eligible For Push Campaign"`
	IsInternal                        bool                     `json:"is_internal,omitempty" jsonschema:"description=Is Internal"`
	Name                              string                   `json:"name,omitempty" jsonschema:"description=Name of the AnalyticsSegment,required"`
	PercentileRules                   []map[string]interface{} `json:"percentile_rules,omitempty" jsonschema:"description=Percentile Rules"`
	TimeLastSeen                      uint                     `json:"time_last_seen,omitempty" jsonschema:"description=Time Last Seen"`
	TimeLastUpdated                   uint                     `json:"time_last_updated,omitempty" jsonschema:"description=When the AnalyticsSegment was last updated"`
	UserPropertyRules                 []map[string]interface{} `json:"user_property_rules,omitempty" jsonschema:"description=User Property Rules"`
	WebParamRules                     []map[string]interface{} `json:"web_param_rules,omitempty" jsonschema:"description=Web Param Rules"`
}

// AnalyticsUserConfig represents the Facebook AnalyticsUserConfig object
type AnalyticsUserConfig struct {
	DemoAppNuxConfig map[string]interface{} `json:"demo_app_nux_config,omitempty" jsonschema:"description=Demo App Nux Config"`
	Flags            []map[string]string    `json:"flags,omitempty" jsonschema:"description=Flags"`
	ID               string                 `json:"id,omitempty" jsonschema:"description=AnalyticsUserConfig ID,required,pattern=^[0-9]+$"`
}

// AndroidAppLink represents the Facebook AndroidAppLink object
type AndroidAppLink struct {
	AppName string `json:"app_name,omitempty" jsonschema:"description=App Name"`
	Class   string `json:"class,omitempty" jsonschema:"description=Class"`
	Package string `json:"package,omitempty" jsonschema:"description=Package"`
	URL     string `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
}

// ApacMonSellerStatusAPIContainer represents the Facebook ApacMonSellerStatusAPIContainer object
type ApacMonSellerStatusAPIContainer struct {
}

// AppEventConfig represents the Facebook AppEventConfig object
type AppEventConfig struct {
	BreakdownsConfig                            []map[string]interface{} `json:"breakdowns_config,omitempty" jsonschema:"description=Breakdowns Config"`
	BuiltinFieldsConfig                         []map[string]interface{} `json:"builtin_fields_config,omitempty" jsonschema:"description=Builtin Fields Config"`
	DeprecatedEventsConfig                      []map[string]interface{} `json:"deprecated_events_config,omitempty" jsonschema:"description=Deprecated Events Config"`
	EventsConfig                                []map[string]interface{} `json:"events_config,omitempty" jsonschema:"description=Events Config"`
	ID                                          string                   `json:"id,omitempty" jsonschema:"description=AppEventConfig ID,required,pattern=^[0-9]+$"`
	IOSPurchaseValidationSecret                 string                   `json:"ios_purchase_validation_secret,omitempty" jsonschema:"description=Ios Purchase Validation Secret"`
	IsAnyRoleAbleToSeeRestrictedInsights        bool                     `json:"is_any_role_able_to_see_restricted_insights,omitempty" jsonschema:"description=Is Any Role Able To See Restricted Insights"`
	IsImplicitPurchaseLoggingOnAndroidSupported bool                     `json:"is_implicit_purchase_logging_on_android_supported,omitempty" jsonschema:"description=Is Implicit Purchase Logging On Android Supported"`
	IsImplicitPurchaseLoggingOnIOSSupported     bool                     `json:"is_implicit_purchase_logging_on_ios_supported,omitempty" jsonschema:"description=Is Implicit Purchase Logging On Ios Supported"`
	IsTrackAndroidAppUninstallSupported         bool                     `json:"is_track_android_app_uninstall_supported,omitempty" jsonschema:"description=Is Track Android App Uninstall Supported"`
	IsTrackIOSAppUninstallSupported             bool                     `json:"is_track_ios_app_uninstall_supported,omitempty" jsonschema:"description=Is Track Ios App Uninstall Supported"`
	JourneyBackfillStatus                       string                   `json:"journey_backfill_status,omitempty" jsonschema:"description=Journey Backfill Status"`
	JourneyConversionEvents                     []string                 `json:"journey_conversion_events,omitempty" jsonschema:"description=Journey Conversion Events"`
	JourneyEnabled                              bool                     `json:"journey_enabled,omitempty" jsonschema:"description=Journey Enabled"`
	JourneyTimeout                              string                   `json:"journey_timeout,omitempty" jsonschema:"description=Journey Timeout"`
	LatestSdkVersions                           map[string]string        `json:"latest_sdk_versions,omitempty" jsonschema:"description=Latest Sdk Versions"`
	LogAndroidImplicitPurchaseEvents            bool                     `json:"log_android_implicit_purchase_events,omitempty" jsonschema:"description=Log Android Implicit Purchase Events"`
	LogAutomaticAnalyticsEvents                 bool                     `json:"log_automatic_analytics_events,omitempty" jsonschema:"description=Log Automatic Analytics Events"`
	LogImplicitPurchaseEvents                   bool                     `json:"log_implicit_purchase_events,omitempty" jsonschema:"description=Log Implicit Purchase Events"`
	PrevJourneyConversionEvents                 []string                 `json:"prev_journey_conversion_events,omitempty" jsonschema:"description=Prev Journey Conversion Events"`
	QueryApproximationAccuracyLevel             string                   `json:"query_approximation_accuracy_level,omitempty" jsonschema:"description=Query Approximation Accuracy Level"`
	QueryCurrency                               string                   `json:"query_currency,omitempty" jsonschema:"description=Query Currency"`
	QueryTimezone                               string                   `json:"query_timezone,omitempty" jsonschema:"description=Query Timezone"`
	RecentEventsUpdateTime                      time.Time                `json:"recent_events_update_time,omitempty" jsonschema:"description=Recent Events Update Time,format=date-time"`
	SessionTimeoutInterval                      uint                     `json:"session_timeout_interval,omitempty" jsonschema:"description=Session Timeout Interval"`
	TrackAndroidAppUninstall                    bool                     `json:"track_android_app_uninstall,omitempty" jsonschema:"description=Track Android App Uninstall"`
	TrackIOSAppUninstall                        bool                     `json:"track_ios_app_uninstall,omitempty" jsonschema:"description=Track Ios App Uninstall"`
}

// AppLinks represents the Facebook AppLinks object
type AppLinks struct {
	Android          []*AndroidAppLink      `json:"android,omitempty" jsonschema:"description=Android"`
	ID               string                 `json:"id,omitempty" jsonschema:"description=AppLinks ID,required,pattern=^[0-9]+$"`
	IOS              []*IosAppLink          `json:"ios,omitempty" jsonschema:"description=Ios"`
	Ipad             []*IosAppLink          `json:"ipad,omitempty" jsonschema:"description=Ipad"`
	Iphone           []*IosAppLink          `json:"iphone,omitempty" jsonschema:"description=Iphone"`
	Web              *WebAppLink            `json:"web,omitempty" jsonschema:"description=Web"`
	Windows          []*WindowsAppLink      `json:"windows,omitempty" jsonschema:"description=Windows"`
	WindowsPhone     []*WindowsPhoneAppLink `json:"windows_phone,omitempty" jsonschema:"description=Windows Phone"`
	WindowsUniversal []*WindowsAppLink      `json:"windows_universal,omitempty" jsonschema:"description=Windows Universal"`
}

// AppOptimizedCustomEvents represents the Facebook AppOptimizedCustomEvents object
type AppOptimizedCustomEvents struct {
	AppID      int      `json:"app_id,omitempty" jsonschema:"description=ID of the App,pattern=^[0-9]+$"`
	AppName    string   `json:"app_name,omitempty" jsonschema:"description=App Name"`
	EventNames []string `json:"event_names,omitempty" jsonschema:"description=Event Names"`
}

// AppPublisher represents the Facebook AppPublisher object
type AppPublisher struct {
	ContentID string `json:"content_id,omitempty" jsonschema:"description=ID of the Content,pattern=^[0-9]+$"`
	IconURL   string `json:"icon_url,omitempty" jsonschema:"description=Icon URL,format=uri"`
	ID        string `json:"id,omitempty" jsonschema:"description=AppPublisher ID,required,pattern=^[0-9]+$"`
	Name      string `json:"name,omitempty" jsonschema:"description=Name of the AppPublisher,required"`
	Platform  string `json:"platform,omitempty" jsonschema:"description=Platform"`
	StoreName string `json:"store_name,omitempty" jsonschema:"description=Store Name"`
	StoreURL  string `json:"store_url,omitempty" jsonschema:"description=Store URL,format=uri"`
}

// AppRequest represents the Facebook AppRequest object
type AppRequest struct {
	ActionType  string                 `json:"action_type,omitempty" jsonschema:"description=Action Type"`
	Application *Application           `json:"application,omitempty" jsonschema:"description=Application"`
	CreatedTime time.Time              `json:"created_time,omitempty" jsonschema:"description=When the AppRequest was created,format=date-time"`
	Data        string                 `json:"data,omitempty" jsonschema:"description=Data"`
	From        map[string]interface{} `json:"from,omitempty" jsonschema:"description=From"`
	ID          string                 `json:"id,omitempty" jsonschema:"description=AppRequest ID,required,pattern=^[0-9]+$"`
	Message     string                 `json:"message,omitempty" jsonschema:"description=Message"`
	Object      map[string]interface{} `json:"object,omitempty" jsonschema:"description=Object"`
	To          map[string]interface{} `json:"to,omitempty" jsonschema:"description=To"`
}

// AppRequestFormerRecipient represents the Facebook AppRequestFormerRecipient object
type AppRequestFormerRecipient struct {
	ID          string `json:"id,omitempty" jsonschema:"description=AppRequestFormerRecipient ID,required,pattern=^[0-9]+$"`
	RecipientID string `json:"recipient_id,omitempty" jsonschema:"description=ID of the Recipient,pattern=^[0-9]+$"`
}

// Application represents the Facebook Application object
type Application struct {
	AamRules                           string                          `json:"aam_rules,omitempty" jsonschema:"description=Aam Rules"`
	AnAdSpaceLimit                     uint                            `json:"an_ad_space_limit,omitempty" jsonschema:"description=An Ad Space Limit"`
	AnPlatforms                        []string                        `json:"an_platforms,omitempty" jsonschema:"description=An Platforms"`
	AndroidKeyHash                     []string                        `json:"android_key_hash,omitempty" jsonschema:"description=Android Key Hash"`
	AndroidSdkErrorCategories          []map[string]interface{}        `json:"android_sdk_error_categories,omitempty" jsonschema:"description=Android Sdk Error Categories"`
	AppDomains                         []string                        `json:"app_domains,omitempty" jsonschema:"description=App Domains"`
	AppEventsConfig                    map[string]interface{}          `json:"app_events_config,omitempty" jsonschema:"description=App Events Config"`
	AppEventsFeatureBitmask            uint                            `json:"app_events_feature_bitmask,omitempty" jsonschema:"description=App Events Feature Bitmask"`
	AppEventsSessionTimeout            uint                            `json:"app_events_session_timeout,omitempty" jsonschema:"description=App Events Session Timeout"`
	AppInstallTracked                  bool                            `json:"app_install_tracked,omitempty" jsonschema:"description=App Install Tracked"`
	AppName                            string                          `json:"app_name,omitempty" jsonschema:"description=App Name"`
	AppSignalsBindingIOS               []map[string]interface{}        `json:"app_signals_binding_ios,omitempty" jsonschema:"description=App Signals Binding Ios"`
	AppType                            uint                            `json:"app_type,omitempty" jsonschema:"description=App Type"`
	AuthDialogDataHelpURL              string                          `json:"auth_dialog_data_help_url,omitempty" jsonschema:"description=Auth Dialog Data Help URL,format=uri"`
	AuthDialogHeadline                 string                          `json:"auth_dialog_headline,omitempty" jsonschema:"description=Auth Dialog Headline"`
	AuthDialogPermsExplanation         string                          `json:"auth_dialog_perms_explanation,omitempty" jsonschema:"description=Auth Dialog Perms Explanation"`
	AuthReferralDefaultActivityPrivacy string                          `json:"auth_referral_default_activity_privacy,omitempty" jsonschema:"description=Auth Referral Default Activity Privacy"`
	AuthReferralEnabled                uint                            `json:"auth_referral_enabled,omitempty" jsonschema:"description=Auth Referral Enabled"`
	AuthReferralExtendedPerms          []string                        `json:"auth_referral_extended_perms,omitempty" jsonschema:"description=Auth Referral Extended Perms"`
	AuthReferralFriendPerms            []string                        `json:"auth_referral_friend_perms,omitempty" jsonschema:"description=Auth Referral Friend Perms"`
	AuthReferralResponseType           string                          `json:"auth_referral_response_type,omitempty" jsonschema:"description=Auth Referral Response Type"`
	AuthReferralUserPerms              []string                        `json:"auth_referral_user_perms,omitempty" jsonschema:"description=Auth Referral User Perms"`
	AutoEventMappingAndroid            []map[string]interface{}        `json:"auto_event_mapping_android,omitempty" jsonschema:"description=Auto Event Mapping Android"`
	AutoEventMappingIOS                []map[string]interface{}        `json:"auto_event_mapping_ios,omitempty" jsonschema:"description=Auto Event Mapping Ios"`
	AutoEventSetupEnabled              bool                            `json:"auto_event_setup_enabled,omitempty" jsonschema:"description=Auto Event Setup Enabled"`
	AutoLogAppEventsDefault            bool                            `json:"auto_log_app_events_default,omitempty" jsonschema:"description=Auto Log App Events Default"`
	AutoLogAppEventsEnabled            bool                            `json:"auto_log_app_events_enabled,omitempty" jsonschema:"description=Auto Log App Events Enabled"`
	Business                           *Business                       `json:"business,omitempty" jsonschema:"description=Business"`
	CanvasFluidHeight                  bool                            `json:"canvas_fluid_height,omitempty" jsonschema:"description=Canvas Fluid Height"`
	CanvasFluidWidth                   uint                            `json:"canvas_fluid_width,omitempty" jsonschema:"description=Canvas Fluid Width"`
	CanvasURL                          string                          `json:"canvas_url,omitempty" jsonschema:"description=Canvas URL,format=uri"`
	Category                           string                          `json:"category,omitempty" jsonschema:"description=Category"`
	ClientConfig                       map[string]interface{}          `json:"client_config,omitempty" jsonschema:"description=Client Config"`
	Company                            string                          `json:"company,omitempty" jsonschema:"description=Company"`
	ConfiguredIOSSso                   bool                            `json:"configured_ios_sso,omitempty" jsonschema:"description=Configured Ios Sso"`
	ContactEmail                       string                          `json:"contact_email,omitempty" jsonschema:"description=Contact Email"`
	CreatedTime                        time.Time                       `json:"created_time,omitempty" jsonschema:"description=When the Application was created,format=date-time"`
	CreatorUid                         string                          `json:"creator_uid,omitempty" jsonschema:"description=Creator Uid"`
	DailyActiveUsers                   string                          `json:"daily_active_users,omitempty" jsonschema:"description=Daily Active Users"`
	DailyActiveUsersRank               uint                            `json:"daily_active_users_rank,omitempty" jsonschema:"description=Daily Active Users Rank"`
	DeauthCallbackURL                  string                          `json:"deauth_callback_url,omitempty" jsonschema:"description=Deauth Callback URL,format=uri"`
	DefaultShareMode                   string                          `json:"default_share_mode,omitempty" jsonschema:"description=Default Share Mode"`
	Description                        string                          `json:"description,omitempty" jsonschema:"description=Description"`
	EnigmaConfig                       map[string]interface{}          `json:"enigma_config,omitempty" jsonschema:"description=Enigma Config"`
	FinancialID                        string                          `json:"financial_id,omitempty" jsonschema:"description=ID of the Financial,pattern=^[0-9]+$"`
	Gdpv4ChromeCustomTabsEnabled       bool                            `json:"gdpv4_chrome_custom_tabs_enabled,omitempty" jsonschema:"description=Gdpv4 Chrome Custom Tabs Enabled"`
	Gdpv4Enabled                       bool                            `json:"gdpv4_enabled,omitempty" jsonschema:"description=Gdpv4 Enabled"`
	Gdpv4NuxContent                    string                          `json:"gdpv4_nux_content,omitempty" jsonschema:"description=Gdpv4 Nux Content"`
	Gdpv4NuxEnabled                    bool                            `json:"gdpv4_nux_enabled,omitempty" jsonschema:"description=Gdpv4 Nux Enabled"`
	HasMessengerProduct                bool                            `json:"has_messenger_product,omitempty" jsonschema:"description=Has Messenger Product"`
	HostingURL                         string                          `json:"hosting_url,omitempty" jsonschema:"description=Hosting URL,format=uri"`
	IconURL                            string                          `json:"icon_url,omitempty" jsonschema:"description=Icon URL,format=uri"`
	ID                                 string                          `json:"id,omitempty" jsonschema:"description=Application ID,required,pattern=^[0-9]+$"`
	IOSBundleID                        []string                        `json:"ios_bundle_id,omitempty" jsonschema:"description=ID of the Ios Bundle,pattern=^[0-9]+$"`
	IOSSdkDialogFlows                  map[string]interface{}          `json:"ios_sdk_dialog_flows,omitempty" jsonschema:"description=Ios Sdk Dialog Flows"`
	IOSSdkErrorCategories              []map[string]interface{}        `json:"ios_sdk_error_categories,omitempty" jsonschema:"description=Ios Sdk Error Categories"`
	IOSSfvcAttr                        bool                            `json:"ios_sfvc_attr,omitempty" jsonschema:"description=Ios Sfvc Attr"`
	IOSSupportsNativeProxyAuthFlow     bool                            `json:"ios_supports_native_proxy_auth_flow,omitempty" jsonschema:"description=Ios Supports Native Proxy Auth Flow"`
	IOSSupportsSystemAuth              bool                            `json:"ios_supports_system_auth,omitempty" jsonschema:"description=Ios Supports System Auth"`
	IpadAppStoreID                     string                          `json:"ipad_app_store_id,omitempty" jsonschema:"description=ID of the Ipad App Store,pattern=^[0-9]+$"`
	IphoneAppStoreID                   string                          `json:"iphone_app_store_id,omitempty" jsonschema:"description=ID of the Iphone App Store,pattern=^[0-9]+$"`
	LatestSdkVersion                   map[string]interface{}          `json:"latest_sdk_version,omitempty" jsonschema:"description=Latest Sdk Version"`
	Link                               string                          `json:"link,omitempty" jsonschema:"description=Link"`
	LoggingToken                       string                          `json:"logging_token,omitempty" jsonschema:"description=Logging Token"`
	LogoURL                            string                          `json:"logo_url,omitempty" jsonschema:"description=Logo URL,format=uri"`
	Migrations                         map[string]bool                 `json:"migrations,omitempty" jsonschema:"description=Migrations"`
	MobileProfileSectionURL            string                          `json:"mobile_profile_section_url,omitempty" jsonschema:"description=Mobile Profile Section URL,format=uri"`
	MobileWebURL                       string                          `json:"mobile_web_url,omitempty" jsonschema:"description=Mobile Web URL,format=uri"`
	MonthlyActiveUsers                 string                          `json:"monthly_active_users,omitempty" jsonschema:"description=Monthly Active Users"`
	MonthlyActiveUsersRank             uint                            `json:"monthly_active_users_rank,omitempty" jsonschema:"description=Monthly Active Users Rank"`
	Name                               string                          `json:"name,omitempty" jsonschema:"description=Name of the Application,required"`
	Namespace                          string                          `json:"namespace,omitempty" jsonschema:"description=Namespace"`
	ObjectStoreURLs                    map[string]interface{}          `json:"object_store_urls,omitempty" jsonschema:"description=Object Store Urls,format=uri"`
	OwnerBusiness                      *Business                       `json:"owner_business,omitempty" jsonschema:"description=Owner Business"`
	PageTabDefaultName                 string                          `json:"page_tab_default_name,omitempty" jsonschema:"description=Page Tab Default Name"`
	PageTabURL                         string                          `json:"page_tab_url,omitempty" jsonschema:"description=Page Tab URL,format=uri"`
	PhotoURL                           string                          `json:"photo_url,omitempty" jsonschema:"description=Photo URL,format=uri"`
	PrivacyPolicyURL                   string                          `json:"privacy_policy_url,omitempty" jsonschema:"description=Privacy Policy URL,format=uri"`
	ProfileSectionURL                  string                          `json:"profile_section_url,omitempty" jsonschema:"description=Profile Section URL,format=uri"`
	PropertyID                         string                          `json:"property_id,omitempty" jsonschema:"description=ID of the Property,pattern=^[0-9]+$"`
	ProtectedModeRules                 map[string]interface{}          `json:"protected_mode_rules,omitempty" jsonschema:"description=Protected Mode Rules"`
	RealTimeModeDevices                []string                        `json:"real_time_mode_devices,omitempty" jsonschema:"description=Real Time Mode Devices"`
	Restrictions                       map[string]interface{}          `json:"restrictions,omitempty" jsonschema:"description=Restrictions"`
	RestrictiveDataFilterParams        string                          `json:"restrictive_data_filter_params,omitempty" jsonschema:"description=Restrictive Data Filter Params"`
	RestrictiveDataFilterRules         string                          `json:"restrictive_data_filter_rules,omitempty" jsonschema:"description=Restrictive Data Filter Rules"`
	SdkUpdateMessage                   string                          `json:"sdk_update_message,omitempty" jsonschema:"description=Sdk Update Message"`
	SeamlessLogin                      int                             `json:"seamless_login,omitempty" jsonschema:"description=Seamless Login"`
	SecureCanvasURL                    string                          `json:"secure_canvas_url,omitempty" jsonschema:"description=Secure Canvas URL,format=uri"`
	SecurePageTabURL                   string                          `json:"secure_page_tab_url,omitempty" jsonschema:"description=Secure Page Tab URL,format=uri"`
	ServerIpWhitelist                  string                          `json:"server_ip_whitelist,omitempty" jsonschema:"description=Server Ip Whitelist"`
	SmartLoginBookmarkIconURL          string                          `json:"smart_login_bookmark_icon_url,omitempty" jsonschema:"description=Smart Login Bookmark Icon URL,format=uri"`
	SmartLoginMenuIconURL              string                          `json:"smart_login_menu_icon_url,omitempty" jsonschema:"description=Smart Login Menu Icon URL,format=uri"`
	SocialDiscovery                    uint                            `json:"social_discovery,omitempty" jsonschema:"description=Social Discovery"`
	Subcategory                        string                          `json:"subcategory,omitempty" jsonschema:"description=Subcategory"`
	SuggestedEventsSetting             string                          `json:"suggested_events_setting,omitempty" jsonschema:"description=Suggested Events Setting"`
	SupportedPlatforms                 []ApplicationSupportedPlatforms `json:"supported_platforms,omitempty" jsonschema:"description=Supported Platforms"`
	SupportsApprequestsFastAppSwitch   map[string]interface{}          `json:"supports_apprequests_fast_app_switch,omitempty" jsonschema:"description=Supports Apprequests Fast App Switch"`
	SupportsAttribution                bool                            `json:"supports_attribution,omitempty" jsonschema:"description=Supports Attribution"`
	SupportsImplicitSdkLogging         bool                            `json:"supports_implicit_sdk_logging,omitempty" jsonschema:"description=Supports Implicit Sdk Logging"`
	SuppressNativeIOSGdp               bool                            `json:"suppress_native_ios_gdp,omitempty" jsonschema:"description=Suppress Native Ios Gdp"`
	TermsOfServiceURL                  string                          `json:"terms_of_service_url,omitempty" jsonschema:"description=Terms Of Service URL,format=uri"`
	URLSchemeSuffix                    string                          `json:"url_scheme_suffix,omitempty" jsonschema:"description=URL Scheme Suffix,format=uri"`
	UserSupportEmail                   string                          `json:"user_support_email,omitempty" jsonschema:"description=User Support Email"`
	UserSupportURL                     string                          `json:"user_support_url,omitempty" jsonschema:"description=User Support URL,format=uri"`
	WebsiteURL                         string                          `json:"website_url,omitempty" jsonschema:"description=Website URL,format=uri"`
	WeeklyActiveUsers                  string                          `json:"weekly_active_users,omitempty" jsonschema:"description=Weekly Active Users"`
}

// ArAdsDataContainer represents the Facebook ArAdsDataContainer object
type ArAdsDataContainer struct {
	CameraFacingOverride string                   `json:"camera_facing_override,omitempty" jsonschema:"description=Camera Facing Override"`
	CreationTime         time.Time                `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	Effect               []map[string]interface{} `json:"effect,omitempty" jsonschema:"description=Effect"`
	ID                   string                   `json:"id,omitempty" jsonschema:"description=ArAdsDataContainer ID,required,pattern=^[0-9]+$"`
	IsPublished          bool                     `json:"is_published,omitempty" jsonschema:"description=Is Published"`
	LastModifiedTime     time.Time                `json:"last_modified_time,omitempty" jsonschema:"description=Last Modified Time,format=date-time"`
	Name                 string                   `json:"name,omitempty" jsonschema:"description=Name of the ArAdsDataContainer,required"`
}

// AssignedUser represents the Facebook AssignedUser object
type AssignedUser struct {
	Business *Business `json:"business,omitempty" jsonschema:"description=Business"`
	ID       string    `json:"id,omitempty" jsonschema:"description=AssignedUser ID,required,pattern=^[0-9]+$"`
	Name     string    `json:"name,omitempty" jsonschema:"description=Name of the AssignedUser,required"`
	UserType string    `json:"user_type,omitempty" jsonschema:"description=User Type"`
}

// AsyncRequest represents the Facebook AsyncRequest object
type AsyncRequest struct {
	ID     int    `json:"id,omitempty" jsonschema:"description=AsyncRequest ID,required,pattern=^[0-9]+$"`
	Result string `json:"result,omitempty" jsonschema:"description=Result"`
	Status int    `json:"status,omitempty" jsonschema:"description=Current status of the AsyncRequest"`
	Type   int    `json:"type,omitempty" jsonschema:"description=Type"`
}

// AsyncSession represents the Facebook AsyncSession object
type AsyncSession struct {
	App              *Application `json:"app,omitempty" jsonschema:"description=App"`
	CompleteTime     time.Time    `json:"complete_time,omitempty" jsonschema:"description=Complete Time,format=date-time"`
	ErrorCode        int          `json:"error_code,omitempty" jsonschema:"description=Error Code"`
	Exception        string       `json:"exception,omitempty" jsonschema:"description=Exception"`
	ID               string       `json:"id,omitempty" jsonschema:"description=AsyncSession ID,required,pattern=^[0-9]+$"`
	Method           string       `json:"method,omitempty" jsonschema:"description=Method"`
	Name             string       `json:"name,omitempty" jsonschema:"description=Name of the AsyncSession,required"`
	Page             *Page        `json:"page,omitempty" jsonschema:"description=Page"`
	PercentCompleted int          `json:"percent_completed,omitempty" jsonschema:"description=Percent Completed"`
	PlatformVersion  string       `json:"platform_version,omitempty" jsonschema:"description=Platform Version"`
	Result           string       `json:"result,omitempty" jsonschema:"description=Result"`
	StartTime        time.Time    `json:"start_time,omitempty" jsonschema:"description=Start Time,format=date-time"`
	Status           string       `json:"status,omitempty" jsonschema:"description=Current status of the AsyncSession,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	Uri              string       `json:"uri,omitempty" jsonschema:"description=Uri"`
	User             *User        `json:"user,omitempty" jsonschema:"description=User"`
}

// AttributionSpec represents the Facebook AttributionSpec object
type AttributionSpec struct {
	EventType  string `json:"event_type,omitempty" jsonschema:"description=Event Type"`
	WindowDays int    `json:"window_days,omitempty" jsonschema:"description=Window Days"`
}

// AudienceFunnel represents the Facebook AudienceFunnel object
type AudienceFunnel struct {
	AudienceTypeParamName    string                `json:"audience_type_param_name,omitempty" jsonschema:"description=Audience Type Param Name"`
	AudienceTypeParamTags    []map[string]string   `json:"audience_type_param_tags,omitempty" jsonschema:"description=Audience Type Param Tags"`
	CustomAudienceGroupsInfo []map[string][]string `json:"custom_audience_groups_info,omitempty" jsonschema:"description=Custom Audience Groups Info"`
}

// AudienceOverlap represents the Facebook AudienceOverlap object
type AudienceOverlap struct {
	EstimatedReach int    `json:"estimated_reach,omitempty" jsonschema:"description=Estimated Reach"`
	ID             string `json:"id,omitempty" jsonschema:"description=AudienceOverlap ID,required,pattern=^[0-9]+$"`
	Name           string `json:"name,omitempty" jsonschema:"description=Name of the AudienceOverlap,required"`
	Overlap        int    `json:"overlap,omitempty" jsonschema:"description=Overlap"`
}

// AudiencePermission represents the Facebook AudiencePermission object
type AudiencePermission struct {
	Audience         *CustomAudience `json:"audience,omitempty" jsonschema:"description=Audience"`
	ShareAccountID   string          `json:"share_account_id,omitempty" jsonschema:"description=ID of the Share Account,pattern=^[0-9]+$"`
	ShareAccountName string          `json:"share_account_name,omitempty" jsonschema:"description=Share Account Name"`
}

// AudiencePermissionForActions represents the Facebook AudiencePermissionForActions object
type AudiencePermissionForActions struct {
	CanEdit                    bool `json:"can_edit,omitempty" jsonschema:"description=Can Edit"`
	CanSeeInsight              bool `json:"can_see_insight,omitempty" jsonschema:"description=Can See Insight"`
	CanShare                   bool `json:"can_share,omitempty" jsonschema:"description=Can Share"`
	SubtypeSupportsLookalike   bool `json:"subtype_supports_lookalike,omitempty" jsonschema:"description=Subtype Supports Lookalike"`
	SupportsRecipientLookalike bool `json:"supports_recipient_lookalike,omitempty" jsonschema:"description=Supports Recipient Lookalike"`
}

// AudienceSharingAccountValid represents the Facebook AudienceSharingAccountValid object
type AudienceSharingAccountValid struct {
	AccountID                         string `json:"account_id,omitempty" jsonschema:"description=ID of the Account,pattern=^[0-9]+$"`
	AccountType                       string `json:"account_type,omitempty" jsonschema:"description=Account Type"`
	BusinessID                        string `json:"business_id,omitempty" jsonschema:"description=ID of the Business,pattern=^[0-9]+$"`
	BusinessName                      string `json:"business_name,omitempty" jsonschema:"description=Business Name"`
	CanAdAccountUseLookalikeContainer bool   `json:"can_ad_account_use_lookalike_container,omitempty" jsonschema:"description=Can Ad Account Use Lookalike Container"`
	SharingAgreementStatus            int    `json:"sharing_agreement_status,omitempty" jsonschema:"description=Sharing Agreement Status"`
}

// AudienceSharingRecipientAccounts represents the Facebook AudienceSharingRecipientAccounts object
type AudienceSharingRecipientAccounts struct {
	AccountID                         string `json:"account_id,omitempty" jsonschema:"description=ID of the Account,pattern=^[0-9]+$"`
	AccountName                       string `json:"account_name,omitempty" jsonschema:"description=Account Name"`
	AccountType                       string `json:"account_type,omitempty" jsonschema:"description=Account Type"`
	BusinessID                        string `json:"business_id,omitempty" jsonschema:"description=ID of the Business,pattern=^[0-9]+$"`
	BusinessName                      string `json:"business_name,omitempty" jsonschema:"description=Business Name"`
	CanAdAccountUseLookalikeContainer bool   `json:"can_ad_account_use_lookalike_container,omitempty" jsonschema:"description=Can Ad Account Use Lookalike Container"`
	SharingAgreementStatus            int    `json:"sharing_agreement_status,omitempty" jsonschema:"description=Sharing Agreement Status"`
}

// AudioAsset represents the Facebook AudioAsset object
type AudioAsset struct {
	AllDdexFeaturedArtists   string    `json:"all_ddex_featured_artists,omitempty" jsonschema:"description=All Ddex Featured Artists"`
	AllDdexMainArtists       string    `json:"all_ddex_main_artists,omitempty" jsonschema:"description=All Ddex Main Artists"`
	AudioClusterID           string    `json:"audio_cluster_id,omitempty" jsonschema:"description=ID of the Audio Cluster,pattern=^[0-9]+$"`
	CoverImageSource         string    `json:"cover_image_source,omitempty" jsonschema:"description=Cover Image Source"`
	DisplayArtist            string    `json:"display_artist,omitempty" jsonschema:"description=Display Artist"`
	DownloadHdURL            string    `json:"download_hd_url,omitempty" jsonschema:"description=Download Hd URL,format=uri"`
	DownloadSdURL            string    `json:"download_sd_url,omitempty" jsonschema:"description=Download Sd URL,format=uri"`
	DurationInMs             int       `json:"duration_in_ms,omitempty" jsonschema:"description=Duration In Ms"`
	FreeformGenre            string    `json:"freeform_genre,omitempty" jsonschema:"description=Freeform Genre"`
	Grid                     string    `json:"grid,omitempty" jsonschema:"description=Grid"`
	ID                       string    `json:"id,omitempty" jsonschema:"description=AudioAsset ID,required,pattern=^[0-9]+$"`
	IsTest                   bool      `json:"is_test,omitempty" jsonschema:"description=Is Test"`
	OriginalReleaseDate      time.Time `json:"original_release_date,omitempty" jsonschema:"description=Original Release Date,format=date-time"`
	Owner                    *Page     `json:"owner,omitempty" jsonschema:"description=Owner"`
	ParentalWarningType      string    `json:"parental_warning_type,omitempty" jsonschema:"description=Parental Warning Type"`
	Subtitle                 string    `json:"subtitle,omitempty" jsonschema:"description=Subtitle"`
	Title                    string    `json:"title,omitempty" jsonschema:"description=Title"`
	TitleWithFeaturedArtists string    `json:"title_with_featured_artists,omitempty" jsonschema:"description=Title With Featured Artists"`
	Upc                      string    `json:"upc,omitempty" jsonschema:"description=Upc"`
}

// AudioCopyright represents the Facebook AudioCopyright object
type AudioCopyright struct {
	CreationTime          time.Time                           `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	DisplayedMatchesCount int                                 `json:"displayed_matches_count,omitempty" jsonschema:"description=Displayed Matches Count"`
	ID                    string                              `json:"id,omitempty" jsonschema:"description=AudioCopyright ID,required,pattern=^[0-9]+$"`
	InConflict            bool                                `json:"in_conflict,omitempty" jsonschema:"description=In Conflict"`
	Isrc                  string                              `json:"isrc,omitempty" jsonschema:"description=Isrc"`
	MatchRule             *VideoCopyrightRule                 `json:"match_rule,omitempty" jsonschema:"description=Match Rule"`
	OwnershipCountries    []string                            `json:"ownership_countries,omitempty" jsonschema:"description=Ownership Countries"`
	OwnershipDetails      []map[string]map[string]interface{} `json:"ownership_details,omitempty" jsonschema:"description=Ownership Details"`
	ReferenceFileStatus   string                              `json:"reference_file_status,omitempty" jsonschema:"description=Reference File Status"`
	RidgeMonitoringStatus string                              `json:"ridge_monitoring_status,omitempty" jsonschema:"description=Ridge Monitoring Status"`
	Tags                  []string                            `json:"tags,omitempty" jsonschema:"description=Tags"`
	UpdateTime            time.Time                           `json:"update_time,omitempty" jsonschema:"description=Update Time,format=date-time"`
	WhitelistedFbUsers    []map[string]interface{}            `json:"whitelisted_fb_users,omitempty" jsonschema:"description=Whitelisted Fb Users"`
	WhitelistedIgUsers    []string                            `json:"whitelisted_ig_users,omitempty" jsonschema:"description=Whitelisted Ig Users"`
}

// AudioIsrc represents the Facebook AudioIsrc object
type AudioIsrc struct {
	AllKgFeaturedArtists             string                 `json:"all_kg_featured_artists,omitempty" jsonschema:"description=All Kg Featured Artists"`
	AllKgMainArtists                 string                 `json:"all_kg_main_artists,omitempty" jsonschema:"description=All Kg Main Artists"`
	ArtistProfilePictureURL          string                 `json:"artist_profile_picture_url,omitempty" jsonschema:"description=Artist Profile Picture URL,format=uri"`
	ID                               string                 `json:"id,omitempty" jsonschema:"description=AudioIsrc ID,required,pattern=^[0-9]+$"`
	Isrc                             string                 `json:"isrc,omitempty" jsonschema:"description=Isrc"`
	PublishingRightsData             map[string]interface{} `json:"publishing_rights_data,omitempty" jsonschema:"description=Publishing Rights Data"`
	TopSearchableArtistID            string                 `json:"top_searchable_artist_id,omitempty" jsonschema:"description=ID of the Top Searchable Artist,pattern=^[0-9]+$"`
	TopSearchableArtistName          string                 `json:"top_searchable_artist_name,omitempty" jsonschema:"description=Top Searchable Artist Name"`
	TopSearchableArtistProfilePicURL string                 `json:"top_searchable_artist_profile_pic_url,omitempty" jsonschema:"description=Top Searchable Artist Profile Pic URL,format=uri"`
}

// AudioRelease represents the Facebook AudioRelease object
type AudioRelease struct {
	AlbumTitle              string                           `json:"album_title,omitempty" jsonschema:"description=Album Title"`
	AssetAvailabilityStatus []map[int]map[string]interface{} `json:"asset_availability_status,omitempty" jsonschema:"description=Asset Availability Status"`
	AudioAvailabilityStatus string                           `json:"audio_availability_status,omitempty" jsonschema:"description=Audio Availability Status"`
	AudioReleaseImageUri    string                           `json:"audio_release_image_uri,omitempty" jsonschema:"description=Audio Release Image Uri"`
	CreatedTime             time.Time                        `json:"created_time,omitempty" jsonschema:"description=When the AudioRelease was created,format=date-time"`
	DisplayedArtist         string                           `json:"displayed_artist,omitempty" jsonschema:"description=Displayed Artist"`
	Ean                     string                           `json:"ean,omitempty" jsonschema:"description=Ean"`
	Genre                   string                           `json:"genre,omitempty" jsonschema:"description=Genre"`
	Grid                    string                           `json:"grid,omitempty" jsonschema:"description=Grid"`
	ID                      string                           `json:"id,omitempty" jsonschema:"description=AudioRelease ID,required,pattern=^[0-9]+$"`
	Isrc                    string                           `json:"isrc,omitempty" jsonschema:"description=Isrc"`
	LabelName               string                           `json:"label_name,omitempty" jsonschema:"description=Label Name"`
	OriginalReleaseDate     time.Time                        `json:"original_release_date,omitempty" jsonschema:"description=Original Release Date,format=date-time"`
	ParentalWarningType     string                           `json:"parental_warning_type,omitempty" jsonschema:"description=Parental Warning Type"`
	ProprietaryID           string                           `json:"proprietary_id,omitempty" jsonschema:"description=ID of the Proprietary,pattern=^[0-9]+$"`
	Upc                     string                           `json:"upc,omitempty" jsonschema:"description=Upc"`
}

// AudioSubLabel represents the Facebook AudioSubLabel object
type AudioSubLabel struct {
	ExpirationTimestamp time.Time `json:"expiration_timestamp,omitempty" jsonschema:"description=Expiration Timestamp,format=date-time"`
	FlaggedTimestamp    time.Time `json:"flagged_timestamp,omitempty" jsonschema:"description=Flagged Timestamp,format=date-time"`
	ID                  string    `json:"id,omitempty" jsonschema:"description=AudioSubLabel ID,required,pattern=^[0-9]+$"`
	LabelName           string    `json:"label_name,omitempty" jsonschema:"description=Label Name"`
	LastUpdateTimestamp time.Time `json:"last_update_timestamp,omitempty" jsonschema:"description=Last Update Timestamp,format=date-time"`
	NumAudioTracks      int       `json:"num_audio_tracks,omitempty" jsonschema:"description=Num Audio Tracks"`
	State               string    `json:"state,omitempty" jsonschema:"description=State"`
}

// AudioVisualReferenceMatch represents the Facebook AudioVisualReferenceMatch object
type AudioVisualReferenceMatch struct {
	AudioConflictingSegments                 []map[string]interface{}              `json:"audio_conflicting_segments,omitempty" jsonschema:"description=Audio Conflicting Segments"`
	AudioCurrentConflictResolvedSegments     []map[string]interface{}              `json:"audio_current_conflict_resolved_segments,omitempty" jsonschema:"description=Audio Current Conflict Resolved Segments"`
	AudioSegmentResolutionHistory            []map[string]interface{}              `json:"audio_segment_resolution_history,omitempty" jsonschema:"description=Audio Segment Resolution History"`
	ConflictStatus                           string                                `json:"conflict_status,omitempty" jsonschema:"description=Conflict Status"`
	ConflictType                             string                                `json:"conflict_type,omitempty" jsonschema:"description=Conflict Type"`
	ConflictingCountries                     []string                              `json:"conflicting_countries,omitempty" jsonschema:"description=Conflicting Countries"`
	CountryResolutionHistory                 []map[string][]map[string]interface{} `json:"country_resolution_history,omitempty" jsonschema:"description=Country Resolution History"`
	CreationTime                             time.Time                             `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	CurrentConflictResolvedCountries         []map[string]map[string]interface{}   `json:"current_conflict_resolved_countries,omitempty" jsonschema:"description=Current Conflict Resolved Countries"`
	DisplayedMatchState                      string                                `json:"displayed_match_state,omitempty" jsonschema:"description=Displayed Match State"`
	DisputeFormDataEntriesWithTranslations   []map[string]interface{}              `json:"dispute_form_data_entries_with_translations,omitempty" jsonschema:"description=Dispute Form Data Entries With Translations"`
	ExpirationTime                           time.Time                             `json:"expiration_time,omitempty" jsonschema:"description=Expiration Time,format=date-time"`
	ID                                       string                                `json:"id,omitempty" jsonschema:"description=AudioVisualReferenceMatch ID,required,pattern=^[0-9]+$"`
	IsDisputable                             bool                                  `json:"is_disputable,omitempty" jsonschema:"description=Is Disputable"`
	MatchState                               string                                `json:"match_state,omitempty" jsonschema:"description=Match State"`
	MatchedOverlapPercentage                 float64                               `json:"matched_overlap_percentage,omitempty" jsonschema:"description=Matched Overlap Percentage"`
	MatchedOwnerMatchDurationInSec           float64                               `json:"matched_owner_match_duration_in_sec,omitempty" jsonschema:"description=Matched Owner Match Duration In Sec"`
	MatchedReferenceOwner                    *Profile                              `json:"matched_reference_owner,omitempty" jsonschema:"description=Matched Reference Owner"`
	ModificationHistory                      []map[string]interface{}              `json:"modification_history,omitempty" jsonschema:"description=Modification History"`
	NumMatchesOnMatchedSide                  uint                                  `json:"num_matches_on_matched_side,omitempty" jsonschema:"description=Num Matches On Matched Side"`
	NumMatchesOnRefSide                      uint                                  `json:"num_matches_on_ref_side,omitempty" jsonschema:"description=Num Matches On Ref Side"`
	RefOwnerMatchDurationInSec               float64                               `json:"ref_owner_match_duration_in_sec,omitempty" jsonschema:"description=Ref Owner Match Duration In Sec"`
	ReferenceOverlapPercentage               float64                               `json:"reference_overlap_percentage,omitempty" jsonschema:"description=Reference Overlap Percentage"`
	ReferenceOwner                           *Profile                              `json:"reference_owner,omitempty" jsonschema:"description=Reference Owner"`
	RejectionFormDataEntriesWithTranslations []map[string]interface{}              `json:"rejection_form_data_entries_with_translations,omitempty" jsonschema:"description=Rejection Form Data Entries With Translations"`
	ResolutionDetails                        string                                `json:"resolution_details,omitempty" jsonschema:"description=Resolution Details"`
	ResolutionReason                         string                                `json:"resolution_reason,omitempty" jsonschema:"description=Resolution Reason"`
	UpdateTime                               time.Time                             `json:"update_time,omitempty" jsonschema:"description=Update Time,format=date-time"`
	ViewsOnMatchedSide                       uint                                  `json:"views_on_matched_side,omitempty" jsonschema:"description=Views On Matched Side"`
	VisualConflictingSegments                []map[string]interface{}              `json:"visual_conflicting_segments,omitempty" jsonschema:"description=Visual Conflicting Segments"`
	VisualCurrentConflictResolvedSegments    []map[string]interface{}              `json:"visual_current_conflict_resolved_segments,omitempty" jsonschema:"description=Visual Current Conflict Resolved Segments"`
	VisualSegmentResolutionHistory           []map[string]interface{}              `json:"visual_segment_resolution_history,omitempty" jsonschema:"description=Visual Segment Resolution History"`
}

// AuthLink represents the Facebook AuthLink object
type AuthLink struct {
	Link string `json:"link,omitempty" jsonschema:"description=Link"`
}

// AutomotiveModel represents the Facebook AutomotiveModel object
type AutomotiveModel struct {
	Applinks               *CatalogItemAppLinks            `json:"applinks,omitempty" jsonschema:"description=Applinks"`
	AutomotiveModelID      string                          `json:"automotive_model_id,omitempty" jsonschema:"description=ID of the Automotive Model,pattern=^[0-9]+$"`
	Availability           string                          `json:"availability,omitempty" jsonschema:"description=Availability"`
	BodyStyle              string                          `json:"body_style,omitempty" jsonschema:"description=Body Style"`
	CategorySpecificFields *CatalogSubVerticalList         `json:"category_specific_fields,omitempty" jsonschema:"description=Category Specific Fields"`
	Currency               string                          `json:"currency,omitempty" jsonschema:"description=Currency"`
	CustomLabel0           string                          `json:"custom_label_0,omitempty" jsonschema:"description=Custom Label 0"`
	CustomLabel1           string                          `json:"custom_label_1,omitempty" jsonschema:"description=Custom Label 1"`
	CustomLabel2           string                          `json:"custom_label_2,omitempty" jsonschema:"description=Custom Label 2"`
	CustomLabel3           string                          `json:"custom_label_3,omitempty" jsonschema:"description=Custom Label 3"`
	CustomLabel4           string                          `json:"custom_label_4,omitempty" jsonschema:"description=Custom Label 4"`
	CustomNumber0          uint                            `json:"custom_number_0,omitempty" jsonschema:"description=Custom Number 0"`
	CustomNumber1          uint                            `json:"custom_number_1,omitempty" jsonschema:"description=Custom Number 1"`
	CustomNumber2          uint                            `json:"custom_number_2,omitempty" jsonschema:"description=Custom Number 2"`
	CustomNumber3          uint                            `json:"custom_number_3,omitempty" jsonschema:"description=Custom Number 3"`
	CustomNumber4          uint                            `json:"custom_number_4,omitempty" jsonschema:"description=Custom Number 4"`
	Description            string                          `json:"description,omitempty" jsonschema:"description=Description"`
	Drivetrain             string                          `json:"drivetrain,omitempty" jsonschema:"description=Drivetrain"`
	ExteriorColor          string                          `json:"exterior_color,omitempty" jsonschema:"description=Exterior Color"`
	FinanceDescription     string                          `json:"finance_description,omitempty" jsonschema:"description=Finance Description"`
	FinanceType            string                          `json:"finance_type,omitempty" jsonschema:"description=Finance Type"`
	FuelType               string                          `json:"fuel_type,omitempty" jsonschema:"description=Fuel Type"`
	Generation             string                          `json:"generation,omitempty" jsonschema:"description=Generation"`
	ID                     string                          `json:"id,omitempty" jsonschema:"description=AutomotiveModel ID,required,pattern=^[0-9]+$"`
	ImageFetchStatus       AutomotivemodelImageFetchStatus `json:"image_fetch_status,omitempty" jsonschema:"description=Image Fetch Status"`
	Images                 []string                        `json:"images,omitempty" jsonschema:"description=Images"`
	InteriorColor          string                          `json:"interior_color,omitempty" jsonschema:"description=Interior Color"`
	InteriorUpholstery     string                          `json:"interior_upholstery,omitempty" jsonschema:"description=Interior Upholstery"`
	Make                   string                          `json:"make,omitempty" jsonschema:"description=Make"`
	Model                  string                          `json:"model,omitempty" jsonschema:"description=Model"`
	Price                  string                          `json:"price,omitempty" jsonschema:"description=Price"`
	SanitizedImages        []string                        `json:"sanitized_images,omitempty" jsonschema:"description=Sanitized Images"`
	Title                  string                          `json:"title,omitempty" jsonschema:"description=Title"`
	Transmission           string                          `json:"transmission,omitempty" jsonschema:"description=Transmission"`
	Trim                   string                          `json:"trim,omitempty" jsonschema:"description=Trim"`
	UnitPrice              map[string]interface{}          `json:"unit_price,omitempty" jsonschema:"description=Unit Price"`
	URL                    string                          `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
	Visibility             AutomotivemodelVisibility       `json:"visibility,omitempty" jsonschema:"description=Visibility"`
	Year                   int                             `json:"year,omitempty" jsonschema:"description=Year"`
}

// Avatar represents the Facebook Avatar object
type Avatar struct {
	ID string `json:"id,omitempty" jsonschema:"description=Avatar ID,required,pattern=^[0-9]+$"`
}

// AvatarProfilePicture represents the Facebook AvatarProfilePicture object
type AvatarProfilePicture struct {
	ID  string `json:"id,omitempty" jsonschema:"description=AvatarProfilePicture ID,required,pattern=^[0-9]+$"`
	URL string `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
}

// BAPIDomain represents the Facebook BAPIDomain object
type BAPIDomain struct {
	Domain          string `json:"domain,omitempty" jsonschema:"description=Domain"`
	InCoolDownUntil int    `json:"in_cool_down_until,omitempty" jsonschema:"description=In Cool Down Until"`
	IsEligibleForVo bool   `json:"is_eligible_for_vo,omitempty" jsonschema:"description=Is Eligible For Vo"`
	IsInCoolDown    bool   `json:"is_in_cool_down,omitempty" jsonschema:"description=Is In Cool Down"`
}

// BCPCampaign represents the Facebook BCPCampaign object
type BCPCampaign struct {
	AdsPermissionRequired          bool              `json:"ads_permission_required,omitempty" jsonschema:"description=Ads Permission Required"`
	ApplicationDeadline            string            `json:"application_deadline,omitempty" jsonschema:"description=Application Deadline"`
	CampaignGoal                   string            `json:"campaign_goal,omitempty" jsonschema:"description=Campaign Goal"`
	CampaignGoalOther              string            `json:"campaign_goal_other,omitempty" jsonschema:"description=Campaign Goal Other"`
	ContentDeliveryDeadline        string            `json:"content_delivery_deadline,omitempty" jsonschema:"description=Content Delivery Deadline"`
	ContentDeliveryStartDate       string            `json:"content_delivery_start_date,omitempty" jsonschema:"description=Content Delivery Start Date"`
	ContentRequirements            []map[string]uint `json:"content_requirements,omitempty" jsonschema:"description=Content Requirements"`
	ContentRequirementsDescription string            `json:"content_requirements_description,omitempty" jsonschema:"description=Content Requirements Description"`
	Currency                       string            `json:"currency,omitempty" jsonschema:"description=Currency"`
	DealNegotiationType            string            `json:"deal_negotiation_type,omitempty" jsonschema:"description=Deal Negotiation Type"`
	Description                    string            `json:"description,omitempty" jsonschema:"description=Description"`
	HasFreeProduct                 bool              `json:"has_free_product,omitempty" jsonschema:"description=Has Free Product"`
	ID                             string            `json:"id,omitempty" jsonschema:"description=BCPCampaign ID,required,pattern=^[0-9]+$"`
	Name                           string            `json:"name,omitempty" jsonschema:"description=Name of the BCPCampaign,required"`
	PaymentAmountForAds            uint              `json:"payment_amount_for_ads,omitempty" jsonschema:"description=Payment Amount For Ads,minimum=1"`
	PaymentAmountForContent        uint              `json:"payment_amount_for_content,omitempty" jsonschema:"description=Payment Amount For Content,minimum=1"`
	PaymentDescription             string            `json:"payment_description,omitempty" jsonschema:"description=Payment Description"`
}

// BidSchedule represents the Facebook BidSchedule object
type BidSchedule struct {
	AdObjectID        string    `json:"ad_object_id,omitempty" jsonschema:"description=ID of the Ad Object,pattern=^[0-9]+$"`
	BidRecurrenceType string    `json:"bid_recurrence_type,omitempty" jsonschema:"description=Bid Recurrence Type"`
	BidTimezone       string    `json:"bid_timezone,omitempty" jsonschema:"description=Bid Timezone"`
	BidValue          int       `json:"bid_value,omitempty" jsonschema:"description=Bid Value"`
	ID                string    `json:"id,omitempty" jsonschema:"description=BidSchedule ID,required,pattern=^[0-9]+$"`
	Status            string    `json:"status,omitempty" jsonschema:"description=Current status of the BidSchedule,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	TimeEnd           time.Time `json:"time_end,omitempty" jsonschema:"description=Time End,format=date-time"`
	TimeStart         time.Time `json:"time_start,omitempty" jsonschema:"description=Time Start,format=date-time"`
}

// BizInboxOffsiteEmailAccount represents the Facebook BizInboxOffsiteEmailAccount object
type BizInboxOffsiteEmailAccount struct {
	EmailAddress string `json:"email_address,omitempty" jsonschema:"description=Email Address"`
	ID           string `json:"id,omitempty" jsonschema:"description=BizInboxOffsiteEmailAccount ID,required,pattern=^[0-9]+$"`
}

// BlindPig represents the Facebook BlindPig object
type BlindPig struct {
	ID   string `json:"id,omitempty" jsonschema:"description=BlindPig ID,required,pattern=^[0-9]+$"`
	Name string `json:"name,omitempty" jsonschema:"description=Name of the BlindPig,required"`
}

// BlockedUserInfo represents the Facebook BlockedUserInfo object
type BlockedUserInfo struct {
	BlockTime time.Time `json:"block_time,omitempty" jsonschema:"description=Block Time,format=date-time"`
	BlockType string    `json:"block_type,omitempty" jsonschema:"description=Block Type"`
	Fbid      string    `json:"fbid,omitempty" jsonschema:"description=Fbid"`
	Name      string    `json:"name,omitempty" jsonschema:"description=Name of the BlockedUserInfo,required"`
	Username  string    `json:"username,omitempty" jsonschema:"description=Username"`
}

// BrandRequest represents the Facebook BrandRequest object
type BrandRequest struct {
	AdCountries        []string                 `json:"ad_countries,omitempty" jsonschema:"description=Ad Countries"`
	AdditionalContacts []string                 `json:"additional_contacts,omitempty" jsonschema:"description=Additional Contacts"`
	ApprovalLevel      uint                     `json:"approval_level,omitempty" jsonschema:"description=Approval Level"`
	Cells              []map[string]interface{} `json:"cells,omitempty" jsonschema:"description=Cells"`
	Countries          []string                 `json:"countries,omitempty" jsonschema:"description=Countries"`
	DenyReason         string                   `json:"deny_reason,omitempty" jsonschema:"description=Deny Reason"`
	EndTime            time.Time                `json:"end_time,omitempty" jsonschema:"description=End Time,format=date-time"`
	EstimatedReach     uint                     `json:"estimated_reach,omitempty" jsonschema:"description=Estimated Reach"`
	ID                 string                   `json:"id,omitempty" jsonschema:"description=BrandRequest ID,required,pattern=^[0-9]+$"`
	IsMulticell        bool                     `json:"is_multicell,omitempty" jsonschema:"description=Is Multicell"`
	Locale             string                   `json:"locale,omitempty" jsonschema:"description=Locale"`
	MaxAge             uint                     `json:"max_age,omitempty" jsonschema:"description=Max Age,minimum=13,maximum=100"`
	MinAge             uint                     `json:"min_age,omitempty" jsonschema:"description=Min Age,minimum=13,maximum=100"`
	Questions          []map[string]interface{} `json:"questions,omitempty" jsonschema:"description=Questions"`
	Region             string                   `json:"region,omitempty" jsonschema:"description=Region"`
	RequestStatus      string                   `json:"request_status,omitempty" jsonschema:"description=Request Status"`
	ReviewDate         time.Time                `json:"review_date,omitempty" jsonschema:"description=Review Date,format=date-time"`
	StartTime          time.Time                `json:"start_time,omitempty" jsonschema:"description=Start Time,format=date-time"`
	Status             string                   `json:"status,omitempty" jsonschema:"description=Current status of the BrandRequest,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	SubmitDate         time.Time                `json:"submit_date,omitempty" jsonschema:"description=Submit Date,format=date-time"`
	TotalBudget        uint                     `json:"total_budget,omitempty" jsonschema:"description=Total Budget,minimum=1"`
}

// BrandSafetyBlockListUsage represents the Facebook BrandSafetyBlockListUsage object
type BrandSafetyBlockListUsage struct {
	CurrentUsage int    `json:"current_usage,omitempty" jsonschema:"description=Current Usage,minimum=13,maximum=100"`
	NewUsage     int    `json:"new_usage,omitempty" jsonschema:"description=New Usage,minimum=13,maximum=100"`
	Platform     string `json:"platform,omitempty" jsonschema:"description=Platform"`
	Position     string `json:"position,omitempty" jsonschema:"description=Position"`
	Threshold    int    `json:"threshold,omitempty" jsonschema:"description=Threshold"`
}

// BrandSafetyCampaignConfig represents the Facebook BrandSafetyCampaignConfig object
type BrandSafetyCampaignConfig struct {
	CommentModerationFilter string `json:"comment_moderation_filter,omitempty" jsonschema:"description=Comment Moderation Filter"`
}

// BrandSafetyDownloadable represents the Facebook BrandSafetyDownloadable object
type BrandSafetyDownloadable struct {
	AccountContextID        string `json:"account_context_id,omitempty" jsonschema:"description=ID of the Account Context,pattern=^[0-9]+$"`
	AsyncJobPercentComplete int    `json:"async_job_percent_complete,omitempty" jsonschema:"description=Async Job Percent Complete"`
	AsyncJobStatus          string `json:"async_job_status,omitempty" jsonschema:"description=Async Job Status"`
	FileName                string `json:"file_name,omitempty" jsonschema:"description=File Name"`
	ID                      string `json:"id,omitempty" jsonschema:"description=BrandSafetyDownloadable ID,required,pattern=^[0-9]+$"`
	RequestSurface          string `json:"request_surface,omitempty" jsonschema:"description=Request Surface"`
	URL                     string `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
}

// BrandedContentAdError represents the Facebook BrandedContentAdError object
type BrandedContentAdError struct {
	BlameFieldSpec   []string `json:"blame_field_spec,omitempty" jsonschema:"description=Blame Field Spec"`
	ErrorCode        int      `json:"error_code,omitempty" jsonschema:"description=Error Code"`
	ErrorDescription string   `json:"error_description,omitempty" jsonschema:"description=Error Description"`
	ErrorMessage     string   `json:"error_message,omitempty" jsonschema:"description=Error Message"`
	ErrorPlacement   string   `json:"error_placement,omitempty" jsonschema:"description=Error Placement"`
	ErrorSeverity    string   `json:"error_severity,omitempty" jsonschema:"description=Error Severity"`
	HelpCenterID     int      `json:"help_center_id,omitempty" jsonschema:"description=ID of the Help Center,pattern=^[0-9]+$"`
}

// BrandedContentEligibleSponsorIDs represents the Facebook BrandedContentEligibleSponsorIDs object
type BrandedContentEligibleSponsorIDs struct {
	FbPage           *Page   `json:"fb_page,omitempty" jsonschema:"description=Fb Page"`
	IgAccountV2      *IGUser `json:"ig_account_v2,omitempty" jsonschema:"description=Ig Account V2"`
	IgApprovalNeeded bool    `json:"ig_approval_needed,omitempty" jsonschema:"description=Ig Approval Needed"`
}

// BrandedContentShadowIGMediaID represents the Facebook BrandedContentShadowIGMediaID object
type BrandedContentShadowIGMediaID struct {
	EligibilityErrors             []string `json:"eligibility_errors,omitempty" jsonschema:"description=Eligibility Errors"`
	HasPermissionForPartnershipAd bool     `json:"has_permission_for_partnership_ad,omitempty" jsonschema:"description=Has Permission For Partnership Ad"`
	ID                            string   `json:"id,omitempty" jsonschema:"description=BrandedContentShadowIGMediaID ID,required,pattern=^[0-9]+$"`
	OwnerID                       string   `json:"owner_id,omitempty" jsonschema:"description=ID of the Owner,pattern=^[0-9]+$"`
	Permalink                     string   `json:"permalink,omitempty" jsonschema:"description=Permalink"`
	RecommendedCampaignObjectives []string `json:"recommended_campaign_objectives,omitempty" jsonschema:"description=Recommended Campaign Objectives"`
}

// BrandedContentShadowIGUserID represents the Facebook BrandedContentShadowIGUserID object
type BrandedContentShadowIGUserID struct {
	ID string `json:"id,omitempty" jsonschema:"description=BrandedContentShadowIGUserID ID,required,pattern=^[0-9]+$"`
}

// BroadTargetingCategories represents the Facebook BroadTargetingCategories object
type BroadTargetingCategories struct {
	CategoryDescription    string   `json:"category_description,omitempty" jsonschema:"description=Category Description"`
	ID                     string   `json:"id,omitempty" jsonschema:"description=BroadTargetingCategories ID,required,pattern=^[0-9]+$"`
	Name                   string   `json:"name,omitempty" jsonschema:"description=Name of the BroadTargetingCategories,required"`
	ParentCategory         string   `json:"parent_category,omitempty" jsonschema:"description=Parent Category"`
	Path                   []string `json:"path,omitempty" jsonschema:"description=Path"`
	SizeLowerBound         int      `json:"size_lower_bound,omitempty" jsonschema:"description=Size Lower Bound"`
	SizeUpperBound         int      `json:"size_upper_bound,omitempty" jsonschema:"description=Size Upper Bound"`
	Source                 string   `json:"source,omitempty" jsonschema:"description=Source"`
	Type                   int      `json:"type,omitempty" jsonschema:"description=Type"`
	TypeName               string   `json:"type_name,omitempty" jsonschema:"description=Type Name"`
	UntranslatedName       string   `json:"untranslated_name,omitempty" jsonschema:"description=Untranslated Name"`
	UntranslatedParentName string   `json:"untranslated_parent_name,omitempty" jsonschema:"description=Untranslated Parent Name"`
}

// Business represents the Facebook Business object
type Business struct {
	BlockOfflineAnalytics                      bool                               `json:"block_offline_analytics,omitempty" jsonschema:"description=Block Offline Analytics"`
	CollaborativeAdsManagedPartnerBusinessInfo *ManagedPartnerBusiness            `json:"collaborative_ads_managed_partner_business_info,omitempty" jsonschema:"description=Collaborative Ads Managed Partner Business Info"`
	CollaborativeAdsManagedPartnerEligibility  *BusinessManagedPartnerEligibility `json:"collaborative_ads_managed_partner_eligibility,omitempty" jsonschema:"description=Collaborative Ads Managed Partner Eligibility"`
	CollaborativeAdsPartnerPremiumOptions      *BusinessPartnerPremiumOptions     `json:"collaborative_ads_partner_premium_options,omitempty" jsonschema:"description=Collaborative Ads Partner Premium Options"`
	CreatedBy                                  map[string]interface{}             `json:"created_by,omitempty" jsonschema:"description=When the Business was created"`
	CreatedTime                                time.Time                          `json:"created_time,omitempty" jsonschema:"description=When the Business was created,format=date-time"`
	ExtendedUpdatedTime                        time.Time                          `json:"extended_updated_time,omitempty" jsonschema:"description=When the Business was last updated,format=date-time"`
	ID                                         string                             `json:"id,omitempty" jsonschema:"description=Business ID,required,pattern=^[0-9]+$"`
	IsHidden                                   bool                               `json:"is_hidden,omitempty" jsonschema:"description=Is Hidden"`
	Link                                       string                             `json:"link,omitempty" jsonschema:"description=Link"`
	Name                                       string                             `json:"name,omitempty" jsonschema:"description=Name of the Business,required"`
	PaymentAccountID                           string                             `json:"payment_account_id,omitempty" jsonschema:"description=ID of the Payment Account,pattern=^[0-9]+$"`
	PrimaryPage                                *Page                              `json:"primary_page,omitempty" jsonschema:"description=Primary Page"`
	ProfilePictureUri                          string                             `json:"profile_picture_uri,omitempty" jsonschema:"description=Profile Picture Uri"`
	TimezoneID                                 uint                               `json:"timezone_id,omitempty" jsonschema:"description=ID of the Timezone,pattern=^[0-9]+$"`
	TwoFactorType                              string                             `json:"two_factor_type,omitempty" jsonschema:"description=Two Factor Type"`
	UpdatedBy                                  map[string]interface{}             `json:"updated_by,omitempty" jsonschema:"description=When the Business was last updated"`
	UpdatedTime                                time.Time                          `json:"updated_time,omitempty" jsonschema:"description=When the Business was last updated,format=date-time"`
	UserAccessExpireTime                       time.Time                          `json:"user_access_expire_time,omitempty" jsonschema:"description=User Access Expire Time,format=date-time"`
	VerificationStatus                         BusinessVerificationStatus         `json:"verification_status,omitempty" jsonschema:"description=Verification Status"`
	Vertical                                   string                             `json:"vertical,omitempty" jsonschema:"description=Vertical"`
	VerticalID                                 uint                               `json:"vertical_id,omitempty" jsonschema:"description=ID of the Vertical,pattern=^[0-9]+$"`
}

// BusinessAdAccountRequest represents the Facebook BusinessAdAccountRequest object
type BusinessAdAccountRequest struct {
	AdAccount *AdAccount `json:"ad_account,omitempty" jsonschema:"description=Ad Account"`
	ID        string     `json:"id,omitempty" jsonschema:"description=BusinessAdAccountRequest ID,required,pattern=^[0-9]+$"`
}

// BusinessAdsReportingReportSpecs represents the Facebook BusinessAdsReportingReportSpecs object
type BusinessAdsReportingReportSpecs struct {
	ActionReportTime                     string                                `json:"action_report_time,omitempty" jsonschema:"description=Action Report Time"`
	AdAccountID                          string                                `json:"ad_account_id,omitempty" jsonschema:"description=ID of the Ad Account,pattern=^[0-9]+$"`
	AdAccountIDs                         []string                              `json:"ad_account_ids,omitempty" jsonschema:"description=Ad Account Ids,pattern=^[0-9]+$"`
	AdAccounts                           []map[string]interface{}              `json:"ad_accounts,omitempty" jsonschema:"description=Ad Accounts"`
	AttributionWindows                   []string                              `json:"attribution_windows,omitempty" jsonschema:"description=Attribution Windows"`
	Business                             *Business                             `json:"business,omitempty" jsonschema:"description=Business"`
	BusinessAssetGroup                   *BusinessAssetGroup                   `json:"business_asset_group,omitempty" jsonschema:"description=Business Asset Group"`
	ComparisonDateInterval               map[string]interface{}                `json:"comparison_date_interval,omitempty" jsonschema:"description=Comparison Date Interval"`
	CreationSource                       string                                `json:"creation_source,omitempty" jsonschema:"description=Creation Source"`
	CreationTime                         time.Time                             `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	Currency                             string                                `json:"currency,omitempty" jsonschema:"description=Currency"`
	DatePreset                           string                                `json:"date_preset,omitempty" jsonschema:"description=Date Preset"`
	DefaultAttributionWindows            []string                              `json:"default_attribution_windows,omitempty" jsonschema:"description=Default Attribution Windows"`
	Filtering                            []map[string]interface{}              `json:"filtering,omitempty" jsonschema:"description=Filtering"`
	Formatting                           []map[string][]map[string]interface{} `json:"formatting,omitempty" jsonschema:"description=Formatting"`
	ID                                   string                                `json:"id,omitempty" jsonschema:"description=BusinessAdsReportingReportSpecs ID,required,pattern=^[0-9]+$"`
	LastAccessBy                         *Profile                              `json:"last_access_by,omitempty" jsonschema:"description=Last Access By"`
	LastAccessTime                       time.Time                             `json:"last_access_time,omitempty" jsonschema:"description=Last Access Time,format=date-time"`
	LastReportSnapshotID                 string                                `json:"last_report_snapshot_id,omitempty" jsonschema:"description=ID of the Last Report Snapshot,pattern=^[0-9]+$"`
	LastReportSnapshotTime               time.Time                             `json:"last_report_snapshot_time,omitempty" jsonschema:"description=Last Report Snapshot Time,format=date-time"`
	LastSharedReportExpiration           time.Time                             `json:"last_shared_report_expiration,omitempty" jsonschema:"description=Last Shared Report Expiration,format=date-time"`
	Limit                                int                                   `json:"limit,omitempty" jsonschema:"description=Limit"`
	LockedDimensions                     int                                   `json:"locked_dimensions,omitempty" jsonschema:"description=Locked Dimensions"`
	ReportName                           string                                `json:"report_name,omitempty" jsonschema:"description=Report Name"`
	ReportSnapshotAsyncPercentCompletion int                                   `json:"report_snapshot_async_percent_completion,omitempty" jsonschema:"description=Report Snapshot Async Percent Completion"`
	ReportSnapshotAsyncStatus            string                                `json:"report_snapshot_async_status,omitempty" jsonschema:"description=Report Snapshot Async Status"`
	ScheduleFrequency                    string                                `json:"schedule_frequency,omitempty" jsonschema:"description=Schedule Frequency"`
	Scope                                string                                `json:"scope,omitempty" jsonschema:"description=Scope"`
	ShowDeprecateAwBanner                bool                                  `json:"show_deprecate_aw_banner,omitempty" jsonschema:"description=Show Deprecate Aw Banner"`
	Sorting                              []map[string]interface{}              `json:"sorting,omitempty" jsonschema:"description=Sorting"`
	StartDate                            string                                `json:"start_date,omitempty" jsonschema:"description=Start Date"`
	Status                               string                                `json:"status,omitempty" jsonschema:"description=Current status of the BusinessAdsReportingReportSpecs,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	Subscribers                          []string                              `json:"subscribers,omitempty" jsonschema:"description=Subscribers"`
	UpdateBy                             *Profile                              `json:"update_by,omitempty" jsonschema:"description=Update By"`
	UpdateTime                           time.Time                             `json:"update_time,omitempty" jsonschema:"description=Update Time,format=date-time"`
	User                                 *Profile                              `json:"user,omitempty" jsonschema:"description=User"`
	UserDimensions                       []string                              `json:"user_dimensions,omitempty" jsonschema:"description=User Dimensions"`
	UserMetrics                          []string                              `json:"user_metrics,omitempty" jsonschema:"description=User Metrics"`
	ViewType                             string                                `json:"view_type,omitempty" jsonschema:"description=View Type"`
}

// BusinessAdvertisableApplicationsResult represents the Facebook BusinessAdvertisableApplicationsResult object
type BusinessAdvertisableApplicationsResult struct {
	AreAppEventsUnavailable bool      `json:"are_app_events_unavailable,omitempty" jsonschema:"description=Are App Events Unavailable"`
	Business                *Business `json:"business,omitempty" jsonschema:"description=Business"`
	HasInsightPermission    bool      `json:"has_insight_permission,omitempty" jsonschema:"description=Has Insight Permission"`
	ID                      string    `json:"id,omitempty" jsonschema:"description=BusinessAdvertisableApplicationsResult ID,required,pattern=^[0-9]+$"`
	Name                    string    `json:"name,omitempty" jsonschema:"description=Name of the BusinessAdvertisableApplicationsResult,required"`
	PhotoURL                string    `json:"photo_url,omitempty" jsonschema:"description=Photo URL,format=uri"`
}

// BusinessAgreement represents the Facebook BusinessAgreement object
type BusinessAgreement struct {
	ID            string `json:"id,omitempty" jsonschema:"description=BusinessAgreement ID,required,pattern=^[0-9]+$"`
	RequestStatus string `json:"request_status,omitempty" jsonschema:"description=Request Status"`
}

// BusinessApplicationRequest represents the Facebook BusinessApplicationRequest object
type BusinessApplicationRequest struct {
	Application *Application `json:"application,omitempty" jsonschema:"description=Application"`
	ID          string       `json:"id,omitempty" jsonschema:"description=BusinessApplicationRequest ID,required,pattern=^[0-9]+$"`
}

// BusinessAssetGroup represents the Facebook BusinessAssetGroup object
type BusinessAssetGroup struct {
	ID            string    `json:"id,omitempty" jsonschema:"description=BusinessAssetGroup ID,required,pattern=^[0-9]+$"`
	Name          string    `json:"name,omitempty" jsonschema:"description=Name of the BusinessAssetGroup,required"`
	OwnerBusiness *Business `json:"owner_business,omitempty" jsonschema:"description=Owner Business"`
}

// BusinessAssetSharingAgreement represents the Facebook BusinessAssetSharingAgreement object
type BusinessAssetSharingAgreement struct {
	ID               string    `json:"id,omitempty" jsonschema:"description=BusinessAssetSharingAgreement ID,required,pattern=^[0-9]+$"`
	Initiator        *Business `json:"initiator,omitempty" jsonschema:"description=Initiator"`
	Recipient        *Business `json:"recipient,omitempty" jsonschema:"description=Recipient"`
	RelationshipType []string  `json:"relationship_type,omitempty" jsonschema:"description=Relationship Type"`
	RequestStatus    string    `json:"request_status,omitempty" jsonschema:"description=Request Status"`
	RequestType      string    `json:"request_type,omitempty" jsonschema:"description=Request Type"`
}

// BusinessCreative represents the Facebook BusinessCreative object
type BusinessCreative struct {
	CreationTime time.Time `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	Duration     int       `json:"duration,omitempty" jsonschema:"description=Duration"`
	Hash         string    `json:"hash,omitempty" jsonschema:"description=Hash"`
	Height       int       `json:"height,omitempty" jsonschema:"description=Height"`
	ID           string    `json:"id,omitempty" jsonschema:"description=BusinessCreative ID,required,pattern=^[0-9]+$"`
	Name         string    `json:"name,omitempty" jsonschema:"description=Name of the BusinessCreative,required"`
	Thumbnail    string    `json:"thumbnail,omitempty" jsonschema:"description=Thumbnail"`
	Type         string    `json:"type,omitempty" jsonschema:"description=Type"`
	URL          string    `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
	VideoID      string    `json:"video_id,omitempty" jsonschema:"description=ID of the Video,pattern=^[0-9]+$"`
	Width        int       `json:"width,omitempty" jsonschema:"description=Width"`
}

// BusinessCreativeFolder represents the Facebook BusinessCreativeFolder object
type BusinessCreativeFolder struct {
	Business                   *Business           `json:"business,omitempty" jsonschema:"description=Business"`
	CreationTime               time.Time           `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	CreativeInsightPermissions []map[string]string `json:"creative_insight_permissions,omitempty" jsonschema:"description=Creative Insight Permissions"`
	Description                string              `json:"description,omitempty" jsonschema:"description=Description"`
	ID                         string              `json:"id,omitempty" jsonschema:"description=BusinessCreativeFolder ID,required,pattern=^[0-9]+$"`
	MediaLibraryURL            string              `json:"media_library_url,omitempty" jsonschema:"description=Media Library URL,format=uri"`
	Name                       string              `json:"name,omitempty" jsonschema:"description=Name of the BusinessCreativeFolder,required"`
	OwnerBusiness              *Business           `json:"owner_business,omitempty" jsonschema:"description=Owner Business"`
}

// BusinessCreativeInsights represents the Facebook BusinessCreativeInsights object
type BusinessCreativeInsights struct {
	Actions                     []*AdsActionStats `json:"actions,omitempty" jsonschema:"description=Actions"`
	Age                         string            `json:"age,omitempty" jsonschema:"description=Age"`
	Country                     string            `json:"country,omitempty" jsonschema:"description=Country"`
	DateEnd                     string            `json:"date_end,omitempty" jsonschema:"description=Date End"`
	DateStart                   string            `json:"date_start,omitempty" jsonschema:"description=Date Start"`
	DevicePlatform              string            `json:"device_platform,omitempty" jsonschema:"description=Device Platform"`
	Gender                      string            `json:"gender,omitempty" jsonschema:"description=Gender"`
	Impressions                 int               `json:"impressions,omitempty" jsonschema:"description=Impressions"`
	InlineLinkClicks            int               `json:"inline_link_clicks,omitempty" jsonschema:"description=Inline Link Clicks"`
	Objective                   string            `json:"objective,omitempty" jsonschema:"description=Objective"`
	OptimizationGoal            string            `json:"optimization_goal,omitempty" jsonschema:"description=Optimization Goal"`
	PlatformPosition            string            `json:"platform_position,omitempty" jsonschema:"description=Platform Position"`
	PublisherPlatform           string            `json:"publisher_platform,omitempty" jsonschema:"description=Publisher Platform"`
	QualityRanking              string            `json:"quality_ranking,omitempty" jsonschema:"description=Quality Ranking"`
	VideoPlayActions            []*AdsActionStats `json:"video_play_actions,omitempty" jsonschema:"description=Video Play Actions"`
	VideoThruplayWatchedActions []*AdsActionStats `json:"video_thruplay_watched_actions,omitempty" jsonschema:"description=Video Thruplay Watched Actions"`
}

// BusinessFranchiseConfig represents the Facebook BusinessFranchiseConfig object
type BusinessFranchiseConfig struct {
	ActivePartnerCount        int                 `json:"active_partner_count,omitempty" jsonschema:"description=Active Partner Count"`
	AgencyBusiness            *Business           `json:"agency_business,omitempty" jsonschema:"description=Agency Business"`
	AgencyBusinessAssetGroup  *BusinessAssetGroup `json:"agency_business_asset_group,omitempty" jsonschema:"description=Agency Business Asset Group"`
	BrandName                 string              `json:"brand_name,omitempty" jsonschema:"description=Brand Name"`
	Business                  *Business           `json:"business,omitempty" jsonschema:"description=Business"`
	BusinessVertical          string              `json:"business_vertical,omitempty" jsonschema:"description=Business Vertical"`
	ID                        string              `json:"id,omitempty" jsonschema:"description=BusinessFranchiseConfig ID,required,pattern=^[0-9]+$"`
	PartnerCount              int                 `json:"partner_count,omitempty" jsonschema:"description=Partner Count"`
	PendingAgencyBusiness     string              `json:"pending_agency_business,omitempty" jsonschema:"description=Pending Agency Business"`
	ProgramCount              int                 `json:"program_count,omitempty" jsonschema:"description=Program Count"`
	SharedBusinessAssetGroup  *BusinessAssetGroup `json:"shared_business_asset_group,omitempty" jsonschema:"description=Shared Business Asset Group"`
	SharedCreativeFolderCount int                 `json:"shared_creative_folder_count,omitempty" jsonschema:"description=Shared Creative Folder Count"`
	SharedCustomAudienceCount int                 `json:"shared_custom_audience_count,omitempty" jsonschema:"description=Shared Custom Audience Count"`
}

// BusinessImage represents the Facebook BusinessImage object
type BusinessImage struct {
	Business        *Business `json:"business,omitempty" jsonschema:"description=Business"`
	CreationTime    time.Time `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	Hash            string    `json:"hash,omitempty" jsonschema:"description=Hash"`
	Height          int       `json:"height,omitempty" jsonschema:"description=Height"`
	ID              string    `json:"id,omitempty" jsonschema:"description=BusinessImage ID,required,pattern=^[0-9]+$"`
	MediaLibraryURL string    `json:"media_library_url,omitempty" jsonschema:"description=Media Library URL,format=uri"`
	Name            string    `json:"name,omitempty" jsonschema:"description=Name of the BusinessImage,required"`
	URL             string    `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
	URL128          string    `json:"url_128,omitempty" jsonschema:"description=URL 128,format=uri"`
	Width           int       `json:"width,omitempty" jsonschema:"description=Width"`
}

// BusinessImageTBusinessFolderPathItem represents the Facebook BusinessImageTBusinessFolderPathItem object
type BusinessImageTBusinessFolderPathItem struct {
	ID             string `json:"id,omitempty" jsonschema:"description=BusinessImageTBusinessFolderPathItem ID,required,pattern=^[0-9]+$"`
	ParentFolderID string `json:"parent_folder_id,omitempty" jsonschema:"description=ID of the Parent Folder,pattern=^[0-9]+$"`
	Type           string `json:"type,omitempty" jsonschema:"description=Type"`
}

// BusinessManagedPartnerEligibility represents the Facebook BusinessManagedPartnerEligibility object
type BusinessManagedPartnerEligibility struct {
	IsEligible        bool   `json:"is_eligible,omitempty" jsonschema:"description=Is Eligible"`
	ReasonCode        string `json:"reason_code,omitempty" jsonschema:"description=Reason Code"`
	ReasonDescription string `json:"reason_description,omitempty" jsonschema:"description=Reason Description"`
}

// BusinessMediaAdPlacementValidationResult represents the Facebook BusinessMediaAdPlacementValidationResult object
type BusinessMediaAdPlacementValidationResult struct {
	AdPlacement      string   `json:"ad_placement,omitempty" jsonschema:"description=Ad Placement"`
	AdPlacementLabel string   `json:"ad_placement_label,omitempty" jsonschema:"description=Ad Placement Label"`
	ErrorMessages    []string `json:"error_messages,omitempty" jsonschema:"description=Error Messages"`
	IsValid          bool     `json:"is_valid,omitempty" jsonschema:"description=Is Valid"`
}

// BusinessObject represents the Facebook BusinessObject object
type BusinessObject struct {
	Asset     map[string]interface{} `json:"asset,omitempty" jsonschema:"description=Asset"`
	AssetType string                 `json:"asset_type,omitempty" jsonschema:"description=Asset Type"`
	ID        string                 `json:"id,omitempty" jsonschema:"description=BusinessObject ID,required,pattern=^[0-9]+$"`
	Name      string                 `json:"name,omitempty" jsonschema:"description=Name of the BusinessObject,required"`
	Picture   string                 `json:"picture,omitempty" jsonschema:"description=Picture"`
}

// BusinessObjectTransferOwnershipAgreement represents the Facebook BusinessObjectTransferOwnershipAgreement object
type BusinessObjectTransferOwnershipAgreement struct {
	ID                 string    `json:"id,omitempty" jsonschema:"description=BusinessObjectTransferOwnershipAgreement ID,required,pattern=^[0-9]+$"`
	ReceivingBusiness  *Business `json:"receiving_business,omitempty" jsonschema:"description=Receiving Business"`
	RequestingBusiness *Business `json:"requesting_business,omitempty" jsonschema:"description=Requesting Business"`
	Status             string    `json:"status,omitempty" jsonschema:"description=Current status of the BusinessObjectTransferOwnershipAgreement,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// BusinessOwnedObjectOnBehalfOfRequest represents the Facebook BusinessOwnedObjectOnBehalfOfRequest object
type BusinessOwnedObjectOnBehalfOfRequest struct {
	BusinessOwnedObject string    `json:"business_owned_object,omitempty" jsonschema:"description=Business Owned Object"`
	ID                  string    `json:"id,omitempty" jsonschema:"description=BusinessOwnedObjectOnBehalfOfRequest ID,required,pattern=^[0-9]+$"`
	ReceivingBusiness   *Business `json:"receiving_business,omitempty" jsonschema:"description=Receiving Business"`
	RequestingBusiness  *Business `json:"requesting_business,omitempty" jsonschema:"description=Requesting Business"`
	Status              string    `json:"status,omitempty" jsonschema:"description=Current status of the BusinessOwnedObjectOnBehalfOfRequest,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// BusinessPageRequest represents the Facebook BusinessPageRequest object
type BusinessPageRequest struct {
	ID   string `json:"id,omitempty" jsonschema:"description=BusinessPageRequest ID,required,pattern=^[0-9]+$"`
	Page *Page  `json:"page,omitempty" jsonschema:"description=Page"`
}

// BusinessPartnerPremiumOptions represents the Facebook BusinessPartnerPremiumOptions object
type BusinessPartnerPremiumOptions struct {
	EnableBasketInsight               bool                   `json:"enable_basket_insight,omitempty" jsonschema:"description=Enable Basket Insight"`
	EnableExtendedAudienceRetargeting bool                   `json:"enable_extended_audience_retargeting,omitempty" jsonschema:"description=Enable Extended Audience Retargeting"`
	RetailerCustomAudienceConfig      map[string]interface{} `json:"retailer_custom_audience_config,omitempty" jsonschema:"description=Retailer Custom Audience Config"`
}

// BusinessProductCatalogTOS represents the Facebook BusinessProductCatalogTOS object
type BusinessProductCatalogTOS struct {
	Accepted bool   `json:"accepted,omitempty" jsonschema:"description=Accepted"`
	Content  string `json:"content,omitempty" jsonschema:"description=Content"`
}

// BusinessProject represents the Facebook BusinessProject object
type BusinessProject struct {
	Business    *Business              `json:"business,omitempty" jsonschema:"description=Business"`
	CreatedTime time.Time              `json:"created_time,omitempty" jsonschema:"description=When the BusinessProject was created,format=date-time"`
	Creator     map[string]interface{} `json:"creator,omitempty" jsonschema:"description=Creator"`
	ID          string                 `json:"id,omitempty" jsonschema:"description=BusinessProject ID,required,pattern=^[0-9]+$"`
	Name        string                 `json:"name,omitempty" jsonschema:"description=Name of the BusinessProject,required"`
}

// BusinessRequest represents the Facebook BusinessRequest object
type BusinessRequest struct {
	Accessor       *Business `json:"accessor,omitempty" jsonschema:"description=Accessor"`
	CreationTime   time.Time `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	ID             string    `json:"id,omitempty" jsonschema:"description=BusinessRequest ID,required,pattern=^[0-9]+$"`
	ObjectID       string    `json:"object_id,omitempty" jsonschema:"description=ID of the Object,pattern=^[0-9]+$"`
	ObjectType     string    `json:"object_type,omitempty" jsonschema:"description=Object Type"`
	PermittedTasks []string  `json:"permitted_tasks,omitempty" jsonschema:"description=Permitted Tasks"`
	RequestStatus  string    `json:"request_status,omitempty" jsonschema:"description=Request Status"`
	RequestType    string    `json:"request_type,omitempty" jsonschema:"description=Request Type"`
	Requestor      string    `json:"requestor,omitempty" jsonschema:"description=Requestor"`
}

// BusinessRoleRequest represents the Facebook BusinessRoleRequest object
type BusinessRoleRequest struct {
	CreatedBy       map[string]interface{} `json:"created_by,omitempty" jsonschema:"description=When the BusinessRoleRequest was created"`
	CreatedTime     time.Time              `json:"created_time,omitempty" jsonschema:"description=When the BusinessRoleRequest was created,format=date-time"`
	Email           string                 `json:"email,omitempty" jsonschema:"description=Email"`
	ExpirationTime  time.Time              `json:"expiration_time,omitempty" jsonschema:"description=Expiration Time,format=date-time"`
	ExpiryTime      time.Time              `json:"expiry_time,omitempty" jsonschema:"description=Expiry Time,format=date-time"`
	FinanceRole     string                 `json:"finance_role,omitempty" jsonschema:"description=Finance Role"`
	ID              string                 `json:"id,omitempty" jsonschema:"description=BusinessRoleRequest ID,required,pattern=^[0-9]+$"`
	InviteLink      string                 `json:"invite_link,omitempty" jsonschema:"description=Invite Link"`
	InvitedUserType []string               `json:"invited_user_type,omitempty" jsonschema:"description=Invited User Type"`
	IpRole          string                 `json:"ip_role,omitempty" jsonschema:"description=Ip Role"`
	Owner           *Business              `json:"owner,omitempty" jsonschema:"description=Owner"`
	Role            string                 `json:"role,omitempty" jsonschema:"description=Role"`
	Status          string                 `json:"status,omitempty" jsonschema:"description=Current status of the BusinessRoleRequest,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	Tasks           []string               `json:"tasks,omitempty" jsonschema:"description=Tasks"`
	UpdatedBy       map[string]interface{} `json:"updated_by,omitempty" jsonschema:"description=When the BusinessRoleRequest was last updated"`
	UpdatedTime     time.Time              `json:"updated_time,omitempty" jsonschema:"description=When the BusinessRoleRequest was last updated,format=date-time"`
}

// BusinessSettingLogsData represents the Facebook BusinessSettingLogsData object
type BusinessSettingLogsData struct {
	Actor       map[string]interface{} `json:"actor,omitempty" jsonschema:"description=Actor"`
	EventObject map[string]interface{} `json:"event_object,omitempty" jsonschema:"description=Event Object"`
	EventTime   string                 `json:"event_time,omitempty" jsonschema:"description=Event Time"`
	EventType   string                 `json:"event_type,omitempty" jsonschema:"description=Event Type"`
	ExtraData   map[string]interface{} `json:"extra_data,omitempty" jsonschema:"description=Extra Data"`
}

// BusinessTag represents the Facebook BusinessTag object
type BusinessTag struct {
	ID   string `json:"id,omitempty" jsonschema:"description=BusinessTag ID,required,pattern=^[0-9]+$"`
	Name string `json:"name,omitempty" jsonschema:"description=Name of the BusinessTag,required"`
}

// BusinessTrafficAnalysisReport represents the Facebook BusinessTrafficAnalysisReport object
type BusinessTrafficAnalysisReport struct {
	AudienceLocation           []map[string]interface{} `json:"audience_location,omitempty" jsonschema:"description=Audience Location"`
	EventCategory              []map[string]interface{} `json:"event_category,omitempty" jsonschema:"description=Event Category"`
	TrafficAnalysisImpressions []map[string]interface{} `json:"traffic_analysis_impressions,omitempty" jsonschema:"description=Traffic Analysis Impressions"`
}

// BusinessUser represents the Facebook BusinessUser object
type BusinessUser struct {
	Business            *Business            `json:"business,omitempty" jsonschema:"description=Business"`
	BusinessRoleRequest *BusinessRoleRequest `json:"business_role_request,omitempty" jsonschema:"description=Business Role Request"`
	Email               string               `json:"email,omitempty" jsonschema:"description=Email"`
	FinancePermission   string               `json:"finance_permission,omitempty" jsonschema:"description=Finance Permission"`
	FirstName           string               `json:"first_name,omitempty" jsonschema:"description=First Name"`
	ID                  string               `json:"id,omitempty" jsonschema:"description=BusinessUser ID,required,pattern=^[0-9]+$"`
	IpPermission        string               `json:"ip_permission,omitempty" jsonschema:"description=Ip Permission"`
	LastName            string               `json:"last_name,omitempty" jsonschema:"description=Last Name"`
	MarkedForRemoval    bool                 `json:"marked_for_removal,omitempty" jsonschema:"description=Marked For Removal"`
	Name                string               `json:"name,omitempty" jsonschema:"description=Name of the BusinessUser,required"`
	PendingEmail        string               `json:"pending_email,omitempty" jsonschema:"description=Pending Email"`
	Role                string               `json:"role,omitempty" jsonschema:"description=Role"`
	Tasks               []string             `json:"tasks,omitempty" jsonschema:"description=Tasks"`
	Title               string               `json:"title,omitempty" jsonschema:"description=Title"`
	TwoFacStatus        string               `json:"two_fac_status,omitempty" jsonschema:"description=Two Fac Status"`
}

// BusinessVideo represents the Facebook BusinessVideo object
type BusinessVideo struct {
	Business        *Business `json:"business,omitempty" jsonschema:"description=Business"`
	ID              string    `json:"id,omitempty" jsonschema:"description=BusinessVideo ID,required,pattern=^[0-9]+$"`
	MediaLibraryURL string    `json:"media_library_url,omitempty" jsonschema:"description=Media Library URL,format=uri"`
	Name            string    `json:"name,omitempty" jsonschema:"description=Name of the BusinessVideo,required"`
	Video           *AdVideo  `json:"video,omitempty" jsonschema:"description=Video"`
}

// BusinessVideoTBusinessFolderPathItem represents the Facebook BusinessVideoTBusinessFolderPathItem object
type BusinessVideoTBusinessFolderPathItem struct {
	ID             string `json:"id,omitempty" jsonschema:"description=BusinessVideoTBusinessFolderPathItem ID,required,pattern=^[0-9]+$"`
	ParentFolderID string `json:"parent_folder_id,omitempty" jsonschema:"description=ID of the Parent Folder,pattern=^[0-9]+$"`
	Type           string `json:"type,omitempty" jsonschema:"description=Type"`
}

// CASSSetupOfflineEventSetProgress represents the Facebook CASSSetupOfflineEventSetProgress object
type CASSSetupOfflineEventSetProgress struct {
}

// CPASAdCreationTemplate represents the Facebook CPASAdCreationTemplate object
type CPASAdCreationTemplate struct {
	Description      string `json:"description,omitempty" jsonschema:"description=Description"`
	ID               string `json:"id,omitempty" jsonschema:"description=CPASAdCreationTemplate ID,required,pattern=^[0-9]+$"`
	IsUnusedTemplate bool   `json:"is_unused_template,omitempty" jsonschema:"description=Is Unused Template"`
	Name             string `json:"name,omitempty" jsonschema:"description=Name of the CPASAdCreationTemplate,required"`
	OptimizationGoal string `json:"optimization_goal,omitempty" jsonschema:"description=Optimization Goal"`
	TargetingType    string `json:"targeting_type,omitempty" jsonschema:"description=Targeting Type"`
	TemplateType     string `json:"template_type,omitempty" jsonschema:"description=Template Type"`
}

// CPASAdvertiserPartnershipRecommendation represents the Facebook CPASAdvertiserPartnershipRecommendation object
type CPASAdvertiserPartnershipRecommendation struct {
	AdvertiserBusinessID string   `json:"advertiser_business_id,omitempty" jsonschema:"description=ID of the Advertiser Business,pattern=^[0-9]+$"`
	BrandBusinessID      string   `json:"brand_business_id,omitempty" jsonschema:"description=ID of the Brand Business,pattern=^[0-9]+$"`
	Brands               []string `json:"brands,omitempty" jsonschema:"description=Brands"`
	Countries            []string `json:"countries,omitempty" jsonschema:"description=Countries"`
	ID                   string   `json:"id,omitempty" jsonschema:"description=CPASAdvertiserPartnershipRecommendation ID,required,pattern=^[0-9]+$"`
	MerchantBusinessID   string   `json:"merchant_business_id,omitempty" jsonschema:"description=ID of the Merchant Business,pattern=^[0-9]+$"`
	MerchantCategories   []string `json:"merchant_categories,omitempty" jsonschema:"description=Merchant Categories"`
	Status               string   `json:"status,omitempty" jsonschema:"description=Current status of the CPASAdvertiserPartnershipRecommendation,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	StatusReason         string   `json:"status_reason,omitempty" jsonschema:"description=Status Reason"`
}

// CPASBusinessSetupConfig represents the Facebook CPASBusinessSetupConfig object
type CPASBusinessSetupConfig struct {
	AcceptedCollabAdsTos         bool                                `json:"accepted_collab_ads_tos,omitempty" jsonschema:"description=Accepted Collab Ads Tos"`
	Business                     *Business                           `json:"business,omitempty" jsonschema:"description=Business"`
	BusinessCapabilitiesStatus   []map[string]string                 `json:"business_capabilities_status,omitempty" jsonschema:"description=Business Capabilities Status"`
	CapabilitiesComplianceStatus []map[string]map[string]interface{} `json:"capabilities_compliance_status,omitempty" jsonschema:"description=Capabilities Compliance Status"`
	ID                           string                              `json:"id,omitempty" jsonschema:"description=CPASBusinessSetupConfig ID,required,pattern=^[0-9]+$"`
}

// CPASCollaborationRequest represents the Facebook CPASCollaborationRequest object
type CPASCollaborationRequest struct {
	Brands                 []string  `json:"brands,omitempty" jsonschema:"description=Brands"`
	ContactEmail           string    `json:"contact_email,omitempty" jsonschema:"description=Contact Email"`
	ContactFirstName       string    `json:"contact_first_name,omitempty" jsonschema:"description=Contact First Name"`
	ContactLastName        string    `json:"contact_last_name,omitempty" jsonschema:"description=Contact Last Name"`
	ID                     string    `json:"id,omitempty" jsonschema:"description=CPASCollaborationRequest ID,required,pattern=^[0-9]+$"`
	PhoneNumber            string    `json:"phone_number,omitempty" jsonschema:"description=Phone Number"`
	ReceiverBusiness       *Business `json:"receiver_business,omitempty" jsonschema:"description=Receiver Business"`
	RequesterAgencyOrBrand string    `json:"requester_agency_or_brand,omitempty" jsonschema:"description=Requester Agency Or Brand"`
	SenderClientBusiness   *Business `json:"sender_client_business,omitempty" jsonschema:"description=Sender Client Business"`
	Status                 string    `json:"status,omitempty" jsonschema:"description=Current status of the CPASCollaborationRequest,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// CPASLsbImageBank represents the Facebook CPASLsbImageBank object
type CPASLsbImageBank struct {
	AdGroupID             string `json:"ad_group_id,omitempty" jsonschema:"description=ID of the Ad Group,pattern=^[0-9]+$"`
	CatalogSegmentProxyID string `json:"catalog_segment_proxy_id,omitempty" jsonschema:"description=ID of the Catalog Segment Proxy,pattern=^[0-9]+$"`
	ID                    string `json:"id,omitempty" jsonschema:"description=CPASLsbImageBank ID,required,pattern=^[0-9]+$"`
}

// CPASMerchantConfig represents the Facebook CPASMerchantConfig object
type CPASMerchantConfig struct {
	AcceptedTos              bool                                `json:"accepted_tos,omitempty" jsonschema:"description=Accepted Tos"`
	BetaFeatures             []string                            `json:"beta_features,omitempty" jsonschema:"description=Beta Features"`
	BusinessOutcomesStatus   []map[string]string                 `json:"business_outcomes_status,omitempty" jsonschema:"description=Business Outcomes Status"`
	ID                       string                              `json:"id,omitempty" jsonschema:"description=CPASMerchantConfig ID,required,pattern=^[0-9]+$"`
	IsTestMerchant           bool                                `json:"is_test_merchant,omitempty" jsonschema:"description=Is Test Merchant"`
	OutcomesComplianceStatus []map[string]map[string]interface{} `json:"outcomes_compliance_status,omitempty" jsonschema:"description=Outcomes Compliance Status"`
	QualifiedToOnboard       bool                                `json:"qualified_to_onboard,omitempty" jsonschema:"description=Qualified To Onboard"`
}

// CPASParentCatalogSettings represents the Facebook CPASParentCatalogSettings object
type CPASParentCatalogSettings struct {
	AttributionWindows        []string `json:"attribution_windows,omitempty" jsonschema:"description=Attribution Windows"`
	DefaultCurrency           string   `json:"default_currency,omitempty" jsonschema:"description=Default Currency"`
	DisableUseAsParentCatalog bool     `json:"disable_use_as_parent_catalog,omitempty" jsonschema:"description=Disable Use As Parent Catalog"`
	ID                        string   `json:"id,omitempty" jsonschema:"description=CPASParentCatalogSettings ID,required,pattern=^[0-9]+$"`
}

// CPASSetup represents the Facebook CPASSetup object
type CPASSetup struct {
}

// CPASSetupPageStructureProgress represents the Facebook CPASSetupPageStructureProgress object
type CPASSetupPageStructureProgress struct {
	ID     string                   `json:"id,omitempty" jsonschema:"description=CPASSetupPageStructureProgress ID,required,pattern=^[0-9]+$"`
	Issues []map[string]interface{} `json:"issues,omitempty" jsonschema:"description=Issues"`
	Name   string                   `json:"name,omitempty" jsonschema:"description=Name of the CPASSetupPageStructureProgress,required"`
}

// CRMAddress represents the Facebook CRMAddress object
type CRMAddress struct {
	City               string `json:"city,omitempty" jsonschema:"description=City"`
	CnpjTaxID          string `json:"cnpj_tax_id,omitempty" jsonschema:"description=ID of the Cnpj Tax,pattern=^[0-9]+$"`
	Country            string `json:"country,omitempty" jsonschema:"description=Country"`
	ID                 string `json:"id,omitempty" jsonschema:"description=CRMAddress ID,required,pattern=^[0-9]+$"`
	PostalCode         string `json:"postal_code,omitempty" jsonschema:"description=Postal Code"`
	RegistrationLabel  string `json:"registration_label,omitempty" jsonschema:"description=Registration Label"`
	RegistrationNumber string `json:"registration_number,omitempty" jsonschema:"description=Registration Number"`
	State              string `json:"state,omitempty" jsonschema:"description=State"`
	Street1            string `json:"street1,omitempty" jsonschema:"description=Street1"`
	Street2            string `json:"street2,omitempty" jsonschema:"description=Street2"`
	Street3            string `json:"street3,omitempty" jsonschema:"description=Street3"`
	Street4            string `json:"street4,omitempty" jsonschema:"description=Street4"`
	ValidationStatus   string `json:"validation_status,omitempty" jsonschema:"description=Validation Status"`
	VatTaxID           string `json:"vat_tax_id,omitempty" jsonschema:"description=ID of the Vat Tax,pattern=^[0-9]+$"`
}

// CTWAWhatsAppNumbersInfo represents the Facebook CTWAWhatsAppNumbersInfo object
type CTWAWhatsAppNumbersInfo struct {
	CanManageWaFlows        bool   `json:"can_manage_wa_flows,omitempty" jsonschema:"description=Can Manage Wa Flows"`
	FormattedWhatsappNumber string `json:"formatted_whatsapp_number,omitempty" jsonschema:"description=Formatted Whatsapp Number"`
	IsBusinessNumber        bool   `json:"is_business_number,omitempty" jsonschema:"description=Is Business Number"`
	IsCallingEnabled        bool   `json:"is_calling_enabled,omitempty" jsonschema:"description=Is Calling Enabled"`
	NumberCountryPrefix     string `json:"number_country_prefix,omitempty" jsonschema:"description=Number Country Prefix"`
	PageWhatsappNumberID    string `json:"page_whatsapp_number_id,omitempty" jsonschema:"description=ID of the Page Whatsapp Number,pattern=^[0-9]+$"`
	WabaID                  string `json:"waba_id,omitempty" jsonschema:"description=ID of the Waba,pattern=^[0-9]+$"`
	WhatsappNumber          string `json:"whatsapp_number,omitempty" jsonschema:"description=Whatsapp Number"`
	WhatsappSmbDevice       string `json:"whatsapp_smb_device,omitempty" jsonschema:"description=Whatsapp Smb Device"`
}

// CTXDefaultOptimizationConfig represents the Facebook CTXDefaultOptimizationConfig object
type CTXDefaultOptimizationConfig struct {
	DestinationType  string `json:"destination_type,omitempty" jsonschema:"description=Destination Type"`
	Objective        string `json:"objective,omitempty" jsonschema:"description=Objective"`
	OptimizationGoal string `json:"optimization_goal,omitempty" jsonschema:"description=Optimization Goal"`
}

// CTXOptimizationEligibility represents the Facebook CTXOptimizationEligibility object
type CTXOptimizationEligibility struct {
	Ctm map[string]interface{} `json:"ctm,omitempty" jsonschema:"description=Ctm"`
}

// CTXPartnerAppWelcomeMessageFlow represents the Facebook CTXPartnerAppWelcomeMessageFlow object
type CTXPartnerAppWelcomeMessageFlow struct {
	CompatiblePlatforms    []string  `json:"compatible_platforms,omitempty" jsonschema:"description=Compatible Platforms"`
	EligiblePlatforms      []string  `json:"eligible_platforms,omitempty" jsonschema:"description=Eligible Platforms"`
	ID                     string    `json:"id,omitempty" jsonschema:"description=CTXPartnerAppWelcomeMessageFlow ID,required,pattern=^[0-9]+$"`
	IsIgOnlyFlow           bool      `json:"is_ig_only_flow,omitempty" jsonschema:"description=Is Ig Only Flow"`
	IsUsedInAd             bool      `json:"is_used_in_ad,omitempty" jsonschema:"description=Is Used In Ad"`
	LastUpdateTime         time.Time `json:"last_update_time,omitempty" jsonschema:"description=Last Update Time,format=date-time"`
	Name                   string    `json:"name,omitempty" jsonschema:"description=Name of the CTXPartnerAppWelcomeMessageFlow,required"`
	WelcomeMessageFlow     string    `json:"welcome_message_flow,omitempty" jsonschema:"description=Welcome Message Flow"`
	WelcomeMessageSequence string    `json:"welcome_message_sequence,omitempty" jsonschema:"description=Welcome Message Sequence"`
}

// CalibratorExistingRule represents the Facebook CalibratorExistingRule object
type CalibratorExistingRule struct {
	X7dVolume      int       `json:"7d_volume,omitempty" jsonschema:"description=7d Volume"`
	CreationSource string    `json:"creation_source,omitempty" jsonschema:"description=Creation Source"`
	CreationTime   time.Time `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	Creator        string    `json:"creator,omitempty" jsonschema:"description=Creator"`
	EventType      string    `json:"event_type,omitempty" jsonschema:"description=Event Type"`
	ID             string    `json:"id,omitempty" jsonschema:"description=CalibratorExistingRule ID,required,pattern=^[0-9]+$"`
	Rule           string    `json:"rule,omitempty" jsonschema:"description=Rule"`
	RuleType       string    `json:"rule_type,omitempty" jsonschema:"description=Rule Type"`
	SampleURLs     []string  `json:"sample_urls,omitempty" jsonschema:"description=Sample Urls,format=uri"`
	Status         string    `json:"status,omitempty" jsonschema:"description=Current status of the CalibratorExistingRule,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	Transforms     []string  `json:"transforms,omitempty" jsonschema:"description=Transforms"`
}

// CallAdsPhoneData represents the Facebook CallAdsPhoneData object
type CallAdsPhoneData struct {
	CallAdsPhoneDataUseCase string `json:"call_ads_phone_data_use_case,omitempty" jsonschema:"description=Call Ads Phone Data Use Case"`
	CallbackVariant         string `json:"callback_variant,omitempty" jsonschema:"description=Callback Variant"`
	DestinationWebsiteURL   string `json:"destination_website_url,omitempty" jsonschema:"description=Destination Website URL,format=uri"`
	ID                      string `json:"id,omitempty" jsonschema:"description=CallAdsPhoneData ID,required,pattern=^[0-9]+$"`
	Page                    *Page  `json:"page,omitempty" jsonschema:"description=Page"`
	PhoneNumber             string `json:"phone_number,omitempty" jsonschema:"description=Phone Number"`
}

// Campaign represents the Facebook Campaign object
type Campaign struct {
	AccountID                        string                         `json:"account_id,omitempty" jsonschema:"description=ID of the Account,pattern=^[0-9]+$"`
	Adlabels                         []*AdLabel                     `json:"adlabels,omitempty" jsonschema:"description=Adlabels"`
	AdvantageStateInfo               *AdCampaignGroupAdvantageState `json:"advantage_state_info,omitempty" jsonschema:"description=Advantage State Info"`
	BidStrategy                      CampaignBidStrategy            `json:"bid_strategy,omitempty" jsonschema:"description=Bid Strategy"`
	BoostedObjectID                  string                         `json:"boosted_object_id,omitempty" jsonschema:"description=ID of the Boosted Object,pattern=^[0-9]+$"`
	BrandLiftStudies                 []*AdStudy                     `json:"brand_lift_studies,omitempty" jsonschema:"description=Brand Lift Studies"`
	BudgetRebalanceFlag              bool                           `json:"budget_rebalance_flag,omitempty" jsonschema:"description=Budget Rebalance Flag"`
	BudgetRemaining                  string                         `json:"budget_remaining,omitempty" jsonschema:"description=Budget Remaining"`
	BuyingType                       string                         `json:"buying_type,omitempty" jsonschema:"description=Buying Type"`
	CampaignGroupActiveTime          string                         `json:"campaign_group_active_time,omitempty" jsonschema:"description=Campaign Group Active Time"`
	CanCreateBrandLiftStudy          bool                           `json:"can_create_brand_lift_study,omitempty" jsonschema:"description=Can Create Brand Lift Study"`
	CanUseSpendCap                   bool                           `json:"can_use_spend_cap,omitempty" jsonschema:"description=Can Use Spend Cap"`
	ConfiguredStatus                 CampaignConfiguredStatus       `json:"configured_status,omitempty" jsonschema:"description=Configured Status"`
	CreatedTime                      time.Time                      `json:"created_time,omitempty" jsonschema:"description=When the Campaign was created,format=date-time"`
	DailyBudget                      string                         `json:"daily_budget,omitempty" jsonschema:"description=Daily Budget"`
	EffectiveStatus                  CampaignEffectiveStatus        `json:"effective_status,omitempty" jsonschema:"description=Effective Status"`
	HasSecondarySkadnetworkReporting bool                           `json:"has_secondary_skadnetwork_reporting,omitempty" jsonschema:"description=Has Secondary Skadnetwork Reporting"`
	ID                               string                         `json:"id,omitempty" jsonschema:"description=Campaign ID,required,pattern=^[0-9]+$"`
	IsBudgetScheduleEnabled          bool                           `json:"is_budget_schedule_enabled,omitempty" jsonschema:"description=Is Budget Schedule Enabled"`
	IsSkadnetworkAttribution         bool                           `json:"is_skadnetwork_attribution,omitempty" jsonschema:"description=Is Skadnetwork Attribution"`
	IssuesInfo                       []*AdCampaignIssuesInfo        `json:"issues_info,omitempty" jsonschema:"description=Issues Info"`
	LastBudgetTogglingTime           time.Time                      `json:"last_budget_toggling_time,omitempty" jsonschema:"description=Last Budget Toggling Time,format=date-time"`
	LifetimeBudget                   string                         `json:"lifetime_budget,omitempty" jsonschema:"description=Lifetime Budget"`
	Name                             string                         `json:"name,omitempty" jsonschema:"description=Name of the Campaign,required"`
	Objective                        string                         `json:"objective,omitempty" jsonschema:"description=Objective,required"`
	PacingType                       []string                       `json:"pacing_type,omitempty" jsonschema:"description=Pacing Type"`
	PrimaryAttribution               string                         `json:"primary_attribution,omitempty" jsonschema:"description=Primary Attribution"`
	PromotedObject                   *AdPromotedObject              `json:"promoted_object,omitempty" jsonschema:"description=Promoted Object"`
	Recommendations                  []*AdRecommendation            `json:"recommendations,omitempty" jsonschema:"description=Recommendations"`
	SmartPromotionType               string                         `json:"smart_promotion_type,omitempty" jsonschema:"description=Smart Promotion Type"`
	SourceCampaign                   *Campaign                      `json:"source_campaign,omitempty" jsonschema:"description=Source Campaign"`
	SourceCampaignID                 string                         `json:"source_campaign_id,omitempty" jsonschema:"description=ID of the Source Campaign,pattern=^[0-9]+$"`
	SourceRecommendationType         string                         `json:"source_recommendation_type,omitempty" jsonschema:"description=Source Recommendation Type"`
	SpecialAdCategories              []string                       `json:"special_ad_categories,omitempty" jsonschema:"description=Special Ad Categories"`
	SpecialAdCategory                string                         `json:"special_ad_category,omitempty" jsonschema:"description=Special Ad Category"`
	SpecialAdCategoryCountry         []string                       `json:"special_ad_category_country,omitempty" jsonschema:"description=Special Ad Category Country"`
	SpendCap                         string                         `json:"spend_cap,omitempty" jsonschema:"description=Spend Cap"`
	StartTime                        time.Time                      `json:"start_time,omitempty" jsonschema:"description=Start Time,format=date-time"`
	Status                           CampaignStatus                 `json:"status,omitempty" jsonschema:"description=Current status of the Campaign,required,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	StopTime                         time.Time                      `json:"stop_time,omitempty" jsonschema:"description=Stop Time,format=date-time"`
	ToplineID                        string                         `json:"topline_id,omitempty" jsonschema:"description=ID of the Topline,pattern=^[0-9]+$"`
	UpdatedTime                      time.Time                      `json:"updated_time,omitempty" jsonschema:"description=When the Campaign was last updated,format=date-time"`
}

// CampaignActionsData represents the Facebook CampaignActionsData object
type CampaignActionsData struct {
}

// CampaignGroupBrandConfiguration represents the Facebook CampaignGroupBrandConfiguration object
type CampaignGroupBrandConfiguration struct {
	BrandProductName string `json:"brand_product_name,omitempty" jsonschema:"description=Brand Product Name"`
	Locale           string `json:"locale,omitempty" jsonschema:"description=Locale"`
	Vertical         string `json:"vertical,omitempty" jsonschema:"description=Vertical"`
}

// CampaignGroupCollaborativeAdsPartnerInfo represents the Facebook CampaignGroupCollaborativeAdsPartnerInfo object
type CampaignGroupCollaborativeAdsPartnerInfo struct {
}

// Canvas represents the Facebook Canvas object
type Canvas struct {
	BackgroundColor      string                       `json:"background_color,omitempty" jsonschema:"description=Background Color"`
	BodyElements         []map[string]interface{}     `json:"body_elements,omitempty" jsonschema:"description=Body Elements"`
	BusinessID           string                       `json:"business_id,omitempty" jsonschema:"description=ID of the Business,pattern=^[0-9]+$"`
	CanvasLink           string                       `json:"canvas_link,omitempty" jsonschema:"description=Canvas Link"`
	CollectionHeroImage  *Photo                       `json:"collection_hero_image,omitempty" jsonschema:"description=Collection Hero Image"`
	CollectionHeroVideo  *AdVideo                     `json:"collection_hero_video,omitempty" jsonschema:"description=Collection Hero Video"`
	CollectionThumbnails []*CanvasCollectionThumbnail `json:"collection_thumbnails,omitempty" jsonschema:"description=Collection Thumbnails"`
	DynamicSetting       *CanvasDynamicSetting        `json:"dynamic_setting,omitempty" jsonschema:"description=Dynamic Setting"`
	ElementPayload       string                       `json:"element_payload,omitempty" jsonschema:"description=Element Payload"`
	Elements             []*RichMediaElement          `json:"elements,omitempty" jsonschema:"description=Elements"`
	FbBodyElements       []map[string]interface{}     `json:"fb_body_elements,omitempty" jsonschema:"description=Fb Body Elements"`
	ID                   string                       `json:"id,omitempty" jsonschema:"description=Canvas ID,required,pattern=^[0-9]+$"`
	IsHidden             bool                         `json:"is_hidden,omitempty" jsonschema:"description=Is Hidden"`
	IsPublished          bool                         `json:"is_published,omitempty" jsonschema:"description=Is Published"`
	LastEditor           *User                        `json:"last_editor,omitempty" jsonschema:"description=Last Editor"`
	LinkedDocuments      []*Canvas                    `json:"linked_documents,omitempty" jsonschema:"description=Linked Documents"`
	Name                 string                       `json:"name,omitempty" jsonschema:"description=Name of the Canvas,required"`
	Owner                *Page                        `json:"owner,omitempty" jsonschema:"description=Owner"`
	PropertyList         []string                     `json:"property_list,omitempty" jsonschema:"description=Property List"`
	SourceTemplate       *CanvasTemplate              `json:"source_template,omitempty" jsonschema:"description=Source Template"`
	StoreURL             string                       `json:"store_url,omitempty" jsonschema:"description=Store URL,format=uri"`
	StyleList            []string                     `json:"style_list,omitempty" jsonschema:"description=Style List"`
	Tags                 []string                     `json:"tags,omitempty" jsonschema:"description=Tags"`
	UiPropertyList       []string                     `json:"ui_property_list,omitempty" jsonschema:"description=Ui Property List"`
	UnusedBodyElements   []map[string]interface{}     `json:"unused_body_elements,omitempty" jsonschema:"description=Unused Body Elements"`
	UpdateTime           int                          `json:"update_time,omitempty" jsonschema:"description=Update Time"`
	UseRetailerItemIDs   bool                         `json:"use_retailer_item_ids,omitempty" jsonschema:"description=Use Retailer Item Ids,pattern=^[0-9]+$"`
}

// CanvasAdSettings represents the Facebook CanvasAdSettings object
type CanvasAdSettings struct {
	IsCanvasCollectionEligible bool   `json:"is_canvas_collection_eligible,omitempty" jsonschema:"description=Is Canvas Collection Eligible"`
	LeadFormCreatedTime        uint   `json:"lead_form_created_time,omitempty" jsonschema:"description=When the CanvasAdSettings was created"`
	LeadFormName               string `json:"lead_form_name,omitempty" jsonschema:"description=Lead Form Name"`
	LeadGenFormID              string `json:"lead_gen_form_id,omitempty" jsonschema:"description=ID of the Lead Gen Form,pattern=^[0-9]+$"`
	LeadsCount                 int    `json:"leads_count,omitempty" jsonschema:"description=Leads Count"`
	ProductSetID               string `json:"product_set_id,omitempty" jsonschema:"description=ID of the Product Set,pattern=^[0-9]+$"`
	UseRetailerItemIDs         bool   `json:"use_retailer_item_ids,omitempty" jsonschema:"description=Use Retailer Item Ids,pattern=^[0-9]+$"`
}

// CanvasBodyElement represents the Facebook CanvasBodyElement object
type CanvasBodyElement struct {
	Element map[string]interface{} `json:"element,omitempty" jsonschema:"description=Element"`
}

// CanvasCollectionThumbnail represents the Facebook CanvasCollectionThumbnail object
type CanvasCollectionThumbnail struct {
	ElementChildIndex int    `json:"element_child_index,omitempty" jsonschema:"description=Element Child Index"`
	ElementID         string `json:"element_id,omitempty" jsonschema:"description=ID of the Element,pattern=^[0-9]+$"`
	Photo             *Photo `json:"photo,omitempty" jsonschema:"description=Photo"`
}

// CanvasDynamicSetting represents the Facebook CanvasDynamicSetting object
type CanvasDynamicSetting struct {
	ChildDocuments []*Canvas `json:"child_documents,omitempty" jsonschema:"description=Child Documents"`
	ProductSetID   string    `json:"product_set_id,omitempty" jsonschema:"description=ID of the Product Set,pattern=^[0-9]+$"`
}

// CanvasPreview represents the Facebook CanvasPreview object
type CanvasPreview struct {
	Body string `json:"body,omitempty" jsonschema:"description=Body"`
}

// CanvasTemplate represents the Facebook CanvasTemplate object
type CanvasTemplate struct {
	Channels              []map[string][]map[string]string    `json:"channels,omitempty" jsonschema:"description=Channels"`
	Description           string                              `json:"description,omitempty" jsonschema:"description=Description"`
	Document              *Canvas                             `json:"document,omitempty" jsonschema:"description=Document"`
	ID                    string                              `json:"id,omitempty" jsonschema:"description=CanvasTemplate ID,required,pattern=^[0-9]+$"`
	IsMultiTabSupportable bool                                `json:"is_multi_tab_supportable,omitempty" jsonschema:"description=Is Multi Tab Supportable"`
	IsNew                 bool                                `json:"is_new,omitempty" jsonschema:"description=Is New"`
	Name                  string                              `json:"name,omitempty" jsonschema:"description=Name of the CanvasTemplate,required"`
	Objectives            []map[string]map[string]interface{} `json:"objectives,omitempty" jsonschema:"description=Objectives"`
	OwnerID               *User                               `json:"owner_id,omitempty" jsonschema:"description=ID of the Owner,pattern=^[0-9]+$"`
	RequiredCapabilities  []string                            `json:"required_capabilities,omitempty" jsonschema:"description=Required Capabilities"`
	SnapshotPhoto         *Photo                              `json:"snapshot_photo,omitempty" jsonschema:"description=Snapshot Photo"`
	Status                string                              `json:"status,omitempty" jsonschema:"description=Current status of the CanvasTemplate,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	SubVerticals          []string                            `json:"sub_verticals,omitempty" jsonschema:"description=Sub Verticals"`
	Verticals             []map[string]string                 `json:"verticals,omitempty" jsonschema:"description=Verticals"`
}

// CatalogAdvertiserInsight represents the Facebook CatalogAdvertiserInsight object
type CatalogAdvertiserInsight struct {
	Category string `json:"category,omitempty" jsonschema:"description=Category"`
	Country  string `json:"country,omitempty" jsonschema:"description=Country"`
}

// CatalogBasedTargeting represents the Facebook CatalogBasedTargeting object
type CatalogBasedTargeting struct {
	GeoTargetingType string `json:"geo_targeting_type,omitempty" jsonschema:"description=Geo Targeting Type"`
}

// CatalogCollection represents the Facebook CatalogCollection object
type CatalogCollection struct {
	Description string `json:"description,omitempty" jsonschema:"description=Description"`
	Title       string `json:"title,omitempty" jsonschema:"description=Title"`
	URL         string `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
}

// CatalogContentVersionConfig represents the Facebook CatalogContentVersionConfig object
type CatalogContentVersionConfig struct {
	ID      string `json:"id,omitempty" jsonschema:"description=CatalogContentVersionConfig ID,required,pattern=^[0-9]+$"`
	Name    string `json:"name,omitempty" jsonschema:"description=Name of the CatalogContentVersionConfig,required"`
	Version string `json:"version,omitempty" jsonschema:"description=Version"`
}

// CatalogItemAppLinks represents the Facebook CatalogItemAppLinks object
type CatalogItemAppLinks struct {
	Android          []*AndroidAppLink      `json:"android,omitempty" jsonschema:"description=Android"`
	IOS              []*IosAppLink          `json:"ios,omitempty" jsonschema:"description=Ios"`
	Ipad             []*IosAppLink          `json:"ipad,omitempty" jsonschema:"description=Ipad"`
	Iphone           []*IosAppLink          `json:"iphone,omitempty" jsonschema:"description=Iphone"`
	Web              *WebAppLink            `json:"web,omitempty" jsonschema:"description=Web"`
	Windows          []*WindowsAppLink      `json:"windows,omitempty" jsonschema:"description=Windows"`
	WindowsPhone     []*WindowsPhoneAppLink `json:"windows_phone,omitempty" jsonschema:"description=Windows Phone"`
	WindowsUniversal []*WindowsAppLink      `json:"windows_universal,omitempty" jsonschema:"description=Windows Universal"`
}

// CatalogItemChannelsToIntegrityStatus represents the Facebook CatalogItemChannelsToIntegrityStatus object
type CatalogItemChannelsToIntegrityStatus struct {
	Channels             []string               `json:"channels,omitempty" jsonschema:"description=Channels"`
	RejectionInformation map[string]interface{} `json:"rejection_information,omitempty" jsonschema:"description=Rejection Information"`
}

// CatalogItemOverride represents the Facebook CatalogItemOverride object
type CatalogItemOverride struct {
	ID            string                `json:"id,omitempty" jsonschema:"description=CatalogItemOverride ID,required,pattern=^[0-9]+$"`
	LocalInfo     *ProductItemLocalInfo `json:"local_info,omitempty" jsonschema:"description=Local Info"`
	OverrideType  string                `json:"override_type,omitempty" jsonschema:"description=Override Type"`
	OverrideValue string                `json:"override_value,omitempty" jsonschema:"description=Override Value"`
}

// CatalogItemRejectionReasons represents the Facebook CatalogItemRejectionReasons object
type CatalogItemRejectionReasons struct {
	Capability           string                   `json:"capability,omitempty" jsonschema:"description=Capability"`
	RejectionInformation []map[string]interface{} `json:"rejection_information,omitempty" jsonschema:"description=Rejection Information"`
}

// CatalogItemValidationErrorList represents the Facebook CatalogItemValidationErrorList object
type CatalogItemValidationErrorList struct {
	Errors []map[string]interface{} `json:"errors,omitempty" jsonschema:"description=Errors"`
}

// CatalogSmartPixelSettings represents the Facebook CatalogSmartPixelSettings object
type CatalogSmartPixelSettings struct {
	AllowedDomains            []string                 `json:"allowed_domains,omitempty" jsonschema:"description=Allowed Domains"`
	AvailablePropertyFilters  []string                 `json:"available_property_filters,omitempty" jsonschema:"description=Available Property Filters"`
	Catalog                   *ProductCatalog          `json:"catalog,omitempty" jsonschema:"description=Catalog"`
	CbbCustomOverrideFilters  []map[string]interface{} `json:"cbb_custom_override_filters,omitempty" jsonschema:"description=Cbb Custom Override Filters"`
	CbbDefaultFilter          []map[string][]string    `json:"cbb_default_filter,omitempty" jsonschema:"description=Cbb Default Filter"`
	Defaults                  []map[string]string      `json:"defaults,omitempty" jsonschema:"description=Defaults"`
	Filters                   []map[string][]string    `json:"filters,omitempty" jsonschema:"description=Filters"`
	ID                        string                   `json:"id,omitempty" jsonschema:"description=CatalogSmartPixelSettings ID,required,pattern=^[0-9]+$"`
	IsCbbEnabled              bool                     `json:"is_cbb_enabled,omitempty" jsonschema:"description=Is Cbb Enabled"`
	IsCreateEnabled           bool                     `json:"is_create_enabled,omitempty" jsonschema:"description=Is Create Enabled"`
	IsDeleteEnabled           bool                     `json:"is_delete_enabled,omitempty" jsonschema:"description=Is Delete Enabled"`
	IsUpdateEnabled           bool                     `json:"is_update_enabled,omitempty" jsonschema:"description=Is Update Enabled"`
	MicrodataFormatPrecedence []string                 `json:"microdata_format_precedence,omitempty" jsonschema:"description=Microdata Format Precedence"`
	Pixel                     *AdsPixel                `json:"pixel,omitempty" jsonschema:"description=Pixel"`
	PropertyFilter            []string                 `json:"property_filter,omitempty" jsonschema:"description=Property Filter"`
	TrustedDomains            []string                 `json:"trusted_domains,omitempty" jsonschema:"description=Trusted Domains"`
}

// CatalogSubVerticalList represents the Facebook CatalogSubVerticalList object
type CatalogSubVerticalList struct {
	Appliances                     map[string]interface{} `json:"appliances,omitempty" jsonschema:"description=Appliances"`
	BabyFeeding                    map[string]interface{} `json:"baby_feeding,omitempty" jsonschema:"description=Baby Feeding"`
	BabyTransport                  map[string]interface{} `json:"baby_transport,omitempty" jsonschema:"description=Baby Transport"`
	Beauty                         map[string]interface{} `json:"beauty,omitempty" jsonschema:"description=Beauty"`
	Bedding                        map[string]interface{} `json:"bedding,omitempty" jsonschema:"description=Bedding"`
	Cameras                        map[string]interface{} `json:"cameras,omitempty" jsonschema:"description=Cameras"`
	CamerasAndPhotos               map[string]interface{} `json:"cameras_and_photos,omitempty" jsonschema:"description=Cameras And Photos"`
	CellPhonesAndSmartWatches      map[string]interface{} `json:"cell_phones_and_smart_watches,omitempty" jsonschema:"description=Cell Phones And Smart Watches"`
	CleaningSupplies               map[string]interface{} `json:"cleaning_supplies,omitempty" jsonschema:"description=Cleaning Supplies"`
	CloOffer                       map[string]interface{} `json:"clo_offer,omitempty" jsonschema:"description=Clo Offer"`
	Clothing                       map[string]interface{} `json:"clothing,omitempty" jsonschema:"description=Clothing"`
	ClothingAccessories            map[string]interface{} `json:"clothing_accessories,omitempty" jsonschema:"description=Clothing Accessories"`
	ComputerComponents             map[string]interface{} `json:"computer_components,omitempty" jsonschema:"description=Computer Components"`
	ComputersAndTablets            map[string]interface{} `json:"computers_and_tablets,omitempty" jsonschema:"description=Computers And Tablets"`
	ComputersLaptopsAndTablets     map[string]interface{} `json:"computers_laptops_and_tablets,omitempty" jsonschema:"description=Computers Laptops And Tablets"`
	DiaperingAndPottyTraining      map[string]interface{} `json:"diapering_and_potty_training,omitempty" jsonschema:"description=Diapering And Potty Training"`
	ElectronicAccessoriesAndCables map[string]interface{} `json:"electronic_accessories_and_cables,omitempty" jsonschema:"description=Electronic Accessories And Cables"`
	ElectronicsAccessories         map[string]interface{} `json:"electronics_accessories,omitempty" jsonschema:"description=Electronics Accessories"`
	Furniture                      map[string]interface{} `json:"furniture,omitempty" jsonschema:"description=Furniture"`
	Health                         map[string]interface{} `json:"health,omitempty" jsonschema:"description=Health"`
	Home                           map[string]interface{} `json:"home,omitempty" jsonschema:"description=Home"`
	HomeGoods                      map[string]interface{} `json:"home_goods,omitempty" jsonschema:"description=Home Goods"`
	HouseholdAndCleaningSupplies   map[string]interface{} `json:"household_and_cleaning_supplies,omitempty" jsonschema:"description=Household And Cleaning Supplies"`
	Jewelry                        map[string]interface{} `json:"jewelry,omitempty" jsonschema:"description=Jewelry"`
	LargeAppliances                map[string]interface{} `json:"large_appliances,omitempty" jsonschema:"description=Large Appliances"`
	LocalServiceBusinessItem       map[string]interface{} `json:"local_service_business_item,omitempty" jsonschema:"description=Local Service Business Item"`
	LocalServiceBusinessRestaurant map[string]interface{} `json:"local_service_business_restaurant,omitempty" jsonschema:"description=Local Service Business Restaurant"`
	LoyaltyOffer                   map[string]interface{} `json:"loyalty_offer,omitempty" jsonschema:"description=Loyalty Offer"`
	Nursery                        map[string]interface{} `json:"nursery,omitempty" jsonschema:"description=Nursery"`
	PrintersAndScanners            map[string]interface{} `json:"printers_and_scanners,omitempty" jsonschema:"description=Printers And Scanners"`
	PrintersScannersAndFaxMachines map[string]interface{} `json:"printers_scanners_and_fax_machines,omitempty" jsonschema:"description=Printers Scanners And Fax Machines"`
	ProductDiscount                map[string]interface{} `json:"product_discount,omitempty" jsonschema:"description=Product Discount"`
	Projectors                     map[string]interface{} `json:"projectors,omitempty" jsonschema:"description=Projectors"`
	Shoes                          map[string]interface{} `json:"shoes,omitempty" jsonschema:"description=Shoes"`
	ShoesAndFootwear               map[string]interface{} `json:"shoes_and_footwear,omitempty" jsonschema:"description=Shoes And Footwear"`
	Software                       map[string]interface{} `json:"software,omitempty" jsonschema:"description=Software"`
	TelevisionsAndMonitors         map[string]interface{} `json:"televisions_and_monitors,omitempty" jsonschema:"description=Televisions And Monitors"`
	TestChildSubVertical           map[string]interface{} `json:"test_child_sub_vertical,omitempty" jsonschema:"description=Test Child Sub Vertical"`
	TestGrandChildSubVertical      map[string]interface{} `json:"test_grand_child_sub_vertical,omitempty" jsonschema:"description=Test Grand Child Sub Vertical"`
	TestSubVertical                map[string]interface{} `json:"test_sub_vertical,omitempty" jsonschema:"description=Test Sub Vertical"`
	TestSubVerticalAlias           map[string]interface{} `json:"test_sub_vertical_alias,omitempty" jsonschema:"description=Test Sub Vertical Alias"`
	TestSubVerticalDataObject      map[string]interface{} `json:"test_sub_vertical_data_object,omitempty" jsonschema:"description=Test Sub Vertical Data Object"`
	ThirdPartyElectronics          map[string]interface{} `json:"third_party_electronics,omitempty" jsonschema:"description=Third Party Electronics"`
	ThirdPartyToysAndGames         map[string]interface{} `json:"third_party_toys_and_games,omitempty" jsonschema:"description=Third Party Toys And Games"`
	Toys                           map[string]interface{} `json:"toys,omitempty" jsonschema:"description=Toys"`
	ToysAndGames                   map[string]interface{} `json:"toys_and_games,omitempty" jsonschema:"description=Toys And Games"`
	TvsAndMonitors                 map[string]interface{} `json:"tvs_and_monitors,omitempty" jsonschema:"description=Tvs And Monitors"`
	VehicleManufacturer            map[string]interface{} `json:"vehicle_manufacturer,omitempty" jsonschema:"description=Vehicle Manufacturer"`
	VideoGameConsolesAndVideoGames map[string]interface{} `json:"video_game_consoles_and_video_games,omitempty" jsonschema:"description=Video Game Consoles And Video Games"`
	VideoGamesAndConsoles          map[string]interface{} `json:"video_games_and_consoles,omitempty" jsonschema:"description=Video Games And Consoles"`
	VideoProjectors                map[string]interface{} `json:"video_projectors,omitempty" jsonschema:"description=Video Projectors"`
	Watches                        map[string]interface{} `json:"watches,omitempty" jsonschema:"description=Watches"`
}

// CatalogWebsiteOnboardingSettings represents the Facebook CatalogWebsiteOnboardingSettings object
type CatalogWebsiteOnboardingSettings struct {
	ID          string `json:"id,omitempty" jsonschema:"description=CatalogWebsiteOnboardingSettings ID,required,pattern=^[0-9]+$"`
	QualityBand string `json:"quality_band,omitempty" jsonschema:"description=Quality Band"`
	Status      string `json:"status,omitempty" jsonschema:"description=Current status of the CatalogWebsiteOnboardingSettings,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// CatalogWebsiteSettings represents the Facebook CatalogWebsiteSettings object
type CatalogWebsiteSettings struct {
	ID               string `json:"id,omitempty" jsonschema:"description=CatalogWebsiteSettings ID,required,pattern=^[0-9]+$"`
	IsAllowedToCrawl bool   `json:"is_allowed_to_crawl,omitempty" jsonschema:"description=Is Allowed To Crawl"`
}

// ChatPlugin represents the Facebook ChatPlugin object
type ChatPlugin struct {
	Alignment             string `json:"alignment,omitempty" jsonschema:"description=Alignment"`
	DesktopBottomSpacing  string `json:"desktop_bottom_spacing,omitempty" jsonschema:"description=Desktop Bottom Spacing"`
	DesktopSideSpacing    string `json:"desktop_side_spacing,omitempty" jsonschema:"description=Desktop Side Spacing"`
	EntryPointIcon        string `json:"entry_point_icon,omitempty" jsonschema:"description=Entry Point Icon"`
	EntryPointLabel       string `json:"entry_point_label,omitempty" jsonschema:"description=Entry Point Label"`
	GreetingDialogDisplay string `json:"greeting_dialog_display,omitempty" jsonschema:"description=Greeting Dialog Display"`
	GuestChatMode         string `json:"guest_chat_mode,omitempty" jsonschema:"description=Guest Chat Mode"`
	MobileBottomSpacing   string `json:"mobile_bottom_spacing,omitempty" jsonschema:"description=Mobile Bottom Spacing"`
	MobileChatDisplay     string `json:"mobile_chat_display,omitempty" jsonschema:"description=Mobile Chat Display"`
	MobileSideSpacing     string `json:"mobile_side_spacing,omitempty" jsonschema:"description=Mobile Side Spacing"`
	ThemeColor            string `json:"theme_color,omitempty" jsonschema:"description=Theme Color"`
	WelcomeScreenGreeting string `json:"welcome_screen_greeting,omitempty" jsonschema:"description=Welcome Screen Greeting"`
}

// CheckBatchRequestStatus represents the Facebook CheckBatchRequestStatus object
type CheckBatchRequestStatus struct {
	Errors               []map[string]interface{} `json:"errors,omitempty" jsonschema:"description=Errors"`
	ErrorsTotalCount     int                      `json:"errors_total_count,omitempty" jsonschema:"description=Errors Total Count"`
	Handle               string                   `json:"handle,omitempty" jsonschema:"description=Handle"`
	IDsOfInvalidRequests []string                 `json:"ids_of_invalid_requests,omitempty" jsonschema:"description=Ids Of Invalid Requests"`
	Status               string                   `json:"status,omitempty" jsonschema:"description=Current status of the CheckBatchRequestStatus,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	Warnings             []map[string]interface{} `json:"warnings,omitempty" jsonschema:"description=Warnings"`
	WarningsTotalCount   int                      `json:"warnings_total_count,omitempty" jsonschema:"description=Warnings Total Count"`
}

// ChildEvent represents the Facebook ChildEvent object
type ChildEvent struct {
	EndTime   string `json:"end_time,omitempty" jsonschema:"description=End Time"`
	ID        string `json:"id,omitempty" jsonschema:"description=ChildEvent ID,required,pattern=^[0-9]+$"`
	StartTime string `json:"start_time,omitempty" jsonschema:"description=Start Time"`
	TicketUri string `json:"ticket_uri,omitempty" jsonschema:"description=Ticket Uri"`
}

// ChinaBusinessOnboardingVettingRequest represents the Facebook ChinaBusinessOnboardingVettingRequest object
type ChinaBusinessOnboardingVettingRequest struct {
	AdAccountCreationRequestStatus string                   `json:"ad_account_creation_request_status,omitempty" jsonschema:"description=Ad Account Creation Request Status"`
	AdAccountLimit                 int                      `json:"ad_account_limit,omitempty" jsonschema:"description=Ad Account Limit"`
	AdAccountNumber                string                   `json:"ad_account_number,omitempty" jsonschema:"description=Ad Account Number"`
	AdAccountsInfo                 []map[string]interface{} `json:"ad_accounts_info,omitempty" jsonschema:"description=Ad Accounts Info"`
	AdvertiserBusinessID           string                   `json:"advertiser_business_id,omitempty" jsonschema:"description=ID of the Advertiser Business,pattern=^[0-9]+$"`
	AdvertiserBusinessName         string                   `json:"advertiser_business_name,omitempty" jsonschema:"description=Advertiser Business Name"`
	BusinessManagerID              string                   `json:"business_manager_id,omitempty" jsonschema:"description=ID of the Business Manager,pattern=^[0-9]+$"`
	BusinessRegistration           string                   `json:"business_registration,omitempty" jsonschema:"description=Business Registration"`
	BusinessRegistrationID         string                   `json:"business_registration_id,omitempty" jsonschema:"description=ID of the Business Registration,pattern=^[0-9]+$"`
	BusinessVerificationStatus     string                   `json:"business_verification_status,omitempty" jsonschema:"description=Business Verification Status"`
	ChineseAddress                 string                   `json:"chinese_address,omitempty" jsonschema:"description=Chinese Address"`
	ChineseLegalEntityName         string                   `json:"chinese_legal_entity_name,omitempty" jsonschema:"description=Chinese Legal Entity Name"`
	City                           string                   `json:"city,omitempty" jsonschema:"description=City"`
	Contact                        string                   `json:"contact,omitempty" jsonschema:"description=Contact"`
	CouponCode                     string                   `json:"coupon_code,omitempty" jsonschema:"description=Coupon Code"`
	DisapproveReason               string                   `json:"disapprove_reason,omitempty" jsonschema:"description=Disapprove Reason"`
	EnglishBusinessName            string                   `json:"english_business_name,omitempty" jsonschema:"description=English Business Name"`
	ID                             string                   `json:"id,omitempty" jsonschema:"description=ChinaBusinessOnboardingVettingRequest ID,required,pattern=^[0-9]+$"`
	OfficialWebsiteURL             string                   `json:"official_website_url,omitempty" jsonschema:"description=Official Website URL,format=uri"`
	OrgAdAccountCount              int                      `json:"org_ad_account_count,omitempty" jsonschema:"description=Org Ad Account Count"`
	PaymentType                    string                   `json:"payment_type,omitempty" jsonschema:"description=Payment Type"`
	PlanningAgencyID               string                   `json:"planning_agency_id,omitempty" jsonschema:"description=ID of the Planning Agency,pattern=^[0-9]+$"`
	PlanningAgencyName             string                   `json:"planning_agency_name,omitempty" jsonschema:"description=Planning Agency Name"`
	PromotableAppIDs               []string                 `json:"promotable_app_ids,omitempty" jsonschema:"description=Promotable App Ids,pattern=^[0-9]+$"`
	PromotablePageIDs              []string                 `json:"promotable_page_ids,omitempty" jsonschema:"description=Promotable Page Ids,pattern=^[0-9]+$"`
	PromotablePages                []map[string]interface{} `json:"promotable_pages,omitempty" jsonschema:"description=Promotable Pages"`
	PromotableURLs                 []string                 `json:"promotable_urls,omitempty" jsonschema:"description=Promotable Urls,format=uri"`
	RequestChangesReason           string                   `json:"request_changes_reason,omitempty" jsonschema:"description=Request Changes Reason"`
	ReviewedUser                   string                   `json:"reviewed_user,omitempty" jsonschema:"description=Reviewed User"`
	SpendLimit                     int                      `json:"spend_limit,omitempty" jsonschema:"description=Spend Limit"`
	Status                         string                   `json:"status,omitempty" jsonschema:"description=Current status of the ChinaBusinessOnboardingVettingRequest,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	Subvertical                    string                   `json:"subvertical,omitempty" jsonschema:"description=Subvertical"`
	SubverticalV2                  string                   `json:"subvertical_v2,omitempty" jsonschema:"description=Subvertical V2"`
	SupportingDocument             string                   `json:"supporting_document,omitempty" jsonschema:"description=Supporting Document"`
	TimeChangesRequested           time.Time                `json:"time_changes_requested,omitempty" jsonschema:"description=Time Changes Requested,format=date-time"`
	TimeCreated                    time.Time                `json:"time_created,omitempty" jsonschema:"description=When the ChinaBusinessOnboardingVettingRequest was created,format=date-time"`
	TimeUpdated                    time.Time                `json:"time_updated,omitempty" jsonschema:"description=When the ChinaBusinessOnboardingVettingRequest was last updated,format=date-time"`
	TimeZone                       string                   `json:"time_zone,omitempty" jsonschema:"description=Time Zone"`
	UsedResellerLink               bool                     `json:"used_reseller_link,omitempty" jsonschema:"description=Used Reseller Link"`
	UserID                         string                   `json:"user_id,omitempty" jsonschema:"description=ID of the User,pattern=^[0-9]+$"`
	UserName                       string                   `json:"user_name,omitempty" jsonschema:"description=User Name"`
	Vertical                       string                   `json:"vertical,omitempty" jsonschema:"description=Vertical"`
	VerticalV2                     string                   `json:"vertical_v2,omitempty" jsonschema:"description=Vertical V2"`
	ViewedByReseller               bool                     `json:"viewed_by_reseller,omitempty" jsonschema:"description=Viewed By Reseller"`
	ZipCode                        string                   `json:"zip_code,omitempty" jsonschema:"description=Zip Code"`
}

// CloudGame represents the Facebook CloudGame object
type CloudGame struct {
	ID                     string    `json:"id,omitempty" jsonschema:"description=CloudGame ID,required,pattern=^[0-9]+$"`
	Name                   string    `json:"name,omitempty" jsonschema:"description=Name of the CloudGame,required"`
	Owner                  *Profile  `json:"owner,omitempty" jsonschema:"description=Owner"`
	PlayableAdFileSize     uint      `json:"playable_ad_file_size,omitempty" jsonschema:"description=Playable Ad File Size"`
	PlayableAdOrientation  string    `json:"playable_ad_orientation,omitempty" jsonschema:"description=Playable Ad Orientation"`
	PlayableAdPackageName  string    `json:"playable_ad_package_name,omitempty" jsonschema:"description=Playable Ad Package Name"`
	PlayableAdRejectReason string    `json:"playable_ad_reject_reason,omitempty" jsonschema:"description=Playable Ad Reject Reason"`
	PlayableAdStatus       string    `json:"playable_ad_status,omitempty" jsonschema:"description=Playable Ad Status"`
	PlayableAdUploadTime   time.Time `json:"playable_ad_upload_time,omitempty" jsonschema:"description=Playable Ad Upload Time,format=date-time"`
}

// CloudbridgeDatasetStatus represents the Facebook CloudbridgeDatasetStatus object
type CloudbridgeDatasetStatus struct {
	AppRedactedEvent   []string              `json:"app_redacted_event,omitempty" jsonschema:"description=App Redacted Event"`
	AppSensitiveParams []map[string][]string `json:"app_sensitive_params,omitempty" jsonschema:"description=App Sensitive Params"`
	AppUnverifiedEvent []string              `json:"app_unverified_event,omitempty" jsonschema:"description=App Unverified Event"`
	HasAppAssociated   bool                  `json:"has_app_associated,omitempty" jsonschema:"description=Has App Associated"`
	IsAppProhibited    bool                  `json:"is_app_prohibited,omitempty" jsonschema:"description=Is App Prohibited"`
	IsDataset          bool                  `json:"is_dataset,omitempty" jsonschema:"description=Is Dataset"`
}

// CollaborativeAdsPartnerBusinesses represents the Facebook CollaborativeAdsPartnerBusinesses object
type CollaborativeAdsPartnerBusinesses struct {
	CollaborativeAdsPartnerBusinessesInfo []*Business `json:"collaborative_ads_partner_businesses_info,omitempty" jsonschema:"description=Collaborative Ads Partner Businesses Info"`
	DedicatedPartnerBusinessInfo          *Business   `json:"dedicated_partner_business_info,omitempty" jsonschema:"description=Dedicated Partner Business Info"`
}

// CollaborativeAdsPartnerInfoListItem represents the Facebook CollaborativeAdsPartnerInfoListItem object
type CollaborativeAdsPartnerInfoListItem struct {
}

// CollaborativeAdsShareSettings represents the Facebook CollaborativeAdsShareSettings object
type CollaborativeAdsShareSettings struct {
	AgencyBusiness        *Business `json:"agency_business,omitempty" jsonschema:"description=Agency Business"`
	ID                    string    `json:"id,omitempty" jsonschema:"description=CollaborativeAdsShareSettings ID,required,pattern=^[0-9]+$"`
	ProductCatalogProxyID string    `json:"product_catalog_proxy_id,omitempty" jsonschema:"description=ID of the Product Catalog Proxy,pattern=^[0-9]+$"`
	UtmCampaign           string    `json:"utm_campaign,omitempty" jsonschema:"description=Utm Campaign"`
	UtmMedium             string    `json:"utm_medium,omitempty" jsonschema:"description=Utm Medium"`
	UtmSource             string    `json:"utm_source,omitempty" jsonschema:"description=Utm Source"`
}

// ColumnSuggestions represents the Facebook ColumnSuggestions object
type ColumnSuggestions struct {
	Explanations      map[string]interface{} `json:"explanations,omitempty" jsonschema:"description=Explanations"`
	Format            []string               `json:"format,omitempty" jsonschema:"description=Format"`
	Objective         []string               `json:"objective,omitempty" jsonschema:"description=Objective"`
	OptimizationGoals []string               `json:"optimization_goals,omitempty" jsonschema:"description=Optimization Goals"`
}

// Comment represents the Facebook Comment object
type Comment struct {
	AdminCreator             *User                  `json:"admin_creator,omitempty" jsonschema:"description=Admin Creator"`
	Application              *Application           `json:"application,omitempty" jsonschema:"description=Application"`
	Attachment               map[string]interface{} `json:"attachment,omitempty" jsonschema:"description=Attachment"`
	CanComment               bool                   `json:"can_comment,omitempty" jsonschema:"description=Can Comment"`
	CanHide                  bool                   `json:"can_hide,omitempty" jsonschema:"description=Can Hide"`
	CanLike                  bool                   `json:"can_like,omitempty" jsonschema:"description=Can Like"`
	CanRemove                bool                   `json:"can_remove,omitempty" jsonschema:"description=Can Remove"`
	CanReplyPrivately        bool                   `json:"can_reply_privately,omitempty" jsonschema:"description=Can Reply Privately"`
	CommentCount             uint                   `json:"comment_count,omitempty" jsonschema:"description=Comment Count"`
	CreatedTime              time.Time              `json:"created_time,omitempty" jsonschema:"description=When the Comment was created,format=date-time"`
	From                     map[string]interface{} `json:"from,omitempty" jsonschema:"description=From"`
	ID                       string                 `json:"id,omitempty" jsonschema:"description=Comment ID,required,pattern=^[0-9]+$"`
	IsHidden                 bool                   `json:"is_hidden,omitempty" jsonschema:"description=Is Hidden"`
	IsPrivate                bool                   `json:"is_private,omitempty" jsonschema:"description=Is Private"`
	LikeCount                uint                   `json:"like_count,omitempty" jsonschema:"description=Like Count"`
	LiveBroadcastTimestamp   uint                   `json:"live_broadcast_timestamp,omitempty" jsonschema:"description=Live Broadcast Timestamp"`
	Message                  string                 `json:"message,omitempty" jsonschema:"description=Message"`
	MessageTags              []*EntityAtTextRange   `json:"message_tags,omitempty" jsonschema:"description=Message Tags"`
	Object                   map[string]interface{} `json:"object,omitempty" jsonschema:"description=Object"`
	Parent                   *Comment               `json:"parent,omitempty" jsonschema:"description=Parent"`
	PermalinkURL             string                 `json:"permalink_url,omitempty" jsonschema:"description=Permalink URL,format=uri"`
	PrivateReplyConversation map[string]interface{} `json:"private_reply_conversation,omitempty" jsonschema:"description=Private Reply Conversation"`
	UserLikes                bool                   `json:"user_likes,omitempty" jsonschema:"description=User Likes"`
}

// CommerceMerchantSettings represents the Facebook CommerceMerchantSettings object
type CommerceMerchantSettings struct {
	CheckoutConfig          string                 `json:"checkout_config,omitempty" jsonschema:"description=Checkout Config"`
	CheckoutMessage         string                 `json:"checkout_message,omitempty" jsonschema:"description=Checkout Message"`
	ContactEmail            string                 `json:"contact_email,omitempty" jsonschema:"description=Contact Email"`
	Cta                     string                 `json:"cta,omitempty" jsonschema:"description=Cta"`
	DisplayName             string                 `json:"display_name,omitempty" jsonschema:"description=Display Name"`
	FacebookChannel         map[string]interface{} `json:"facebook_channel,omitempty" jsonschema:"description=Facebook Channel"`
	ID                      string                 `json:"id,omitempty" jsonschema:"description=CommerceMerchantSettings ID,required,pattern=^[0-9]+$"`
	InstagramChannel        map[string]interface{} `json:"instagram_channel,omitempty" jsonschema:"description=Instagram Channel"`
	KoreaFtcListing         string                 `json:"korea_ftc_listing,omitempty" jsonschema:"description=Korea Ftc Listing"`
	MerchantPage            *Profile               `json:"merchant_page,omitempty" jsonschema:"description=Merchant Page"`
	MerchantStatus          string                 `json:"merchant_status,omitempty" jsonschema:"description=Merchant Status"`
	OnsiteCommerceMerchant  map[string]interface{} `json:"onsite_commerce_merchant,omitempty" jsonschema:"description=Onsite Commerce Merchant"`
	PaymentProvider         string                 `json:"payment_provider,omitempty" jsonschema:"description=Payment Provider"`
	PrivacyPolicyLocalized  string                 `json:"privacy_policy_localized,omitempty" jsonschema:"description=Privacy Policy Localized"`
	ReturnPolicyLocalized   string                 `json:"return_policy_localized,omitempty" jsonschema:"description=Return Policy Localized"`
	ReviewRejectionMessages []string               `json:"review_rejection_messages,omitempty" jsonschema:"description=Review Rejection Messages"`
	ReviewRejectionReasons  []string               `json:"review_rejection_reasons,omitempty" jsonschema:"description=Review Rejection Reasons"`
	Terms                   string                 `json:"terms,omitempty" jsonschema:"description=Terms"`
}

// CommerceMerchantSettingsSetupStatus represents the Facebook CommerceMerchantSettingsSetupStatus object
type CommerceMerchantSettingsSetupStatus struct {
	DealsSetup                       string                 `json:"deals_setup,omitempty" jsonschema:"description=Deals Setup"`
	MarketplaceApprovalStatus        string                 `json:"marketplace_approval_status,omitempty" jsonschema:"description=Marketplace Approval Status"`
	MarketplaceApprovalStatusDetails map[string]interface{} `json:"marketplace_approval_status_details,omitempty" jsonschema:"description=Marketplace Approval Status Details"`
	PaymentSetup                     string                 `json:"payment_setup,omitempty" jsonschema:"description=Payment Setup"`
	ReviewStatus                     map[string]interface{} `json:"review_status,omitempty" jsonschema:"description=Review Status"`
	ShopSetup                        string                 `json:"shop_setup,omitempty" jsonschema:"description=Shop Setup"`
}

// CommerceOrder represents the Facebook CommerceOrder object
type CommerceOrder struct {
	BuyerDetails            map[string]interface{} `json:"buyer_details,omitempty" jsonschema:"description=Buyer Details"`
	Channel                 string                 `json:"channel,omitempty" jsonschema:"description=Channel"`
	ContainsBopisItems      bool                   `json:"contains_bopis_items,omitempty" jsonschema:"description=Contains Bopis Items"`
	Created                 string                 `json:"created,omitempty" jsonschema:"description=When the CommerceOrder was created"`
	EstimatedPaymentDetails map[string]interface{} `json:"estimated_payment_details,omitempty" jsonschema:"description=Estimated Payment Details"`
	ID                      string                 `json:"id,omitempty" jsonschema:"description=CommerceOrder ID,required,pattern=^[0-9]+$"`
	IsGroupBuy              bool                   `json:"is_group_buy,omitempty" jsonschema:"description=Is Group Buy"`
	IsTestOrder             bool                   `json:"is_test_order,omitempty" jsonschema:"description=Is Test Order"`
	LastUpdated             string                 `json:"last_updated,omitempty" jsonschema:"description=When the CommerceOrder was last updated"`
	MerchantOrderID         string                 `json:"merchant_order_id,omitempty" jsonschema:"description=ID of the Merchant Order,pattern=^[0-9]+$"`
	OrderStatus             map[string]interface{} `json:"order_status,omitempty" jsonschema:"description=Order Status"`
	PreOrderDetails         map[string]interface{} `json:"pre_order_details,omitempty" jsonschema:"description=Pre Order Details"`
	SelectedShippingOption  map[string]interface{} `json:"selected_shipping_option,omitempty" jsonschema:"description=Selected Shipping Option"`
	ShipByDate              string                 `json:"ship_by_date,omitempty" jsonschema:"description=Ship By Date"`
	ShippingAddress         map[string]interface{} `json:"shipping_address,omitempty" jsonschema:"description=Shipping Address"`
}

// CommerceOrderTransactionDetail represents the Facebook CommerceOrderTransactionDetail object
type CommerceOrderTransactionDetail struct {
	MerchantOrderID   string                 `json:"merchant_order_id,omitempty" jsonschema:"description=ID of the Merchant Order,pattern=^[0-9]+$"`
	NetPaymentAmount  map[string]interface{} `json:"net_payment_amount,omitempty" jsonschema:"description=Net Payment Amount"`
	OrderCreated      string                 `json:"order_created,omitempty" jsonschema:"description=When the CommerceOrderTransactionDetail was created"`
	OrderDetails      *CommerceOrder         `json:"order_details,omitempty" jsonschema:"description=Order Details"`
	OrderID           string                 `json:"order_id,omitempty" jsonschema:"description=ID of the Order,pattern=^[0-9]+$"`
	PayoutReferenceID string                 `json:"payout_reference_id,omitempty" jsonschema:"description=ID of the Payout Reference,pattern=^[0-9]+$"`
	PostalCode        string                 `json:"postal_code,omitempty" jsonschema:"description=Postal Code"`
	ProcessingFee     map[string]interface{} `json:"processing_fee,omitempty" jsonschema:"description=Processing Fee"`
	State             string                 `json:"state,omitempty" jsonschema:"description=State"`
	TaxRate           string                 `json:"tax_rate,omitempty" jsonschema:"description=Tax Rate"`
	TransactionDate   string                 `json:"transaction_date,omitempty" jsonschema:"description=Transaction Date"`
	TransactionType   string                 `json:"transaction_type,omitempty" jsonschema:"description=Transaction Type"`
	TransferID        string                 `json:"transfer_id,omitempty" jsonschema:"description=ID of the Transfer,pattern=^[0-9]+$"`
}

// CommercePayout represents the Facebook CommercePayout object
type CommercePayout struct {
	Amount            map[string]interface{} `json:"amount,omitempty" jsonschema:"description=Amount"`
	PayoutDate        string                 `json:"payout_date,omitempty" jsonschema:"description=Payout Date"`
	PayoutReferenceID string                 `json:"payout_reference_id,omitempty" jsonschema:"description=ID of the Payout Reference,pattern=^[0-9]+$"`
	Status            string                 `json:"status,omitempty" jsonschema:"description=Current status of the CommercePayout,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	TransferID        string                 `json:"transfer_id,omitempty" jsonschema:"description=ID of the Transfer,pattern=^[0-9]+$"`
}

// CommerceSettings represents the Facebook CommerceSettings object
type CommerceSettings struct {
	Inventory      int `json:"inventory,omitempty" jsonschema:"description=Inventory"`
	TotalInventory int `json:"total_inventory,omitempty" jsonschema:"description=Total Inventory"`
}

// ConnectionsTargeting represents the Facebook ConnectionsTargeting object
type ConnectionsTargeting struct {
	ID   string `json:"id,omitempty" jsonschema:"description=ConnectionsTargeting ID,required,pattern=^[0-9]+$"`
	Name string `json:"name,omitempty" jsonschema:"description=Name of the ConnectionsTargeting,required"`
}

// ContactsMessengerSyncConfig represents the Facebook ContactsMessengerSyncConfig object
type ContactsMessengerSyncConfig struct {
	Enabled bool `json:"enabled,omitempty" jsonschema:"description=Enabled"`
}

// ContentBlockList represents the Facebook ContentBlockList object
type ContentBlockList struct {
	Business *Business `json:"business,omitempty" jsonschema:"description=Business"`
	ID       string    `json:"id,omitempty" jsonschema:"description=ContentBlockList ID,required,pattern=^[0-9]+$"`
	Name     string    `json:"name,omitempty" jsonschema:"description=Name of the ContentBlockList,required"`
}

// ContentDeliveryReport represents the Facebook ContentDeliveryReport object
type ContentDeliveryReport struct {
	ContentID            string `json:"content_id,omitempty" jsonschema:"description=ID of the Content,pattern=^[0-9]+$"`
	ContentName          string `json:"content_name,omitempty" jsonschema:"description=Content Name"`
	ContentURL           string `json:"content_url,omitempty" jsonschema:"description=Content URL,format=uri"`
	CreatorID            string `json:"creator_id,omitempty" jsonschema:"description=ID of the Creator,pattern=^[0-9]+$"`
	CreatorName          string `json:"creator_name,omitempty" jsonschema:"description=Creator Name"`
	CreatorURL           string `json:"creator_url,omitempty" jsonschema:"description=Creator URL,format=uri"`
	EstimatedImpressions uint   `json:"estimated_impressions,omitempty" jsonschema:"description=Estimated Impressions"`
}

// ContentPublishingLimitResponse represents the Facebook ContentPublishingLimitResponse object
type ContentPublishingLimitResponse struct {
	Config     map[string]interface{} `json:"config,omitempty" jsonschema:"description=Config"`
	QuotaUsage int                    `json:"quota_usage,omitempty" jsonschema:"description=Quota Usage,minimum=13,maximum=100"`
}

// ContextualBundlingSpec represents the Facebook ContextualBundlingSpec object
type ContextualBundlingSpec struct {
	Status string `json:"status,omitempty" jsonschema:"description=Current status of the ContextualBundlingSpec,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// ConversionActionQuery represents the Facebook ConversionActionQuery object
type ConversionActionQuery struct {
	ActionType      []map[string]interface{} `json:"action.type,omitempty" jsonschema:"description=Action.Type"`
	Application     []map[string]interface{} `json:"application,omitempty" jsonschema:"description=Application"`
	ConversionID    []string                 `json:"conversion_id,omitempty" jsonschema:"description=ID of the Conversion,pattern=^[0-9]+$"`
	Creative        []map[string]interface{} `json:"creative,omitempty" jsonschema:"description=Creative"`
	Dataset         []string                 `json:"dataset,omitempty" jsonschema:"description=Dataset"`
	Event           []string                 `json:"event,omitempty" jsonschema:"description=Event"`
	EventCreator    []string                 `json:"event.creator,omitempty" jsonschema:"description=Event.Creator"`
	EventType       []string                 `json:"event_type,omitempty" jsonschema:"description=Event Type"`
	FbPixel         []string                 `json:"fb_pixel,omitempty" jsonschema:"description=Fb Pixel"`
	FbPixelEvent    []string                 `json:"fb_pixel_event,omitempty" jsonschema:"description=Fb Pixel Event"`
	Leadgen         []string                 `json:"leadgen,omitempty" jsonschema:"description=Leadgen"`
	Object          []string                 `json:"object,omitempty" jsonschema:"description=Object"`
	ObjectDomain    []string                 `json:"object.domain,omitempty" jsonschema:"description=Object.Domain"`
	Offer           []string                 `json:"offer,omitempty" jsonschema:"description=Offer"`
	OfferCreator    []string                 `json:"offer.creator,omitempty" jsonschema:"description=Offer.Creator"`
	OffsitePixel    []string                 `json:"offsite_pixel,omitempty" jsonschema:"description=Offsite Pixel"`
	Page            []string                 `json:"page,omitempty" jsonschema:"description=Page"`
	PageParent      []string                 `json:"page.parent,omitempty" jsonschema:"description=Page.Parent"`
	Post            []string                 `json:"post,omitempty" jsonschema:"description=Post"`
	PostObject      []string                 `json:"post.object,omitempty" jsonschema:"description=Post.Object"`
	PostObjectWall  []string                 `json:"post.object.wall,omitempty" jsonschema:"description=Post.Object.Wall"`
	PostWall        []string                 `json:"post.wall,omitempty" jsonschema:"description=Post.Wall"`
	Question        []string                 `json:"question,omitempty" jsonschema:"description=Question"`
	QuestionCreator []string                 `json:"question.creator,omitempty" jsonschema:"description=Question.Creator"`
	Response        []string                 `json:"response,omitempty" jsonschema:"description=Response"`
	Subtype         []string                 `json:"subtype,omitempty" jsonschema:"description=Subtype"`
}

// ConversionHealthKPI represents the Facebook ConversionHealthKPI object
type ConversionHealthKPI struct {
	HealthIndicator                      string  `json:"health_indicator,omitempty" jsonschema:"description=Health Indicator"`
	ImpactedBrowsersMatchRate            float64 `json:"impacted_browsers_match_rate,omitempty" jsonschema:"description=Impacted Browsers Match Rate"`
	ImpactedBrowsersMatchRateMomTrend    float64 `json:"impacted_browsers_match_rate_mom_trend,omitempty" jsonschema:"description=Impacted Browsers Match Rate Mom Trend"`
	ImpactedBrowsersTrafficShare         float64 `json:"impacted_browsers_traffic_share,omitempty" jsonschema:"description=Impacted Browsers Traffic Share"`
	ImpactedBrowsersTrafficShareMomTrend float64 `json:"impacted_browsers_traffic_share_mom_trend,omitempty" jsonschema:"description=Impacted Browsers Traffic Share Mom Trend"`
	MatchRate                            float64 `json:"match_rate,omitempty" jsonschema:"description=Match Rate"`
	MatchRateMomTrend                    float64 `json:"match_rate_mom_trend,omitempty" jsonschema:"description=Match Rate Mom Trend"`
	MatchRateVerticalBenchmark           float64 `json:"match_rate_vertical_benchmark,omitempty" jsonschema:"description=Match Rate Vertical Benchmark"`
	MatchRateVsBenchmarkMomTrend         float64 `json:"match_rate_vs_benchmark_mom_trend,omitempty" jsonschema:"description=Match Rate Vs Benchmark Mom Trend"`
}

// CopyrightAttributionInsights represents the Facebook CopyrightAttributionInsights object
type CopyrightAttributionInsights struct {
	L7AttributionPageView       int     `json:"l7_attribution_page_view,omitempty" jsonschema:"description=L7 Attribution Page View,minimum=13,maximum=100"`
	L7AttributionPageViewDelta  float64 `json:"l7_attribution_page_view_delta,omitempty" jsonschema:"description=L7 Attribution Page View Delta"`
	L7AttributionVideoView      int     `json:"l7_attribution_video_view,omitempty" jsonschema:"description=L7 Attribution Video View"`
	L7AttributionVideoViewDelta float64 `json:"l7_attribution_video_view_delta,omitempty" jsonschema:"description=L7 Attribution Video View Delta"`
	MetricsEndingDate           string  `json:"metrics_ending_date,omitempty" jsonschema:"description=Metrics Ending Date"`
}

// CopyrightAudioAsset represents the Facebook CopyrightAudioAsset object
type CopyrightAudioAsset struct {
	AudioAvailabilityStatus string                                           `json:"audio_availability_status,omitempty" jsonschema:"description=Audio Availability Status"`
	AudioLibraryPolicy      []map[string][]map[string]map[string]interface{} `json:"audio_library_policy,omitempty" jsonschema:"description=Audio Library Policy"`
	CreationTime            time.Time                                        `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	ID                      string                                           `json:"id,omitempty" jsonschema:"description=CopyrightAudioAsset ID,required,pattern=^[0-9]+$"`
	ReferenceFiles          []map[string]interface{}                         `json:"reference_files,omitempty" jsonschema:"description=Reference Files"`
	Title                   string                                           `json:"title,omitempty" jsonschema:"description=Title"`
	UpdateTime              time.Time                                        `json:"update_time,omitempty" jsonschema:"description=Update Time,format=date-time"`
}

// CopyrightMediaMisuse represents the Facebook CopyrightMediaMisuse object
type CopyrightMediaMisuse struct {
	AudioSegments          []map[string]interface{} `json:"audio_segments,omitempty" jsonschema:"description=Audio Segments"`
	CreationTime           time.Time                `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	DisabledAudioSegments  []map[string]interface{} `json:"disabled_audio_segments,omitempty" jsonschema:"description=Disabled Audio Segments"`
	DisabledVideoSegments  []map[string]interface{} `json:"disabled_video_segments,omitempty" jsonschema:"description=Disabled Video Segments"`
	EntireFileIssue        bool                     `json:"entire_file_issue,omitempty" jsonschema:"description=Entire File Issue"`
	EntireFileIssueReasons []string                 `json:"entire_file_issue_reasons,omitempty" jsonschema:"description=Entire File Issue Reasons"`
	ExpirationTime         time.Time                `json:"expiration_time,omitempty" jsonschema:"description=Expiration Time,format=date-time"`
	ID                     string                   `json:"id,omitempty" jsonschema:"description=CopyrightMediaMisuse ID,required,pattern=^[0-9]+$"`
	MediaAssetID           string                   `json:"media_asset_id,omitempty" jsonschema:"description=ID of the Media Asset,pattern=^[0-9]+$"`
	Reasons                []string                 `json:"reasons,omitempty" jsonschema:"description=Reasons"`
	RequestedAudioSegments []map[string]interface{} `json:"requested_audio_segments,omitempty" jsonschema:"description=Requested Audio Segments"`
	RequestedVideoSegments []map[string]interface{} `json:"requested_video_segments,omitempty" jsonschema:"description=Requested Video Segments"`
	ResolutionType         string                   `json:"resolution_type,omitempty" jsonschema:"description=Resolution Type"`
	Status                 string                   `json:"status,omitempty" jsonschema:"description=Current status of the CopyrightMediaMisuse,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	UpdateTime             time.Time                `json:"update_time,omitempty" jsonschema:"description=Update Time,format=date-time"`
	VideoCopyright         *VideoCopyright          `json:"video_copyright,omitempty" jsonschema:"description=Video Copyright"`
	VideoSegments          []map[string]interface{} `json:"video_segments,omitempty" jsonschema:"description=Video Segments"`
}

// CopyrightOwnershipTransfer represents the Facebook CopyrightOwnershipTransfer object
type CopyrightOwnershipTransfer struct {
	ID                    string    `json:"id,omitempty" jsonschema:"description=CopyrightOwnershipTransfer ID,required,pattern=^[0-9]+$"`
	ReceivingRightsHolder *Profile  `json:"receiving_rights_holder,omitempty" jsonschema:"description=Receiving Rights Holder"`
	SendingRightsHolder   *Profile  `json:"sending_rights_holder,omitempty" jsonschema:"description=Sending Rights Holder"`
	Status                string    `json:"status,omitempty" jsonschema:"description=Current status of the CopyrightOwnershipTransfer,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	TransferTerritories   []string  `json:"transfer_territories,omitempty" jsonschema:"description=Transfer Territories"`
	TransferTime          time.Time `json:"transfer_time,omitempty" jsonschema:"description=Transfer Time,format=date-time"`
}

// CopyrightReferenceContainer represents the Facebook CopyrightReferenceContainer object
type CopyrightReferenceContainer struct {
	ContentType           string                 `json:"content_type,omitempty" jsonschema:"description=Content Type"`
	CopyrightCreationTime time.Time              `json:"copyright_creation_time,omitempty" jsonschema:"description=Copyright Creation Time,format=date-time"`
	DownloadHdURL         string                 `json:"download_hd_url,omitempty" jsonschema:"description=Download Hd URL,format=uri"`
	DurationInSec         float64                `json:"duration_in_sec,omitempty" jsonschema:"description=Duration In Sec"`
	ID                    string                 `json:"id,omitempty" jsonschema:"description=CopyrightReferenceContainer ID,required,pattern=^[0-9]+$"`
	Iswc                  string                 `json:"iswc,omitempty" jsonschema:"description=Iswc"`
	Metadata              map[string]interface{} `json:"metadata,omitempty" jsonschema:"description=Metadata"`
	PlayableVideoUri      string                 `json:"playable_video_uri,omitempty" jsonschema:"description=Playable Video Uri"`
	PublishedTime         time.Time              `json:"published_time,omitempty" jsonschema:"description=Published Time,format=date-time"`
	ThumbnailURL          string                 `json:"thumbnail_url,omitempty" jsonschema:"description=Thumbnail URL,format=uri"`
	Title                 string                 `json:"title,omitempty" jsonschema:"description=Title"`
	UniversalContentID    string                 `json:"universal_content_id,omitempty" jsonschema:"description=ID of the Universal Content,pattern=^[0-9]+$"`
	WriterNames           []string               `json:"writer_names,omitempty" jsonschema:"description=Writer Names"`
}

// CoverPhoto represents the Facebook CoverPhoto object
type CoverPhoto struct {
	CoverID string  `json:"cover_id,omitempty" jsonschema:"description=ID of the Cover,pattern=^[0-9]+$"`
	ID      string  `json:"id,omitempty" jsonschema:"description=CoverPhoto ID,required,pattern=^[0-9]+$"`
	OffsetX float64 `json:"offset_x,omitempty" jsonschema:"description=Offset X"`
	OffsetY float64 `json:"offset_y,omitempty" jsonschema:"description=Offset Y"`
	Source  string  `json:"source,omitempty" jsonschema:"description=Source"`
}

// CreativeAssetTag represents the Facebook CreativeAssetTag object
type CreativeAssetTag struct {
	Name string `json:"name,omitempty" jsonschema:"description=Name of the CreativeAssetTag,required"`
}

// CreativeHistory represents the Facebook CreativeHistory object
type CreativeHistory struct {
	CreativeFingerprint int                      `json:"creative_fingerprint,omitempty" jsonschema:"description=Creative Fingerprint"`
	TimeRanges          []map[string]interface{} `json:"time_ranges,omitempty" jsonschema:"description=Time Ranges"`
}

// CreativeMulticellTestConfig represents the Facebook CreativeMulticellTestConfig object
type CreativeMulticellTestConfig struct {
	BudgetPercentage       int    `json:"budget_percentage,omitempty" jsonschema:"description=Budget Percentage,minimum=13,maximum=100"`
	ConfiguredCellCount    int    `json:"configured_cell_count,omitempty" jsonschema:"description=Configured Cell Count"`
	DailyBudget            int    `json:"daily_budget,omitempty" jsonschema:"description=Daily Budget,minimum=1"`
	EntrySource            string `json:"entry_source,omitempty" jsonschema:"description=Entry Source"`
	LifetimeBudget         int    `json:"lifetime_budget,omitempty" jsonschema:"description=Lifetime Budget,minimum=1"`
	UseExistingDailyBudget bool   `json:"use_existing_daily_budget,omitempty" jsonschema:"description=Use Existing Daily Budget"`
}

// CreatorAssetCreative represents the Facebook CreatorAssetCreative object
type CreatorAssetCreative struct {
	ID                    string `json:"id,omitempty" jsonschema:"description=CreatorAssetCreative ID,required,pattern=^[0-9]+$"`
	ImageURL              string `json:"image_url,omitempty" jsonschema:"description=Image URL,format=uri"`
	ModerationStatus      string `json:"moderation_status,omitempty" jsonschema:"description=Moderation Status"`
	ProductItemRetailerID string `json:"product_item_retailer_id,omitempty" jsonschema:"description=ID of the Product Item Retailer,pattern=^[0-9]+$"`
	ProductURL            string `json:"product_url,omitempty" jsonschema:"description=Product URL,format=uri"`
	RetailerID            string `json:"retailer_id,omitempty" jsonschema:"description=ID of the Retailer,pattern=^[0-9]+$"`
	VideoURL              string `json:"video_url,omitempty" jsonschema:"description=Video URL,format=uri"`
}

// CreditCard represents the Facebook CreditCard object
type CreditCard struct {
	BillingAddress                 map[string]interface{} `json:"billing_address,omitempty" jsonschema:"description=Billing Address"`
	CardCobadging                  string                 `json:"card_cobadging,omitempty" jsonschema:"description=Card Cobadging"`
	CardHolderName                 string                 `json:"card_holder_name,omitempty" jsonschema:"description=Card Holder Name"`
	CardType                       string                 `json:"card_type,omitempty" jsonschema:"description=Card Type"`
	CredentialID                   int                    `json:"credential_id,omitempty" jsonschema:"description=ID of the Credential,pattern=^[0-9]+$"`
	DefaultReceivingMethodProducts []string               `json:"default_receiving_method_products,omitempty" jsonschema:"description=Default Receiving Method Products"`
	ExpiryMonth                    string                 `json:"expiry_month,omitempty" jsonschema:"description=Expiry Month"`
	ExpiryYear                     string                 `json:"expiry_year,omitempty" jsonschema:"description=Expiry Year"`
	ID                             string                 `json:"id,omitempty" jsonschema:"description=CreditCard ID,required,pattern=^[0-9]+$"`
	IsCvvTrickyBin                 bool                   `json:"is_cvv_tricky_bin,omitempty" jsonschema:"description=Is Cvv Tricky Bin"`
	IsEnabled                      bool                   `json:"is_enabled,omitempty" jsonschema:"description=Is Enabled"`
	IsLastUsed                     bool                   `json:"is_last_used,omitempty" jsonschema:"description=Is Last Used"`
	IsNetworkTokenizedInIndia      bool                   `json:"is_network_tokenized_in_india,omitempty" jsonschema:"description=Is Network Tokenized In India"`
	IsSoftDisabled                 bool                   `json:"is_soft_disabled,omitempty" jsonschema:"description=Is Soft Disabled"`
	IsUserVerified                 bool                   `json:"is_user_verified,omitempty" jsonschema:"description=Is User Verified"`
	IsZipVerified                  bool                   `json:"is_zip_verified,omitempty" jsonschema:"description=Is Zip Verified"`
	Last4                          string                 `json:"last4,omitempty" jsonschema:"description=Last4"`
	ReadableCardType               string                 `json:"readable_card_type,omitempty" jsonschema:"description=Readable Card Type"`
	TimeCreated                    time.Time              `json:"time_created,omitempty" jsonschema:"description=When the CreditCard was created,format=date-time"`
	TimeCreatedTs                  int                    `json:"time_created_ts,omitempty" jsonschema:"description=When the CreditCard was created"`
	Type                           string                 `json:"type,omitempty" jsonschema:"description=Type"`
}

// CreditPartitionActionOptions represents the Facebook CreditPartitionActionOptions object
type CreditPartitionActionOptions struct {
	LiabilityType map[string]interface{} `json:"liability_type,omitempty" jsonschema:"description=Liability Type"`
	PartitionType map[string]interface{} `json:"partition_type,omitempty" jsonschema:"description=Partition Type"`
	SendBillTo    map[string]interface{} `json:"send_bill_to,omitempty" jsonschema:"description=Send Bill To"`
}

// Currency represents the Facebook Currency object
type Currency struct {
	CurrencyOffset     uint    `json:"currency_offset,omitempty" jsonschema:"description=Currency Offset"`
	UsdExchange        float64 `json:"usd_exchange,omitempty" jsonschema:"description=Usd Exchange"`
	UsdExchangeInverse float64 `json:"usd_exchange_inverse,omitempty" jsonschema:"description=Usd Exchange Inverse"`
	UserCurrency       string  `json:"user_currency,omitempty" jsonschema:"description=User Currency"`
}

// CurrencyAmount represents the Facebook CurrencyAmount object
type CurrencyAmount struct {
	Amount             string `json:"amount,omitempty" jsonschema:"description=Amount"`
	AmountInHundredths string `json:"amount_in_hundredths,omitempty" jsonschema:"description=Amount In Hundredths"`
	Currency           string `json:"currency,omitempty" jsonschema:"description=Currency"`
	OffsettedAmount    string `json:"offsetted_amount,omitempty" jsonschema:"description=Offsetted Amount"`
}

// CustomAudience represents the Facebook CustomAudience object
type CustomAudience struct {
	AccountID                             string                        `json:"account_id,omitempty" jsonschema:"description=ID of the Account,pattern=^[0-9]+$"`
	ApproximateCountLowerBound            int                           `json:"approximate_count_lower_bound,omitempty" jsonschema:"description=Approximate Count Lower Bound"`
	ApproximateCountUpperBound            int                           `json:"approximate_count_upper_bound,omitempty" jsonschema:"description=Approximate Count Upper Bound"`
	CustomerFileSource                    string                        `json:"customer_file_source,omitempty" jsonschema:"description=Customer File Source"`
	DataSource                            *CustomAudienceDataSource     `json:"data_source,omitempty" jsonschema:"description=Data Source"`
	DataSourceTypes                       string                        `json:"data_source_types,omitempty" jsonschema:"description=Data Source Types"`
	DatafileCustomAudienceUploadingStatus string                        `json:"datafile_custom_audience_uploading_status,omitempty" jsonschema:"description=Datafile Custom Audience Uploading Status"`
	DeleteTime                            int                           `json:"delete_time,omitempty" jsonschema:"description=Delete Time"`
	DeliveryStatus                        *CustomAudienceStatus         `json:"delivery_status,omitempty" jsonschema:"description=Delivery Status"`
	Description                           string                        `json:"description,omitempty" jsonschema:"description=Description"`
	ExcludedCustomAudiences               []*CustomAudience             `json:"excluded_custom_audiences,omitempty" jsonschema:"description=Excluded Custom Audiences"`
	ExternalEventSource                   *AdsPixel                     `json:"external_event_source,omitempty" jsonschema:"description=External Event Source"`
	HouseholdAudience                     int                           `json:"household_audience,omitempty" jsonschema:"description=Household Audience"`
	ID                                    string                        `json:"id,omitempty" jsonschema:"description=CustomAudience ID,required,pattern=^[0-9]+$"`
	IncludedCustomAudiences               []*CustomAudience             `json:"included_custom_audiences,omitempty" jsonschema:"description=Included Custom Audiences"`
	IsEligibleForSacCampaigns             bool                          `json:"is_eligible_for_sac_campaigns,omitempty" jsonschema:"description=Is Eligible For Sac Campaigns"`
	IsHousehold                           bool                          `json:"is_household,omitempty" jsonschema:"description=Is Household"`
	IsSnapshot                            bool                          `json:"is_snapshot,omitempty" jsonschema:"description=Is Snapshot"`
	IsValueBased                          bool                          `json:"is_value_based,omitempty" jsonschema:"description=Is Value Based"`
	LookalikeAudienceIDs                  []string                      `json:"lookalike_audience_ids,omitempty" jsonschema:"description=Lookalike Audience Ids,pattern=^[0-9]+$"`
	LookalikeSpec                         *LookalikeSpec                `json:"lookalike_spec,omitempty" jsonschema:"description=Lookalike Spec"`
	Name                                  string                        `json:"name,omitempty" jsonschema:"description=Name of the CustomAudience,required"`
	OperationStatus                       *CustomAudienceStatus         `json:"operation_status,omitempty" jsonschema:"description=Operation Status"`
	OptOutLink                            string                        `json:"opt_out_link,omitempty" jsonschema:"description=Opt Out Link"`
	OwnerBusiness                         *Business                     `json:"owner_business,omitempty" jsonschema:"description=Owner Business"`
	PageDeletionMarkedDeleteTime          int                           `json:"page_deletion_marked_delete_time,omitempty" jsonschema:"description=Page Deletion Marked Delete Time,minimum=13,maximum=100"`
	PermissionForActions                  *AudiencePermissionForActions `json:"permission_for_actions,omitempty" jsonschema:"description=Permission For Actions"`
	PixelID                               string                        `json:"pixel_id,omitempty" jsonschema:"description=ID of the Pixel,pattern=^[0-9]+$"`
	RegulatedAudienceSpec                 *LookalikeSpec                `json:"regulated_audience_spec,omitempty" jsonschema:"description=Regulated Audience Spec"`
	RetentionDays                         int                           `json:"retention_days,omitempty" jsonschema:"description=Retention Days"`
	RevSharePolicyID                      uint                          `json:"rev_share_policy_id,omitempty" jsonschema:"description=ID of the Rev Share Policy,pattern=^[0-9]+$"`
	Rule                                  string                        `json:"rule,omitempty" jsonschema:"description=Rule"`
	RuleAggregation                       string                        `json:"rule_aggregation,omitempty" jsonschema:"description=Rule Aggregation"`
	RuleV2                                string                        `json:"rule_v2,omitempty" jsonschema:"description=Rule V2"`
	SeedAudience                          int                           `json:"seed_audience,omitempty" jsonschema:"description=Seed Audience"`
	SharingStatus                         *CustomAudienceSharingStatus  `json:"sharing_status,omitempty" jsonschema:"description=Sharing Status"`
	Subtype                               string                        `json:"subtype,omitempty" jsonschema:"description=Subtype"`
	TimeContentUpdated                    uint                          `json:"time_content_updated,omitempty" jsonschema:"description=When the CustomAudience was last updated"`
	TimeCreated                           uint                          `json:"time_created,omitempty" jsonschema:"description=When the CustomAudience was created"`
	TimeUpdated                           uint                          `json:"time_updated,omitempty" jsonschema:"description=When the CustomAudience was last updated"`
}

// CustomAudienceAdAccount represents the Facebook CustomAudienceAdAccount object
type CustomAudienceAdAccount struct {
	ID string `json:"id,omitempty" jsonschema:"description=CustomAudienceAdAccount ID,required,pattern=^[0-9]+$"`
}

// CustomAudienceCapabilities represents the Facebook CustomAudienceCapabilities object
type CustomAudienceCapabilities struct {
	Capabilities map[string]interface{} `json:"capabilities,omitempty" jsonschema:"description=Capabilities"`
}

// CustomAudienceDataSource represents the Facebook CustomAudienceDataSource object
type CustomAudienceDataSource struct {
	CreationParams string                          `json:"creation_params,omitempty" jsonschema:"description=Creation Params"`
	SubType        CustomaudiencedatasourceSubType `json:"sub_type,omitempty" jsonschema:"description=Sub Type"`
	Type           CustomaudiencedatasourceType    `json:"type,omitempty" jsonschema:"description=Type"`
}

// CustomAudienceGroup represents the Facebook CustomAudienceGroup object
type CustomAudienceGroup struct {
	AudienceTypeParamName string `json:"audience_type_param_name,omitempty" jsonschema:"description=Audience Type Param Name"`
	ExistingCustomerTag   string `json:"existing_customer_tag,omitempty" jsonschema:"description=Existing Customer Tag"`
	NewCustomerTag        string `json:"new_customer_tag,omitempty" jsonschema:"description=New Customer Tag"`
}

// CustomAudienceHealth represents the Facebook CustomAudienceHealth object
type CustomAudienceHealth struct {
	Health []map[string]interface{} `json:"health,omitempty" jsonschema:"description=Health"`
}

// CustomAudienceIntegrityFlagsAndAppealStatus represents the Facebook CustomAudienceIntegrityFlagsAndAppealStatus object
type CustomAudienceIntegrityFlagsAndAppealStatus struct {
	CloseoutTime          uint     `json:"closeout_time,omitempty" jsonschema:"description=Closeout Time"`
	FlaggedFields         []string `json:"flagged_fields,omitempty" jsonschema:"description=Flagged Fields"`
	LatestAppealRequestor string   `json:"latest_appeal_requestor,omitempty" jsonschema:"description=Latest Appeal Requestor"`
	LatestAppealTime      uint     `json:"latest_appeal_time,omitempty" jsonschema:"description=Latest Appeal Time"`
	RestrictionStatus     string   `json:"restriction_status,omitempty" jsonschema:"description=Restriction Status"`
}

// CustomAudienceSalts represents the Facebook CustomAudienceSalts object
type CustomAudienceSalts struct {
	AppID     int                      `json:"app_id,omitempty" jsonschema:"description=ID of the App,pattern=^[0-9]+$"`
	PublicKey string                   `json:"public_key,omitempty" jsonschema:"description=Public Key"`
	Salts     []map[string]interface{} `json:"salts,omitempty" jsonschema:"description=Salts"`
	UserID    int                      `json:"user_id,omitempty" jsonschema:"description=ID of the User,pattern=^[0-9]+$"`
}

// CustomAudienceSession represents the Facebook CustomAudienceSession object
type CustomAudienceSession struct {
	EndTime           string `json:"end_time,omitempty" jsonschema:"description=End Time"`
	NumInvalidEntries string `json:"num_invalid_entries,omitempty" jsonschema:"description=Num Invalid Entries"`
	NumMatched        string `json:"num_matched,omitempty" jsonschema:"description=Num Matched"`
	NumReceived       string `json:"num_received,omitempty" jsonschema:"description=Num Received"`
	Progress          string `json:"progress,omitempty" jsonschema:"description=Progress"`
	SessionID         string `json:"session_id,omitempty" jsonschema:"description=ID of the Session,pattern=^[0-9]+$"`
	Stage             string `json:"stage,omitempty" jsonschema:"description=Stage"`
	StartTime         string `json:"start_time,omitempty" jsonschema:"description=Start Time"`
}

// CustomAudienceSharedAccountCampaignInfo represents the Facebook CustomAudienceSharedAccountCampaignInfo object
type CustomAudienceSharedAccountCampaignInfo struct {
	AccountID              string                   `json:"account_id,omitempty" jsonschema:"description=ID of the Account,pattern=^[0-9]+$"`
	AccountName            string                   `json:"account_name,omitempty" jsonschema:"description=Account Name"`
	AdsetExcludingCount    uint                     `json:"adset_excluding_count,omitempty" jsonschema:"description=Adset Excluding Count"`
	AdsetIncludingCount    uint                     `json:"adset_including_count,omitempty" jsonschema:"description=Adset Including Count"`
	CampaignDeliveryStatus string                   `json:"campaign_delivery_status,omitempty" jsonschema:"description=Campaign Delivery Status"`
	CampaignObjective      string                   `json:"campaign_objective,omitempty" jsonschema:"description=Campaign Objective"`
	CampaignPages          []map[string]interface{} `json:"campaign_pages,omitempty" jsonschema:"description=Campaign Pages"`
	CampaignSchedule       string                   `json:"campaign_schedule,omitempty" jsonschema:"description=Campaign Schedule"`
}

// CustomAudienceSharingStatus represents the Facebook CustomAudienceSharingStatus object
type CustomAudienceSharingStatus struct {
	SharingRelationshipID uint   `json:"sharing_relationship_id,omitempty" jsonschema:"description=ID of the Sharing Relationship,pattern=^[0-9]+$"`
	Status                string `json:"status,omitempty" jsonschema:"description=Current status of the CustomAudienceSharingStatus,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// CustomAudienceStatus represents the Facebook CustomAudienceStatus object
type CustomAudienceStatus struct {
	Code        uint   `json:"code,omitempty" jsonschema:"description=Code"`
	Description string `json:"description,omitempty" jsonschema:"description=Description"`
}

// CustomAudiencesTOS represents the Facebook CustomAudiencesTOS object
type CustomAudiencesTOS struct {
	Content string `json:"content,omitempty" jsonschema:"description=Content"`
	ID      string `json:"id,omitempty" jsonschema:"description=CustomAudiencesTOS ID,required,pattern=^[0-9]+$"`
	Type    string `json:"type,omitempty" jsonschema:"description=Type"`
}

// CustomAudiencesharedAccountInfo represents the Facebook CustomAudiencesharedAccountInfo object
type CustomAudiencesharedAccountInfo struct {
	AccountID     string `json:"account_id,omitempty" jsonschema:"description=ID of the Account,pattern=^[0-9]+$"`
	AccountName   string `json:"account_name,omitempty" jsonschema:"description=Account Name"`
	BusinessID    string `json:"business_id,omitempty" jsonschema:"description=ID of the Business,pattern=^[0-9]+$"`
	BusinessName  string `json:"business_name,omitempty" jsonschema:"description=Business Name"`
	SharingStatus string `json:"sharing_status,omitempty" jsonschema:"description=Sharing Status"`
}

// CustomConversion represents the Facebook CustomConversion object
type CustomConversion struct {
	AccountID                string                          `json:"account_id,omitempty" jsonschema:"description=ID of the Account,pattern=^[0-9]+$"`
	AggregationRule          string                          `json:"aggregation_rule,omitempty" jsonschema:"description=Aggregation Rule"`
	Business                 *Business                       `json:"business,omitempty" jsonschema:"description=Business"`
	CreationTime             time.Time                       `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	CustomEventType          CustomconversionCustomEventType `json:"custom_event_type,omitempty" jsonschema:"description=Custom Event Type"`
	DataSources              []*ExternalEventSource          `json:"data_sources,omitempty" jsonschema:"description=Data Sources"`
	DefaultConversionValue   int                             `json:"default_conversion_value,omitempty" jsonschema:"description=Default Conversion Value"`
	Description              string                          `json:"description,omitempty" jsonschema:"description=Description"`
	EventSourceType          string                          `json:"event_source_type,omitempty" jsonschema:"description=Event Source Type"`
	FirstFiredTime           time.Time                       `json:"first_fired_time,omitempty" jsonschema:"description=First Fired Time,format=date-time"`
	ID                       string                          `json:"id,omitempty" jsonschema:"description=CustomConversion ID,required,pattern=^[0-9]+$"`
	IsArchived               bool                            `json:"is_archived,omitempty" jsonschema:"description=Is Archived"`
	IsUnavailable            bool                            `json:"is_unavailable,omitempty" jsonschema:"description=Is Unavailable"`
	LastFiredTime            time.Time                       `json:"last_fired_time,omitempty" jsonschema:"description=Last Fired Time,format=date-time"`
	Name                     string                          `json:"name,omitempty" jsonschema:"description=Name of the CustomConversion,required"`
	OfflineConversionDataSet *OfflineConversionDataSet       `json:"offline_conversion_data_set,omitempty" jsonschema:"description=Offline Conversion Data Set"`
	Pixel                    *AdsPixel                       `json:"pixel,omitempty" jsonschema:"description=Pixel"`
	RetentionDays            uint                            `json:"retention_days,omitempty" jsonschema:"description=Retention Days"`
	Rule                     string                          `json:"rule,omitempty" jsonschema:"description=Rule"`
}

// CustomConversionActivities represents the Facebook CustomConversionActivities object
type CustomConversionActivities struct {
	AppID     uint      `json:"app_id,omitempty" jsonschema:"description=ID of the App,pattern=^[0-9]+$"`
	Data      string    `json:"data,omitempty" jsonschema:"description=Data"`
	EventType string    `json:"event_type,omitempty" jsonschema:"description=Event Type"`
	Timestamp time.Time `json:"timestamp,omitempty" jsonschema:"description=Timestamp,format=date-time"`
}

// CustomConversionStatsResult represents the Facebook CustomConversionStatsResult object
type CustomConversionStatsResult struct {
	Aggregation CustomconversionstatsresultAggregation `json:"aggregation,omitempty" jsonschema:"description=Aggregation"`
	Data        []map[string]interface{}               `json:"data,omitempty" jsonschema:"description=Data"`
	Timestamp   time.Time                              `json:"timestamp,omitempty" jsonschema:"description=Timestamp,format=date-time"`
}

// CustomUserSettings represents the Facebook CustomUserSettings object
type CustomUserSettings struct {
	PageLevelPersistentMenu []map[string]interface{} `json:"page_level_persistent_menu,omitempty" jsonschema:"description=Page Level Persistent Menu"`
	UserLevelPersistentMenu []map[string]interface{} `json:"user_level_persistent_menu,omitempty" jsonschema:"description=User Level Persistent Menu"`
}

// DACheck represents the Facebook DACheck object
type DACheck struct {
	ActionUri   string `json:"action_uri,omitempty" jsonschema:"description=Action Uri"`
	Description string `json:"description,omitempty" jsonschema:"description=Description"`
	Key         string `json:"key,omitempty" jsonschema:"description=Key"`
	Result      string `json:"result,omitempty" jsonschema:"description=Result"`
	Title       string `json:"title,omitempty" jsonschema:"description=Title"`
	UserMessage string `json:"user_message,omitempty" jsonschema:"description=User Message"`
}

// Dataset represents the Facebook Dataset object
type Dataset struct {
	ID   string `json:"id,omitempty" jsonschema:"description=Dataset ID,required,pattern=^[0-9]+$"`
	Name string `json:"name,omitempty" jsonschema:"description=Name of the Dataset,required"`
}

// DayPart represents the Facebook DayPart object
type DayPart struct {
	Days         []int  `json:"days,omitempty" jsonschema:"description=Days"`
	EndMinute    int    `json:"end_minute,omitempty" jsonschema:"description=End Minute"`
	StartMinute  int    `json:"start_minute,omitempty" jsonschema:"description=Start Minute"`
	TimezoneType string `json:"timezone_type,omitempty" jsonschema:"description=Timezone Type"`
}

// DeliveryCheck represents the Facebook DeliveryCheck object
type DeliveryCheck struct {
	CheckName   string                  `json:"check_name,omitempty" jsonschema:"description=Check Name"`
	Description string                  `json:"description,omitempty" jsonschema:"description=Description"`
	ExtraInfo   *DeliveryCheckExtraInfo `json:"extra_info,omitempty" jsonschema:"description=Extra Info"`
	Summary     string                  `json:"summary,omitempty" jsonschema:"description=Summary"`
}

// DeliveryCheckExtraInfo represents the Facebook DeliveryCheckExtraInfo object
type DeliveryCheckExtraInfo struct {
	AdgroupIDs  []string `json:"adgroup_ids,omitempty" jsonschema:"description=Adgroup Ids,pattern=^[0-9]+$"`
	CampaignIDs []string `json:"campaign_ids,omitempty" jsonschema:"description=Campaign Ids,pattern=^[0-9]+$"`
	Countries   []string `json:"countries,omitempty" jsonschema:"description=Countries"`
}

// DeliveryInfo represents the Facebook DeliveryInfo object
type DeliveryInfo struct {
	ActiveAcceleratedCampaignCount            int               `json:"active_accelerated_campaign_count,omitempty" jsonschema:"description=Active Accelerated Campaign Count"`
	ActiveDayPartedCampaignCount              int               `json:"active_day_parted_campaign_count,omitempty" jsonschema:"description=Active Day Parted Campaign Count"`
	AdPenaltyMap                              []map[string]bool `json:"ad_penalty_map,omitempty" jsonschema:"description=Ad Penalty Map"`
	AreAllDailyBudgetsSpent                   bool              `json:"are_all_daily_budgets_spent,omitempty" jsonschema:"description=Are All Daily Budgets Spent"`
	CreditNeededAdsCount                      int               `json:"credit_needed_ads_count,omitempty" jsonschema:"description=Credit Needed Ads Count"`
	EligibleForDeliveryInsights               bool              `json:"eligible_for_delivery_insights,omitempty" jsonschema:"description=Eligible For Delivery Insights"`
	EndTime                                   time.Time         `json:"end_time,omitempty" jsonschema:"description=End Time,format=date-time"`
	HasAccountHitSpendLimit                   bool              `json:"has_account_hit_spend_limit,omitempty" jsonschema:"description=Has Account Hit Spend Limit"`
	HasCampaignGroupHitSpendLimit             bool              `json:"has_campaign_group_hit_spend_limit,omitempty" jsonschema:"description=Has Campaign Group Hit Spend Limit"`
	HasNoActiveAds                            bool              `json:"has_no_active_ads,omitempty" jsonschema:"description=Has No Active Ads"`
	HasNoAds                                  bool              `json:"has_no_ads,omitempty" jsonschema:"description=Has No Ads"`
	InactiveAdsCount                          int               `json:"inactive_ads_count,omitempty" jsonschema:"description=Inactive Ads Count"`
	InactiveCampaignCount                     int               `json:"inactive_campaign_count,omitempty" jsonschema:"description=Inactive Campaign Count"`
	IsAccountClosed                           bool              `json:"is_account_closed,omitempty" jsonschema:"description=Is Account Closed"`
	IsAccountDisabled                         bool              `json:"is_account_disabled,omitempty" jsonschema:"description=Is Account Disabled"`
	IsAdUneconomical                          bool              `json:"is_ad_uneconomical,omitempty" jsonschema:"description=Is Ad Uneconomical"`
	IsAdfarmPenalized                         bool              `json:"is_adfarm_penalized,omitempty" jsonschema:"description=Is Adfarm Penalized"`
	IsAdgroupPartiallyRejected                bool              `json:"is_adgroup_partially_rejected,omitempty" jsonschema:"description=Is Adgroup Partially Rejected"`
	IsCampaignAccelerated                     bool              `json:"is_campaign_accelerated,omitempty" jsonschema:"description=Is Campaign Accelerated"`
	IsCampaignCompleted                       bool              `json:"is_campaign_completed,omitempty" jsonschema:"description=Is Campaign Completed"`
	IsCampaignDayParted                       bool              `json:"is_campaign_day_parted,omitempty" jsonschema:"description=Is Campaign Day Parted"`
	IsCampaignDisabled                        bool              `json:"is_campaign_disabled,omitempty" jsonschema:"description=Is Campaign Disabled"`
	IsCampaignGroupDisabled                   bool              `json:"is_campaign_group_disabled,omitempty" jsonschema:"description=Is Campaign Group Disabled"`
	IsClickbaitPenalized                      bool              `json:"is_clickbait_penalized,omitempty" jsonschema:"description=Is Clickbait Penalized"`
	IsDailyBudgetSpent                        bool              `json:"is_daily_budget_spent,omitempty" jsonschema:"description=Is Daily Budget Spent"`
	IsEngagementBaitPenalized                 bool              `json:"is_engagement_bait_penalized,omitempty" jsonschema:"description=Is Engagement Bait Penalized"`
	IsLqwePenalized                           bool              `json:"is_lqwe_penalized,omitempty" jsonschema:"description=Is Lqwe Penalized"`
	IsReachAndFrequencyMisconfigured          bool              `json:"is_reach_and_frequency_misconfigured,omitempty" jsonschema:"description=Is Reach And Frequency Misconfigured"`
	IsSensationalismPenalized                 bool              `json:"is_sensationalism_penalized,omitempty" jsonschema:"description=Is Sensationalism Penalized"`
	IsSplitTestActive                         bool              `json:"is_split_test_active,omitempty" jsonschema:"description=Is Split Test Active"`
	IsSplitTestValid                          bool              `json:"is_split_test_valid,omitempty" jsonschema:"description=Is Split Test Valid"`
	LiftStudyTimePeriod                       string            `json:"lift_study_time_period,omitempty" jsonschema:"description=Lift Study Time Period"`
	NeedsCredit                               bool              `json:"needs_credit,omitempty" jsonschema:"description=Needs Credit"`
	NeedsTaxNumber                            bool              `json:"needs_tax_number,omitempty" jsonschema:"description=Needs Tax Number"`
	NonDeletedAdsCount                        int               `json:"non_deleted_ads_count,omitempty" jsonschema:"description=Non Deleted Ads Count"`
	NotDeliveringCampaignCount                int               `json:"not_delivering_campaign_count,omitempty" jsonschema:"description=Not Delivering Campaign Count"`
	PendingAdsCount                           int               `json:"pending_ads_count,omitempty" jsonschema:"description=Pending Ads Count"`
	ReachFrequencyCampaignUnderdeliveryReason string            `json:"reach_frequency_campaign_underdelivery_reason,omitempty" jsonschema:"description=Reach Frequency Campaign Underdelivery Reason"`
	RejectedAdsCount                          int               `json:"rejected_ads_count,omitempty" jsonschema:"description=Rejected Ads Count"`
	StartTime                                 time.Time         `json:"start_time,omitempty" jsonschema:"description=Start Time,format=date-time"`
	Status                                    string            `json:"status,omitempty" jsonschema:"description=Current status of the DeliveryInfo,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	TextPenaltyLevel                          string            `json:"text_penalty_level,omitempty" jsonschema:"description=Text Penalty Level"`
}

// DeliveryStatus represents the Facebook DeliveryStatus object
type DeliveryStatus struct {
	Status      string   `json:"status,omitempty" jsonschema:"description=Current status of the DeliveryStatus,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	Substatuses []string `json:"substatuses,omitempty" jsonschema:"description=Substatuses"`
}

// DeliveryWindow represents the Facebook DeliveryWindow object
type DeliveryWindow struct {
	Ad  int `json:"ad,omitempty" jsonschema:"description=Ad"`
	Ae  int `json:"ae,omitempty" jsonschema:"description=Ae"`
	Af  int `json:"af,omitempty" jsonschema:"description=Af"`
	Ag  int `json:"ag,omitempty" jsonschema:"description=Ag"`
	Ai  int `json:"ai,omitempty" jsonschema:"description=Ai"`
	Al  int `json:"al,omitempty" jsonschema:"description=Al"`
	All int `json:"all,omitempty" jsonschema:"description=All"`
	Am  int `json:"am,omitempty" jsonschema:"description=Am"`
	An  int `json:"an,omitempty" jsonschema:"description=An"`
	Ao  int `json:"ao,omitempty" jsonschema:"description=Ao"`
	Aq  int `json:"aq,omitempty" jsonschema:"description=Aq"`
	Ar  int `json:"ar,omitempty" jsonschema:"description=Ar"`
	As  int `json:"as,omitempty" jsonschema:"description=As"`
	At  int `json:"at,omitempty" jsonschema:"description=At"`
	Au  int `json:"au,omitempty" jsonschema:"description=Au"`
	Aw  int `json:"aw,omitempty" jsonschema:"description=Aw"`
	Ax  int `json:"ax,omitempty" jsonschema:"description=Ax"`
	Az  int `json:"az,omitempty" jsonschema:"description=Az"`
	Ba  int `json:"ba,omitempty" jsonschema:"description=Ba"`
	Bb  int `json:"bb,omitempty" jsonschema:"description=Bb"`
	Bd  int `json:"bd,omitempty" jsonschema:"description=Bd"`
	Be  int `json:"be,omitempty" jsonschema:"description=Be"`
	Bf  int `json:"bf,omitempty" jsonschema:"description=Bf"`
	Bg  int `json:"bg,omitempty" jsonschema:"description=Bg"`
	Bh  int `json:"bh,omitempty" jsonschema:"description=Bh"`
	Bi  int `json:"bi,omitempty" jsonschema:"description=Bi"`
	Bj  int `json:"bj,omitempty" jsonschema:"description=Bj"`
	Bl  int `json:"bl,omitempty" jsonschema:"description=Bl"`
	Bm  int `json:"bm,omitempty" jsonschema:"description=Bm"`
	Bn  int `json:"bn,omitempty" jsonschema:"description=Bn"`
	Bo  int `json:"bo,omitempty" jsonschema:"description=Bo"`
	Bq  int `json:"bq,omitempty" jsonschema:"description=Bq"`
	Br  int `json:"br,omitempty" jsonschema:"description=Br"`
	Bs  int `json:"bs,omitempty" jsonschema:"description=Bs"`
	Bt  int `json:"bt,omitempty" jsonschema:"description=Bt"`
	Bv  int `json:"bv,omitempty" jsonschema:"description=Bv"`
	Bw  int `json:"bw,omitempty" jsonschema:"description=Bw"`
	By  int `json:"by,omitempty" jsonschema:"description=By"`
	Bz  int `json:"bz,omitempty" jsonschema:"description=Bz"`
	Ca  int `json:"ca,omitempty" jsonschema:"description=Ca"`
	Cc  int `json:"cc,omitempty" jsonschema:"description=Cc"`
	Cd  int `json:"cd,omitempty" jsonschema:"description=Cd"`
	Cf  int `json:"cf,omitempty" jsonschema:"description=Cf"`
	Cg  int `json:"cg,omitempty" jsonschema:"description=Cg"`
	Ch  int `json:"ch,omitempty" jsonschema:"description=Ch"`
	Ci  int `json:"ci,omitempty" jsonschema:"description=Ci"`
	Ck  int `json:"ck,omitempty" jsonschema:"description=Ck"`
	Cl  int `json:"cl,omitempty" jsonschema:"description=Cl"`
	Cm  int `json:"cm,omitempty" jsonschema:"description=Cm"`
	Cn  int `json:"cn,omitempty" jsonschema:"description=Cn"`
	Co  int `json:"co,omitempty" jsonschema:"description=Co"`
	Cr  int `json:"cr,omitempty" jsonschema:"description=Cr"`
	Cu  int `json:"cu,omitempty" jsonschema:"description=Cu"`
	Cv  int `json:"cv,omitempty" jsonschema:"description=Cv"`
	Cw  int `json:"cw,omitempty" jsonschema:"description=Cw"`
	Cx  int `json:"cx,omitempty" jsonschema:"description=Cx"`
	Cy  int `json:"cy,omitempty" jsonschema:"description=Cy"`
	Cz  int `json:"cz,omitempty" jsonschema:"description=Cz"`
	De  int `json:"de,omitempty" jsonschema:"description=De"`
	Dj  int `json:"dj,omitempty" jsonschema:"description=Dj"`
	Dk  int `json:"dk,omitempty" jsonschema:"description=Dk"`
	Dm  int `json:"dm,omitempty" jsonschema:"description=Dm"`
	Do  int `json:"do,omitempty" jsonschema:"description=Do"`
	Dz  int `json:"dz,omitempty" jsonschema:"description=Dz"`
	Ec  int `json:"ec,omitempty" jsonschema:"description=Ec"`
	Ee  int `json:"ee,omitempty" jsonschema:"description=Ee"`
	Eg  int `json:"eg,omitempty" jsonschema:"description=Eg"`
	Eh  int `json:"eh,omitempty" jsonschema:"description=Eh"`
	Er  int `json:"er,omitempty" jsonschema:"description=Er"`
	Es  int `json:"es,omitempty" jsonschema:"description=Es"`
	Et  int `json:"et,omitempty" jsonschema:"description=Et"`
	Fi  int `json:"fi,omitempty" jsonschema:"description=Fi"`
	Fj  int `json:"fj,omitempty" jsonschema:"description=Fj"`
	Fk  int `json:"fk,omitempty" jsonschema:"description=Fk"`
	Fm  int `json:"fm,omitempty" jsonschema:"description=Fm"`
	Fo  int `json:"fo,omitempty" jsonschema:"description=Fo"`
	Fr  int `json:"fr,omitempty" jsonschema:"description=Fr"`
	Ga  int `json:"ga,omitempty" jsonschema:"description=Ga"`
	Gb  int `json:"gb,omitempty" jsonschema:"description=Gb"`
	Gd  int `json:"gd,omitempty" jsonschema:"description=Gd"`
	Ge  int `json:"ge,omitempty" jsonschema:"description=Ge"`
	Gf  int `json:"gf,omitempty" jsonschema:"description=Gf"`
	Gg  int `json:"gg,omitempty" jsonschema:"description=Gg"`
	Gh  int `json:"gh,omitempty" jsonschema:"description=Gh"`
	Gi  int `json:"gi,omitempty" jsonschema:"description=Gi"`
	Gl  int `json:"gl,omitempty" jsonschema:"description=Gl"`
	Gm  int `json:"gm,omitempty" jsonschema:"description=Gm"`
	Gn  int `json:"gn,omitempty" jsonschema:"description=Gn"`
	Gp  int `json:"gp,omitempty" jsonschema:"description=Gp"`
	Gq  int `json:"gq,omitempty" jsonschema:"description=Gq"`
	Gr  int `json:"gr,omitempty" jsonschema:"description=Gr"`
	Gs  int `json:"gs,omitempty" jsonschema:"description=Gs"`
	Gt  int `json:"gt,omitempty" jsonschema:"description=Gt"`
	Gu  int `json:"gu,omitempty" jsonschema:"description=Gu"`
	Gw  int `json:"gw,omitempty" jsonschema:"description=Gw"`
	Gy  int `json:"gy,omitempty" jsonschema:"description=Gy"`
	Hk  int `json:"hk,omitempty" jsonschema:"description=Hk"`
	Hm  int `json:"hm,omitempty" jsonschema:"description=Hm"`
	Hn  int `json:"hn,omitempty" jsonschema:"description=Hn"`
	Hr  int `json:"hr,omitempty" jsonschema:"description=Hr"`
	Ht  int `json:"ht,omitempty" jsonschema:"description=Ht"`
	Hu  int `json:"hu,omitempty" jsonschema:"description=Hu"`
	ID  int `json:"id,omitempty" jsonschema:"description=DeliveryWindow ID,required,pattern=^[0-9]+$"`
	Ie  int `json:"ie,omitempty" jsonschema:"description=Ie"`
	Il  int `json:"il,omitempty" jsonschema:"description=Il"`
	Im  int `json:"im,omitempty" jsonschema:"description=Im"`
	In  int `json:"in,omitempty" jsonschema:"description=In"`
	Io  int `json:"io,omitempty" jsonschema:"description=Io"`
	Iq  int `json:"iq,omitempty" jsonschema:"description=Iq"`
	Ir  int `json:"ir,omitempty" jsonschema:"description=Ir"`
	Is  int `json:"is,omitempty" jsonschema:"description=Is"`
	It  int `json:"it,omitempty" jsonschema:"description=It"`
	Je  int `json:"je,omitempty" jsonschema:"description=Je"`
	Jm  int `json:"jm,omitempty" jsonschema:"description=Jm"`
	Jo  int `json:"jo,omitempty" jsonschema:"description=Jo"`
	Jp  int `json:"jp,omitempty" jsonschema:"description=Jp"`
	Ke  int `json:"ke,omitempty" jsonschema:"description=Ke"`
	Kg  int `json:"kg,omitempty" jsonschema:"description=Kg"`
	Kh  int `json:"kh,omitempty" jsonschema:"description=Kh"`
	Ki  int `json:"ki,omitempty" jsonschema:"description=Ki"`
	Km  int `json:"km,omitempty" jsonschema:"description=Km"`
	Kn  int `json:"kn,omitempty" jsonschema:"description=Kn"`
	Kp  int `json:"kp,omitempty" jsonschema:"description=Kp"`
	Kr  int `json:"kr,omitempty" jsonschema:"description=Kr"`
	Kw  int `json:"kw,omitempty" jsonschema:"description=Kw"`
	Ky  int `json:"ky,omitempty" jsonschema:"description=Ky"`
	Kz  int `json:"kz,omitempty" jsonschema:"description=Kz"`
	La  int `json:"la,omitempty" jsonschema:"description=La"`
	Lb  int `json:"lb,omitempty" jsonschema:"description=Lb"`
	Lc  int `json:"lc,omitempty" jsonschema:"description=Lc"`
	Li  int `json:"li,omitempty" jsonschema:"description=Li"`
	Lk  int `json:"lk,omitempty" jsonschema:"description=Lk"`
	Lr  int `json:"lr,omitempty" jsonschema:"description=Lr"`
	Ls  int `json:"ls,omitempty" jsonschema:"description=Ls"`
	Lt  int `json:"lt,omitempty" jsonschema:"description=Lt"`
	Lu  int `json:"lu,omitempty" jsonschema:"description=Lu"`
	Lv  int `json:"lv,omitempty" jsonschema:"description=Lv"`
	Ly  int `json:"ly,omitempty" jsonschema:"description=Ly"`
	Ma  int `json:"ma,omitempty" jsonschema:"description=Ma"`
	Mc  int `json:"mc,omitempty" jsonschema:"description=Mc"`
	Md  int `json:"md,omitempty" jsonschema:"description=Md"`
	Me  int `json:"me,omitempty" jsonschema:"description=Me"`
	Mf  int `json:"mf,omitempty" jsonschema:"description=Mf"`
	Mg  int `json:"mg,omitempty" jsonschema:"description=Mg"`
	Mh  int `json:"mh,omitempty" jsonschema:"description=Mh"`
	Mk  int `json:"mk,omitempty" jsonschema:"description=Mk"`
	Ml  int `json:"ml,omitempty" jsonschema:"description=Ml"`
	Mm  int `json:"mm,omitempty" jsonschema:"description=Mm"`
	Mn  int `json:"mn,omitempty" jsonschema:"description=Mn"`
	Mo  int `json:"mo,omitempty" jsonschema:"description=Mo"`
	Mp  int `json:"mp,omitempty" jsonschema:"description=Mp"`
	Mq  int `json:"mq,omitempty" jsonschema:"description=Mq"`
	Mr  int `json:"mr,omitempty" jsonschema:"description=Mr"`
	Ms  int `json:"ms,omitempty" jsonschema:"description=Ms"`
	Mt  int `json:"mt,omitempty" jsonschema:"description=Mt"`
	Mu  int `json:"mu,omitempty" jsonschema:"description=Mu"`
	Mv  int `json:"mv,omitempty" jsonschema:"description=Mv"`
	Mw  int `json:"mw,omitempty" jsonschema:"description=Mw"`
	Mx  int `json:"mx,omitempty" jsonschema:"description=Mx"`
	My  int `json:"my,omitempty" jsonschema:"description=My"`
	Mz  int `json:"mz,omitempty" jsonschema:"description=Mz"`
	Na  int `json:"na,omitempty" jsonschema:"description=Na"`
	Nc  int `json:"nc,omitempty" jsonschema:"description=Nc"`
	Ne  int `json:"ne,omitempty" jsonschema:"description=Ne"`
	Nf  int `json:"nf,omitempty" jsonschema:"description=Nf"`
	Ng  int `json:"ng,omitempty" jsonschema:"description=Ng"`
	Ni  int `json:"ni,omitempty" jsonschema:"description=Ni"`
	Nl  int `json:"nl,omitempty" jsonschema:"description=Nl"`
	No  int `json:"no,omitempty" jsonschema:"description=No"`
	Np  int `json:"np,omitempty" jsonschema:"description=Np"`
	Nr  int `json:"nr,omitempty" jsonschema:"description=Nr"`
	Nu  int `json:"nu,omitempty" jsonschema:"description=Nu"`
	Nz  int `json:"nz,omitempty" jsonschema:"description=Nz"`
	Om  int `json:"om,omitempty" jsonschema:"description=Om"`
	Pa  int `json:"pa,omitempty" jsonschema:"description=Pa"`
	Pe  int `json:"pe,omitempty" jsonschema:"description=Pe"`
	Pf  int `json:"pf,omitempty" jsonschema:"description=Pf"`
	Pg  int `json:"pg,omitempty" jsonschema:"description=Pg"`
	Ph  int `json:"ph,omitempty" jsonschema:"description=Ph"`
	Pk  int `json:"pk,omitempty" jsonschema:"description=Pk"`
	Pl  int `json:"pl,omitempty" jsonschema:"description=Pl"`
	Pm  int `json:"pm,omitempty" jsonschema:"description=Pm"`
	Pn  int `json:"pn,omitempty" jsonschema:"description=Pn"`
	Pr  int `json:"pr,omitempty" jsonschema:"description=Pr"`
	Ps  int `json:"ps,omitempty" jsonschema:"description=Ps"`
	Pt  int `json:"pt,omitempty" jsonschema:"description=Pt"`
	Pw  int `json:"pw,omitempty" jsonschema:"description=Pw"`
	Py  int `json:"py,omitempty" jsonschema:"description=Py"`
	Qa  int `json:"qa,omitempty" jsonschema:"description=Qa"`
	Re  int `json:"re,omitempty" jsonschema:"description=Re"`
	Ro  int `json:"ro,omitempty" jsonschema:"description=Ro"`
	Rs  int `json:"rs,omitempty" jsonschema:"description=Rs"`
	Ru  int `json:"ru,omitempty" jsonschema:"description=Ru"`
	Rw  int `json:"rw,omitempty" jsonschema:"description=Rw"`
	Sa  int `json:"sa,omitempty" jsonschema:"description=Sa"`
	Sb  int `json:"sb,omitempty" jsonschema:"description=Sb"`
	Sc  int `json:"sc,omitempty" jsonschema:"description=Sc"`
	Sd  int `json:"sd,omitempty" jsonschema:"description=Sd"`
	Se  int `json:"se,omitempty" jsonschema:"description=Se"`
	Sg  int `json:"sg,omitempty" jsonschema:"description=Sg"`
	Sh  int `json:"sh,omitempty" jsonschema:"description=Sh"`
	Si  int `json:"si,omitempty" jsonschema:"description=Si"`
	Sj  int `json:"sj,omitempty" jsonschema:"description=Sj"`
	Sk  int `json:"sk,omitempty" jsonschema:"description=Sk"`
	Sl  int `json:"sl,omitempty" jsonschema:"description=Sl"`
	Sm  int `json:"sm,omitempty" jsonschema:"description=Sm"`
	Sn  int `json:"sn,omitempty" jsonschema:"description=Sn"`
	So  int `json:"so,omitempty" jsonschema:"description=So"`
	Sr  int `json:"sr,omitempty" jsonschema:"description=Sr"`
	Ss  int `json:"ss,omitempty" jsonschema:"description=Ss"`
	St  int `json:"st,omitempty" jsonschema:"description=St"`
	Sv  int `json:"sv,omitempty" jsonschema:"description=Sv"`
	Sx  int `json:"sx,omitempty" jsonschema:"description=Sx"`
	Sy  int `json:"sy,omitempty" jsonschema:"description=Sy"`
	Sz  int `json:"sz,omitempty" jsonschema:"description=Sz"`
	Tc  int `json:"tc,omitempty" jsonschema:"description=Tc"`
	Td  int `json:"td,omitempty" jsonschema:"description=Td"`
	Tf  int `json:"tf,omitempty" jsonschema:"description=Tf"`
	Tg  int `json:"tg,omitempty" jsonschema:"description=Tg"`
	Th  int `json:"th,omitempty" jsonschema:"description=Th"`
	Tj  int `json:"tj,omitempty" jsonschema:"description=Tj"`
	Tk  int `json:"tk,omitempty" jsonschema:"description=Tk"`
	Tl  int `json:"tl,omitempty" jsonschema:"description=Tl"`
	Tm  int `json:"tm,omitempty" jsonschema:"description=Tm"`
	Tn  int `json:"tn,omitempty" jsonschema:"description=Tn"`
	To  int `json:"to,omitempty" jsonschema:"description=To"`
	Tr  int `json:"tr,omitempty" jsonschema:"description=Tr"`
	Tt  int `json:"tt,omitempty" jsonschema:"description=Tt"`
	Tv  int `json:"tv,omitempty" jsonschema:"description=Tv"`
	Tw  int `json:"tw,omitempty" jsonschema:"description=Tw"`
	Tz  int `json:"tz,omitempty" jsonschema:"description=Tz"`
	Ua  int `json:"ua,omitempty" jsonschema:"description=Ua"`
	Ug  int `json:"ug,omitempty" jsonschema:"description=Ug"`
	Um  int `json:"um,omitempty" jsonschema:"description=Um"`
	Us  int `json:"us,omitempty" jsonschema:"description=Us"`
	Uy  int `json:"uy,omitempty" jsonschema:"description=Uy"`
	Uz  int `json:"uz,omitempty" jsonschema:"description=Uz"`
	Va  int `json:"va,omitempty" jsonschema:"description=Va"`
	Vc  int `json:"vc,omitempty" jsonschema:"description=Vc"`
	Ve  int `json:"ve,omitempty" jsonschema:"description=Ve"`
	Vg  int `json:"vg,omitempty" jsonschema:"description=Vg"`
	Vi  int `json:"vi,omitempty" jsonschema:"description=Vi"`
	Vn  int `json:"vn,omitempty" jsonschema:"description=Vn"`
	Vu  int `json:"vu,omitempty" jsonschema:"description=Vu"`
	Wf  int `json:"wf,omitempty" jsonschema:"description=Wf"`
	Ws  int `json:"ws,omitempty" jsonschema:"description=Ws"`
	Xk  int `json:"xk,omitempty" jsonschema:"description=Xk"`
	Ye  int `json:"ye,omitempty" jsonschema:"description=Ye"`
	Yt  int `json:"yt,omitempty" jsonschema:"description=Yt"`
	Za  int `json:"za,omitempty" jsonschema:"description=Za"`
	Zm  int `json:"zm,omitempty" jsonschema:"description=Zm"`
	Zw  int `json:"zw,omitempty" jsonschema:"description=Zw"`
}

// Destination represents the Facebook Destination object
type Destination struct {
	Address                string                      `json:"address,omitempty" jsonschema:"description=Address"`
	Applinks               *CatalogItemAppLinks        `json:"applinks,omitempty" jsonschema:"description=Applinks"`
	CategorySpecificFields *CatalogSubVerticalList     `json:"category_specific_fields,omitempty" jsonschema:"description=Category Specific Fields"`
	Currency               string                      `json:"currency,omitempty" jsonschema:"description=Currency"`
	CustomLabel0           string                      `json:"custom_label_0,omitempty" jsonschema:"description=Custom Label 0"`
	CustomLabel1           string                      `json:"custom_label_1,omitempty" jsonschema:"description=Custom Label 1"`
	CustomLabel2           string                      `json:"custom_label_2,omitempty" jsonschema:"description=Custom Label 2"`
	CustomLabel3           string                      `json:"custom_label_3,omitempty" jsonschema:"description=Custom Label 3"`
	CustomLabel4           string                      `json:"custom_label_4,omitempty" jsonschema:"description=Custom Label 4"`
	CustomNumber0          uint                        `json:"custom_number_0,omitempty" jsonschema:"description=Custom Number 0"`
	CustomNumber1          uint                        `json:"custom_number_1,omitempty" jsonschema:"description=Custom Number 1"`
	CustomNumber2          uint                        `json:"custom_number_2,omitempty" jsonschema:"description=Custom Number 2"`
	CustomNumber3          uint                        `json:"custom_number_3,omitempty" jsonschema:"description=Custom Number 3"`
	CustomNumber4          uint                        `json:"custom_number_4,omitempty" jsonschema:"description=Custom Number 4"`
	Description            string                      `json:"description,omitempty" jsonschema:"description=Description"`
	DestinationID          string                      `json:"destination_id,omitempty" jsonschema:"description=ID of the Destination,pattern=^[0-9]+$"`
	ID                     string                      `json:"id,omitempty" jsonschema:"description=Destination ID,required,pattern=^[0-9]+$"`
	ImageFetchStatus       DestinationImageFetchStatus `json:"image_fetch_status,omitempty" jsonschema:"description=Image Fetch Status"`
	Images                 []string                    `json:"images,omitempty" jsonschema:"description=Images"`
	Name                   string                      `json:"name,omitempty" jsonschema:"description=Name of the Destination,required"`
	Price                  string                      `json:"price,omitempty" jsonschema:"description=Price"`
	PriceChange            string                      `json:"price_change,omitempty" jsonschema:"description=Price Change"`
	SanitizedImages        []string                    `json:"sanitized_images,omitempty" jsonschema:"description=Sanitized Images"`
	Tags                   []string                    `json:"tags,omitempty" jsonschema:"description=Tags"`
	Types                  []string                    `json:"types,omitempty" jsonschema:"description=Types"`
	UnitPrice              map[string]interface{}      `json:"unit_price,omitempty" jsonschema:"description=Unit Price"`
	URL                    string                      `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
	Visibility             DestinationVisibility       `json:"visibility,omitempty" jsonschema:"description=Visibility"`
}

// DirectDebit represents the Facebook DirectDebit object
type DirectDebit struct {
	BankAccountLast4               string   `json:"bank_account_last_4,omitempty" jsonschema:"description=Bank Account Last 4"`
	BankCodeLast4                  string   `json:"bank_code_last_4,omitempty" jsonschema:"description=Bank Code Last 4"`
	BankName                       string   `json:"bank_name,omitempty" jsonschema:"description=Bank Name"`
	DefaultReceivingMethodProducts []string `json:"default_receiving_method_products,omitempty" jsonschema:"description=Default Receiving Method Products"`
	DisplayString                  string   `json:"display_string,omitempty" jsonschema:"description=Display String"`
	ID                             string   `json:"id,omitempty" jsonschema:"description=DirectDebit ID,required,pattern=^[0-9]+$"`
	LastFourDigits                 string   `json:"last_four_digits,omitempty" jsonschema:"description=Last Four Digits"`
	OnboardingURL                  string   `json:"onboarding_url,omitempty" jsonschema:"description=Onboarding URL,format=uri"`
	OwnerName                      string   `json:"owner_name,omitempty" jsonschema:"description=Owner Name"`
	Status                         int      `json:"status,omitempty" jsonschema:"description=Current status of the DirectDebit"`
}

// DraftPost represents the Facebook DraftPost object
type DraftPost struct {
	AdminCreator            *User      `json:"admin_creator,omitempty" jsonschema:"description=Admin Creator"`
	CreationTime            time.Time  `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	FeedAudienceDescription string     `json:"feed_audience_description,omitempty" jsonschema:"description=Feed Audience Description"`
	FeedTargeting           *Targeting `json:"feed_targeting,omitempty" jsonschema:"description=Feed Targeting"`
	ID                      string     `json:"id,omitempty" jsonschema:"description=DraftPost ID,required,pattern=^[0-9]+$"`
	IsPostInGoodState       bool       `json:"is_post_in_good_state,omitempty" jsonschema:"description=Is Post In Good State"`
	Message                 string     `json:"message,omitempty" jsonschema:"description=Message"`
	ModifiedTime            time.Time  `json:"modified_time,omitempty" jsonschema:"description=Modified Time,format=date-time"`
	OgActionSummary         string     `json:"og_action_summary,omitempty" jsonschema:"description=Og Action Summary"`
	PermalinkURL            string     `json:"permalink_url,omitempty" jsonschema:"description=Permalink URL,format=uri"`
	Place                   *Place     `json:"place,omitempty" jsonschema:"description=Place"`
	PrivacyDescription      string     `json:"privacy_description,omitempty" jsonschema:"description=Privacy Description"`
	ScheduledFailureNotice  string     `json:"scheduled_failure_notice,omitempty" jsonschema:"description=Scheduled Failure Notice"`
	ScheduledPublishTime    time.Time  `json:"scheduled_publish_time,omitempty" jsonschema:"description=Scheduled Publish Time,format=date-time"`
	StoryToken              string     `json:"story_token,omitempty" jsonschema:"description=Story Token"`
	Thumbnail               string     `json:"thumbnail,omitempty" jsonschema:"description=Thumbnail"`
	VideoID                 string     `json:"video_id,omitempty" jsonschema:"description=ID of the Video,pattern=^[0-9]+$"`
}

// DynamicARMetadata represents the Facebook DynamicARMetadata object
type DynamicARMetadata struct {
	AnchorPoint         []float64 `json:"anchor_point,omitempty" jsonschema:"description=Anchor Point"`
	ContainerEffectEnum int       `json:"container_effect_enum,omitempty" jsonschema:"description=Container Effect Enum"`
	EffectIconURL       string    `json:"effect_icon_url,omitempty" jsonschema:"description=Effect Icon URL,format=uri"`
	EffectID            string    `json:"effect_id,omitempty" jsonschema:"description=ID of the Effect,pattern=^[0-9]+$"`
	ID                  string    `json:"id,omitempty" jsonschema:"description=DynamicARMetadata ID,required,pattern=^[0-9]+$"`
	Platforms           []string  `json:"platforms,omitempty" jsonschema:"description=Platforms"`
	ScaleFactor         []float64 `json:"scale_factor,omitempty" jsonschema:"description=Scale Factor"`
	ShadowTextureURL    string    `json:"shadow_texture_url,omitempty" jsonschema:"description=Shadow Texture URL,format=uri"`
	SourceURL           string    `json:"source_url,omitempty" jsonschema:"description=Source URL,format=uri"`
	State               string    `json:"state,omitempty" jsonschema:"description=State"`
	Tags                []string  `json:"tags,omitempty" jsonschema:"description=Tags"`
	VariantPickerURL    string    `json:"variant_picker_url,omitempty" jsonschema:"description=Variant Picker URL,format=uri"`
}

// DynamicContentSet represents the Facebook DynamicContentSet object
type DynamicContentSet struct {
	BusinessID string `json:"business_id,omitempty" jsonschema:"description=ID of the Business,pattern=^[0-9]+$"`
	ID         string `json:"id,omitempty" jsonschema:"description=DynamicContentSet ID,required,pattern=^[0-9]+$"`
	Name       string `json:"name,omitempty" jsonschema:"description=Name of the DynamicContentSet,required"`
}

// DynamicItemDisplayBundle represents the Facebook DynamicItemDisplayBundle object
type DynamicItemDisplayBundle struct {
	AdditionalURLs []map[string]string `json:"additional_urls,omitempty" jsonschema:"description=Additional Urls,format=uri"`
	Description    string              `json:"description,omitempty" jsonschema:"description=Description"`
	ID             string              `json:"id,omitempty" jsonschema:"description=DynamicItemDisplayBundle ID,required,pattern=^[0-9]+$"`
	Name           string              `json:"name,omitempty" jsonschema:"description=Name of the DynamicItemDisplayBundle,required"`
	ProductSet     *ProductSet         `json:"product_set,omitempty" jsonschema:"description=Product Set"`
	TextTokens     []map[string]string `json:"text_tokens,omitempty" jsonschema:"description=Text Tokens"`
	URL            string              `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
}

// DynamicItemDisplayBundleFolder represents the Facebook DynamicItemDisplayBundleFolder object
type DynamicItemDisplayBundleFolder struct {
	CategorizationCriteria string                `json:"categorization_criteria,omitempty" jsonschema:"description=Categorization Criteria"`
	ID                     string                `json:"id,omitempty" jsonschema:"description=DynamicItemDisplayBundleFolder ID,required,pattern=^[0-9]+$"`
	Name                   string                `json:"name,omitempty" jsonschema:"description=Name of the DynamicItemDisplayBundleFolder,required"`
	ProductCatalog         *ProductCatalog       `json:"product_catalog,omitempty" jsonschema:"description=Product Catalog"`
	ProductSet             *ProductSet           `json:"product_set,omitempty" jsonschema:"description=Product Set"`
	ValidLabels            []map[string][]string `json:"valid_labels,omitempty" jsonschema:"description=Valid Labels"`
}

// DynamicPostChildAttachment represents the Facebook DynamicPostChildAttachment object
type DynamicPostChildAttachment struct {
	Description string `json:"description,omitempty" jsonschema:"description=Description"`
	ImageURL    string `json:"image_url,omitempty" jsonschema:"description=Image URL,format=uri"`
	Link        string `json:"link,omitempty" jsonschema:"description=Link"`
	PlaceID     string `json:"place_id,omitempty" jsonschema:"description=ID of the Place,pattern=^[0-9]+$"`
	ProductID   string `json:"product_id,omitempty" jsonschema:"description=ID of the Product,pattern=^[0-9]+$"`
	Title       string `json:"title,omitempty" jsonschema:"description=Title"`
}

// DynamicPriceConfigByDate represents the Facebook DynamicPriceConfigByDate object
type DynamicPriceConfigByDate struct {
	CheckinDate  string                   `json:"checkin_date,omitempty" jsonschema:"description=Checkin Date"`
	Prices       string                   `json:"prices,omitempty" jsonschema:"description=Prices"`
	PricesPretty []map[string]interface{} `json:"prices_pretty,omitempty" jsonschema:"description=Prices Pretty"`
}

// DynamicVideoMetadata represents the Facebook DynamicVideoMetadata object
type DynamicVideoMetadata struct {
	ID    string   `json:"id,omitempty" jsonschema:"description=DynamicVideoMetadata ID,required,pattern=^[0-9]+$"`
	Tags  []string `json:"tags,omitempty" jsonschema:"description=Tags"`
	URL   string   `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
	Video *AdVideo `json:"video,omitempty" jsonschema:"description=Video"`
}

// EducationExperience represents the Facebook EducationExperience object
type EducationExperience struct {
	Classes       []*Experience `json:"classes,omitempty" jsonschema:"description=Classes"`
	Concentration []*Page       `json:"concentration,omitempty" jsonschema:"description=Concentration"`
	Degree        *Page         `json:"degree,omitempty" jsonschema:"description=Degree"`
	ID            string        `json:"id,omitempty" jsonschema:"description=EducationExperience ID,required,pattern=^[0-9]+$"`
	School        *Page         `json:"school,omitempty" jsonschema:"description=School"`
	Type          string        `json:"type,omitempty" jsonschema:"description=Type"`
	With          []*User       `json:"with,omitempty" jsonschema:"description=With"`
	Year          *Page         `json:"year,omitempty" jsonschema:"description=Year"`
}

// EmailImport represents the Facebook EmailImport object
type EmailImport struct {
	Lists []map[string]interface{} `json:"lists,omitempty" jsonschema:"description=Lists"`
	Total uint                     `json:"total,omitempty" jsonschema:"description=Total"`
}

// EndStudyCriteria represents the Facebook EndStudyCriteria object
type EndStudyCriteria struct {
}

// Engagement represents the Facebook Engagement object
type Engagement struct {
	Count                     uint   `json:"count,omitempty" jsonschema:"description=Count"`
	CountString               string `json:"count_string,omitempty" jsonschema:"description=Count String"`
	CountStringWithLike       string `json:"count_string_with_like,omitempty" jsonschema:"description=Count String With Like"`
	CountStringWithoutLike    string `json:"count_string_without_like,omitempty" jsonschema:"description=Count String Without Like"`
	SocialSentence            string `json:"social_sentence,omitempty" jsonschema:"description=Social Sentence"`
	SocialSentenceWithLike    string `json:"social_sentence_with_like,omitempty" jsonschema:"description=Social Sentence With Like"`
	SocialSentenceWithoutLike string `json:"social_sentence_without_like,omitempty" jsonschema:"description=Social Sentence Without Like"`
}

// EntWithSponsor represents the Facebook EntWithSponsor object
type EntWithSponsor struct {
	ID                           string `json:"id,omitempty" jsonschema:"description=EntWithSponsor ID,required,pattern=^[0-9]+$"`
	OwnerLinkedInstagramUserV1ID string `json:"owner_linked_instagram_user_v1_id,omitempty" jsonschema:"description=ID of the Owner Linked Instagram User V1,pattern=^[0-9]+$"`
	OwnerPicture                 string `json:"owner_picture,omitempty" jsonschema:"description=Owner Picture"`
	PostID                       string `json:"post_id,omitempty" jsonschema:"description=ID of the Post,pattern=^[0-9]+$"`
	PostInfo                     *Post  `json:"post_info,omitempty" jsonschema:"description=Post Info"`
}

// EntityAtTextRange represents the Facebook EntityAtTextRange object
type EntityAtTextRange struct {
	ID     string                `json:"id,omitempty" jsonschema:"description=EntityAtTextRange ID,required,pattern=^[0-9]+$"`
	Length uint                  `json:"length,omitempty" jsonschema:"description=Length"`
	Name   string                `json:"name,omitempty" jsonschema:"description=Name of the EntityAtTextRange,required"`
	Object *Profile              `json:"object,omitempty" jsonschema:"description=Object"`
	Offset uint                  `json:"offset,omitempty" jsonschema:"description=Offset"`
	Type   EntityattextrangeType `json:"type,omitempty" jsonschema:"description=Type"`
}

// Event represents the Facebook Event object
type Event struct {
	AttendingCount           int                       `json:"attending_count,omitempty" jsonschema:"description=Attending Count"`
	CanGuestsInvite          bool                      `json:"can_guests_invite,omitempty" jsonschema:"description=Can Guests Invite"`
	Category                 EventCategory             `json:"category,omitempty" jsonschema:"description=Category"`
	Cover                    *CoverPhoto               `json:"cover,omitempty" jsonschema:"description=Cover"`
	CreatedTime              time.Time                 `json:"created_time,omitempty" jsonschema:"description=When the Event was created,format=date-time"`
	DeclinedCount            int                       `json:"declined_count,omitempty" jsonschema:"description=Declined Count"`
	Description              string                    `json:"description,omitempty" jsonschema:"description=Description"`
	DiscountCodeEnabled      bool                      `json:"discount_code_enabled,omitempty" jsonschema:"description=Discount Code Enabled"`
	EndTime                  string                    `json:"end_time,omitempty" jsonschema:"description=End Time"`
	EventTimes               []*ChildEvent             `json:"event_times,omitempty" jsonschema:"description=Event Times"`
	GuestListEnabled         bool                      `json:"guest_list_enabled,omitempty" jsonschema:"description=Guest List Enabled"`
	ID                       string                    `json:"id,omitempty" jsonschema:"description=Event ID,required,pattern=^[0-9]+$"`
	InterestedCount          int                       `json:"interested_count,omitempty" jsonschema:"description=Interested Count"`
	IsCanceled               bool                      `json:"is_canceled,omitempty" jsonschema:"description=Is Canceled"`
	IsDraft                  bool                      `json:"is_draft,omitempty" jsonschema:"description=Is Draft"`
	IsOnline                 bool                      `json:"is_online,omitempty" jsonschema:"description=Is Online"`
	IsPageOwned              bool                      `json:"is_page_owned,omitempty" jsonschema:"description=Is Page Owned"`
	MaybeCount               int                       `json:"maybe_count,omitempty" jsonschema:"description=Maybe Count"`
	Name                     string                    `json:"name,omitempty" jsonschema:"description=Name of the Event,required"`
	NoreplyCount             int                       `json:"noreply_count,omitempty" jsonschema:"description=Noreply Count"`
	OnlineEventFormat        EventOnlineEventFormat    `json:"online_event_format,omitempty" jsonschema:"description=Online Event Format"`
	OnlineEventThirdPartyURL string                    `json:"online_event_third_party_url,omitempty" jsonschema:"description=Online Event Third Party URL,format=uri"`
	Owner                    map[string]interface{}    `json:"owner,omitempty" jsonschema:"description=Owner"`
	ParentGroup              *Group                    `json:"parent_group,omitempty" jsonschema:"description=Parent Group"`
	Place                    *Place                    `json:"place,omitempty" jsonschema:"description=Place"`
	RegistrationSetting      *EventRegistrationSetting `json:"registration_setting,omitempty" jsonschema:"description=Registration Setting"`
	ScheduledPublishTime     string                    `json:"scheduled_publish_time,omitempty" jsonschema:"description=Scheduled Publish Time"`
	StartTime                string                    `json:"start_time,omitempty" jsonschema:"description=Start Time"`
	SubCategories            []string                  `json:"sub_categories,omitempty" jsonschema:"description=Sub Categories"`
	TicketSellingStatus      string                    `json:"ticket_selling_status,omitempty" jsonschema:"description=Ticket Selling Status"`
	TicketSetting            *EventTicketSetting       `json:"ticket_setting,omitempty" jsonschema:"description=Ticket Setting"`
	TicketUri                string                    `json:"ticket_uri,omitempty" jsonschema:"description=Ticket Uri"`
	TicketUriStartSalesTime  string                    `json:"ticket_uri_start_sales_time,omitempty" jsonschema:"description=Ticket Uri Start Sales Time"`
	TicketingPrivacyUri      string                    `json:"ticketing_privacy_uri,omitempty" jsonschema:"description=Ticketing Privacy Uri"`
	TicketingTermsUri        string                    `json:"ticketing_terms_uri,omitempty" jsonschema:"description=Ticketing Terms Uri"`
	Timezone                 string                    `json:"timezone,omitempty" jsonschema:"description=Timezone"`
	Type                     EventType                 `json:"type,omitempty" jsonschema:"description=Type"`
	UpdatedTime              time.Time                 `json:"updated_time,omitempty" jsonschema:"description=When the Event was last updated,format=date-time"`
}

// EventExternalTicketInfo represents the Facebook EventExternalTicketInfo object
type EventExternalTicketInfo struct {
	ID            string          `json:"id,omitempty" jsonschema:"description=EventExternalTicketInfo ID,required,pattern=^[0-9]+$"`
	MaxSalesPrice *CurrencyAmount `json:"max_sales_price,omitempty" jsonschema:"description=Max Sales Price"`
	MinSalesPrice *CurrencyAmount `json:"min_sales_price,omitempty" jsonschema:"description=Min Sales Price"`
	SalesStatus   string          `json:"sales_status,omitempty" jsonschema:"description=Sales Status"`
}

// EventRegistrationSetting represents the Facebook EventRegistrationSetting object
type EventRegistrationSetting struct {
	ID            string   `json:"id,omitempty" jsonschema:"description=EventRegistrationSetting ID,required,pattern=^[0-9]+$"`
	Questions     string   `json:"questions,omitempty" jsonschema:"description=Questions"`
	TargetType    string   `json:"target_type,omitempty" jsonschema:"description=Target Type"`
	TicketTierIDs []string `json:"ticket_tier_ids,omitempty" jsonschema:"description=Ticket Tier Ids,pattern=^[0-9]+$"`
}

// EventSourceGroup represents the Facebook EventSourceGroup object
type EventSourceGroup struct {
	Business      *Business              `json:"business,omitempty" jsonschema:"description=Business"`
	EventSources  []*ExternalEventSource `json:"event_sources,omitempty" jsonschema:"description=Event Sources"`
	ID            string                 `json:"id,omitempty" jsonschema:"description=EventSourceGroup ID,required,pattern=^[0-9]+$"`
	Name          string                 `json:"name,omitempty" jsonschema:"description=Name of the EventSourceGroup,required"`
	OwnerBusiness *Business              `json:"owner_business,omitempty" jsonschema:"description=Owner Business"`
}

// EventTicketSetting represents the Facebook EventTicketSetting object
type EventTicketSetting struct {
	ID                 string `json:"id,omitempty" jsonschema:"description=EventTicketSetting ID,required,pattern=^[0-9]+$"`
	TicketDeliveryType string `json:"ticket_delivery_type,omitempty" jsonschema:"description=Ticket Delivery Type"`
}

// EventTicketTier represents the Facebook EventTicketTier object
type EventTicketTier struct {
	Currency           string    `json:"currency,omitempty" jsonschema:"description=Currency"`
	Description        string    `json:"description,omitempty" jsonschema:"description=Description"`
	EndSalesTime       time.Time `json:"end_sales_time,omitempty" jsonschema:"description=End Sales Time,format=date-time"`
	EndShowTime        time.Time `json:"end_show_time,omitempty" jsonschema:"description=End Show Time,format=date-time"`
	FeeSettings        string    `json:"fee_settings,omitempty" jsonschema:"description=Fee Settings"`
	ID                 string    `json:"id,omitempty" jsonschema:"description=EventTicketTier ID,required,pattern=^[0-9]+$"`
	MaximumQuantity    int       `json:"maximum_quantity,omitempty" jsonschema:"description=Maximum Quantity"`
	Metadata           string    `json:"metadata,omitempty" jsonschema:"description=Metadata"`
	MinimumQuantity    int       `json:"minimum_quantity,omitempty" jsonschema:"description=Minimum Quantity"`
	Name               string    `json:"name,omitempty" jsonschema:"description=Name of the EventTicketTier,required"`
	Price              int       `json:"price,omitempty" jsonschema:"description=Price"`
	Priority           int       `json:"priority,omitempty" jsonschema:"description=Priority"`
	RetailerID         string    `json:"retailer_id,omitempty" jsonschema:"description=ID of the Retailer,pattern=^[0-9]+$"`
	SeatingMapImageURL string    `json:"seating_map_image_url,omitempty" jsonschema:"description=Seating Map Image URL,format=uri"`
	StartSalesTime     time.Time `json:"start_sales_time,omitempty" jsonschema:"description=Start Sales Time,format=date-time"`
	StartShowTime      time.Time `json:"start_show_time,omitempty" jsonschema:"description=Start Show Time,format=date-time"`
	Status             string    `json:"status,omitempty" jsonschema:"description=Current status of the EventTicketTier,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	TotalQuantity      int       `json:"total_quantity,omitempty" jsonschema:"description=Total Quantity"`
}

// EventTour represents the Facebook EventTour object
type EventTour struct {
	Description               string   `json:"description,omitempty" jsonschema:"description=Description"`
	DominantColor             string   `json:"dominant_color,omitempty" jsonschema:"description=Dominant Color"`
	EndTime                   string   `json:"end_time,omitempty" jsonschema:"description=End Time"`
	ID                        string   `json:"id,omitempty" jsonschema:"description=EventTour ID,required,pattern=^[0-9]+$"`
	IsPast                    bool     `json:"is_past,omitempty" jsonschema:"description=Is Past"`
	LastEventTimestamp        int      `json:"last_event_timestamp,omitempty" jsonschema:"description=Last Event Timestamp"`
	Name                      string   `json:"name,omitempty" jsonschema:"description=Name of the EventTour,required"`
	NumEvents                 int      `json:"num_events,omitempty" jsonschema:"description=Num Events"`
	Photo                     *Photo   `json:"photo,omitempty" jsonschema:"description=Photo"`
	ScheduledPublishTimestamp int      `json:"scheduled_publish_timestamp,omitempty" jsonschema:"description=Scheduled Publish Timestamp"`
	StartTime                 string   `json:"start_time,omitempty" jsonschema:"description=Start Time"`
	TicketingUri              string   `json:"ticketing_uri,omitempty" jsonschema:"description=Ticketing Uri"`
	Video                     *AdVideo `json:"video,omitempty" jsonschema:"description=Video"`
}

// Experience represents the Facebook Experience object
type Experience struct {
	Description string                 `json:"description,omitempty" jsonschema:"description=Description"`
	From        map[string]interface{} `json:"from,omitempty" jsonschema:"description=From"`
	ID          string                 `json:"id,omitempty" jsonschema:"description=Experience ID,required,pattern=^[0-9]+$"`
	Name        string                 `json:"name,omitempty" jsonschema:"description=Name of the Experience,required"`
	With        []*User                `json:"with,omitempty" jsonschema:"description=With"`
}

// ExtendedCredit represents the Facebook ExtendedCredit object
type ExtendedCredit struct {
	AllocatedAmount                 *CurrencyAmount                 `json:"allocated_amount,omitempty" jsonschema:"description=Allocated Amount"`
	Balance                         *CurrencyAmount                 `json:"balance,omitempty" jsonschema:"description=Balance"`
	CreditAvailable                 *CurrencyAmount                 `json:"credit_available,omitempty" jsonschema:"description=Credit Available"`
	CreditType                      string                          `json:"credit_type,omitempty" jsonschema:"description=Credit Type"`
	ID                              string                          `json:"id,omitempty" jsonschema:"description=ExtendedCredit ID,required,pattern=^[0-9]+$"`
	IsAccessRevoked                 bool                            `json:"is_access_revoked,omitempty" jsonschema:"description=Is Access Revoked"`
	IsAutomatedExperience           bool                            `json:"is_automated_experience,omitempty" jsonschema:"description=Is Automated Experience"`
	LegalEntityName                 string                          `json:"legal_entity_name,omitempty" jsonschema:"description=Legal Entity Name"`
	LiableAddress                   *CRMAddress                     `json:"liable_address,omitempty" jsonschema:"description=Liable Address"`
	LiableBizName                   string                          `json:"liable_biz_name,omitempty" jsonschema:"description=Liable Biz Name"`
	MaxBalance                      *CurrencyAmount                 `json:"max_balance,omitempty" jsonschema:"description=Max Balance"`
	OnlineMaxBalance                *CurrencyAmount                 `json:"online_max_balance,omitempty" jsonschema:"description=Online Max Balance"`
	OwnerBusiness                   *Business                       `json:"owner_business,omitempty" jsonschema:"description=Owner Business"`
	OwnerBusinessName               string                          `json:"owner_business_name,omitempty" jsonschema:"description=Owner Business Name"`
	PartitionFrom                   string                          `json:"partition_from,omitempty" jsonschema:"description=Partition From"`
	ReceivingCreditAllocationConfig *ExtendedCreditAllocationConfig `json:"receiving_credit_allocation_config,omitempty" jsonschema:"description=Receiving Credit Allocation Config"`
	SendBillToAddress               *CRMAddress                     `json:"send_bill_to_address,omitempty" jsonschema:"description=Send Bill To Address"`
	SendBillToBizName               string                          `json:"send_bill_to_biz_name,omitempty" jsonschema:"description=Send Bill To Biz Name"`
	SoldToAddress                   *CRMAddress                     `json:"sold_to_address,omitempty" jsonschema:"description=Sold To Address"`
}

// ExtendedCreditAllocationConfig represents the Facebook ExtendedCreditAllocationConfig object
type ExtendedCreditAllocationConfig struct {
	CurrencyAmount      *CurrencyAmount `json:"currency_amount,omitempty" jsonschema:"description=Currency Amount"`
	ID                  string          `json:"id,omitempty" jsonschema:"description=ExtendedCreditAllocationConfig ID,required,pattern=^[0-9]+$"`
	LiabilityType       string          `json:"liability_type,omitempty" jsonschema:"description=Liability Type"`
	OwningBusiness      *Business       `json:"owning_business,omitempty" jsonschema:"description=Owning Business"`
	OwningCredential    *ExtendedCredit `json:"owning_credential,omitempty" jsonschema:"description=Owning Credential"`
	PartitionType       string          `json:"partition_type,omitempty" jsonschema:"description=Partition Type"`
	ReceivingBusiness   *Business       `json:"receiving_business,omitempty" jsonschema:"description=Receiving Business"`
	ReceivingCredential *ExtendedCredit `json:"receiving_credential,omitempty" jsonschema:"description=Receiving Credential"`
	RequestStatus       string          `json:"request_status,omitempty" jsonschema:"description=Request Status"`
	SendBillTo          string          `json:"send_bill_to,omitempty" jsonschema:"description=Send Bill To"`
}

// ExtendedCreditApplication represents the Facebook ExtendedCreditApplication object
type ExtendedCreditApplication struct {
	BillingCountry      string          `json:"billing_country,omitempty" jsonschema:"description=Billing Country"`
	City                string          `json:"city,omitempty" jsonschema:"description=City"`
	Cnpj                string          `json:"cnpj,omitempty" jsonschema:"description=Cnpj"`
	Country             string          `json:"country,omitempty" jsonschema:"description=Country"`
	DisplayCurrency     string          `json:"display_currency,omitempty" jsonschema:"description=Display Currency"`
	DunsNumber          string          `json:"duns_number,omitempty" jsonschema:"description=Duns Number"`
	ID                  string          `json:"id,omitempty" jsonschema:"description=ExtendedCreditApplication ID,required,pattern=^[0-9]+$"`
	InvoiceEmailAddress string          `json:"invoice_email_address,omitempty" jsonschema:"description=Invoice Email Address"`
	IsUmi               bool            `json:"is_umi,omitempty" jsonschema:"description=Is Umi"`
	LegalEntityName     string          `json:"legal_entity_name,omitempty" jsonschema:"description=Legal Entity Name"`
	OriginalOnlineLimit *CurrencyAmount `json:"original_online_limit,omitempty" jsonschema:"description=Original Online Limit"`
	PhoneNumber         string          `json:"phone_number,omitempty" jsonschema:"description=Phone Number"`
	PostalCode          string          `json:"postal_code,omitempty" jsonschema:"description=Postal Code"`
	ProductTypes        []string        `json:"product_types,omitempty" jsonschema:"description=Product Types"`
	ProposedCreditLimit *CurrencyAmount `json:"proposed_credit_limit,omitempty" jsonschema:"description=Proposed Credit Limit"`
	RegistrationNumber  string          `json:"registration_number,omitempty" jsonschema:"description=Registration Number"`
	RunID               string          `json:"run_id,omitempty" jsonschema:"description=ID of the Run,pattern=^[0-9]+$"`
	State               string          `json:"state,omitempty" jsonschema:"description=State"`
	Status              string          `json:"status,omitempty" jsonschema:"description=Current status of the ExtendedCreditApplication,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	Street1             string          `json:"street1,omitempty" jsonschema:"description=Street1"`
	Street2             string          `json:"street2,omitempty" jsonschema:"description=Street2"`
	Submitter           *User           `json:"submitter,omitempty" jsonschema:"description=Submitter"`
	TaxExemptStatus     string          `json:"tax_exempt_status,omitempty" jsonschema:"description=Tax Exempt Status"`
	TaxID               string          `json:"tax_id,omitempty" jsonschema:"description=ID of the Tax,pattern=^[0-9]+$"`
	Terms               string          `json:"terms,omitempty" jsonschema:"description=Terms"`
}

// ExtendedCreditEmail represents the Facebook ExtendedCreditEmail object
type ExtendedCreditEmail struct {
	Email string `json:"email,omitempty" jsonschema:"description=Email"`
	ID    string `json:"id,omitempty" jsonschema:"description=ExtendedCreditEmail ID,required,pattern=^[0-9]+$"`
}

// ExtendedCreditInfo represents the Facebook ExtendedCreditInfo object
type ExtendedCreditInfo struct {
	CreditLeft    string `json:"credit_left,omitempty" jsonschema:"description=Credit Left"`
	CreditRevoked bool   `json:"credit_revoked,omitempty" jsonschema:"description=Credit Revoked"`
	CreditUsed    string `json:"credit_used,omitempty" jsonschema:"description=Credit Used"`
	UsingBizEc    string `json:"using_biz_ec,omitempty" jsonschema:"description=Using Biz Ec"`
}

// ExtendedCreditInvoiceGroup represents the Facebook ExtendedCreditInvoiceGroup object
type ExtendedCreditInvoiceGroup struct {
	AutoEnroll       bool                 `json:"auto_enroll,omitempty" jsonschema:"description=Auto Enroll"`
	BillToAddress    *CRMAddress          `json:"bill_to_address,omitempty" jsonschema:"description=Bill To Address"`
	CustomerPoNumber string               `json:"customer_po_number,omitempty" jsonschema:"description=Customer Po Number"`
	Email            *ExtendedCreditEmail `json:"email,omitempty" jsonschema:"description=Email"`
	Emails           []string             `json:"emails,omitempty" jsonschema:"description=Emails"`
	ID               string               `json:"id,omitempty" jsonschema:"description=ExtendedCreditInvoiceGroup ID,required,pattern=^[0-9]+$"`
	LiableAddress    *CRMAddress          `json:"liable_address,omitempty" jsonschema:"description=Liable Address"`
	Name             string               `json:"name,omitempty" jsonschema:"description=Name of the ExtendedCreditInvoiceGroup,required"`
	SoldToAddress    *CRMAddress          `json:"sold_to_address,omitempty" jsonschema:"description=Sold To Address"`
}

// ExternalEventSource represents the Facebook ExternalEventSource object
type ExternalEventSource struct {
	ID         string `json:"id,omitempty" jsonschema:"description=ExternalEventSource ID,required,pattern=^[0-9]+$"`
	Name       string `json:"name,omitempty" jsonschema:"description=Name of the ExternalEventSource,required"`
	SourceType string `json:"source_type,omitempty" jsonschema:"description=Source Type"`
}

// ExternalEventSourceCPASEventsDebugging represents the Facebook ExternalEventSourceCPASEventsDebugging object
type ExternalEventSourceCPASEventsDebugging struct {
	ActualEventTime int    `json:"actual_event_time,omitempty" jsonschema:"description=Actual Event Time"`
	AppVersion      string `json:"app_version,omitempty" jsonschema:"description=App Version"`
	ContentURL      string `json:"content_url,omitempty" jsonschema:"description=Content URL,format=uri"`
	DeviceOs        string `json:"device_os,omitempty" jsonschema:"description=Device Os"`
	Diagnostic      string `json:"diagnostic,omitempty" jsonschema:"description=Diagnostic"`
	EventName       string `json:"event_name,omitempty" jsonschema:"description=Event Name"`
	EventTime       int    `json:"event_time,omitempty" jsonschema:"description=Event Time"`
	MissingIDs      string `json:"missing_ids,omitempty" jsonschema:"description=Missing Ids,pattern=^[0-9]+$"`
	Severity        string `json:"severity,omitempty" jsonschema:"description=Severity"`
}

// ExternalEventSourceCPASEventsDebuggingInfo represents the Facebook ExternalEventSourceCPASEventsDebuggingInfo object
type ExternalEventSourceCPASEventsDebuggingInfo struct {
	Counts     int    `json:"counts,omitempty" jsonschema:"description=Counts"`
	Diagnostic string `json:"diagnostic,omitempty" jsonschema:"description=Diagnostic"`
	EventName  string `json:"event_name,omitempty" jsonschema:"description=Event Name"`
}

// ExternalMerchantSettings represents the Facebook ExternalMerchantSettings object
type ExternalMerchantSettings struct {
	ConnectWoo       string `json:"connect_woo,omitempty" jsonschema:"description=Connect Woo"`
	ExternalPlatform string `json:"external_platform,omitempty" jsonschema:"description=External Platform"`
	ID               string `json:"id,omitempty" jsonschema:"description=ExternalMerchantSettings ID,required,pattern=^[0-9]+$"`
}

// FAMEKumo represents the Facebook FAMEKumo object
type FAMEKumo struct {
	ID string `json:"id,omitempty" jsonschema:"description=FAMEKumo ID,required,pattern=^[0-9]+$"`
}

// FBImageCopyrightMatch represents the Facebook FBImageCopyrightMatch object
type FBImageCopyrightMatch struct {
	AddedToDashboardTime time.Time                           `json:"added_to_dashboard_time,omitempty" jsonschema:"description=Added To Dashboard Time,format=date-time"`
	AppliedActions       []map[string]map[string]interface{} `json:"applied_actions,omitempty" jsonschema:"description=Applied Actions"`
	AuditLog             []map[string]interface{}            `json:"audit_log,omitempty" jsonschema:"description=Audit Log"`
	AvailableUiActions   []string                            `json:"available_ui_actions,omitempty" jsonschema:"description=Available Ui Actions"`
	ExpirationDays       int                                 `json:"expiration_days,omitempty" jsonschema:"description=Expiration Days"`
	GenericMatchData     []map[string]interface{}            `json:"generic_match_data,omitempty" jsonschema:"description=Generic Match Data"`
	ID                   string                              `json:"id,omitempty" jsonschema:"description=FBImageCopyrightMatch ID,required,pattern=^[0-9]+$"`
	IsBusinessPageMatch  bool                                `json:"is_business_page_match,omitempty" jsonschema:"description=Is Business Page Match"`
	LastModifiedTime     time.Time                           `json:"last_modified_time,omitempty" jsonschema:"description=Last Modified Time,format=date-time"`
	MatchData            []map[string]interface{}            `json:"match_data,omitempty" jsonschema:"description=Match Data"`
	MatchStatus          string                              `json:"match_status,omitempty" jsonschema:"description=Match Status"`
	OwnershipCountries   *VideoCopyrightGeoGate              `json:"ownership_countries,omitempty" jsonschema:"description=Ownership Countries"`
	ReferenceOwner       *Profile                            `json:"reference_owner,omitempty" jsonschema:"description=Reference Owner"`
	TimeToAppeal         int                                 `json:"time_to_appeal,omitempty" jsonschema:"description=Time To Appeal"`
}

// FBLiteToNTTransitions represents the Facebook FBLiteToNTTransitions object
type FBLiteToNTTransitions struct {
	Transition map[string]interface{} `json:"transition,omitempty" jsonschema:"description=Transition"`
}

// FBPageAndInstagramAccount represents the Facebook FBPageAndInstagramAccount object
type FBPageAndInstagramAccount struct {
	AdPermissions      []string            `json:"ad_permissions,omitempty" jsonschema:"description=Ad Permissions"`
	BcPermissionStatus string              `json:"bc_permission_status,omitempty" jsonschema:"description=Bc Permission Status"`
	BcPermissions      []map[string]string `json:"bc_permissions,omitempty" jsonschema:"description=Bc Permissions"`
	IsManaged          bool                `json:"is_managed,omitempty" jsonschema:"description=Is Managed"`
	MatchedBy          string              `json:"matched_by,omitempty" jsonschema:"description=Matched By"`
}

// FBPayButtonLogin represents the Facebook FBPayButtonLogin object
type FBPayButtonLogin struct {
}

// FantasyGame represents the Facebook FantasyGame object
type FantasyGame struct {
	ID   string `json:"id,omitempty" jsonschema:"description=FantasyGame ID,required,pattern=^[0-9]+$"`
	Name string `json:"name,omitempty" jsonschema:"description=Name of the FantasyGame,required"`
}

// FavoriteCatalog represents the Facebook FavoriteCatalog object
type FavoriteCatalog struct {
	Catalog *ProductCatalog `json:"catalog,omitempty" jsonschema:"description=Catalog"`
	ID      string          `json:"id,omitempty" jsonschema:"description=FavoriteCatalog ID,required,pattern=^[0-9]+$"`
}

// FinanceObject represents the Facebook FinanceObject object
type FinanceObject struct {
	FinancePermission string                 `json:"finance_permission,omitempty" jsonschema:"description=Finance Permission"`
	User              map[string]interface{} `json:"user,omitempty" jsonschema:"description=User"`
}

// FlexibleTargeting represents the Facebook FlexibleTargeting object
type FlexibleTargeting struct {
	Behaviors            []*IDName `json:"behaviors,omitempty" jsonschema:"description=Behaviors"`
	CollegeYears         []uint    `json:"college_years,omitempty" jsonschema:"description=College Years"`
	Connections          []*IDName `json:"connections,omitempty" jsonschema:"description=Connections"`
	CustomAudiences      []*IDName `json:"custom_audiences,omitempty" jsonschema:"description=Custom Audiences"`
	EducationMajors      []*IDName `json:"education_majors,omitempty" jsonschema:"description=Education Majors"`
	EducationSchools     []*IDName `json:"education_schools,omitempty" jsonschema:"description=Education Schools"`
	EducationStatuses    []uint    `json:"education_statuses,omitempty" jsonschema:"description=Education Statuses"`
	EthnicAffinity       []*IDName `json:"ethnic_affinity,omitempty" jsonschema:"description=Ethnic Affinity"`
	FamilyStatuses       []*IDName `json:"family_statuses,omitempty" jsonschema:"description=Family Statuses"`
	FriendsOfConnections []*IDName `json:"friends_of_connections,omitempty" jsonschema:"description=Friends Of Connections"`
	Generation           []*IDName `json:"generation,omitempty" jsonschema:"description=Generation"`
	HomeOwnership        []*IDName `json:"home_ownership,omitempty" jsonschema:"description=Home Ownership"`
	HomeType             []*IDName `json:"home_type,omitempty" jsonschema:"description=Home Type"`
	HomeValue            []*IDName `json:"home_value,omitempty" jsonschema:"description=Home Value"`
	HouseholdComposition []*IDName `json:"household_composition,omitempty" jsonschema:"description=Household Composition"`
	Income               []*IDName `json:"income,omitempty" jsonschema:"description=Income"`
	Industries           []*IDName `json:"industries,omitempty" jsonschema:"description=Industries"`
	InterestedIn         []uint    `json:"interested_in,omitempty" jsonschema:"description=Interested In"`
	Interests            []*IDName `json:"interests,omitempty" jsonschema:"description=Interests"`
	LifeEvents           []*IDName `json:"life_events,omitempty" jsonschema:"description=Life Events"`
	Moms                 []*IDName `json:"moms,omitempty" jsonschema:"description=Moms"`
	NetWorth             []*IDName `json:"net_worth,omitempty" jsonschema:"description=Net Worth"`
	OfficeType           []*IDName `json:"office_type,omitempty" jsonschema:"description=Office Type"`
	Politics             []*IDName `json:"politics,omitempty" jsonschema:"description=Politics"`
	RelationshipStatuses []uint    `json:"relationship_statuses,omitempty" jsonschema:"description=Relationship Statuses"`
	UserAdclusters       []*IDName `json:"user_adclusters,omitempty" jsonschema:"description=User Adclusters"`
	WorkEmployers        []*IDName `json:"work_employers,omitempty" jsonschema:"description=Work Employers"`
	WorkPositions        []*IDName `json:"work_positions,omitempty" jsonschema:"description=Work Positions"`
}

// Flight represents the Facebook Flight object
type Flight struct {
	Applinks               *CatalogItemAppLinks    `json:"applinks,omitempty" jsonschema:"description=Applinks"`
	CategorySpecificFields *CatalogSubVerticalList `json:"category_specific_fields,omitempty" jsonschema:"description=Category Specific Fields"`
	Currency               string                  `json:"currency,omitempty" jsonschema:"description=Currency"`
	CustomLabel0           string                  `json:"custom_label_0,omitempty" jsonschema:"description=Custom Label 0"`
	CustomLabel1           string                  `json:"custom_label_1,omitempty" jsonschema:"description=Custom Label 1"`
	CustomLabel2           string                  `json:"custom_label_2,omitempty" jsonschema:"description=Custom Label 2"`
	CustomLabel3           string                  `json:"custom_label_3,omitempty" jsonschema:"description=Custom Label 3"`
	CustomLabel4           string                  `json:"custom_label_4,omitempty" jsonschema:"description=Custom Label 4"`
	CustomNumber0          uint                    `json:"custom_number_0,omitempty" jsonschema:"description=Custom Number 0"`
	CustomNumber1          uint                    `json:"custom_number_1,omitempty" jsonschema:"description=Custom Number 1"`
	CustomNumber2          uint                    `json:"custom_number_2,omitempty" jsonschema:"description=Custom Number 2"`
	CustomNumber3          uint                    `json:"custom_number_3,omitempty" jsonschema:"description=Custom Number 3"`
	CustomNumber4          uint                    `json:"custom_number_4,omitempty" jsonschema:"description=Custom Number 4"`
	Description            string                  `json:"description,omitempty" jsonschema:"description=Description"`
	DestinationAirport     string                  `json:"destination_airport,omitempty" jsonschema:"description=Destination Airport"`
	DestinationCity        string                  `json:"destination_city,omitempty" jsonschema:"description=Destination City"`
	FlightID               string                  `json:"flight_id,omitempty" jsonschema:"description=ID of the Flight,pattern=^[0-9]+$"`
	ID                     string                  `json:"id,omitempty" jsonschema:"description=Flight ID,required,pattern=^[0-9]+$"`
	ImageFetchStatus       FlightImageFetchStatus  `json:"image_fetch_status,omitempty" jsonschema:"description=Image Fetch Status"`
	Images                 []string                `json:"images,omitempty" jsonschema:"description=Images"`
	OnewayCurrency         string                  `json:"oneway_currency,omitempty" jsonschema:"description=Oneway Currency"`
	OnewayPrice            string                  `json:"oneway_price,omitempty" jsonschema:"description=Oneway Price"`
	OriginAirport          string                  `json:"origin_airport,omitempty" jsonschema:"description=Origin Airport"`
	OriginCity             string                  `json:"origin_city,omitempty" jsonschema:"description=Origin City"`
	Price                  string                  `json:"price,omitempty" jsonschema:"description=Price"`
	ProductPriority0       float64                 `json:"product_priority_0,omitempty" jsonschema:"description=Product Priority 0"`
	ProductPriority1       float64                 `json:"product_priority_1,omitempty" jsonschema:"description=Product Priority 1"`
	ProductPriority2       float64                 `json:"product_priority_2,omitempty" jsonschema:"description=Product Priority 2"`
	ProductPriority3       float64                 `json:"product_priority_3,omitempty" jsonschema:"description=Product Priority 3"`
	ProductPriority4       float64                 `json:"product_priority_4,omitempty" jsonschema:"description=Product Priority 4"`
	SanitizedImages        []string                `json:"sanitized_images,omitempty" jsonschema:"description=Sanitized Images"`
	Tags                   []string                `json:"tags,omitempty" jsonschema:"description=Tags"`
	UnitPrice              map[string]interface{}  `json:"unit_price,omitempty" jsonschema:"description=Unit Price"`
	URL                    string                  `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
	Visibility             FlightVisibility        `json:"visibility,omitempty" jsonschema:"description=Visibility"`
}

// FranchiseProgram represents the Facebook FranchiseProgram object
type FranchiseProgram struct {
	BusinessAssetGroup   *BusinessAssetGroup `json:"business_asset_group,omitempty" jsonschema:"description=Business Asset Group"`
	CreatorBusiness      *Business           `json:"creator_business,omitempty" jsonschema:"description=Creator Business"`
	Description          string              `json:"description,omitempty" jsonschema:"description=Description"`
	EndDate              time.Time           `json:"end_date,omitempty" jsonschema:"description=End Date,format=date-time"`
	ID                   string              `json:"id,omitempty" jsonschema:"description=FranchiseProgram ID,required,pattern=^[0-9]+$"`
	Name                 string              `json:"name,omitempty" jsonschema:"description=Name of the FranchiseProgram,required"`
	ProgramAccessType    string              `json:"program_access_type,omitempty" jsonschema:"description=Program Access Type"`
	ProgramApprovalType  string              `json:"program_approval_type,omitempty" jsonschema:"description=Program Approval Type"`
	ProgramImageLink     string              `json:"program_image_link,omitempty" jsonschema:"description=Program Image Link"`
	ProgramURL           string              `json:"program_url,omitempty" jsonschema:"description=Program URL,format=uri"`
	SharedCustomAudience *CustomAudience     `json:"shared_custom_audience,omitempty" jsonschema:"description=Shared Custom Audience"`
	StartDate            time.Time           `json:"start_date,omitempty" jsonschema:"description=Start Date,format=date-time"`
}

// FranchiseProgramMember represents the Facebook FranchiseProgramMember object
type FranchiseProgramMember struct {
	Business         *Business  `json:"business,omitempty" jsonschema:"description=Business"`
	EndDate          time.Time  `json:"end_date,omitempty" jsonschema:"description=End Date,format=date-time"`
	ID               string     `json:"id,omitempty" jsonschema:"description=FranchiseProgramMember ID,required,pattern=^[0-9]+$"`
	JoinDate         time.Time  `json:"join_date,omitempty" jsonschema:"description=Join Date,format=date-time"`
	MemberAdAccount  *AdAccount `json:"member_ad_account,omitempty" jsonschema:"description=Member Ad Account"`
	MemberUser       *User      `json:"member_user,omitempty" jsonschema:"description=Member User"`
	MembershipStatus string     `json:"membership_status,omitempty" jsonschema:"description=Membership Status"`
	Page             *Page      `json:"page,omitempty" jsonschema:"description=Page"`
}

// FundingSourceDetails represents the Facebook FundingSourceDetails object
type FundingSourceDetails struct {
	Coupon        *FundingSourceDetailsCoupon   `json:"coupon,omitempty" jsonschema:"description=Coupon"`
	Coupons       []*FundingSourceDetailsCoupon `json:"coupons,omitempty" jsonschema:"description=Coupons"`
	DisplayString string                        `json:"display_string,omitempty" jsonschema:"description=Display String"`
	ID            string                        `json:"id,omitempty" jsonschema:"description=FundingSourceDetails ID,required,pattern=^[0-9]+$"`
	Type          int                           `json:"type,omitempty" jsonschema:"description=Type"`
}

// FundingSourceDetailsCoupon represents the Facebook FundingSourceDetailsCoupon object
type FundingSourceDetailsCoupon struct {
	Amount                int                                `json:"amount,omitempty" jsonschema:"description=Amount,minimum=1"`
	CampaignIDs           []int                              `json:"campaign_ids,omitempty" jsonschema:"description=Campaign Ids,pattern=^[0-9]+$"`
	ChildAdAccountID      string                             `json:"child_ad_account_id,omitempty" jsonschema:"description=ID of the Child Ad Account,pattern=^[0-9]+$"`
	ChildBmID             string                             `json:"child_bm_id,omitempty" jsonschema:"description=ID of the Child Bm,pattern=^[0-9]+$"`
	CouponID              string                             `json:"coupon_id,omitempty" jsonschema:"description=ID of the Coupon,pattern=^[0-9]+$"`
	CouponTiering         *FundingSourceDetailsCouponTiering `json:"coupon_tiering,omitempty" jsonschema:"description=Coupon Tiering"`
	Currency              string                             `json:"currency,omitempty" jsonschema:"description=Currency"`
	DisplayAmount         string                             `json:"display_amount,omitempty" jsonschema:"description=Display Amount"`
	Expiration            time.Time                          `json:"expiration,omitempty" jsonschema:"description=Expiration,format=date-time"`
	OriginalAmount        int                                `json:"original_amount,omitempty" jsonschema:"description=Original Amount,minimum=1"`
	OriginalDisplayAmount string                             `json:"original_display_amount,omitempty" jsonschema:"description=Original Display Amount"`
	StartDate             time.Time                          `json:"start_date,omitempty" jsonschema:"description=Start Date,format=date-time"`
	VendorID              string                             `json:"vendor_id,omitempty" jsonschema:"description=ID of the Vendor,pattern=^[0-9]+$"`
}

// FundingSourceDetailsCouponTiering represents the Facebook FundingSourceDetailsCouponTiering object
type FundingSourceDetailsCouponTiering struct {
	CouponTieringNew          map[string]interface{} `json:"coupon_tiering_new,omitempty" jsonschema:"description=Coupon Tiering New"`
	CouponTieringReactivation map[string]interface{} `json:"coupon_tiering_reactivation,omitempty" jsonschema:"description=Coupon Tiering Reactivation"`
}

// FundraiserPersonToCharity represents the Facebook FundraiserPersonToCharity object
type FundraiserPersonToCharity struct {
	AmountRaised           int       `json:"amount_raised,omitempty" jsonschema:"description=Amount Raised,minimum=1"`
	CharityID              string    `json:"charity_id,omitempty" jsonschema:"description=ID of the Charity,pattern=^[0-9]+$"`
	Currency               string    `json:"currency,omitempty" jsonschema:"description=Currency"`
	Description            string    `json:"description,omitempty" jsonschema:"description=Description"`
	DonationsCount         int       `json:"donations_count,omitempty" jsonschema:"description=Donations Count"`
	DonorsCount            int       `json:"donors_count,omitempty" jsonschema:"description=Donors Count"`
	EndTime                time.Time `json:"end_time,omitempty" jsonschema:"description=End Time,format=date-time"`
	ExternalAmountRaised   int       `json:"external_amount_raised,omitempty" jsonschema:"description=External Amount Raised,minimum=1"`
	ExternalDonationsCount int       `json:"external_donations_count,omitempty" jsonschema:"description=External Donations Count"`
	ExternalDonorsCount    int       `json:"external_donors_count,omitempty" jsonschema:"description=External Donors Count"`
	ExternalEventName      string    `json:"external_event_name,omitempty" jsonschema:"description=External Event Name"`
	ExternalEventStartTime time.Time `json:"external_event_start_time,omitempty" jsonschema:"description=External Event Start Time,format=date-time"`
	ExternalEventUri       string    `json:"external_event_uri,omitempty" jsonschema:"description=External Event Uri"`
	ExternalFundraiserUri  string    `json:"external_fundraiser_uri,omitempty" jsonschema:"description=External Fundraiser Uri"`
	ExternalID             string    `json:"external_id,omitempty" jsonschema:"description=ID of the External,pattern=^[0-9]+$"`
	GoalAmount             int       `json:"goal_amount,omitempty" jsonschema:"description=Goal Amount,minimum=1"`
	ID                     string    `json:"id,omitempty" jsonschema:"description=FundraiserPersonToCharity ID,required,pattern=^[0-9]+$"`
	InternalAmountRaised   int       `json:"internal_amount_raised,omitempty" jsonschema:"description=Internal Amount Raised,minimum=1"`
	InternalDonationsCount int       `json:"internal_donations_count,omitempty" jsonschema:"description=Internal Donations Count"`
	InternalDonorsCount    int       `json:"internal_donors_count,omitempty" jsonschema:"description=Internal Donors Count"`
	Name                   string    `json:"name,omitempty" jsonschema:"description=Name of the FundraiserPersonToCharity,required"`
	Uri                    string    `json:"uri,omitempty" jsonschema:"description=Uri"`
}

// GeoGatingPolicy represents the Facebook GeoGatingPolicy object
type GeoGatingPolicy struct {
	AfterSchedule  string    `json:"after_schedule,omitempty" jsonschema:"description=After Schedule"`
	ExcludeCountry []string  `json:"exclude_country,omitempty" jsonschema:"description=Exclude Country"`
	ID             string    `json:"id,omitempty" jsonschema:"description=GeoGatingPolicy ID,required,pattern=^[0-9]+$"`
	IncludeCountry []string  `json:"include_country,omitempty" jsonschema:"description=Include Country"`
	Name           string    `json:"name,omitempty" jsonschema:"description=Name of the GeoGatingPolicy,required"`
	ValidFrom      time.Time `json:"valid_from,omitempty" jsonschema:"description=Valid From,format=date-time"`
	ValidUntil     time.Time `json:"valid_until,omitempty" jsonschema:"description=Valid Until,format=date-time"`
}

// Group represents the Facebook Group object
type Group struct {
	Archived           bool                   `json:"archived,omitempty" jsonschema:"description=Archived"`
	Cover              *CoverPhoto            `json:"cover,omitempty" jsonschema:"description=Cover"`
	CreatedTime        time.Time              `json:"created_time,omitempty" jsonschema:"description=When the Group was created,format=date-time"`
	Description        string                 `json:"description,omitempty" jsonschema:"description=Description"`
	Email              string                 `json:"email,omitempty" jsonschema:"description=Email"`
	Icon               string                 `json:"icon,omitempty" jsonschema:"description=Icon"`
	ID                 string                 `json:"id,omitempty" jsonschema:"description=Group ID,required,pattern=^[0-9]+$"`
	Install            map[string]interface{} `json:"install,omitempty" jsonschema:"description=Install"`
	Link               string                 `json:"link,omitempty" jsonschema:"description=Link"`
	MemberCount        uint                   `json:"member_count,omitempty" jsonschema:"description=Member Count"`
	MemberRequestCount uint                   `json:"member_request_count,omitempty" jsonschema:"description=Member Request Count"`
	Name               string                 `json:"name,omitempty" jsonschema:"description=Name of the Group,required"`
	Parent             map[string]interface{} `json:"parent,omitempty" jsonschema:"description=Parent"`
	Permissions        []string               `json:"permissions,omitempty" jsonschema:"description=Permissions"`
	Privacy            string                 `json:"privacy,omitempty" jsonschema:"description=Privacy"`
	Purpose            string                 `json:"purpose,omitempty" jsonschema:"description=Purpose"`
	Subdomain          string                 `json:"subdomain,omitempty" jsonschema:"description=Subdomain"`
	UpdatedTime        time.Time              `json:"updated_time,omitempty" jsonschema:"description=When the Group was last updated,format=date-time"`
	Venue              *Location              `json:"venue,omitempty" jsonschema:"description=Venue"`
}

// HasLeadAccess represents the Facebook HasLeadAccess object
type HasLeadAccess struct {
	AppHasLeadsPermission    bool   `json:"app_has_leads_permission,omitempty" jsonschema:"description=App Has Leads Permission"`
	CanAccessLead            bool   `json:"can_access_lead,omitempty" jsonschema:"description=Can Access Lead"`
	EnabledLeadAccessManager bool   `json:"enabled_lead_access_manager,omitempty" jsonschema:"description=Enabled Lead Access Manager"`
	FailureReason            string `json:"failure_reason,omitempty" jsonschema:"description=Failure Reason"`
	FailureResolution        string `json:"failure_resolution,omitempty" jsonschema:"description=Failure Resolution"`
	IsPageAdmin              bool   `json:"is_page_admin,omitempty" jsonschema:"description=Is Page Admin"`
	PageID                   string `json:"page_id,omitempty" jsonschema:"description=ID of the Page,pattern=^[0-9]+$"`
	UserHasLeadsPermission   bool   `json:"user_has_leads_permission,omitempty" jsonschema:"description=User Has Leads Permission"`
	UserID                   string `json:"user_id,omitempty" jsonschema:"description=ID of the User,pattern=^[0-9]+$"`
}

// HighDemandPeriod represents the Facebook HighDemandPeriod object
type HighDemandPeriod struct {
	AdObjectID      string                                         `json:"ad_object_id,omitempty" jsonschema:"description=ID of the Ad Object,pattern=^[0-9]+$"`
	BudgetValue     int                                            `json:"budget_value,omitempty" jsonschema:"description=Budget Value,minimum=1"`
	BudgetValueType string                                         `json:"budget_value_type,omitempty" jsonschema:"description=Budget Value Type"`
	ID              string                                         `json:"id,omitempty" jsonschema:"description=HighDemandPeriod ID,required,pattern=^[0-9]+$"`
	RecurrenceType  string                                         `json:"recurrence_type,omitempty" jsonschema:"description=Recurrence Type"`
	TimeEnd         time.Time                                      `json:"time_end,omitempty" jsonschema:"description=Time End,format=date-time"`
	TimeStart       time.Time                                      `json:"time_start,omitempty" jsonschema:"description=Time Start,format=date-time"`
	WeeklySchedule  []*HighDemandPeriodTimeSuggestionWeeklySegment `json:"weekly_schedule,omitempty" jsonschema:"description=Weekly Schedule"`
}

// HighDemandPeriodTimeSuggestionWeeklySegment represents the Facebook HighDemandPeriodTimeSuggestionWeeklySegment object
type HighDemandPeriodTimeSuggestionWeeklySegment struct {
	Days         []string `json:"days,omitempty" jsonschema:"description=Days"`
	EndMinute    int      `json:"end_minute,omitempty" jsonschema:"description=End Minute"`
	StartMinute  int      `json:"start_minute,omitempty" jsonschema:"description=Start Minute"`
	TimezoneType string   `json:"timezone_type,omitempty" jsonschema:"description=Timezone Type"`
}

// HomeListing represents the Facebook HomeListing object
type HomeListing struct {
	AcType                    string                      `json:"ac_type,omitempty" jsonschema:"description=Ac Type"`
	AdditionalFeesDescription string                      `json:"additional_fees_description,omitempty" jsonschema:"description=Additional Fees Description"`
	Address                   map[string]interface{}      `json:"address,omitempty" jsonschema:"description=Address"`
	AgentCompany              string                      `json:"agent_company,omitempty" jsonschema:"description=Agent Company"`
	AgentEmail                string                      `json:"agent_email,omitempty" jsonschema:"description=Agent Email"`
	AgentFbPageID             *Page                       `json:"agent_fb_page_id,omitempty" jsonschema:"description=ID of the Agent Fb Page,pattern=^[0-9]+$"`
	AgentName                 string                      `json:"agent_name,omitempty" jsonschema:"description=Agent Name"`
	AgentPhone                string                      `json:"agent_phone,omitempty" jsonschema:"description=Agent Phone"`
	Applinks                  *CatalogItemAppLinks        `json:"applinks,omitempty" jsonschema:"description=Applinks"`
	AreaSize                  uint                        `json:"area_size,omitempty" jsonschema:"description=Area Size"`
	AreaUnit                  string                      `json:"area_unit,omitempty" jsonschema:"description=Area Unit"`
	Availability              string                      `json:"availability,omitempty" jsonschema:"description=Availability"`
	CategorySpecificFields    *CatalogSubVerticalList     `json:"category_specific_fields,omitempty" jsonschema:"description=Category Specific Fields"`
	Co2EmissionRatingEu       map[string]interface{}      `json:"co_2_emission_rating_eu,omitempty" jsonschema:"description=Co 2 Emission Rating Eu"`
	Currency                  string                      `json:"currency,omitempty" jsonschema:"description=Currency"`
	CustomLabel0              string                      `json:"custom_label_0,omitempty" jsonschema:"description=Custom Label 0"`
	CustomLabel1              string                      `json:"custom_label_1,omitempty" jsonschema:"description=Custom Label 1"`
	CustomLabel2              string                      `json:"custom_label_2,omitempty" jsonschema:"description=Custom Label 2"`
	CustomLabel3              string                      `json:"custom_label_3,omitempty" jsonschema:"description=Custom Label 3"`
	CustomLabel4              string                      `json:"custom_label_4,omitempty" jsonschema:"description=Custom Label 4"`
	CustomNumber0             uint                        `json:"custom_number_0,omitempty" jsonschema:"description=Custom Number 0"`
	CustomNumber1             uint                        `json:"custom_number_1,omitempty" jsonschema:"description=Custom Number 1"`
	CustomNumber2             uint                        `json:"custom_number_2,omitempty" jsonschema:"description=Custom Number 2"`
	CustomNumber3             uint                        `json:"custom_number_3,omitempty" jsonschema:"description=Custom Number 3"`
	CustomNumber4             uint                        `json:"custom_number_4,omitempty" jsonschema:"description=Custom Number 4"`
	DaysOnMarket              uint                        `json:"days_on_market,omitempty" jsonschema:"description=Days On Market"`
	Description               string                      `json:"description,omitempty" jsonschema:"description=Description"`
	EnergyRatingEu            map[string]interface{}      `json:"energy_rating_eu,omitempty" jsonschema:"description=Energy Rating Eu"`
	FurnishType               string                      `json:"furnish_type,omitempty" jsonschema:"description=Furnish Type"`
	GroupID                   string                      `json:"group_id,omitempty" jsonschema:"description=ID of the Group,pattern=^[0-9]+$"`
	HeatingType               string                      `json:"heating_type,omitempty" jsonschema:"description=Heating Type"`
	HomeListingID             string                      `json:"home_listing_id,omitempty" jsonschema:"description=ID of the Home Listing,pattern=^[0-9]+$"`
	ID                        string                      `json:"id,omitempty" jsonschema:"description=HomeListing ID,required,pattern=^[0-9]+$"`
	ImageFetchStatus          HomelistingImageFetchStatus `json:"image_fetch_status,omitempty" jsonschema:"description=Image Fetch Status"`
	Images                    []string                    `json:"images,omitempty" jsonschema:"description=Images"`
	LaundryType               string                      `json:"laundry_type,omitempty" jsonschema:"description=Laundry Type"`
	ListingType               string                      `json:"listing_type,omitempty" jsonschema:"description=Listing Type"`
	MaxCurrency               string                      `json:"max_currency,omitempty" jsonschema:"description=Max Currency"`
	MaxPrice                  string                      `json:"max_price,omitempty" jsonschema:"description=Max Price"`
	MinCurrency               string                      `json:"min_currency,omitempty" jsonschema:"description=Min Currency"`
	MinPrice                  string                      `json:"min_price,omitempty" jsonschema:"description=Min Price"`
	Name                      string                      `json:"name,omitempty" jsonschema:"description=Name of the HomeListing,required"`
	NumBaths                  float64                     `json:"num_baths,omitempty" jsonschema:"description=Num Baths"`
	NumBeds                   float64                     `json:"num_beds,omitempty" jsonschema:"description=Num Beds"`
	NumRooms                  float64                     `json:"num_rooms,omitempty" jsonschema:"description=Num Rooms"`
	NumUnits                  uint                        `json:"num_units,omitempty" jsonschema:"description=Num Units"`
	ParkingType               string                      `json:"parking_type,omitempty" jsonschema:"description=Parking Type"`
	PartnerVerification       string                      `json:"partner_verification,omitempty" jsonschema:"description=Partner Verification"`
	PetPolicy                 string                      `json:"pet_policy,omitempty" jsonschema:"description=Pet Policy"`
	Price                     string                      `json:"price,omitempty" jsonschema:"description=Price"`
	PropertyType              string                      `json:"property_type,omitempty" jsonschema:"description=Property Type"`
	SanitizedImages           []string                    `json:"sanitized_images,omitempty" jsonschema:"description=Sanitized Images"`
	SecuritydepositCurrency   string                      `json:"securitydeposit_currency,omitempty" jsonschema:"description=Securitydeposit Currency"`
	SecuritydepositPrice      string                      `json:"securitydeposit_price,omitempty" jsonschema:"description=Securitydeposit Price"`
	Tags                      []string                    `json:"tags,omitempty" jsonschema:"description=Tags"`
	UnitPrice                 map[string]interface{}      `json:"unit_price,omitempty" jsonschema:"description=Unit Price"`
	URL                       string                      `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
	Visibility                HomelistingVisibility       `json:"visibility,omitempty" jsonschema:"description=Visibility"`
	YearBuilt                 int                         `json:"year_built,omitempty" jsonschema:"description=Year Built"`
}

// Hotel represents the Facebook Hotel object
type Hotel struct {
	Address                string                  `json:"address,omitempty" jsonschema:"description=Address"`
	Applinks               *CatalogItemAppLinks    `json:"applinks,omitempty" jsonschema:"description=Applinks"`
	Brand                  string                  `json:"brand,omitempty" jsonschema:"description=Brand"`
	Category               string                  `json:"category,omitempty" jsonschema:"description=Category"`
	CategorySpecificFields *CatalogSubVerticalList `json:"category_specific_fields,omitempty" jsonschema:"description=Category Specific Fields"`
	Currency               string                  `json:"currency,omitempty" jsonschema:"description=Currency"`
	CustomLabel0           string                  `json:"custom_label_0,omitempty" jsonschema:"description=Custom Label 0"`
	CustomLabel1           string                  `json:"custom_label_1,omitempty" jsonschema:"description=Custom Label 1"`
	CustomLabel2           string                  `json:"custom_label_2,omitempty" jsonschema:"description=Custom Label 2"`
	CustomLabel3           string                  `json:"custom_label_3,omitempty" jsonschema:"description=Custom Label 3"`
	CustomLabel4           string                  `json:"custom_label_4,omitempty" jsonschema:"description=Custom Label 4"`
	CustomNumber0          int                     `json:"custom_number_0,omitempty" jsonschema:"description=Custom Number 0"`
	CustomNumber1          int                     `json:"custom_number_1,omitempty" jsonschema:"description=Custom Number 1"`
	CustomNumber2          int                     `json:"custom_number_2,omitempty" jsonschema:"description=Custom Number 2"`
	CustomNumber3          int                     `json:"custom_number_3,omitempty" jsonschema:"description=Custom Number 3"`
	CustomNumber4          int                     `json:"custom_number_4,omitempty" jsonschema:"description=Custom Number 4"`
	Description            string                  `json:"description,omitempty" jsonschema:"description=Description"`
	GuestRatings           string                  `json:"guest_ratings,omitempty" jsonschema:"description=Guest Ratings"`
	HotelID                string                  `json:"hotel_id,omitempty" jsonschema:"description=ID of the Hotel,pattern=^[0-9]+$"`
	ID                     string                  `json:"id,omitempty" jsonschema:"description=Hotel ID,required,pattern=^[0-9]+$"`
	ImageFetchStatus       HotelImageFetchStatus   `json:"image_fetch_status,omitempty" jsonschema:"description=Image Fetch Status"`
	Images                 []string                `json:"images,omitempty" jsonschema:"description=Images"`
	LowestBasePrice        string                  `json:"lowest_base_price,omitempty" jsonschema:"description=Lowest Base Price"`
	LoyaltyProgram         string                  `json:"loyalty_program,omitempty" jsonschema:"description=Loyalty Program"`
	MarginLevel            uint                    `json:"margin_level,omitempty" jsonschema:"description=Margin Level"`
	Name                   string                  `json:"name,omitempty" jsonschema:"description=Name of the Hotel,required"`
	Phone                  string                  `json:"phone,omitempty" jsonschema:"description=Phone"`
	ProductPriority0       float64                 `json:"product_priority_0,omitempty" jsonschema:"description=Product Priority 0"`
	ProductPriority1       float64                 `json:"product_priority_1,omitempty" jsonschema:"description=Product Priority 1"`
	ProductPriority2       float64                 `json:"product_priority_2,omitempty" jsonschema:"description=Product Priority 2"`
	ProductPriority3       float64                 `json:"product_priority_3,omitempty" jsonschema:"description=Product Priority 3"`
	ProductPriority4       float64                 `json:"product_priority_4,omitempty" jsonschema:"description=Product Priority 4"`
	SalePrice              string                  `json:"sale_price,omitempty" jsonschema:"description=Sale Price"`
	SanitizedImages        []string                `json:"sanitized_images,omitempty" jsonschema:"description=Sanitized Images"`
	StarRating             float64                 `json:"star_rating,omitempty" jsonschema:"description=Star Rating"`
	Tags                   []string                `json:"tags,omitempty" jsonschema:"description=Tags"`
	UnitPrice              map[string]interface{}  `json:"unit_price,omitempty" jsonschema:"description=Unit Price"`
	URL                    string                  `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
	Visibility             HotelVisibility         `json:"visibility,omitempty" jsonschema:"description=Visibility"`
}

// HotelRoom represents the Facebook HotelRoom object
type HotelRoom struct {
	Applinks    *CatalogItemAppLinks `json:"applinks,omitempty" jsonschema:"description=Applinks"`
	BasePrice   string               `json:"base_price,omitempty" jsonschema:"description=Base Price"`
	Currency    string               `json:"currency,omitempty" jsonschema:"description=Currency"`
	Description string               `json:"description,omitempty" jsonschema:"description=Description"`
	ID          string               `json:"id,omitempty" jsonschema:"description=HotelRoom ID,required,pattern=^[0-9]+$"`
	Images      []string             `json:"images,omitempty" jsonschema:"description=Images"`
	MarginLevel string               `json:"margin_level,omitempty" jsonschema:"description=Margin Level"`
	Name        string               `json:"name,omitempty" jsonschema:"description=Name of the HotelRoom,required"`
	RoomID      string               `json:"room_id,omitempty" jsonschema:"description=ID of the Room,pattern=^[0-9]+$"`
	SalePrice   string               `json:"sale_price,omitempty" jsonschema:"description=Sale Price"`
	URL         string               `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
}

// Hours represents the Facebook Hours object
type Hours struct {
	ID              string `json:"id,omitempty" jsonschema:"description=Hours ID,required,pattern=^[0-9]+$"`
	PermanentStatus string `json:"permanent_status,omitempty" jsonschema:"description=Permanent Status"`
}

// IDName represents the Facebook IDName object
type IDName struct {
	ID   string `json:"id,omitempty" jsonschema:"description=IDName ID,required,pattern=^[0-9]+$"`
	Name string `json:"name,omitempty" jsonschema:"description=Name of the IDName,required"`
}

// IGAccessTokenForIGOnlyAPI represents the Facebook IGAccessTokenForIGOnlyAPI object
type IGAccessTokenForIGOnlyAPI struct {
	AccessToken string `json:"access_token,omitempty" jsonschema:"description=Access Token"`
	ExpiresIn   int    `json:"expires_in,omitempty" jsonschema:"description=Expires In"`
	TokenType   string `json:"token_type,omitempty" jsonschema:"description=Token Type"`
}

// IGBCAdsPermission represents the Facebook IGBCAdsPermission object
type IGBCAdsPermission struct {
	ID             string `json:"id,omitempty" jsonschema:"description=IGBCAdsPermission ID,required,pattern=^[0-9]+$"`
	PermissionType string `json:"permission_type,omitempty" jsonschema:"description=Permission Type"`
	Status         string `json:"status,omitempty" jsonschema:"description=Current status of the IGBCAdsPermission,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// IGBoostMediaAd represents the Facebook IGBoostMediaAd object
type IGBoostMediaAd struct {
	AdID     string `json:"ad_id,omitempty" jsonschema:"description=ID of the Ad,pattern=^[0-9]+$"`
	AdStatus string `json:"ad_status,omitempty" jsonschema:"description=Ad Status"`
}

// IGComment represents the Facebook IGComment object
type IGComment struct {
	From                     *IGCommentFromUser `json:"from,omitempty" jsonschema:"description=From"`
	Hidden                   bool               `json:"hidden,omitempty" jsonschema:"description=Hidden"`
	ID                       string             `json:"id,omitempty" jsonschema:"description=IGComment ID,required,pattern=^[0-9]+$"`
	LegacyInstagramCommentID string             `json:"legacy_instagram_comment_id,omitempty" jsonschema:"description=ID of the Legacy Instagram Comment,pattern=^[0-9]+$"`
	LikeCount                int                `json:"like_count,omitempty" jsonschema:"description=Like Count"`
	Media                    *IGMedia           `json:"media,omitempty" jsonschema:"description=Media"`
	ParentID                 string             `json:"parent_id,omitempty" jsonschema:"description=ID of the Parent,pattern=^[0-9]+$"`
	Text                     string             `json:"text,omitempty" jsonschema:"description=Text"`
	Timestamp                time.Time          `json:"timestamp,omitempty" jsonschema:"description=Timestamp,format=date-time"`
	User                     *IGUser            `json:"user,omitempty" jsonschema:"description=User"`
	Username                 string             `json:"username,omitempty" jsonschema:"description=Username"`
}

// IGCommentFromUser represents the Facebook IGCommentFromUser object
type IGCommentFromUser struct {
	ID             string `json:"id,omitempty" jsonschema:"description=IGCommentFromUser ID,required,pattern=^[0-9]+$"`
	SelfIgScopedID string `json:"self_ig_scoped_id,omitempty" jsonschema:"description=ID of the Self Ig Scoped,pattern=^[0-9]+$"`
	Username       string `json:"username,omitempty" jsonschema:"description=Username"`
}

// IGMedia represents the Facebook IGMedia object
type IGMedia struct {
	AltText                   string                                   `json:"alt_text,omitempty" jsonschema:"description=Alt Text"`
	BoostEligibilityInfo      *IGMediaBoostEligibilityInfo             `json:"boost_eligibility_info,omitempty" jsonschema:"description=Boost Eligibility Info"`
	Caption                   string                                   `json:"caption,omitempty" jsonschema:"description=Caption"`
	CommentsCount             int                                      `json:"comments_count,omitempty" jsonschema:"description=Comments Count"`
	CopyrightCheckInformation *IGVideoCopyrightCheckMatchesInformation `json:"copyright_check_information,omitempty" jsonschema:"description=Copyright Check Information"`
	ID                        string                                   `json:"id,omitempty" jsonschema:"description=IGMedia ID,required,pattern=^[0-9]+$"`
	IgID                      string                                   `json:"ig_id,omitempty" jsonschema:"description=ID of the Ig,pattern=^[0-9]+$"`
	IsCommentEnabled          bool                                     `json:"is_comment_enabled,omitempty" jsonschema:"description=Is Comment Enabled"`
	IsSharedToFeed            bool                                     `json:"is_shared_to_feed,omitempty" jsonschema:"description=Is Shared To Feed"`
	LegacyInstagramMediaID    string                                   `json:"legacy_instagram_media_id,omitempty" jsonschema:"description=ID of the Legacy Instagram Media,pattern=^[0-9]+$"`
	LikeCount                 int                                      `json:"like_count,omitempty" jsonschema:"description=Like Count"`
	MediaProductType          string                                   `json:"media_product_type,omitempty" jsonschema:"description=Media Product Type"`
	MediaType                 string                                   `json:"media_type,omitempty" jsonschema:"description=Media Type"`
	MediaURL                  string                                   `json:"media_url,omitempty" jsonschema:"description=Media URL,format=uri"`
	Owner                     *IGUser                                  `json:"owner,omitempty" jsonschema:"description=Owner"`
	Permalink                 string                                   `json:"permalink,omitempty" jsonschema:"description=Permalink"`
	Shortcode                 string                                   `json:"shortcode,omitempty" jsonschema:"description=Shortcode"`
	ThumbnailURL              string                                   `json:"thumbnail_url,omitempty" jsonschema:"description=Thumbnail URL,format=uri"`
	Timestamp                 time.Time                                `json:"timestamp,omitempty" jsonschema:"description=Timestamp,format=date-time"`
	Username                  string                                   `json:"username,omitempty" jsonschema:"description=Username"`
	ViewCount                 int                                      `json:"view_count,omitempty" jsonschema:"description=View Count"`
}

// IGMediaBoostEligibilityInfo represents the Facebook IGMediaBoostEligibilityInfo object
type IGMediaBoostEligibilityInfo struct {
	BoostIneligibleReason string `json:"boost_ineligible_reason,omitempty" jsonschema:"description=Boost Ineligible Reason"`
	EligibleToBoost       bool   `json:"eligible_to_boost,omitempty" jsonschema:"description=Eligible To Boost"`
}

// IGMediaForIGOnlyAPI represents the Facebook IGMediaForIGOnlyAPI object
type IGMediaForIGOnlyAPI struct {
	AltText          string    `json:"alt_text,omitempty" jsonschema:"description=Alt Text"`
	Caption          string    `json:"caption,omitempty" jsonschema:"description=Caption"`
	CommentsCount    int       `json:"comments_count,omitempty" jsonschema:"description=Comments Count"`
	ID               string    `json:"id,omitempty" jsonschema:"description=IGMediaForIGOnlyAPI ID,required,pattern=^[0-9]+$"`
	IsCommentEnabled bool      `json:"is_comment_enabled,omitempty" jsonschema:"description=Is Comment Enabled"`
	IsSharedToFeed   bool      `json:"is_shared_to_feed,omitempty" jsonschema:"description=Is Shared To Feed"`
	LikeCount        int       `json:"like_count,omitempty" jsonschema:"description=Like Count"`
	MediaProductType string    `json:"media_product_type,omitempty" jsonschema:"description=Media Product Type"`
	MediaType        string    `json:"media_type,omitempty" jsonschema:"description=Media Type"`
	MediaURL         string    `json:"media_url,omitempty" jsonschema:"description=Media URL,format=uri"`
	Owner            *User     `json:"owner,omitempty" jsonschema:"description=Owner"`
	Permalink        string    `json:"permalink,omitempty" jsonschema:"description=Permalink"`
	Shortcode        string    `json:"shortcode,omitempty" jsonschema:"description=Shortcode"`
	ThumbnailURL     string    `json:"thumbnail_url,omitempty" jsonschema:"description=Thumbnail URL,format=uri"`
	Timestamp        time.Time `json:"timestamp,omitempty" jsonschema:"description=Timestamp,format=date-time"`
	Username         string    `json:"username,omitempty" jsonschema:"description=Username"`
}

// IGProductTaggingInvalidationError represents the Facebook IGProductTaggingInvalidationError object
type IGProductTaggingInvalidationError struct {
	Description      string `json:"description,omitempty" jsonschema:"description=Description"`
	TaggabilityState string `json:"taggability_state,omitempty" jsonschema:"description=Taggability State"`
	Title            string `json:"title,omitempty" jsonschema:"description=Title"`
}

// IGRefreshAccessTokenForIGOnlyAPI represents the Facebook IGRefreshAccessTokenForIGOnlyAPI object
type IGRefreshAccessTokenForIGOnlyAPI struct {
	AccessToken string `json:"access_token,omitempty" jsonschema:"description=Access Token"`
	ExpiresIn   int    `json:"expires_in,omitempty" jsonschema:"description=Expires In"`
	Permissions string `json:"permissions,omitempty" jsonschema:"description=Permissions"`
	TokenType   string `json:"token_type,omitempty" jsonschema:"description=Token Type"`
}

// IGResumableVideoUploadStatus represents the Facebook IGResumableVideoUploadStatus object
type IGResumableVideoUploadStatus struct {
	ProcessingPhase *VideoStatusProcessingPhase `json:"processing_phase,omitempty" jsonschema:"description=Processing Phase"`
	UploadingPhase  *VideoStatusUploadingPhase  `json:"uploading_phase,omitempty" jsonschema:"description=Uploading Phase"`
}

// IGShoppingProductAppeal represents the Facebook IGShoppingProductAppeal object
type IGShoppingProductAppeal struct {
	EligibleForAppeal   bool     `json:"eligible_for_appeal,omitempty" jsonschema:"description=Eligible For Appeal"`
	ProductAppealStatus string   `json:"product_appeal_status,omitempty" jsonschema:"description=Product Appeal Status"`
	ProductID           int      `json:"product_id,omitempty" jsonschema:"description=ID of the Product,pattern=^[0-9]+$"`
	RejectionReasons    []string `json:"rejection_reasons,omitempty" jsonschema:"description=Rejection Reasons"`
	ReviewStatus        string   `json:"review_status,omitempty" jsonschema:"description=Review Status"`
}

// IGShoppingReviewStatus represents the Facebook IGShoppingReviewStatus object
type IGShoppingReviewStatus struct {
	OnsiteEligibility *IGShoppingReviewStatusOnsiteEligibility       `json:"onsite_eligibility,omitempty" jsonschema:"description=Onsite Eligibility"`
	Reasons           []*IGShoppingReviewStatusReasonWithHelpMessage `json:"reasons,omitempty" jsonschema:"description=Reasons"`
	Status            string                                         `json:"status,omitempty" jsonschema:"description=Current status of the IGShoppingReviewStatus,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// IGShoppingReviewStatusOnsiteEligibility represents the Facebook IGShoppingReviewStatusOnsiteEligibility object
type IGShoppingReviewStatusOnsiteEligibility struct {
	IsEligible bool                                           `json:"is_eligible,omitempty" jsonschema:"description=Is Eligible"`
	Reasons    []*IGShoppingReviewStatusReasonWithHelpMessage `json:"reasons,omitempty" jsonschema:"description=Reasons"`
}

// IGShoppingReviewStatusReasonWithHelpMessage represents the Facebook IGShoppingReviewStatusReasonWithHelpMessage object
type IGShoppingReviewStatusReasonWithHelpMessage struct {
	Code    string `json:"code,omitempty" jsonschema:"description=Code"`
	HelpURL string `json:"help_url,omitempty" jsonschema:"description=Help URL,format=uri"`
	Message string `json:"message,omitempty" jsonschema:"description=Message"`
}

// IGUpcomingEvent represents the Facebook IGUpcomingEvent object
type IGUpcomingEvent struct {
	EndTime                time.Time `json:"end_time,omitempty" jsonschema:"description=End Time,format=date-time"`
	ID                     string    `json:"id,omitempty" jsonschema:"description=IGUpcomingEvent ID,required,pattern=^[0-9]+$"`
	NotificationSubtypes   []string  `json:"notification_subtypes,omitempty" jsonschema:"description=Notification Subtypes"`
	NotificationTargetTime string    `json:"notification_target_time,omitempty" jsonschema:"description=Notification Target Time"`
	StartTime              time.Time `json:"start_time,omitempty" jsonschema:"description=Start Time,format=date-time"`
	Title                  string    `json:"title,omitempty" jsonschema:"description=Title"`
}

// IGUser represents the Facebook IGUser object
type IGUser struct {
	Biography                     string     `json:"biography,omitempty" jsonschema:"description=Biography"`
	BusinessDiscovery             *IGUser    `json:"business_discovery,omitempty" jsonschema:"description=Business Discovery"`
	FollowersCount                int        `json:"followers_count,omitempty" jsonschema:"description=Followers Count"`
	FollowsCount                  int        `json:"follows_count,omitempty" jsonschema:"description=Follows Count"`
	HasProfilePic                 bool       `json:"has_profile_pic,omitempty" jsonschema:"description=Has Profile Pic"`
	ID                            string     `json:"id,omitempty" jsonschema:"description=IGUser ID,required,pattern=^[0-9]+$"`
	IgID                          int        `json:"ig_id,omitempty" jsonschema:"description=ID of the Ig,pattern=^[0-9]+$"`
	IsPublished                   bool       `json:"is_published,omitempty" jsonschema:"description=Is Published"`
	LegacyInstagramUserID         string     `json:"legacy_instagram_user_id,omitempty" jsonschema:"description=ID of the Legacy Instagram User,pattern=^[0-9]+$"`
	MediaCount                    int        `json:"media_count,omitempty" jsonschema:"description=Media Count"`
	MentionedComment              *IGComment `json:"mentioned_comment,omitempty" jsonschema:"description=Mentioned Comment"`
	MentionedMedia                *IGMedia   `json:"mentioned_media,omitempty" jsonschema:"description=Mentioned Media"`
	Name                          string     `json:"name,omitempty" jsonschema:"description=Name of the IGUser,required"`
	OwnerBusiness                 *Business  `json:"owner_business,omitempty" jsonschema:"description=Owner Business"`
	ProfilePictureURL             string     `json:"profile_picture_url,omitempty" jsonschema:"description=Profile Picture URL,format=uri"`
	ShoppingProductTagEligibility bool       `json:"shopping_product_tag_eligibility,omitempty" jsonschema:"description=Shopping Product Tag Eligibility"`
	ShoppingReviewStatus          string     `json:"shopping_review_status,omitempty" jsonschema:"description=Shopping Review Status"`
	Username                      string     `json:"username,omitempty" jsonschema:"description=Username"`
	Website                       string     `json:"website,omitempty" jsonschema:"description=Website"`
}

// IGUserExportForCAM represents the Facebook IGUserExportForCAM object
type IGUserExportForCAM struct {
	AgeBucket                        string `json:"age_bucket,omitempty" jsonschema:"description=Age Bucket"`
	Biography                        string `json:"biography,omitempty" jsonschema:"description=Biography"`
	Country                          string `json:"country,omitempty" jsonschema:"description=Country"`
	Email                            string `json:"email,omitempty" jsonschema:"description=Email"`
	Gender                           string `json:"gender,omitempty" jsonschema:"description=Gender"`
	ID                               string `json:"id,omitempty" jsonschema:"description=IGUserExportForCAM ID,required,pattern=^[0-9]+$"`
	IsAccountVerified                bool   `json:"is_account_verified,omitempty" jsonschema:"description=Is Account Verified"`
	IsPaidPartnershipMessagesEnabled bool   `json:"is_paid_partnership_messages_enabled,omitempty" jsonschema:"description=Is Paid Partnership Messages Enabled"`
	MessagingID                      string `json:"messaging_id,omitempty" jsonschema:"description=ID of the Messaging,pattern=^[0-9]+$"`
	OnboardedStatus                  bool   `json:"onboarded_status,omitempty" jsonschema:"description=Onboarded Status"`
	PortfolioURL                     string `json:"portfolio_url,omitempty" jsonschema:"description=Portfolio URL,format=uri"`
	Username                         string `json:"username,omitempty" jsonschema:"description=Username"`
}

// IGUserForIGOnlyAPI represents the Facebook IGUserForIGOnlyAPI object
type IGUserForIGOnlyAPI struct {
	AccountType       string `json:"account_type,omitempty" jsonschema:"description=Account Type"`
	Biography         string `json:"biography,omitempty" jsonschema:"description=Biography"`
	FollowersCount    int    `json:"followers_count,omitempty" jsonschema:"description=Followers Count"`
	FollowsCount      int    `json:"follows_count,omitempty" jsonschema:"description=Follows Count"`
	ID                string `json:"id,omitempty" jsonschema:"description=IGUserForIGOnlyAPI ID,required,pattern=^[0-9]+$"`
	MediaCount        int    `json:"media_count,omitempty" jsonschema:"description=Media Count"`
	Name              string `json:"name,omitempty" jsonschema:"description=Name of the IGUserForIGOnlyAPI,required"`
	ProfilePictureURL string `json:"profile_picture_url,omitempty" jsonschema:"description=Profile Picture URL,format=uri"`
	UserID            int    `json:"user_id,omitempty" jsonschema:"description=ID of the User,pattern=^[0-9]+$"`
	Username          string `json:"username,omitempty" jsonschema:"description=Username"`
	Website           string `json:"website,omitempty" jsonschema:"description=Website"`
}

// IGUserMessengerProfile represents the Facebook IGUserMessengerProfile object
type IGUserMessengerProfile struct {
	IceBreakers    []map[string]interface{} `json:"ice_breakers,omitempty" jsonschema:"description=Ice Breakers"`
	PersistentMenu []map[string]interface{} `json:"persistent_menu,omitempty" jsonschema:"description=Persistent Menu"`
}

// IGUserSubscribedAppsData represents the Facebook IGUserSubscribedAppsData object
type IGUserSubscribedAppsData struct {
	AppID            string   `json:"app_id,omitempty" jsonschema:"description=ID of the App,pattern=^[0-9]+$"`
	SubscribedFields []string `json:"subscribed_fields,omitempty" jsonschema:"description=Subscribed Fields"`
}

// IGVideoCopyrightCheckMatchesInformation represents the Facebook IGVideoCopyrightCheckMatchesInformation object
type IGVideoCopyrightCheckMatchesInformation struct {
	CopyrightMatches []map[string]interface{}     `json:"copyright_matches,omitempty" jsonschema:"description=Copyright Matches"`
	Status           *IGVideoCopyrightCheckStatus `json:"status,omitempty" jsonschema:"description=Current status of the IGVideoCopyrightCheckMatchesInformation,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// IGVideoCopyrightCheckStatus represents the Facebook IGVideoCopyrightCheckStatus object
type IGVideoCopyrightCheckStatus struct {
	MatchesFound bool   `json:"matches_found,omitempty" jsonschema:"description=Matches Found"`
	Status       string `json:"status,omitempty" jsonschema:"description=Current status of the IGVideoCopyrightCheckStatus,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// IPObject represents the Facebook IPObject object
type IPObject struct {
	IpPermission string                 `json:"ip_permission,omitempty" jsonschema:"description=Ip Permission"`
	User         map[string]interface{} `json:"user,omitempty" jsonschema:"description=User"`
}

// ImageCopyright represents the Facebook ImageCopyright object
type ImageCopyright struct {
	Artist                      string                 `json:"artist,omitempty" jsonschema:"description=Artist"`
	CopyrightMonitoringStatus   string                 `json:"copyright_monitoring_status,omitempty" jsonschema:"description=Copyright Monitoring Status"`
	CreationTime                time.Time              `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	Creator                     string                 `json:"creator,omitempty" jsonschema:"description=Creator"`
	CustomID                    string                 `json:"custom_id,omitempty" jsonschema:"description=ID of the Custom,pattern=^[0-9]+$"`
	Description                 string                 `json:"description,omitempty" jsonschema:"description=Description"`
	Filename                    string                 `json:"filename,omitempty" jsonschema:"description=Filename"`
	ID                          string                 `json:"id,omitempty" jsonschema:"description=ImageCopyright ID,required,pattern=^[0-9]+$"`
	Image                       *Photo                 `json:"image,omitempty" jsonschema:"description=Image"`
	MatchesCount                uint                   `json:"matches_count,omitempty" jsonschema:"description=Matches Count"`
	OriginalContentCreationDate time.Time              `json:"original_content_creation_date,omitempty" jsonschema:"description=Original Content Creation Date,format=date-time"`
	OwnershipCountries          *VideoCopyrightGeoGate `json:"ownership_countries,omitempty" jsonschema:"description=Ownership Countries"`
	Tags                        []string               `json:"tags,omitempty" jsonschema:"description=Tags"`
	Title                       string                 `json:"title,omitempty" jsonschema:"description=Title"`
	UpdateTime                  time.Time              `json:"update_time,omitempty" jsonschema:"description=Update Time,format=date-time"`
}

// ImageCopyrightDispute represents the Facebook ImageCopyrightDispute object
type ImageCopyrightDispute struct {
	AppealFormData  string    `json:"appeal_form_data,omitempty" jsonschema:"description=Appeal Form Data"`
	DisputeFormData string    `json:"dispute_form_data,omitempty" jsonschema:"description=Dispute Form Data"`
	ExpirationTime  time.Time `json:"expiration_time,omitempty" jsonschema:"description=Expiration Time,format=date-time"`
	ID              string    `json:"id,omitempty" jsonschema:"description=ImageCopyrightDispute ID,required,pattern=^[0-9]+$"`
	MatchID         string    `json:"match_id,omitempty" jsonschema:"description=ID of the Match,pattern=^[0-9]+$"`
	Status          string    `json:"status,omitempty" jsonschema:"description=Current status of the ImageCopyrightDispute,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	TimeAppealed    time.Time `json:"time_appealed,omitempty" jsonschema:"description=Time Appealed,format=date-time"`
	TimeCreated     time.Time `json:"time_created,omitempty" jsonschema:"description=When the ImageCopyrightDispute was created,format=date-time"`
	TimeUpdated     time.Time `json:"time_updated,omitempty" jsonschema:"description=When the ImageCopyrightDispute was last updated,format=date-time"`
}

// ImageReferenceMatch represents the Facebook ImageReferenceMatch object
type ImageReferenceMatch struct {
	ConflictingCountries                     []string                              `json:"conflicting_countries,omitempty" jsonschema:"description=Conflicting Countries"`
	CountryResolutionHistory                 []map[string][]map[string]interface{} `json:"country_resolution_history,omitempty" jsonschema:"description=Country Resolution History"`
	CreationTime                             time.Time                             `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	CurrentConflictResolvedCountries         []map[string]map[string]interface{}   `json:"current_conflict_resolved_countries,omitempty" jsonschema:"description=Current Conflict Resolved Countries"`
	DisplayedMatchState                      string                                `json:"displayed_match_state,omitempty" jsonschema:"description=Displayed Match State"`
	DisputeFormDataEntriesWithTranslations   []map[string]interface{}              `json:"dispute_form_data_entries_with_translations,omitempty" jsonschema:"description=Dispute Form Data Entries With Translations"`
	ExpirationTime                           time.Time                             `json:"expiration_time,omitempty" jsonschema:"description=Expiration Time,format=date-time"`
	ID                                       string                                `json:"id,omitempty" jsonschema:"description=ImageReferenceMatch ID,required,pattern=^[0-9]+$"`
	MatchState                               string                                `json:"match_state,omitempty" jsonschema:"description=Match State"`
	MatchedReferenceCopyright                *ImageCopyright                       `json:"matched_reference_copyright,omitempty" jsonschema:"description=Matched Reference Copyright"`
	MatchedReferenceOwner                    *Profile                              `json:"matched_reference_owner,omitempty" jsonschema:"description=Matched Reference Owner"`
	ModificationHistory                      []map[string]interface{}              `json:"modification_history,omitempty" jsonschema:"description=Modification History"`
	ReferenceCopyright                       *ImageCopyright                       `json:"reference_copyright,omitempty" jsonschema:"description=Reference Copyright"`
	ReferenceOwner                           *Profile                              `json:"reference_owner,omitempty" jsonschema:"description=Reference Owner"`
	RejectionFormDataEntriesWithTranslations []map[string]interface{}              `json:"rejection_form_data_entries_with_translations,omitempty" jsonschema:"description=Rejection Form Data Entries With Translations"`
	ResolutionReason                         string                                `json:"resolution_reason,omitempty" jsonschema:"description=Resolution Reason"`
	UpdateTime                               time.Time                             `json:"update_time,omitempty" jsonschema:"description=Update Time,format=date-time"`
}

// InsightsResult represents the Facebook InsightsResult object
type InsightsResult struct {
	Description           string           `json:"description,omitempty" jsonschema:"description=Description"`
	DescriptionFromAPIDoc string           `json:"description_from_api_doc,omitempty" jsonschema:"description=Description From API Doc"`
	ID                    string           `json:"id,omitempty" jsonschema:"description=InsightsResult ID,required,pattern=^[0-9]+$"`
	Name                  string           `json:"name,omitempty" jsonschema:"description=Name of the InsightsResult,required"`
	Period                string           `json:"period,omitempty" jsonschema:"description=Period"`
	Title                 string           `json:"title,omitempty" jsonschema:"description=Title"`
	Values                []*InsightsValue `json:"values,omitempty" jsonschema:"description=Values"`
}

// InsightsValue represents the Facebook InsightsValue object
type InsightsValue struct {
	CampaignID                       string                 `json:"campaign_id,omitempty" jsonschema:"description=ID of the Campaign,pattern=^[0-9]+$"`
	EarningSource                    string                 `json:"earning_source,omitempty" jsonschema:"description=Earning Source"`
	EndTime                          time.Time              `json:"end_time,omitempty" jsonschema:"description=End Time,format=date-time"`
	EngagementSource                 string                 `json:"engagement_source,omitempty" jsonschema:"description=Engagement Source"`
	MessageType                      string                 `json:"message_type,omitempty" jsonschema:"description=Message Type"`
	MessagingChannel                 string                 `json:"messaging_channel,omitempty" jsonschema:"description=Messaging Channel"`
	MonetizationTool                 string                 `json:"monetization_tool,omitempty" jsonschema:"description=Monetization Tool"`
	RecurringNotificationsEntryPoint string                 `json:"recurring_notifications_entry_point,omitempty" jsonschema:"description=Recurring Notifications Entry Point"`
	RecurringNotificationsFrequency  string                 `json:"recurring_notifications_frequency,omitempty" jsonschema:"description=Recurring Notifications Frequency"`
	RecurringNotificationsTopic      string                 `json:"recurring_notifications_topic,omitempty" jsonschema:"description=Recurring Notifications Topic"`
	StartTime                        time.Time              `json:"start_time,omitempty" jsonschema:"description=Start Time,format=date-time"`
	Value                            map[string]interface{} `json:"value,omitempty" jsonschema:"description=Value"`
}

// InstagramBusinessAsset represents the Facebook InstagramBusinessAsset object
type InstagramBusinessAsset struct {
	ID         string `json:"id,omitempty" jsonschema:"description=InstagramBusinessAsset ID,required,pattern=^[0-9]+$"`
	IgUserID   string `json:"ig_user_id,omitempty" jsonschema:"description=ID of the Ig User,pattern=^[0-9]+$"`
	IgUsername string `json:"ig_username,omitempty" jsonschema:"description=Ig Username"`
}

// InstagramInsightsResult represents the Facebook InstagramInsightsResult object
type InstagramInsightsResult struct {
	Description string                    `json:"description,omitempty" jsonschema:"description=Description"`
	ID          string                    `json:"id,omitempty" jsonschema:"description=InstagramInsightsResult ID,required,pattern=^[0-9]+$"`
	Name        string                    `json:"name,omitempty" jsonschema:"description=Name of the InstagramInsightsResult,required"`
	Period      string                    `json:"period,omitempty" jsonschema:"description=Period"`
	Title       string                    `json:"title,omitempty" jsonschema:"description=Title"`
	TotalValue  map[string]interface{}    `json:"total_value,omitempty" jsonschema:"description=Total Value"`
	Values      []*InstagramInsightsValue `json:"values,omitempty" jsonschema:"description=Values"`
}

// InstagramInsightsValue represents the Facebook InstagramInsightsValue object
type InstagramInsightsValue struct {
	EndTime time.Time              `json:"end_time,omitempty" jsonschema:"description=End Time,format=date-time"`
	Value   map[string]interface{} `json:"value,omitempty" jsonschema:"description=Value"`
}

// InstagramRelatedProductTags represents the Facebook InstagramRelatedProductTags object
type InstagramRelatedProductTags struct {
	CheckoutSetting string `json:"checkout_setting,omitempty" jsonschema:"description=Checkout Setting"`
	ID              int    `json:"id,omitempty" jsonschema:"description=InstagramRelatedProductTags ID,required,pattern=^[0-9]+$"`
	ImageUri        string `json:"image_uri,omitempty" jsonschema:"description=Image Uri"`
	Name            string `json:"name,omitempty" jsonschema:"description=Name of the InstagramRelatedProductTags,required"`
	PriceLabel      string `json:"price_label,omitempty" jsonschema:"description=Price Label"`
	SalePriceLabel  string `json:"sale_price_label,omitempty" jsonschema:"description=Sale Price Label"`
}

// InstagramShoppingMerchantReviewMessage represents the Facebook InstagramShoppingMerchantReviewMessage object
type InstagramShoppingMerchantReviewMessage struct {
	HelpURL string `json:"help_url,omitempty" jsonschema:"description=Help URL,format=uri"`
	Message string `json:"message,omitempty" jsonschema:"description=Message"`
}

// InstagramThread represents the Facebook InstagramThread object
type InstagramThread struct {
	Folder       string                 `json:"folder,omitempty" jsonschema:"description=Folder"`
	ID           string                 `json:"id,omitempty" jsonschema:"description=InstagramThread ID,required,pattern=^[0-9]+$"`
	Participants map[string]interface{} `json:"participants,omitempty" jsonschema:"description=Participants"`
	UpdatedTime  time.Time              `json:"updated_time,omitempty" jsonschema:"description=When the InstagramThread was last updated,format=date-time"`
}

// InstagramUser represents the Facebook InstagramUser object
type InstagramUser struct {
	FollowCount        int       `json:"follow_count,omitempty" jsonschema:"description=Follow Count"`
	FollowedByCount    int       `json:"followed_by_count,omitempty" jsonschema:"description=Followed By Count"`
	HasProfilePicture  bool      `json:"has_profile_picture,omitempty" jsonschema:"description=Has Profile Picture"`
	ID                 string    `json:"id,omitempty" jsonschema:"description=InstagramUser ID,required,pattern=^[0-9]+$"`
	IgUserID           string    `json:"ig_user_id,omitempty" jsonschema:"description=ID of the Ig User,pattern=^[0-9]+$"`
	IsPrivate          bool      `json:"is_private,omitempty" jsonschema:"description=Is Private"`
	IsPublished        bool      `json:"is_published,omitempty" jsonschema:"description=Is Published"`
	MediaCount         int       `json:"media_count,omitempty" jsonschema:"description=Media Count"`
	MiniShopStorefront *Shop     `json:"mini_shop_storefront,omitempty" jsonschema:"description=Mini Shop Storefront"`
	OwnerBusiness      *Business `json:"owner_business,omitempty" jsonschema:"description=Owner Business"`
	ProfilePic         string    `json:"profile_pic,omitempty" jsonschema:"description=Profile Pic"`
	Username           string    `json:"username,omitempty" jsonschema:"description=Username"`
}

// InstantArticleInsightsQueryResult represents the Facebook InstantArticleInsightsQueryResult object
type InstantArticleInsightsQueryResult struct {
	Breakdowns map[string]string `json:"breakdowns,omitempty" jsonschema:"description=Breakdowns"`
	Name       string            `json:"name,omitempty" jsonschema:"description=Name of the InstantArticleInsightsQueryResult,required"`
	Time       time.Time         `json:"time,omitempty" jsonschema:"description=Time,format=date-time"`
	Value      string            `json:"value,omitempty" jsonschema:"description=Value"`
}

// IosAppLink represents the Facebook IosAppLink object
type IosAppLink struct {
	AppName    string `json:"app_name,omitempty" jsonschema:"description=App Name"`
	AppStoreID string `json:"app_store_id,omitempty" jsonschema:"description=ID of the App Store,pattern=^[0-9]+$"`
	URL        string `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
}

// JobOpening represents the Facebook JobOpening object
type JobOpening struct {
	Address                    string                             `json:"address,omitempty" jsonschema:"description=Address"`
	ApplicationCallbackURL     string                             `json:"application_callback_url,omitempty" jsonschema:"description=Application Callback URL,format=uri"`
	CreatedTime                time.Time                          `json:"created_time,omitempty" jsonschema:"description=When the JobOpening was created,format=date-time"`
	Description                string                             `json:"description,omitempty" jsonschema:"description=Description"`
	Errors                     []string                           `json:"errors,omitempty" jsonschema:"description=Errors"`
	ExternalCompanyFacebookURL string                             `json:"external_company_facebook_url,omitempty" jsonschema:"description=External Company Facebook URL,format=uri"`
	ExternalCompanyFullAddress string                             `json:"external_company_full_address,omitempty" jsonschema:"description=External Company Full Address"`
	ExternalCompanyID          string                             `json:"external_company_id,omitempty" jsonschema:"description=ID of the External Company,pattern=^[0-9]+$"`
	ExternalCompanyName        string                             `json:"external_company_name,omitempty" jsonschema:"description=External Company Name"`
	ExternalID                 string                             `json:"external_id,omitempty" jsonschema:"description=ID of the External,pattern=^[0-9]+$"`
	ID                         string                             `json:"id,omitempty" jsonschema:"description=JobOpening ID,required,pattern=^[0-9]+$"`
	JobStatus                  JobopeningJobStatus                `json:"job_status,omitempty" jsonschema:"description=Job Status"`
	Latitude                   float64                            `json:"latitude,omitempty" jsonschema:"description=Latitude"`
	Longitude                  float64                            `json:"longitude,omitempty" jsonschema:"description=Longitude"`
	OffsiteApplicationURL      string                             `json:"offsite_application_url,omitempty" jsonschema:"description=Offsite Application URL,format=uri"`
	Page                       *Page                              `json:"page,omitempty" jsonschema:"description=Page"`
	Photo                      *Photo                             `json:"photo,omitempty" jsonschema:"description=Photo"`
	PlatformReviewStatus       JobopeningPlatformReviewStatus     `json:"platform_review_status,omitempty" jsonschema:"description=Platform Review Status"`
	Post                       *Post                              `json:"post,omitempty" jsonschema:"description=Post"`
	RemoteType                 string                             `json:"remote_type,omitempty" jsonschema:"description=Remote Type"`
	ReviewRejectionReasons     []JobopeningReviewRejectionReasons `json:"review_rejection_reasons,omitempty" jsonschema:"description=Review Rejection Reasons"`
	Title                      string                             `json:"title,omitempty" jsonschema:"description=Title"`
	Type                       JobopeningType                     `json:"type,omitempty" jsonschema:"description=Type"`
}

// KeyValue represents the Facebook KeyValue object
type KeyValue struct {
	Key   string `json:"key,omitempty" jsonschema:"description=Key"`
	Value string `json:"value,omitempty" jsonschema:"description=Value"`
}

// Lead represents the Facebook Lead object
type Lead struct {
	AdID                      string                            `json:"ad_id,omitempty" jsonschema:"description=ID of the Ad,pattern=^[0-9]+$"`
	AdName                    string                            `json:"ad_name,omitempty" jsonschema:"description=Ad Name"`
	AdsetID                   string                            `json:"adset_id,omitempty" jsonschema:"description=ID of the Adset,pattern=^[0-9]+$"`
	AdsetName                 string                            `json:"adset_name,omitempty" jsonschema:"description=Adset Name"`
	CampaignID                string                            `json:"campaign_id,omitempty" jsonschema:"description=ID of the Campaign,pattern=^[0-9]+$"`
	CampaignName              string                            `json:"campaign_name,omitempty" jsonschema:"description=Campaign Name"`
	CreatedTime               time.Time                         `json:"created_time,omitempty" jsonschema:"description=When the Lead was created,format=date-time"`
	CustomDisclaimerResponses []*UserLeadGenDisclaimerResponse  `json:"custom_disclaimer_responses,omitempty" jsonschema:"description=Custom Disclaimer Responses"`
	FieldData                 []*UserLeadGenFieldData           `json:"field_data,omitempty" jsonschema:"description=Field Data"`
	FormID                    string                            `json:"form_id,omitempty" jsonschema:"description=ID of the Form,pattern=^[0-9]+$"`
	HomeListing               *HomeListing                      `json:"home_listing,omitempty" jsonschema:"description=Home Listing"`
	ID                        string                            `json:"id,omitempty" jsonschema:"description=Lead ID,required,pattern=^[0-9]+$"`
	IsOrganic                 bool                              `json:"is_organic,omitempty" jsonschema:"description=Is Organic"`
	PartnerName               string                            `json:"partner_name,omitempty" jsonschema:"description=Partner Name"`
	Platform                  string                            `json:"platform,omitempty" jsonschema:"description=Platform"`
	Post                      *Link                             `json:"post,omitempty" jsonschema:"description=Post"`
	PostSubmissionCheckResult *LeadGenPostSubmissionCheckResult `json:"post_submission_check_result,omitempty" jsonschema:"description=Post Submission Check Result"`
	RetailerItemID            string                            `json:"retailer_item_id,omitempty" jsonschema:"description=ID of the Retailer Item,pattern=^[0-9]+$"`
	Vehicle                   *Vehicle                          `json:"vehicle,omitempty" jsonschema:"description=Vehicle"`
}

// LeadGenAppointmentBookingInfo represents the Facebook LeadGenAppointmentBookingInfo object
type LeadGenAppointmentBookingInfo struct {
	AdvertiserTimezoneOffset string                          `json:"advertiser_timezone_offset,omitempty" jsonschema:"description=Advertiser Timezone Offset"`
	AppointmentDurations     []string                        `json:"appointment_durations,omitempty" jsonschema:"description=Appointment Durations"`
	AppointmentSlotsByDay    []*LeadGenAppointmentSlotsByDay `json:"appointment_slots_by_day,omitempty" jsonschema:"description=Appointment Slots By Day"`
}

// LeadGenAppointmentSlotsByDay represents the Facebook LeadGenAppointmentSlotsByDay object
type LeadGenAppointmentSlotsByDay struct {
	AppointmentSlots []*LeadGenAppointmentTimeSlot `json:"appointment_slots,omitempty" jsonschema:"description=Appointment Slots"`
	Day              string                        `json:"day,omitempty" jsonschema:"description=Day"`
}

// LeadGenAppointmentTimeSlot represents the Facebook LeadGenAppointmentTimeSlot object
type LeadGenAppointmentTimeSlot struct {
	EndTime   uint `json:"end_time,omitempty" jsonschema:"description=End Time"`
	StartTime uint `json:"start_time,omitempty" jsonschema:"description=Start Time"`
}

// LeadGenClientValidationRules represents the Facebook LeadGenClientValidationRules object
type LeadGenClientValidationRules struct {
	ExcludeEmojiAndSpecialCharsEnabled bool `json:"exclude_emoji_and_special_chars_enabled,omitempty" jsonschema:"description=Exclude Emoji And Special Chars Enabled"`
	MaxLengthValue                     int  `json:"max_length_value,omitempty" jsonschema:"description=Max Length Value"`
	MinLengthValue                     int  `json:"min_length_value,omitempty" jsonschema:"description=Min Length Value"`
}

// LeadGenConditionalQuestionsGroupChoices represents the Facebook LeadGenConditionalQuestionsGroupChoices object
type LeadGenConditionalQuestionsGroupChoices struct {
	CustomizedToken     string                                     `json:"customized_token,omitempty" jsonschema:"description=Customized Token"`
	NextQuestionChoices []*LeadGenConditionalQuestionsGroupChoices `json:"next_question_choices,omitempty" jsonschema:"description=Next Question Choices"`
	Value               string                                     `json:"value,omitempty" jsonschema:"description=Value"`
}

// LeadGenConditionalQuestionsGroupQuestions represents the Facebook LeadGenConditionalQuestionsGroupQuestions object
type LeadGenConditionalQuestionsGroupQuestions struct {
	FieldKey  string `json:"field_key,omitempty" jsonschema:"description=Field Key"`
	InputType string `json:"input_type,omitempty" jsonschema:"description=Input Type"`
	Name      string `json:"name,omitempty" jsonschema:"description=Name of the LeadGenConditionalQuestionsGroupQuestions,required"`
}

// LeadGenContextCard represents the Facebook LeadGenContextCard object
type LeadGenContextCard struct {
	ButtonText string   `json:"button_text,omitempty" jsonschema:"description=Button Text"`
	Content    []string `json:"content,omitempty" jsonschema:"description=Content"`
	CoverPhoto *Photo   `json:"cover_photo,omitempty" jsonschema:"description=Cover Photo"`
	ID         string   `json:"id,omitempty" jsonschema:"description=LeadGenContextCard ID,required,pattern=^[0-9]+$"`
	Style      string   `json:"style,omitempty" jsonschema:"description=Style"`
	Title      string   `json:"title,omitempty" jsonschema:"description=Title"`
}

// LeadGenCustomDisclaimer represents the Facebook LeadGenCustomDisclaimer object
type LeadGenCustomDisclaimer struct {
	Body       *LeadGenCustomDisclaimerBody   `json:"body,omitempty" jsonschema:"description=Body"`
	Checkboxes []*LeadGenLegalContentCheckbox `json:"checkboxes,omitempty" jsonschema:"description=Checkboxes"`
	Title      string                         `json:"title,omitempty" jsonschema:"description=Title"`
}

// LeadGenCustomDisclaimerBody represents the Facebook LeadGenCustomDisclaimerBody object
type LeadGenCustomDisclaimerBody struct {
	Text        string                      `json:"text,omitempty" jsonschema:"description=Text"`
	URLEntities []*LeadGenURLEntityAtRanges `json:"url_entities,omitempty" jsonschema:"description=URL Entities,format=uri"`
}

// LeadGenDataDraft represents the Facebook LeadGenDataDraft object
type LeadGenDataDraft struct {
	BlockDisplayForNonTargetedViewer bool                    `json:"block_display_for_non_targeted_viewer,omitempty" jsonschema:"description=Block Display For Non Targeted Viewer"`
	CreatedTime                      time.Time               `json:"created_time,omitempty" jsonschema:"description=When the LeadGenDataDraft was created,format=date-time"`
	DisqualifiedEndComponent         map[string]interface{}  `json:"disqualified_end_component,omitempty" jsonschema:"description=Disqualified End Component"`
	FollowUpActionURL                string                  `json:"follow_up_action_url,omitempty" jsonschema:"description=Follow Up Action URL,format=uri"`
	ID                               string                  `json:"id,omitempty" jsonschema:"description=LeadGenDataDraft ID,required,pattern=^[0-9]+$"`
	IsOptimizedForQuality            bool                    `json:"is_optimized_for_quality,omitempty" jsonschema:"description=Is Optimized For Quality"`
	LegalContent                     map[string]interface{}  `json:"legal_content,omitempty" jsonschema:"description=Legal Content"`
	Locale                           string                  `json:"locale,omitempty" jsonschema:"description=Locale"`
	Name                             string                  `json:"name,omitempty" jsonschema:"description=Name of the LeadGenDataDraft,required"`
	Page                             *Page                   `json:"page,omitempty" jsonschema:"description=Page"`
	QuestionPageCustomHeadline       string                  `json:"question_page_custom_headline,omitempty" jsonschema:"description=Question Page Custom Headline"`
	Questions                        []*LeadGenDraftQuestion `json:"questions,omitempty" jsonschema:"description=Questions"`
	Status                           string                  `json:"status,omitempty" jsonschema:"description=Current status of the LeadGenDataDraft,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	ThankYouPage                     map[string]interface{}  `json:"thank_you_page,omitempty" jsonschema:"description=Thank You Page"`
	TrackingParameters               []map[string]string     `json:"tracking_parameters,omitempty" jsonschema:"description=Tracking Parameters"`
}

// LeadGenDirectCRMIntegrationConfig represents the Facebook LeadGenDirectCRMIntegrationConfig object
type LeadGenDirectCRMIntegrationConfig struct {
	AuthID              string              `json:"auth_id,omitempty" jsonschema:"description=ID of the Auth,pattern=^[0-9]+$"`
	CreationTime        time.Time           `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	ID                  string              `json:"id,omitempty" jsonschema:"description=LeadGenDirectCRMIntegrationConfig ID,required,pattern=^[0-9]+$"`
	LeadGenData         *LeadgenForm        `json:"lead_gen_data,omitempty" jsonschema:"description=Lead Gen Data"`
	MatchedFields       []map[string]string `json:"matched_fields,omitempty" jsonschema:"description=Matched Fields"`
	MatchedFieldsLabels []map[string]string `json:"matched_fields_labels,omitempty" jsonschema:"description=Matched Fields Labels"`
	Resources           []map[string]string `json:"resources,omitempty" jsonschema:"description=Resources"`
	ThirdPartyAppID     string              `json:"third_party_app_id,omitempty" jsonschema:"description=ID of the Third Party App,pattern=^[0-9]+$"`
}

// LeadGenDraftQuestion represents the Facebook LeadGenDraftQuestion object
type LeadGenDraftQuestion struct {
	ConditionalQuestionsChoices   []*LeadGenConditionalQuestionsGroupChoices   `json:"conditional_questions_choices,omitempty" jsonschema:"description=Conditional Questions Choices"`
	ConditionalQuestionsGroupID   string                                       `json:"conditional_questions_group_id,omitempty" jsonschema:"description=ID of the Conditional Questions Group,pattern=^[0-9]+$"`
	DependentConditionalQuestions []*LeadGenConditionalQuestionsGroupQuestions `json:"dependent_conditional_questions,omitempty" jsonschema:"description=Dependent Conditional Questions"`
	InlineContext                 string                                       `json:"inline_context,omitempty" jsonschema:"description=Inline Context"`
	Key                           string                                       `json:"key,omitempty" jsonschema:"description=Key"`
	Label                         string                                       `json:"label,omitempty" jsonschema:"description=Label"`
	Options                       []*LeadGenQuestionOption                     `json:"options,omitempty" jsonschema:"description=Options"`
	Type                          string                                       `json:"type,omitempty" jsonschema:"description=Type"`
}

// LeadGenFormPreviewDetails represents the Facebook LeadGenFormPreviewDetails object
type LeadGenFormPreviewDetails struct {
	CallBusinessText                              string                 `json:"call_business_text,omitempty" jsonschema:"description=Call Business Text"`
	CallToActionTitle                             string                 `json:"call_to_action_title,omitempty" jsonschema:"description=Call To Action Title"`
	ChatOnMessengerText                           string                 `json:"chat_on_messenger_text,omitempty" jsonschema:"description=Chat On Messenger Text"`
	ChatOnWhatsappText                            string                 `json:"chat_on_whatsapp_text,omitempty" jsonschema:"description=Chat On Whatsapp Text"`
	ContactInformationText                        string                 `json:"contact_information_text,omitempty" jsonschema:"description=Contact Information Text"`
	CreativesOverviewDefaultText                  string                 `json:"creatives_overview_default_text,omitempty" jsonschema:"description=Creatives Overview Default Text"`
	CustomDisclaimerEditorState                   string                 `json:"custom_disclaimer_editor_state,omitempty" jsonschema:"description=Custom Disclaimer Editor State"`
	CustomDisclaimerTitle                         string                 `json:"custom_disclaimer_title,omitempty" jsonschema:"description=Custom Disclaimer Title"`
	DataPrivacyPolicySettingDescription           string                 `json:"data_privacy_policy_setting_description,omitempty" jsonschema:"description=Data Privacy Policy Setting Description"`
	DefaultAppointmentSchedulingInlineContext     string                 `json:"default_appointment_scheduling_inline_context,omitempty" jsonschema:"description=Default Appointment Scheduling Inline Context"`
	DefaultDisqualifiedEndComponent               map[string]interface{} `json:"default_disqualified_end_component,omitempty" jsonschema:"description=Default Disqualified End Component"`
	DefaultThankYouPage                           map[string]interface{} `json:"default_thank_you_page,omitempty" jsonschema:"description=Default Thank You Page"`
	DisqualifiedThankYouCardTransparencyInfoText  string                 `json:"disqualified_thank_you_card_transparency_info_text,omitempty" jsonschema:"description=Disqualified Thank You Card Transparency Info Text"`
	EditText                                      string                 `json:"edit_text,omitempty" jsonschema:"description=Edit Text"`
	EmailInlineContextText                        string                 `json:"email_inline_context_text,omitempty" jsonschema:"description=Email Inline Context Text"`
	EmailMessengerPushOptInDisclaimer             string                 `json:"email_messenger_push_opt_in_disclaimer,omitempty" jsonschema:"description=Email Messenger Push Opt In Disclaimer"`
	EmailMessengerPushOptInTransparencyText       string                 `json:"email_messenger_push_opt_in_transparency_text,omitempty" jsonschema:"description=Email Messenger Push Opt In Transparency Text"`
	FormClarityDescriptionContent                 string                 `json:"form_clarity_description_content,omitempty" jsonschema:"description=Form Clarity Description Content"`
	FormClarityDescriptionTitle                   string                 `json:"form_clarity_description_title,omitempty" jsonschema:"description=Form Clarity Description Title"`
	FormClarityHeadline                           string                 `json:"form_clarity_headline,omitempty" jsonschema:"description=Form Clarity Headline"`
	GatedContentLockedDescription                 string                 `json:"gated_content_locked_description,omitempty" jsonschema:"description=Gated Content Locked Description"`
	GatedContentLockedHeadline                    string                 `json:"gated_content_locked_headline,omitempty" jsonschema:"description=Gated Content Locked Headline"`
	GatedContentUnlockedDescription               string                 `json:"gated_content_unlocked_description,omitempty" jsonschema:"description=Gated Content Unlocked Description"`
	GatedContentUnlockedHeadline                  string                 `json:"gated_content_unlocked_headline,omitempty" jsonschema:"description=Gated Content Unlocked Headline"`
	HowItWorksSectionHeaders                      []map[string]string    `json:"how_it_works_section_headers,omitempty" jsonschema:"description=How It Works Section Headers"`
	NextButtonText                                string                 `json:"next_button_text,omitempty" jsonschema:"description=Next Button Text"`
	OptionalQuestionText                          string                 `json:"optional_question_text,omitempty" jsonschema:"description=Optional Question Text"`
	PersonalInfoText                              string                 `json:"personal_info_text,omitempty" jsonschema:"description=Personal Info Text"`
	PhoneNumberInlineContextText                  string                 `json:"phone_number_inline_context_text,omitempty" jsonschema:"description=Phone Number Inline Context Text"`
	PrivacyPolicyLinkText                         string                 `json:"privacy_policy_link_text,omitempty" jsonschema:"description=Privacy Policy Link Text"`
	PrivacyPolicyLinkTextForOptionalPrivacyPolicy string                 `json:"privacy_policy_link_text_for_optional_privacy_policy,omitempty" jsonschema:"description=Privacy Policy Link Text For Optional Privacy Policy"`
	PrivacyPolicyTitleSectionTitleText            string                 `json:"privacy_policy_title_section_title_text,omitempty" jsonschema:"description=Privacy Policy Title Section Title Text"`
	PrivacySettingDescription                     string                 `json:"privacy_setting_description,omitempty" jsonschema:"description=Privacy Setting Description"`
	ProductsSectionHeaders                        []map[string]string    `json:"products_section_headers,omitempty" jsonschema:"description=Products Section Headers"`
	QualifiedThankYouCardTransparencyInfoText     string                 `json:"qualified_thank_you_card_transparency_info_text,omitempty" jsonschema:"description=Qualified Thank You Card Transparency Info Text"`
	RedeemPromoCodeText                           string                 `json:"redeem_promo_code_text,omitempty" jsonschema:"description=Redeem Promo Code Text"`
	ReturnToFacebookText                          string                 `json:"return_to_facebook_text,omitempty" jsonschema:"description=Return To Facebook Text"`
	ReviewYourInfoText                            string                 `json:"review_your_info_text,omitempty" jsonschema:"description=Review Your Info Text"`
	SecureSharingText                             string                 `json:"secure_sharing_text,omitempty" jsonschema:"description=Secure Sharing Text"`
	SecureSharingTextForOptionalPrivacyPolicy     string                 `json:"secure_sharing_text_for_optional_privacy_policy,omitempty" jsonschema:"description=Secure Sharing Text For Optional Privacy Policy"`
	SlideToSubmitText                             string                 `json:"slide_to_submit_text,omitempty" jsonschema:"description=Slide To Submit Text"`
	SocialProofSectionHeaders                     []map[string]string    `json:"social_proof_section_headers,omitempty" jsonschema:"description=Social Proof Section Headers"`
	SubmitButtonText                              string                 `json:"submit_button_text,omitempty" jsonschema:"description=Submit Button Text"`
	ViewFileText                                  string                 `json:"view_file_text,omitempty" jsonschema:"description=View File Text"`
	WhatsAppOptInBody                             string                 `json:"whats_app_opt_in_body,omitempty" jsonschema:"description=Whats App Opt In Body"`
	WhatsAppOptInTitle                            string                 `json:"whats_app_opt_in_title,omitempty" jsonschema:"description=Whats App Opt In Title"`
}

// LeadGenLegalContent represents the Facebook LeadGenLegalContent object
type LeadGenLegalContent struct {
	CustomDisclaimer *LeadGenCustomDisclaimer `json:"custom_disclaimer,omitempty" jsonschema:"description=Custom Disclaimer"`
	ID               string                   `json:"id,omitempty" jsonschema:"description=LeadGenLegalContent ID,required,pattern=^[0-9]+$"`
	PrivacyPolicy    *LeadGenPrivacyPolicy    `json:"privacy_policy,omitempty" jsonschema:"description=Privacy Policy"`
}

// LeadGenLegalContentCheckbox represents the Facebook LeadGenLegalContentCheckbox object
type LeadGenLegalContentCheckbox struct {
	ID                 string `json:"id,omitempty" jsonschema:"description=LeadGenLegalContentCheckbox ID,required,pattern=^[0-9]+$"`
	IsCheckedByDefault bool   `json:"is_checked_by_default,omitempty" jsonschema:"description=Is Checked By Default"`
	IsRequired         bool   `json:"is_required,omitempty" jsonschema:"description=Is Required"`
	Key                string `json:"key,omitempty" jsonschema:"description=Key"`
	Text               string `json:"text,omitempty" jsonschema:"description=Text"`
}

// LeadGenPostSubmissionCheckResult represents the Facebook LeadGenPostSubmissionCheckResult object
type LeadGenPostSubmissionCheckResult struct {
	APICallResult     string `json:"api_call_result,omitempty" jsonschema:"description=API Call Result"`
	APIErrorMessage   string `json:"api_error_message,omitempty" jsonschema:"description=API Error Message"`
	ShownThankYouPage string `json:"shown_thank_you_page,omitempty" jsonschema:"description=Shown Thank You Page"`
}

// LeadGenPrivacyPolicy represents the Facebook LeadGenPrivacyPolicy object
type LeadGenPrivacyPolicy struct {
	LinkText string `json:"link_text,omitempty" jsonschema:"description=Link Text"`
	URL      string `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
}

// LeadGenQuestion represents the Facebook LeadGenQuestion object
type LeadGenQuestion struct {
	ConditionalQuestionsChoices   []*LeadGenConditionalQuestionsGroupChoices   `json:"conditional_questions_choices,omitempty" jsonschema:"description=Conditional Questions Choices"`
	ConditionalQuestionsGroupID   string                                       `json:"conditional_questions_group_id,omitempty" jsonschema:"description=ID of the Conditional Questions Group,pattern=^[0-9]+$"`
	DependentConditionalQuestions []*LeadGenConditionalQuestionsGroupQuestions `json:"dependent_conditional_questions,omitempty" jsonschema:"description=Dependent Conditional Questions"`
	ID                            string                                       `json:"id,omitempty" jsonschema:"description=LeadGenQuestion ID,required,pattern=^[0-9]+$"`
	InlineContext                 string                                       `json:"inline_context,omitempty" jsonschema:"description=Inline Context"`
	Key                           string                                       `json:"key,omitempty" jsonschema:"description=Key"`
	Label                         string                                       `json:"label,omitempty" jsonschema:"description=Label"`
	Options                       []*LeadGenQuestionOption                     `json:"options,omitempty" jsonschema:"description=Options"`
	Type                          string                                       `json:"type,omitempty" jsonschema:"description=Type"`
}

// LeadGenQuestionOption represents the Facebook LeadGenQuestionOption object
type LeadGenQuestionOption struct {
	Key   string `json:"key,omitempty" jsonschema:"description=Key"`
	Value string `json:"value,omitempty" jsonschema:"description=Value"`
}

// LeadGenThankYouPage represents the Facebook LeadGenThankYouPage object
type LeadGenThankYouPage struct {
	Body                string                        `json:"body,omitempty" jsonschema:"description=Body"`
	BusinessPhoneNumber string                        `json:"business_phone_number,omitempty" jsonschema:"description=Business Phone Number"`
	ButtonText          string                        `json:"button_text,omitempty" jsonschema:"description=Button Text"`
	ButtonType          string                        `json:"button_type,omitempty" jsonschema:"description=Button Type"`
	CountryCode         string                        `json:"country_code,omitempty" jsonschema:"description=Country Code"`
	EnableMessenger     bool                          `json:"enable_messenger,omitempty" jsonschema:"description=Enable Messenger"`
	GatedFile           *LeadGenThankYouPageGatedFile `json:"gated_file,omitempty" jsonschema:"description=Gated File"`
	ID                  string                        `json:"id,omitempty" jsonschema:"description=LeadGenThankYouPage ID,required,pattern=^[0-9]+$"`
	LeadGenUseCase      string                        `json:"lead_gen_use_case,omitempty" jsonschema:"description=Lead Gen Use Case"`
	Status              string                        `json:"status,omitempty" jsonschema:"description=Current status of the LeadGenThankYouPage,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	Title               string                        `json:"title,omitempty" jsonschema:"description=Title"`
	WebsiteURL          string                        `json:"website_url,omitempty" jsonschema:"description=Website URL,format=uri"`
}

// LeadGenThankYouPageGatedFile represents the Facebook LeadGenThankYouPageGatedFile object
type LeadGenThankYouPageGatedFile struct {
	FileCdnURL    string `json:"file_cdn_url,omitempty" jsonschema:"description=File Cdn URL,format=uri"`
	FileName      string `json:"file_name,omitempty" jsonschema:"description=File Name"`
	FileSizeBytes int    `json:"file_size_bytes,omitempty" jsonschema:"description=File Size Bytes"`
	ID            string `json:"id,omitempty" jsonschema:"description=LeadGenThankYouPageGatedFile ID,required,pattern=^[0-9]+$"`
}

// LeadGenThankYouPageGatedPromo represents the Facebook LeadGenThankYouPageGatedPromo object
type LeadGenThankYouPageGatedPromo struct {
	ID              string `json:"id,omitempty" jsonschema:"description=LeadGenThankYouPageGatedPromo ID,required,pattern=^[0-9]+$"`
	OnlineOfferURL  string `json:"online_offer_url,omitempty" jsonschema:"description=Online Offer URL,format=uri"`
	OnlinePromoCode string `json:"online_promo_code,omitempty" jsonschema:"description=Online Promo Code"`
}

// LeadGenURLEntityAtRanges represents the Facebook LeadGenURLEntityAtRanges object
type LeadGenURLEntityAtRanges struct {
	Length uint   `json:"length,omitempty" jsonschema:"description=Length"`
	Offset uint   `json:"offset,omitempty" jsonschema:"description=Offset"`
	URL    string `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
}

// LeadgenForm represents the Facebook LeadgenForm object
type LeadgenForm struct {
	AllowOrganicLead                 bool                 `json:"allow_organic_lead,omitempty" jsonschema:"description=Allow Organic Lead"`
	BlockDisplayForNonTargetedViewer bool                 `json:"block_display_for_non_targeted_viewer,omitempty" jsonschema:"description=Block Display For Non Targeted Viewer"`
	ContextCard                      *LeadGenContextCard  `json:"context_card,omitempty" jsonschema:"description=Context Card"`
	CreatedTime                      time.Time            `json:"created_time,omitempty" jsonschema:"description=When the LeadgenForm was created,format=date-time"`
	Creator                          *User                `json:"creator,omitempty" jsonschema:"description=Creator"`
	ExpiredLeadsCount                uint                 `json:"expired_leads_count,omitempty" jsonschema:"description=Expired Leads Count"`
	FollowUpActionText               string               `json:"follow_up_action_text,omitempty" jsonschema:"description=Follow Up Action Text"`
	FollowUpActionURL                string               `json:"follow_up_action_url,omitempty" jsonschema:"description=Follow Up Action URL,format=uri"`
	ID                               string               `json:"id,omitempty" jsonschema:"description=LeadgenForm ID,required,pattern=^[0-9]+$"`
	IsOptimizedForQuality            bool                 `json:"is_optimized_for_quality,omitempty" jsonschema:"description=Is Optimized For Quality"`
	LeadsCount                       uint                 `json:"leads_count,omitempty" jsonschema:"description=Leads Count"`
	LegalContent                     *LeadGenLegalContent `json:"legal_content,omitempty" jsonschema:"description=Legal Content"`
	Locale                           string               `json:"locale,omitempty" jsonschema:"description=Locale"`
	Name                             string               `json:"name,omitempty" jsonschema:"description=Name of the LeadgenForm,required"`
	OrganicLeadsCount                uint                 `json:"organic_leads_count,omitempty" jsonschema:"description=Organic Leads Count"`
	Page                             *Page                `json:"page,omitempty" jsonschema:"description=Page"`
	PageID                           string               `json:"page_id,omitempty" jsonschema:"description=ID of the Page,pattern=^[0-9]+$"`
	PrivacyPolicyURL                 string               `json:"privacy_policy_url,omitempty" jsonschema:"description=Privacy Policy URL,format=uri"`
	QuestionPageCustomHeadline       string               `json:"question_page_custom_headline,omitempty" jsonschema:"description=Question Page Custom Headline"`
	Questions                        []*LeadGenQuestion   `json:"questions,omitempty" jsonschema:"description=Questions"`
	Status                           string               `json:"status,omitempty" jsonschema:"description=Current status of the LeadgenForm,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	ThankYouPage                     *LeadGenThankYouPage `json:"thank_you_page,omitempty" jsonschema:"description=Thank You Page"`
	TrackingParameters               []map[string]string  `json:"tracking_parameters,omitempty" jsonschema:"description=Tracking Parameters"`
}

// LifeEvent represents the Facebook LifeEvent object
type LifeEvent struct {
	Description string    `json:"description,omitempty" jsonschema:"description=Description"`
	EndTime     time.Time `json:"end_time,omitempty" jsonschema:"description=End Time,format=date-time"`
	From        *Page     `json:"from,omitempty" jsonschema:"description=From"`
	ID          string    `json:"id,omitempty" jsonschema:"description=LifeEvent ID,required,pattern=^[0-9]+$"`
	IsHidden    bool      `json:"is_hidden,omitempty" jsonschema:"description=Is Hidden"`
	StartTime   time.Time `json:"start_time,omitempty" jsonschema:"description=Start Time,format=date-time"`
	Title       string    `json:"title,omitempty" jsonschema:"description=Title"`
	UpdatedTime time.Time `json:"updated_time,omitempty" jsonschema:"description=When the LifeEvent was last updated,format=date-time"`
}

// Link represents the Facebook Link object
type Link struct {
	Caption             string                 `json:"caption,omitempty" jsonschema:"description=Caption"`
	CreatedTime         time.Time              `json:"created_time,omitempty" jsonschema:"description=When the Link was created,format=date-time"`
	Description         string                 `json:"description,omitempty" jsonschema:"description=Description"`
	From                map[string]interface{} `json:"from,omitempty" jsonschema:"description=From"`
	Icon                string                 `json:"icon,omitempty" jsonschema:"description=Icon"`
	ID                  string                 `json:"id,omitempty" jsonschema:"description=Link ID,required,pattern=^[0-9]+$"`
	Link                string                 `json:"link,omitempty" jsonschema:"description=Link"`
	Message             string                 `json:"message,omitempty" jsonschema:"description=Message"`
	MultiShareOptimized bool                   `json:"multi_share_optimized,omitempty" jsonschema:"description=Multi Share Optimized"`
	Name                string                 `json:"name,omitempty" jsonschema:"description=Name of the Link,required"`
	Privacy             *Privacy               `json:"privacy,omitempty" jsonschema:"description=Privacy"`
	Via                 map[string]interface{} `json:"via,omitempty" jsonschema:"description=Via"`
}

// LinkedInstagramAccountData represents the Facebook LinkedInstagramAccountData object
type LinkedInstagramAccountData struct {
	AccessToken       string `json:"access_token,omitempty" jsonschema:"description=Access Token"`
	AnalyticsClaim    string `json:"analytics_claim,omitempty" jsonschema:"description=Analytics Claim"`
	FullName          string `json:"full_name,omitempty" jsonschema:"description=Full Name"`
	ProfilePictureURL string `json:"profile_picture_url,omitempty" jsonschema:"description=Profile Picture URL,format=uri"`
	UserID            string `json:"user_id,omitempty" jsonschema:"description=ID of the User,pattern=^[0-9]+$"`
	UserName          string `json:"user_name,omitempty" jsonschema:"description=User Name"`
}

// LiveVideo represents the Facebook LiveVideo object
type LiveVideo struct {
	AdBreakConfig              *LiveVideoAdBreakConfig              `json:"ad_break_config,omitempty" jsonschema:"description=Ad Break Config"`
	AdBreakFailureReason       string                               `json:"ad_break_failure_reason,omitempty" jsonschema:"description=Ad Break Failure Reason"`
	BroadcastStartTime         time.Time                            `json:"broadcast_start_time,omitempty" jsonschema:"description=Broadcast Start Time,format=date-time"`
	Copyright                  *VideoCopyright                      `json:"copyright,omitempty" jsonschema:"description=Copyright"`
	CreationTime               time.Time                            `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	DashIngestURL              string                               `json:"dash_ingest_url,omitempty" jsonschema:"description=Dash Ingest URL,format=uri"`
	DashPreviewURL             string                               `json:"dash_preview_url,omitempty" jsonschema:"description=Dash Preview URL,format=uri"`
	Description                string                               `json:"description,omitempty" jsonschema:"description=Description"`
	EmbedHtml                  map[string]interface{}               `json:"embed_html,omitempty" jsonschema:"description=Embed Html"`
	From                       map[string]interface{}               `json:"from,omitempty" jsonschema:"description=From"`
	ID                         string                               `json:"id,omitempty" jsonschema:"description=LiveVideo ID,required,pattern=^[0-9]+$"`
	IngestStreams              []*LiveVideoInputStream              `json:"ingest_streams,omitempty" jsonschema:"description=Ingest Streams"`
	IsManualMode               bool                                 `json:"is_manual_mode,omitempty" jsonschema:"description=Is Manual Mode"`
	IsReferenceOnly            bool                                 `json:"is_reference_only,omitempty" jsonschema:"description=Is Reference Only"`
	LiveViews                  uint                                 `json:"live_views,omitempty" jsonschema:"description=Live Views"`
	OverlayURL                 string                               `json:"overlay_url,omitempty" jsonschema:"description=Overlay URL,format=uri"`
	PermalinkURL               string                               `json:"permalink_url,omitempty" jsonschema:"description=Permalink URL,format=uri"`
	PlannedStartTime           time.Time                            `json:"planned_start_time,omitempty" jsonschema:"description=Planned Start Time,format=date-time"`
	RecommendedEncoderSettings *LiveVideoRecommendedEncoderSettings `json:"recommended_encoder_settings,omitempty" jsonschema:"description=Recommended Encoder Settings"`
	SecondsLeft                int                                  `json:"seconds_left,omitempty" jsonschema:"description=Seconds Left"`
	SecureStreamURL            string                               `json:"secure_stream_url,omitempty" jsonschema:"description=Secure Stream URL,format=uri"`
	Status                     string                               `json:"status,omitempty" jsonschema:"description=Current status of the LiveVideo,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	StreamURL                  string                               `json:"stream_url,omitempty" jsonschema:"description=Stream URL,format=uri"`
	Targeting                  *LiveVideoTargeting                  `json:"targeting,omitempty" jsonschema:"description=Targeting"`
	Title                      string                               `json:"title,omitempty" jsonschema:"description=Title"`
	TotalViews                 string                               `json:"total_views,omitempty" jsonschema:"description=Total Views"`
	Video                      *AdVideo                             `json:"video,omitempty" jsonschema:"description=Video"`
}

// LiveVideoAdBreakConfig represents the Facebook LiveVideoAdBreakConfig object
type LiveVideoAdBreakConfig struct {
	DefaultAdBreakDuration       uint   `json:"default_ad_break_duration,omitempty" jsonschema:"description=Default Ad Break Duration"`
	FailureReasonPollingInterval uint   `json:"failure_reason_polling_interval,omitempty" jsonschema:"description=Failure Reason Polling Interval"`
	FirstBreakEligibleSecs       uint   `json:"first_break_eligible_secs,omitempty" jsonschema:"description=First Break Eligible Secs"`
	GuideURL                     string `json:"guide_url,omitempty" jsonschema:"description=Guide URL,format=uri"`
	IsEligibleToOnboard          bool   `json:"is_eligible_to_onboard,omitempty" jsonschema:"description=Is Eligible To Onboard"`
	IsEnabled                    bool   `json:"is_enabled,omitempty" jsonschema:"description=Is Enabled"`
	OnboardingURL                string `json:"onboarding_url,omitempty" jsonschema:"description=Onboarding URL,format=uri"`
	PreparingDuration            uint   `json:"preparing_duration,omitempty" jsonschema:"description=Preparing Duration"`
	TimeBetweenAdBreaksSecs      uint   `json:"time_between_ad_breaks_secs,omitempty" jsonschema:"description=Time Between Ad Breaks Secs"`
	ViewerCountThreshold         uint   `json:"viewer_count_threshold,omitempty" jsonschema:"description=Viewer Count Threshold"`
}

// LiveVideoAdCampaignConfig represents the Facebook LiveVideoAdCampaignConfig object
type LiveVideoAdCampaignConfig struct {
	ID              string `json:"id,omitempty" jsonschema:"description=LiveVideoAdCampaignConfig ID,required,pattern=^[0-9]+$"`
	LiveVideoAdType string `json:"live_video_ad_type,omitempty" jsonschema:"description=Live Video Ad Type"`
}

// LiveVideoError represents the Facebook LiveVideoError object
type LiveVideoError struct {
	CreationTime time.Time `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	ErrorCode    int       `json:"error_code,omitempty" jsonschema:"description=Error Code"`
	ErrorMessage string    `json:"error_message,omitempty" jsonschema:"description=Error Message"`
	ErrorType    string    `json:"error_type,omitempty" jsonschema:"description=Error Type"`
}

// LiveVideoInputStream represents the Facebook LiveVideoInputStream object
type LiveVideoInputStream struct {
	DashIngestURL   string                 `json:"dash_ingest_url,omitempty" jsonschema:"description=Dash Ingest URL,format=uri"`
	DashPreviewURL  string                 `json:"dash_preview_url,omitempty" jsonschema:"description=Dash Preview URL,format=uri"`
	ID              string                 `json:"id,omitempty" jsonschema:"description=LiveVideoInputStream ID,required,pattern=^[0-9]+$"`
	IsMaster        bool                   `json:"is_master,omitempty" jsonschema:"description=Is Master"`
	SecureStreamURL string                 `json:"secure_stream_url,omitempty" jsonschema:"description=Secure Stream URL,format=uri"`
	StreamHealth    map[string]interface{} `json:"stream_health,omitempty" jsonschema:"description=Stream Health"`
	StreamID        string                 `json:"stream_id,omitempty" jsonschema:"description=ID of the Stream,pattern=^[0-9]+$"`
	StreamURL       string                 `json:"stream_url,omitempty" jsonschema:"description=Stream URL,format=uri"`
}

// LiveVideoRecommendedEncoderSettings represents the Facebook LiveVideoRecommendedEncoderSettings object
type LiveVideoRecommendedEncoderSettings struct {
	AudioCodecSettings map[string]interface{} `json:"audio_codec_settings,omitempty" jsonschema:"description=Audio Codec Settings"`
	StreamingProtocol  string                 `json:"streaming_protocol,omitempty" jsonschema:"description=Streaming Protocol"`
	VideoCodecSettings map[string]interface{} `json:"video_codec_settings,omitempty" jsonschema:"description=Video Codec Settings"`
}

// LiveVideoTargeting represents the Facebook LiveVideoTargeting object
type LiveVideoTargeting struct {
	AgeMax            uint                  `json:"age_max,omitempty" jsonschema:"description=Age Max,minimum=13,maximum=100"`
	AgeMin            uint                  `json:"age_min,omitempty" jsonschema:"description=Age Min,minimum=13,maximum=100"`
	ExcludedCountries []string              `json:"excluded_countries,omitempty" jsonschema:"description=Excluded Countries"`
	GeoLocations      *TargetingGeoLocation `json:"geo_locations,omitempty" jsonschema:"description=Geo Locations"`
}

// LocalServiceBusiness represents the Facebook LocalServiceBusiness object
type LocalServiceBusiness struct {
	Address                map[string]interface{}               `json:"address,omitempty" jsonschema:"description=Address"`
	Applinks               *CatalogItemAppLinks                 `json:"applinks,omitempty" jsonschema:"description=Applinks"`
	Availability           LocalservicebusinessAvailability     `json:"availability,omitempty" jsonschema:"description=Availability"`
	Brand                  string                               `json:"brand,omitempty" jsonschema:"description=Brand"`
	Category               string                               `json:"category,omitempty" jsonschema:"description=Category"`
	CategorySpecificFields *CatalogSubVerticalList              `json:"category_specific_fields,omitempty" jsonschema:"description=Category Specific Fields"`
	Condition              LocalservicebusinessCondition        `json:"condition,omitempty" jsonschema:"description=Condition"`
	CuisineType            string                               `json:"cuisine_type,omitempty" jsonschema:"description=Cuisine Type"`
	Currency               string                               `json:"currency,omitempty" jsonschema:"description=Currency"`
	CustomLabel0           string                               `json:"custom_label_0,omitempty" jsonschema:"description=Custom Label 0"`
	CustomLabel1           string                               `json:"custom_label_1,omitempty" jsonschema:"description=Custom Label 1"`
	CustomLabel2           string                               `json:"custom_label_2,omitempty" jsonschema:"description=Custom Label 2"`
	CustomLabel3           string                               `json:"custom_label_3,omitempty" jsonschema:"description=Custom Label 3"`
	CustomLabel4           string                               `json:"custom_label_4,omitempty" jsonschema:"description=Custom Label 4"`
	CustomNumber0          uint                                 `json:"custom_number_0,omitempty" jsonschema:"description=Custom Number 0"`
	CustomNumber1          uint                                 `json:"custom_number_1,omitempty" jsonschema:"description=Custom Number 1"`
	CustomNumber2          uint                                 `json:"custom_number_2,omitempty" jsonschema:"description=Custom Number 2"`
	CustomNumber3          uint                                 `json:"custom_number_3,omitempty" jsonschema:"description=Custom Number 3"`
	CustomNumber4          uint                                 `json:"custom_number_4,omitempty" jsonschema:"description=Custom Number 4"`
	Description            string                               `json:"description,omitempty" jsonschema:"description=Description"`
	ExpirationDate         string                               `json:"expiration_date,omitempty" jsonschema:"description=Expiration Date"`
	Gtin                   string                               `json:"gtin,omitempty" jsonschema:"description=Gtin"`
	ID                     string                               `json:"id,omitempty" jsonschema:"description=LocalServiceBusiness ID,required,pattern=^[0-9]+$"`
	ImageFetchStatus       LocalservicebusinessImageFetchStatus `json:"image_fetch_status,omitempty" jsonschema:"description=Image Fetch Status"`
	Images                 []string                             `json:"images,omitempty" jsonschema:"description=Images"`
	LocalInfo              *ProductItemLocalInfo                `json:"local_info,omitempty" jsonschema:"description=Local Info"`
	LocalServiceBusinessID string                               `json:"local_service_business_id,omitempty" jsonschema:"description=ID of the Local Service Business,pattern=^[0-9]+$"`
	MainLocalInfo          *ProductItemLocalInfo                `json:"main_local_info,omitempty" jsonschema:"description=Main Local Info"`
	Phone                  string                               `json:"phone,omitempty" jsonschema:"description=Phone"`
	Price                  string                               `json:"price,omitempty" jsonschema:"description=Price"`
	PriceRange             string                               `json:"price_range,omitempty" jsonschema:"description=Price Range"`
	RetailerCategory       string                               `json:"retailer_category,omitempty" jsonschema:"description=Retailer Category"`
	SanitizedImages        []string                             `json:"sanitized_images,omitempty" jsonschema:"description=Sanitized Images"`
	Size                   string                               `json:"size,omitempty" jsonschema:"description=Size"`
	Tags                   []string                             `json:"tags,omitempty" jsonschema:"description=Tags"`
	Title                  string                               `json:"title,omitempty" jsonschema:"description=Title"`
	UnitPrice              map[string]interface{}               `json:"unit_price,omitempty" jsonschema:"description=Unit Price"`
	URL                    string                               `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
	VendorID               string                               `json:"vendor_id,omitempty" jsonschema:"description=ID of the Vendor,pattern=^[0-9]+$"`
	Visibility             LocalservicebusinessVisibility       `json:"visibility,omitempty" jsonschema:"description=Visibility"`
}

// Location represents the Facebook Location object
type Location struct {
	City        string  `json:"city,omitempty" jsonschema:"description=City"`
	CityID      uint    `json:"city_id,omitempty" jsonschema:"description=ID of the City,pattern=^[0-9]+$"`
	Country     string  `json:"country,omitempty" jsonschema:"description=Country"`
	CountryCode string  `json:"country_code,omitempty" jsonschema:"description=Country Code"`
	Latitude    float64 `json:"latitude,omitempty" jsonschema:"description=Latitude"`
	LocatedIn   string  `json:"located_in,omitempty" jsonschema:"description=Located In"`
	Longitude   float64 `json:"longitude,omitempty" jsonschema:"description=Longitude"`
	Name        string  `json:"name,omitempty" jsonschema:"description=Name of the Location,required"`
	Region      string  `json:"region,omitempty" jsonschema:"description=Region"`
	RegionID    uint    `json:"region_id,omitempty" jsonschema:"description=ID of the Region,pattern=^[0-9]+$"`
	State       string  `json:"state,omitempty" jsonschema:"description=State"`
	Street      string  `json:"street,omitempty" jsonschema:"description=Street"`
	Zip         string  `json:"zip,omitempty" jsonschema:"description=Zip"`
}

// LookalikeSpec represents the Facebook LookalikeSpec object
type LookalikeSpec struct {
	Country               string                   `json:"country,omitempty" jsonschema:"description=Country"`
	IsFinancialService    bool                     `json:"is_financial_service,omitempty" jsonschema:"description=Is Financial Service"`
	Origin                []map[string]interface{} `json:"origin,omitempty" jsonschema:"description=Origin"`
	OriginEventName       string                   `json:"origin_event_name,omitempty" jsonschema:"description=Origin Event Name"`
	OriginEventSourceName string                   `json:"origin_event_source_name,omitempty" jsonschema:"description=Origin Event Source Name"`
	OriginEventSourceType string                   `json:"origin_event_source_type,omitempty" jsonschema:"description=Origin Event Source Type"`
	ProductSetName        string                   `json:"product_set_name,omitempty" jsonschema:"description=Product Set Name"`
	Ratio                 float64                  `json:"ratio,omitempty" jsonschema:"description=Ratio"`
	StartingRatio         float64                  `json:"starting_ratio,omitempty" jsonschema:"description=Starting Ratio"`
	TargetCountries       []string                 `json:"target_countries,omitempty" jsonschema:"description=Target Countries"`
	TargetCountryNames    interface{}              `json:"target_country_names,omitempty" jsonschema:"description=Target Country Names"`
	Type                  string                   `json:"type,omitempty" jsonschema:"description=Type"`
}

// LoomConfig represents the Facebook LoomConfig object
type LoomConfig struct {
	ID string `json:"id,omitempty" jsonschema:"description=LoomConfig ID,required,pattern=^[0-9]+$"`
}

// MCExperienceConfigForApi represents the Facebook MCExperienceConfigForApi object
type MCExperienceConfigForApi struct {
	IsCampaignEnabled bool   `json:"is_campaign_enabled,omitempty" jsonschema:"description=Is Campaign Enabled"`
	IsTermsSigned     bool   `json:"is_terms_signed,omitempty" jsonschema:"description=Is Terms Signed"`
	MerchantType      string `json:"merchant_type,omitempty" jsonschema:"description=Merchant Type"`
}

// MIXInsightsResult represents the Facebook MIXInsightsResult object
type MIXInsightsResult struct {
	DailyAgeGenderBreakdown   []map[string][]map[string]int     `json:"daily_age_gender_breakdown,omitempty" jsonschema:"description=Daily Age Gender Breakdown,minimum=13,maximum=100"`
	DailyAudioLibraryValues   []map[string]int                  `json:"daily_audio_library_values,omitempty" jsonschema:"description=Daily Audio Library Values"`
	DailyUgcValues            []map[string]int                  `json:"daily_ugc_values,omitempty" jsonschema:"description=Daily Ugc Values"`
	DailyValues               []map[string]int                  `json:"daily_values,omitempty" jsonschema:"description=Daily Values"`
	Metric                    string                            `json:"metric,omitempty" jsonschema:"description=Metric"`
	MonthlyAudioLibraryValues []map[string]int                  `json:"monthly_audio_library_values,omitempty" jsonschema:"description=Monthly Audio Library Values"`
	MonthlyUgcValues          []map[string]int                  `json:"monthly_ugc_values,omitempty" jsonschema:"description=Monthly Ugc Values"`
	MonthlyValues             []map[string]int                  `json:"monthly_values,omitempty" jsonschema:"description=Monthly Values"`
	PercentGrowth             float64                           `json:"percent_growth,omitempty" jsonschema:"description=Percent Growth"`
	ShieldedFields            []map[string][]map[string]bool    `json:"shielded_fields,omitempty" jsonschema:"description=Shielded Fields"`
	TotalAgeGenderBreakdown   []map[string]int                  `json:"total_age_gender_breakdown,omitempty" jsonschema:"description=Total Age Gender Breakdown,minimum=13,maximum=100"`
	TotalAudioLibraryValue    int                               `json:"total_audio_library_value,omitempty" jsonschema:"description=Total Audio Library Value"`
	TotalCountryBreakdown     []map[string]int                  `json:"total_country_breakdown,omitempty" jsonschema:"description=Total Country Breakdown"`
	TotalLocaleBreakdown      []map[string]int                  `json:"total_locale_breakdown,omitempty" jsonschema:"description=Total Locale Breakdown"`
	TotalProductBreakdown     []map[string]int                  `json:"total_product_breakdown,omitempty" jsonschema:"description=Total Product Breakdown"`
	TotalUgcValue             int                               `json:"total_ugc_value,omitempty" jsonschema:"description=Total Ugc Value"`
	TotalValue                int                               `json:"total_value,omitempty" jsonschema:"description=Total Value"`
	TrendingAge               []map[string][]map[string]float64 `json:"trending_age,omitempty" jsonschema:"description=Trending Age"`
	TrendingGender            []map[string][]map[string]float64 `json:"trending_gender,omitempty" jsonschema:"description=Trending Gender"`
	TrendingInterest          []map[string][]map[string]float64 `json:"trending_interest,omitempty" jsonschema:"description=Trending Interest"`
	TrendingTerritory         []map[string][]map[string]float64 `json:"trending_territory,omitempty" jsonschema:"description=Trending Territory"`
}

// MailingAddress represents the Facebook MailingAddress object
type MailingAddress struct {
	City       string `json:"city,omitempty" jsonschema:"description=City"`
	CityPage   *Page  `json:"city_page,omitempty" jsonschema:"description=City Page"`
	Country    string `json:"country,omitempty" jsonschema:"description=Country"`
	ID         string `json:"id,omitempty" jsonschema:"description=MailingAddress ID,required,pattern=^[0-9]+$"`
	PostalCode string `json:"postal_code,omitempty" jsonschema:"description=Postal Code"`
	Region     string `json:"region,omitempty" jsonschema:"description=Region"`
	Street1    string `json:"street1,omitempty" jsonschema:"description=Street1"`
	Street2    string `json:"street2,omitempty" jsonschema:"description=Street2"`
}

// ManagedPartnerBusiness represents the Facebook ManagedPartnerBusiness object
type ManagedPartnerBusiness struct {
	AdAccount            *AdAccount                    `json:"ad_account,omitempty" jsonschema:"description=Ad Account"`
	CatalogSegment       *ProductCatalog               `json:"catalog_segment,omitempty" jsonschema:"description=Catalog Segment"`
	ExtendedCredit       *ManagedPartnerExtendedCredit `json:"extended_credit,omitempty" jsonschema:"description=Extended Credit"`
	Page                 *Page                         `json:"page,omitempty" jsonschema:"description=Page"`
	SellerBusinessInfo   map[string]interface{}        `json:"seller_business_info,omitempty" jsonschema:"description=Seller Business Info"`
	SellerBusinessStatus string                        `json:"seller_business_status,omitempty" jsonschema:"description=Seller Business Status"`
	Template             []map[string]interface{}      `json:"template,omitempty" jsonschema:"description=Template"`
}

// ManagedPartnerExtendedCredit represents the Facebook ManagedPartnerExtendedCredit object
type ManagedPartnerExtendedCredit struct {
	ID                              string                          `json:"id,omitempty" jsonschema:"description=ManagedPartnerExtendedCredit ID,required,pattern=^[0-9]+$"`
	MaxBalance                      *CurrencyAmount                 `json:"max_balance,omitempty" jsonschema:"description=Max Balance"`
	ReceivingCreditAllocationConfig *ExtendedCreditAllocationConfig `json:"receiving_credit_allocation_config,omitempty" jsonschema:"description=Receiving Credit Allocation Config"`
}

// ManagementSiteLink represents the Facebook ManagementSiteLink object
type ManagementSiteLink struct {
	AdAccountID   string `json:"ad_account_id,omitempty" jsonschema:"description=ID of the Ad Account,pattern=^[0-9]+$"`
	ID            string `json:"id,omitempty" jsonschema:"description=ManagementSiteLink ID,required,pattern=^[0-9]+$"`
	LinkDomain    string `json:"link_domain,omitempty" jsonschema:"description=Link Domain"`
	LinkHash      string `json:"link_hash,omitempty" jsonschema:"description=Link Hash"`
	LinkImageHash string `json:"link_image_hash,omitempty" jsonschema:"description=Link Image Hash"`
	LinkImageURL  string `json:"link_image_url,omitempty" jsonschema:"description=Link Image URL,format=uri"`
	LinkTitle     string `json:"link_title,omitempty" jsonschema:"description=Link Title"`
	LinkType      string `json:"link_type,omitempty" jsonschema:"description=Link Type"`
	LinkURL       string `json:"link_url,omitempty" jsonschema:"description=Link URL,format=uri"`
}

// McomInvoiceBankAccount represents the Facebook McomInvoiceBankAccount object
type McomInvoiceBankAccount struct {
	NumPendingVerificationAccounts int                      `json:"num_pending_verification_accounts,omitempty" jsonschema:"description=Num Pending Verification Accounts"`
	NumVerifiedAccounts            int                      `json:"num_verified_accounts,omitempty" jsonschema:"description=Num Verified Accounts"`
	PendingVerificationAccounts    []map[string]interface{} `json:"pending_verification_accounts,omitempty" jsonschema:"description=Pending Verification Accounts"`
	VerifiedAccounts               []map[string]interface{} `json:"verified_accounts,omitempty" jsonschema:"description=Verified Accounts"`
}

// McomInvoiceDetails represents the Facebook McomInvoiceDetails object
type McomInvoiceDetails struct {
	AdditionalAmounts           []map[string]interface{} `json:"additional_amounts,omitempty" jsonschema:"description=Additional Amounts"`
	BuyerNotes                  string                   `json:"buyer_notes,omitempty" jsonschema:"description=Buyer Notes"`
	CurrencyAmount              map[string]interface{}   `json:"currency_amount,omitempty" jsonschema:"description=Currency Amount"`
	ExternalInvoiceID           string                   `json:"external_invoice_id,omitempty" jsonschema:"description=ID of the External Invoice,pattern=^[0-9]+$"`
	Features                    map[string]interface{}   `json:"features,omitempty" jsonschema:"description=Features"`
	InvoiceCreated              int                      `json:"invoice_created,omitempty" jsonschema:"description=When the McomInvoiceDetails was created"`
	InvoiceID                   string                   `json:"invoice_id,omitempty" jsonschema:"description=ID of the Invoice,pattern=^[0-9]+$"`
	InvoiceInstructions         string                   `json:"invoice_instructions,omitempty" jsonschema:"description=Invoice Instructions"`
	InvoiceInstructionsImageURL string                   `json:"invoice_instructions_image_url,omitempty" jsonschema:"description=Invoice Instructions Image URL,format=uri"`
	InvoiceUpdated              int                      `json:"invoice_updated,omitempty" jsonschema:"description=When the McomInvoiceDetails was last updated"`
	OutstandingAmount           map[string]interface{}   `json:"outstanding_amount,omitempty" jsonschema:"description=Outstanding Amount"`
	PaidAmount                  map[string]interface{}   `json:"paid_amount,omitempty" jsonschema:"description=Paid Amount"`
	Payments                    []map[string]interface{} `json:"payments,omitempty" jsonschema:"description=Payments"`
	PlatformLogoURL             string                   `json:"platform_logo_url,omitempty" jsonschema:"description=Platform Logo URL,format=uri"`
	PlatformName                string                   `json:"platform_name,omitempty" jsonschema:"description=Platform Name"`
	ProductItems                []map[string]interface{} `json:"product_items,omitempty" jsonschema:"description=Product Items"`
	ShippingAddress             map[string]interface{}   `json:"shipping_address,omitempty" jsonschema:"description=Shipping Address"`
	Status                      string                   `json:"status,omitempty" jsonschema:"description=Current status of the McomInvoiceDetails,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	TrackingInfo                map[string]interface{}   `json:"tracking_info,omitempty" jsonschema:"description=Tracking Info"`
}

// McomInvoiceLists represents the Facebook McomInvoiceLists object
type McomInvoiceLists struct {
	InvoiceDetails []*McomInvoiceDetails `json:"invoice_details,omitempty" jsonschema:"description=Invoice Details"`
	InvoiceIDs     []string              `json:"invoice_ids,omitempty" jsonschema:"description=Invoice Ids,pattern=^[0-9]+$"`
	PageID         string                `json:"page_id,omitempty" jsonschema:"description=ID of the Page,pattern=^[0-9]+$"`
}

// McomInvoiceStatus represents the Facebook McomInvoiceStatus object
type McomInvoiceStatus struct {
	BankAccountNumber      string                 `json:"bank_account_number,omitempty" jsonschema:"description=Bank Account Number"`
	BankCode               string                 `json:"bank_code,omitempty" jsonschema:"description=Bank Code"`
	InvoiceID              string                 `json:"invoice_id,omitempty" jsonschema:"description=ID of the Invoice,pattern=^[0-9]+$"`
	InvoiceStatus          string                 `json:"invoice_status,omitempty" jsonschema:"description=Invoice Status"`
	PageID                 string                 `json:"page_id,omitempty" jsonschema:"description=ID of the Page,pattern=^[0-9]+$"`
	PaymentMethod          string                 `json:"payment_method,omitempty" jsonschema:"description=Payment Method"`
	PaymentType            string                 `json:"payment_type,omitempty" jsonschema:"description=Payment Type"`
	PayoutAmount           map[string]interface{} `json:"payout_amount,omitempty" jsonschema:"description=Payout Amount"`
	SlipVerificationError  string                 `json:"slip_verification_error,omitempty" jsonschema:"description=Slip Verification Error"`
	SlipVerificationStatus string                 `json:"slip_verification_status,omitempty" jsonschema:"description=Slip Verification Status"`
	TransactionFee         map[string]interface{} `json:"transaction_fee,omitempty" jsonschema:"description=Transaction Fee"`
	TransferSlip           string                 `json:"transfer_slip,omitempty" jsonschema:"description=Transfer Slip"`
}

// McomOnboardingStatus represents the Facebook McomOnboardingStatus object
type McomOnboardingStatus struct {
	OnboardingStatus string `json:"onboarding_status,omitempty" jsonschema:"description=Onboarding Status"`
	PageID           string `json:"page_id,omitempty" jsonschema:"description=ID of the Page,pattern=^[0-9]+$"`
}

// McomPayouts represents the Facebook McomPayouts object
type McomPayouts struct {
	NumberOfOrders            int                    `json:"number_of_orders,omitempty" jsonschema:"description=Number Of Orders"`
	OrderIDs                  []string               `json:"order_ids,omitempty" jsonschema:"description=Order Ids,pattern=^[0-9]+$"`
	PayoutAmount              map[string]interface{} `json:"payout_amount,omitempty" jsonschema:"description=Payout Amount"`
	PayoutProviderReferenceID string                 `json:"payout_provider_reference_id,omitempty" jsonschema:"description=ID of the Payout Provider Reference,pattern=^[0-9]+$"`
	PayoutStatus              string                 `json:"payout_status,omitempty" jsonschema:"description=Payout Status"`
	PayoutTime                int                    `json:"payout_time,omitempty" jsonschema:"description=Payout Time"`
	Provider                  string                 `json:"provider,omitempty" jsonschema:"description=Provider"`
}

// MeasurementReport represents the Facebook MeasurementReport object
type MeasurementReport struct {
	DownloadURLs []string               `json:"download_urls,omitempty" jsonschema:"description=Download Urls,format=uri"`
	ID           string                 `json:"id,omitempty" jsonschema:"description=MeasurementReport ID,required,pattern=^[0-9]+$"`
	Metadata     map[string]interface{} `json:"metadata,omitempty" jsonschema:"description=Metadata"`
	ReportType   string                 `json:"report_type,omitempty" jsonschema:"description=Report Type"`
	Status       string                 `json:"status,omitempty" jsonschema:"description=Current status of the MeasurementReport,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// MediaCopyrightAttribution represents the Facebook MediaCopyrightAttribution object
type MediaCopyrightAttribution struct {
	AttributionIgTargetID         string    `json:"attribution_ig_target_id,omitempty" jsonschema:"description=ID of the Attribution Ig Target,pattern=^[0-9]+$"`
	AttributionTargetEmailAddress string    `json:"attribution_target_email_address,omitempty" jsonschema:"description=Attribution Target Email Address"`
	AttributionTargetID           string    `json:"attribution_target_id,omitempty" jsonschema:"description=ID of the Attribution Target,pattern=^[0-9]+$"`
	AttributionTargetName         string    `json:"attribution_target_name,omitempty" jsonschema:"description=Attribution Target Name"`
	AttributionType               string    `json:"attribution_type,omitempty" jsonschema:"description=Attribution Type"`
	AttributionUri                string    `json:"attribution_uri,omitempty" jsonschema:"description=Attribution Uri"`
	CopyrightCount                int       `json:"copyright_count,omitempty" jsonschema:"description=Copyright Count"`
	CreationTime                  time.Time `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	Creator                       *Profile  `json:"creator,omitempty" jsonschema:"description=Creator"`
	ID                            string    `json:"id,omitempty" jsonschema:"description=MediaCopyrightAttribution ID,required,pattern=^[0-9]+$"`
	IsEnabled                     bool      `json:"is_enabled,omitempty" jsonschema:"description=Is Enabled"`
	LinkTitle                     string    `json:"link_title,omitempty" jsonschema:"description=Link Title"`
	MatchCount                    int       `json:"match_count,omitempty" jsonschema:"description=Match Count"`
	Owner                         *Page     `json:"owner,omitempty" jsonschema:"description=Owner"`
	Status                        string    `json:"status,omitempty" jsonschema:"description=Current status of the MediaCopyrightAttribution,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	Title                         string    `json:"title,omitempty" jsonschema:"description=Title"`
}

// MediaCopyrightUpdateRecord represents the Facebook MediaCopyrightUpdateRecord object
type MediaCopyrightUpdateRecord struct {
	ActionTypes         []string                 `json:"action_types,omitempty" jsonschema:"description=Action Types"`
	Actor               *User                    `json:"actor,omitempty" jsonschema:"description=Actor"`
	ActorType           string                   `json:"actor_type,omitempty" jsonschema:"description=Actor Type"`
	CreationTime        time.Time                `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	ID                  string                   `json:"id,omitempty" jsonschema:"description=MediaCopyrightUpdateRecord ID,required,pattern=^[0-9]+$"`
	OwnershipCountries  []map[string]interface{} `json:"ownership_countries,omitempty" jsonschema:"description=Ownership Countries"`
	WhitelistedAccounts []map[string]interface{} `json:"whitelisted_accounts,omitempty" jsonschema:"description=Whitelisted Accounts"`
}

// MediaFingerprint represents the Facebook MediaFingerprint object
type MediaFingerprint struct {
	DurationInSec          float64                `json:"duration_in_sec,omitempty" jsonschema:"description=Duration In Sec"`
	FingerprintContentType string                 `json:"fingerprint_content_type,omitempty" jsonschema:"description=Fingerprint Content Type"`
	FingerprintType        string                 `json:"fingerprint_type,omitempty" jsonschema:"description=Fingerprint Type"`
	ID                     string                 `json:"id,omitempty" jsonschema:"description=MediaFingerprint ID,required,pattern=^[0-9]+$"`
	Metadata               map[string]interface{} `json:"metadata,omitempty" jsonschema:"description=Metadata"`
	Title                  string                 `json:"title,omitempty" jsonschema:"description=Title"`
	UniversalContentID     string                 `json:"universal_content_id,omitempty" jsonschema:"description=ID of the Universal Content,pattern=^[0-9]+$"`
}

// MediaTitle represents the Facebook MediaTitle object
type MediaTitle struct {
	Applinks               *CatalogItemAppLinks       `json:"applinks,omitempty" jsonschema:"description=Applinks"`
	CategorySpecificFields *CatalogSubVerticalList    `json:"category_specific_fields,omitempty" jsonschema:"description=Category Specific Fields"`
	ContentCategory        string                     `json:"content_category,omitempty" jsonschema:"description=Content Category"`
	Currency               string                     `json:"currency,omitempty" jsonschema:"description=Currency"`
	Description            string                     `json:"description,omitempty" jsonschema:"description=Description"`
	FbPageAlias            string                     `json:"fb_page_alias,omitempty" jsonschema:"description=Fb Page Alias"`
	FbPageID               *Page                      `json:"fb_page_id,omitempty" jsonschema:"description=ID of the Fb Page,pattern=^[0-9]+$"`
	Genres                 []string                   `json:"genres,omitempty" jsonschema:"description=Genres"`
	ID                     string                     `json:"id,omitempty" jsonschema:"description=MediaTitle ID,required,pattern=^[0-9]+$"`
	ImageFetchStatus       MediatitleImageFetchStatus `json:"image_fetch_status,omitempty" jsonschema:"description=Image Fetch Status"`
	Images                 []string                   `json:"images,omitempty" jsonschema:"description=Images"`
	KgFbID                 string                     `json:"kg_fb_id,omitempty" jsonschema:"description=ID of the Kg Fb,pattern=^[0-9]+$"`
	MediaTitleID           string                     `json:"media_title_id,omitempty" jsonschema:"description=ID of the Media Title,pattern=^[0-9]+$"`
	Price                  string                     `json:"price,omitempty" jsonschema:"description=Price"`
	SanitizedImages        []string                   `json:"sanitized_images,omitempty" jsonschema:"description=Sanitized Images"`
	Title                  string                     `json:"title,omitempty" jsonschema:"description=Title"`
	TitleDisplayName       string                     `json:"title_display_name,omitempty" jsonschema:"description=Title Display Name"`
	UnitPrice              map[string]interface{}     `json:"unit_price,omitempty" jsonschema:"description=Unit Price"`
	URL                    string                     `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
	Visibility             MediatitleVisibility       `json:"visibility,omitempty" jsonschema:"description=Visibility"`
	WikiDataItem           string                     `json:"wiki_data_item,omitempty" jsonschema:"description=Wiki Data Item"`
}

// MerchantCompliance represents the Facebook MerchantCompliance object
type MerchantCompliance struct {
	ActiveCampaigns         int     `json:"active_campaigns,omitempty" jsonschema:"description=Active Campaigns"`
	ComplianceStatus        string  `json:"compliance_status,omitempty" jsonschema:"description=Compliance Status"`
	CountDownStartTime      int     `json:"count_down_start_time,omitempty" jsonschema:"description=Count Down Start Time"`
	Purchase                int     `json:"purchase,omitempty" jsonschema:"description=Purchase"`
	PurchaseConversionValue float64 `json:"purchase_conversion_value,omitempty" jsonschema:"description=Purchase Conversion Value"`
}

// MessageDeliveryEstimate represents the Facebook MessageDeliveryEstimate object
type MessageDeliveryEstimate struct {
	EstimateCost               float64 `json:"estimate_cost,omitempty" jsonschema:"description=Estimate Cost"`
	EstimateCostLowerBound     float64 `json:"estimate_cost_lower_bound,omitempty" jsonschema:"description=Estimate Cost Lower Bound"`
	EstimateCostUpperBound     float64 `json:"estimate_cost_upper_bound,omitempty" jsonschema:"description=Estimate Cost Upper Bound"`
	EstimateCoverageLowerBound int     `json:"estimate_coverage_lower_bound,omitempty" jsonschema:"description=Estimate Coverage Lower Bound,minimum=13,maximum=100"`
	EstimateCoverageUpperBound int     `json:"estimate_coverage_upper_bound,omitempty" jsonschema:"description=Estimate Coverage Upper Bound,minimum=13,maximum=100"`
	EstimateDelivery           int     `json:"estimate_delivery,omitempty" jsonschema:"description=Estimate Delivery"`
	EstimateDeliveryLowerBound int     `json:"estimate_delivery_lower_bound,omitempty" jsonschema:"description=Estimate Delivery Lower Bound"`
	EstimateDeliveryUpperBound int     `json:"estimate_delivery_upper_bound,omitempty" jsonschema:"description=Estimate Delivery Upper Bound"`
	EstimateStatus             string  `json:"estimate_status,omitempty" jsonschema:"description=Estimate Status"`
}

// MessagingAppsInfo represents the Facebook MessagingAppsInfo object
type MessagingAppsInfo struct {
	CtdSupportOnlyForIgApp          bool   `json:"ctd_support_only_for_ig_app,omitempty" jsonschema:"description=Ctd Support Only For Ig App"`
	HasInstagramMessagingPermission bool   `json:"has_instagram_messaging_permission,omitempty" jsonschema:"description=Has Instagram Messaging Permission"`
	HasMessengerMessagingPermission bool   `json:"has_messenger_messaging_permission,omitempty" jsonschema:"description=Has Messenger Messaging Permission"`
	ID                              string `json:"id,omitempty" jsonschema:"description=MessagingAppsInfo ID,required,pattern=^[0-9]+$"`
	Name                            string `json:"name,omitempty" jsonschema:"description=Name of the MessagingAppsInfo,required"`
}

// MessagingFeatureReview represents the Facebook MessagingFeatureReview object
type MessagingFeatureReview struct {
	Feature string `json:"feature,omitempty" jsonschema:"description=Feature"`
	Status  string `json:"status,omitempty" jsonschema:"description=Current status of the MessagingFeatureReview,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// MessagingFeatureStatus represents the Facebook MessagingFeatureStatus object
type MessagingFeatureStatus struct {
	HopV2        bool `json:"hop_v2,omitempty" jsonschema:"description=Hop V2"`
	IgMultiApp   bool `json:"ig_multi_app,omitempty" jsonschema:"description=Ig Multi App"`
	MsgrMultiApp bool `json:"msgr_multi_app,omitempty" jsonschema:"description=Msgr Multi App"`
}

// MessengerAdsPartialAutomatedStepList represents the Facebook MessengerAdsPartialAutomatedStepList object
type MessengerAdsPartialAutomatedStepList struct {
	FbleadForm          *LeadgenForm `json:"fblead_form,omitempty" jsonschema:"description=Fblead Form"`
	FirstStepID         string       `json:"first_step_id,omitempty" jsonschema:"description=ID of the First Step,pattern=^[0-9]+$"`
	ID                  string       `json:"id,omitempty" jsonschema:"description=MessengerAdsPartialAutomatedStepList ID,required,pattern=^[0-9]+$"`
	Page                *Page        `json:"page,omitempty" jsonschema:"description=Page"`
	PrivacyURL          string       `json:"privacy_url,omitempty" jsonschema:"description=Privacy URL,format=uri"`
	ReminderText        string       `json:"reminder_text,omitempty" jsonschema:"description=Reminder Text"`
	StopQuestionMessage string       `json:"stop_question_message,omitempty" jsonschema:"description=Stop Question Message"`
}

// MessengerBusinessTemplate represents the Facebook MessengerBusinessTemplate object
type MessengerBusinessTemplate struct {
	Category                 string                   `json:"category,omitempty" jsonschema:"description=Category"`
	Components               []map[string]interface{} `json:"components,omitempty" jsonschema:"description=Components"`
	CreationTime             int                      `json:"creation_time,omitempty" jsonschema:"description=Creation Time"`
	ID                       string                   `json:"id,omitempty" jsonschema:"description=MessengerBusinessTemplate ID,required,pattern=^[0-9]+$"`
	Language                 string                   `json:"language,omitempty" jsonschema:"description=Language"`
	LanguageCount            int                      `json:"language_count,omitempty" jsonschema:"description=Language Count,minimum=13,maximum=100"`
	LastUpdatedTime          time.Time                `json:"last_updated_time,omitempty" jsonschema:"description=When the MessengerBusinessTemplate was last updated,format=date-time"`
	LibraryTemplateName      string                   `json:"library_template_name,omitempty" jsonschema:"description=Library Template Name"`
	Name                     string                   `json:"name,omitempty" jsonschema:"description=Name of the MessengerBusinessTemplate,required"`
	RejectedReason           string                   `json:"rejected_reason,omitempty" jsonschema:"description=Rejected Reason"`
	RejectionReasons         map[string]interface{}   `json:"rejection_reasons,omitempty" jsonschema:"description=Rejection Reasons"`
	SpecificRejectionReasons map[string]interface{}   `json:"specific_rejection_reasons,omitempty" jsonschema:"description=Specific Rejection Reasons"`
	Status                   string                   `json:"status,omitempty" jsonschema:"description=Current status of the MessengerBusinessTemplate,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// MessengerCallSettings represents the Facebook MessengerCallSettings object
type MessengerCallSettings struct {
	AudioEnabled bool                   `json:"audio_enabled,omitempty" jsonschema:"description=Audio Enabled"`
	CallHours    map[string]interface{} `json:"call_hours,omitempty" jsonschema:"description=Call Hours"`
	CallRouting  string                 `json:"call_routing,omitempty" jsonschema:"description=Call Routing"`
	IconEnabled  bool                   `json:"icon_enabled,omitempty" jsonschema:"description=Icon Enabled"`
}

// MessengerDestinationPageWelcomeMessage represents the Facebook MessengerDestinationPageWelcomeMessage object
type MessengerDestinationPageWelcomeMessage struct {
	ID                     string    `json:"id,omitempty" jsonschema:"description=MessengerDestinationPageWelcomeMessage ID,required,pattern=^[0-9]+$"`
	PageWelcomeMessageBody string    `json:"page_welcome_message_body,omitempty" jsonschema:"description=Page Welcome Message Body"`
	PageWelcomeMessageType string    `json:"page_welcome_message_type,omitempty" jsonschema:"description=Page Welcome Message Type"`
	TemplateName           string    `json:"template_name,omitempty" jsonschema:"description=Template Name"`
	TimeCreated            time.Time `json:"time_created,omitempty" jsonschema:"description=When the MessengerDestinationPageWelcomeMessage was created,format=date-time"`
	TimeLastUsed           time.Time `json:"time_last_used,omitempty" jsonschema:"description=Time Last Used,format=date-time"`
}

// MessengerProfile represents the Facebook MessengerProfile object
type MessengerProfile struct {
	AccountLinkingURL          string                   `json:"account_linking_url,omitempty" jsonschema:"description=Account Linking URL,format=uri"`
	Commands                   []map[string]interface{} `json:"commands,omitempty" jsonschema:"description=Commands"`
	GetStarted                 map[string]interface{}   `json:"get_started,omitempty" jsonschema:"description=Get Started"`
	Greeting                   []map[string]interface{} `json:"greeting,omitempty" jsonschema:"description=Greeting"`
	IceBreakers                []map[string]interface{} `json:"ice_breakers,omitempty" jsonschema:"description=Ice Breakers"`
	PersistentMenu             []map[string]interface{} `json:"persistent_menu,omitempty" jsonschema:"description=Persistent Menu"`
	SubjectToNewEuPrivacyRules bool                     `json:"subject_to_new_eu_privacy_rules,omitempty" jsonschema:"description=Subject To New Eu Privacy Rules"`
	WhitelistedDomains         []string                 `json:"whitelisted_domains,omitempty" jsonschema:"description=Whitelisted Domains"`
}

// MinimumBudget represents the Facebook MinimumBudget object
type MinimumBudget struct {
	Currency                 string `json:"currency,omitempty" jsonschema:"description=Currency"`
	MinDailyBudgetHighFreq   int    `json:"min_daily_budget_high_freq,omitempty" jsonschema:"description=Min Daily Budget High Freq,minimum=1"`
	MinDailyBudgetImp        int    `json:"min_daily_budget_imp,omitempty" jsonschema:"description=Min Daily Budget Imp,minimum=1"`
	MinDailyBudgetLowFreq    int    `json:"min_daily_budget_low_freq,omitempty" jsonschema:"description=Min Daily Budget Low Freq,minimum=1"`
	MinDailyBudgetVideoViews int    `json:"min_daily_budget_video_views,omitempty" jsonschema:"description=Min Daily Budget Video Views,minimum=1"`
}

// MusicVideoCopyright represents the Facebook MusicVideoCopyright object
type MusicVideoCopyright struct {
	CreationTime          time.Time                    `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	DisplayedMatchesCount int                          `json:"displayed_matches_count,omitempty" jsonschema:"description=Displayed Matches Count"`
	ID                    string                       `json:"id,omitempty" jsonschema:"description=MusicVideoCopyright ID,required,pattern=^[0-9]+$"`
	InConflict            bool                         `json:"in_conflict,omitempty" jsonschema:"description=In Conflict"`
	Isrc                  string                       `json:"isrc,omitempty" jsonschema:"description=Isrc"`
	MatchRule             *VideoCopyrightRule          `json:"match_rule,omitempty" jsonschema:"description=Match Rule"`
	OwnershipCountries    []string                     `json:"ownership_countries,omitempty" jsonschema:"description=Ownership Countries"`
	ReferenceFileStatus   string                       `json:"reference_file_status,omitempty" jsonschema:"description=Reference File Status"`
	RidgeMonitoringStatus string                       `json:"ridge_monitoring_status,omitempty" jsonschema:"description=Ridge Monitoring Status"`
	Tags                  []string                     `json:"tags,omitempty" jsonschema:"description=Tags"`
	UpdateTime            time.Time                    `json:"update_time,omitempty" jsonschema:"description=Update Time,format=date-time"`
	VideoAsset            *CopyrightReferenceContainer `json:"video_asset,omitempty" jsonschema:"description=Video Asset"`
	WhitelistedFbUsers    []map[string]interface{}     `json:"whitelisted_fb_users,omitempty" jsonschema:"description=Whitelisted Fb Users"`
	WhitelistedIgUsers    []string                     `json:"whitelisted_ig_users,omitempty" jsonschema:"description=Whitelisted Ig Users"`
}

// MusicWorkCopyright represents the Facebook MusicWorkCopyright object
type MusicWorkCopyright struct {
	AvailableUiActions                        []string            `json:"available_ui_actions,omitempty" jsonschema:"description=Available Ui Actions"`
	ClaimStatus                               string              `json:"claim_status,omitempty" jsonschema:"description=Claim Status"`
	CreationTime                              time.Time           `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	DisplayedFbMatchesCount                   int                 `json:"displayed_fb_matches_count,omitempty" jsonschema:"description=Displayed Fb Matches Count"`
	DisplayedIgMatchesCount                   int                 `json:"displayed_ig_matches_count,omitempty" jsonschema:"description=Displayed Ig Matches Count"`
	DisplayedMatchesCount                     int                 `json:"displayed_matches_count,omitempty" jsonschema:"description=Displayed Matches Count"`
	HasRevShareEligibleIsrcs                  bool                `json:"has_rev_share_eligible_isrcs,omitempty" jsonschema:"description=Has Rev Share Eligible Isrcs"`
	ID                                        string              `json:"id,omitempty" jsonschema:"description=MusicWorkCopyright ID,required,pattern=^[0-9]+$"`
	IsLinkingRequiredToMonetizeForManualClaim bool                `json:"is_linking_required_to_monetize_for_manual_claim,omitempty" jsonschema:"description=Is Linking Required To Monetize For Manual Claim"`
	MatchRule                                 *VideoCopyrightRule `json:"match_rule,omitempty" jsonschema:"description=Match Rule"`
	Status                                    string              `json:"status,omitempty" jsonschema:"description=Current status of the MusicWorkCopyright,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	Tags                                      []string            `json:"tags,omitempty" jsonschema:"description=Tags"`
	UpdateTime                                time.Time           `json:"update_time,omitempty" jsonschema:"description=Update Time,format=date-time"`
}

// NullNode represents the Facebook NullNode object
type NullNode struct {
}

// OfflineConversionDataSet represents the Facebook OfflineConversionDataSet object
type OfflineConversionDataSet struct {
	AutomaticMatchingFields    []string                       `json:"automatic_matching_fields,omitempty" jsonschema:"description=Automatic Matching Fields"`
	Business                   *Business                      `json:"business,omitempty" jsonschema:"description=Business"`
	CanProxy                   bool                           `json:"can_proxy,omitempty" jsonschema:"description=Can Proxy"`
	Config                     string                         `json:"config,omitempty" jsonschema:"description=Config"`
	CreationTime               time.Time                      `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	Creator                    *User                          `json:"creator,omitempty" jsonschema:"description=Creator"`
	DataUseSetting             string                         `json:"data_use_setting,omitempty" jsonschema:"description=Data Use Setting"`
	Description                string                         `json:"description,omitempty" jsonschema:"description=Description"`
	DuplicateEntries           int                            `json:"duplicate_entries,omitempty" jsonschema:"description=Duplicate Entries"`
	EnableAutoAssignToAccounts bool                           `json:"enable_auto_assign_to_accounts,omitempty" jsonschema:"description=Enable Auto Assign To Accounts"`
	EnableAutomaticMatching    bool                           `json:"enable_automatic_matching,omitempty" jsonschema:"description=Enable Automatic Matching"`
	EventStats                 string                         `json:"event_stats,omitempty" jsonschema:"description=Event Stats"`
	EventTimeMax               int                            `json:"event_time_max,omitempty" jsonschema:"description=Event Time Max"`
	EventTimeMin               int                            `json:"event_time_min,omitempty" jsonschema:"description=Event Time Min"`
	FirstPartyCookieStatus     string                         `json:"first_party_cookie_status,omitempty" jsonschema:"description=First Party Cookie Status"`
	ID                         string                         `json:"id,omitempty" jsonschema:"description=OfflineConversionDataSet ID,required,pattern=^[0-9]+$"`
	IsConsolidatedContainer    bool                           `json:"is_consolidated_container,omitempty" jsonschema:"description=Is Consolidated Container"`
	IsCreatedByBusiness        bool                           `json:"is_created_by_business,omitempty" jsonschema:"description=When the OfflineConversionDataSet was created"`
	IsCrm                      bool                           `json:"is_crm,omitempty" jsonschema:"description=Is Crm"`
	IsMtaUse                   bool                           `json:"is_mta_use,omitempty" jsonschema:"description=Is Mta Use"`
	IsRestrictedUse            bool                           `json:"is_restricted_use,omitempty" jsonschema:"description=Is Restricted Use"`
	IsUnavailable              bool                           `json:"is_unavailable,omitempty" jsonschema:"description=Is Unavailable"`
	LastFiredTime              time.Time                      `json:"last_fired_time,omitempty" jsonschema:"description=Last Fired Time,format=date-time"`
	LastUploadApp              string                         `json:"last_upload_app,omitempty" jsonschema:"description=Last Upload App"`
	LastUploadAppChangedTime   int                            `json:"last_upload_app_changed_time,omitempty" jsonschema:"description=Last Upload App Changed Time"`
	MatchRateApprox            int                            `json:"match_rate_approx,omitempty" jsonschema:"description=Match Rate Approx"`
	MatchedEntries             int                            `json:"matched_entries,omitempty" jsonschema:"description=Matched Entries"`
	Name                       string                         `json:"name,omitempty" jsonschema:"description=Name of the OfflineConversionDataSet,required"`
	OwnerAdAccount             *AdAccount                     `json:"owner_ad_account,omitempty" jsonschema:"description=Owner Ad Account"`
	OwnerBusiness              *Business                      `json:"owner_business,omitempty" jsonschema:"description=Owner Business"`
	Usage                      *OfflineConversionDataSetUsage `json:"usage,omitempty" jsonschema:"description=Usage"`
	ValidEntries               int                            `json:"valid_entries,omitempty" jsonschema:"description=Valid Entries"`
}

// OfflineConversionDataSetActivities represents the Facebook OfflineConversionDataSetActivities object
type OfflineConversionDataSetActivities struct {
	ActorID       int       `json:"actor_id,omitempty" jsonschema:"description=ID of the Actor,pattern=^[0-9]+$"`
	ActorName     string    `json:"actor_name,omitempty" jsonschema:"description=Actor Name"`
	AdaccountID   int       `json:"adaccount_id,omitempty" jsonschema:"description=ID of the Adaccount,pattern=^[0-9]+$"`
	AdaccountName string    `json:"adaccount_name,omitempty" jsonschema:"description=Adaccount Name"`
	EventTime     time.Time `json:"event_time,omitempty" jsonschema:"description=Event Time,format=date-time"`
	EventType     string    `json:"event_type,omitempty" jsonschema:"description=Event Type"`
	ExtraData     string    `json:"extra_data,omitempty" jsonschema:"description=Extra Data"`
	ObjectID      int       `json:"object_id,omitempty" jsonschema:"description=ID of the Object,pattern=^[0-9]+$"`
	ObjectName    string    `json:"object_name,omitempty" jsonschema:"description=Object Name"`
}

// OfflineConversionDataSetOptimizationStatus represents the Facebook OfflineConversionDataSetOptimizationStatus object
type OfflineConversionDataSetOptimizationStatus struct {
	Event            string `json:"event,omitempty" jsonschema:"description=Event"`
	LastChangedTime  int    `json:"last_changed_time,omitempty" jsonschema:"description=Last Changed Time"`
	LastDetectedTime int    `json:"last_detected_time,omitempty" jsonschema:"description=Last Detected Time"`
	Status           string `json:"status,omitempty" jsonschema:"description=Current status of the OfflineConversionDataSetOptimizationStatus,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// OfflineConversionDataSetPermissions represents the Facebook OfflineConversionDataSetPermissions object
type OfflineConversionDataSetPermissions struct {
	CanEdit                                  bool `json:"can_edit,omitempty" jsonschema:"description=Can Edit"`
	CanEditOrUpload                          bool `json:"can_edit_or_upload,omitempty" jsonschema:"description=Can Edit Or Upload"`
	CanUpload                                bool `json:"can_upload,omitempty" jsonschema:"description=Can Upload"`
	ShouldBlockVanillaBusinessEmployeeAccess bool `json:"should_block_vanilla_business_employee_access,omitempty" jsonschema:"description=Should Block Vanilla Business Employee Access"`
}

// OfflineConversionDataSetUpload represents the Facebook OfflineConversionDataSetUpload object
type OfflineConversionDataSetUpload struct {
	APICalls          int    `json:"api_calls,omitempty" jsonschema:"description=API Calls"`
	CreationTime      int    `json:"creation_time,omitempty" jsonschema:"description=Creation Time"`
	DuplicateEntries  int    `json:"duplicate_entries,omitempty" jsonschema:"description=Duplicate Entries"`
	EventStats        string `json:"event_stats,omitempty" jsonschema:"description=Event Stats"`
	EventTimeMax      int    `json:"event_time_max,omitempty" jsonschema:"description=Event Time Max"`
	EventTimeMin      int    `json:"event_time_min,omitempty" jsonschema:"description=Event Time Min"`
	FirstUploadTime   int    `json:"first_upload_time,omitempty" jsonschema:"description=First Upload Time"`
	ID                string `json:"id,omitempty" jsonschema:"description=OfflineConversionDataSetUpload ID,required,pattern=^[0-9]+$"`
	IsExcludedForLift bool   `json:"is_excluded_for_lift,omitempty" jsonschema:"description=Is Excluded For Lift"`
	LastUploadTime    int    `json:"last_upload_time,omitempty" jsonschema:"description=Last Upload Time"`
	MatchRateApprox   int    `json:"match_rate_approx,omitempty" jsonschema:"description=Match Rate Approx"`
	MatchedEntries    int    `json:"matched_entries,omitempty" jsonschema:"description=Matched Entries"`
	UploadTag         string `json:"upload_tag,omitempty" jsonschema:"description=Upload Tag"`
	ValidEntries      int    `json:"valid_entries,omitempty" jsonschema:"description=Valid Entries"`
}

// OfflineConversionDataSetUsage represents the Facebook OfflineConversionDataSetUsage object
type OfflineConversionDataSetUsage struct {
	NumLiftStudies int `json:"num_lift_studies,omitempty" jsonschema:"description=Num Lift Studies"`
}

// OfflineProductItem represents the Facebook OfflineProductItem object
type OfflineProductItem struct {
	Applinks               *CatalogItemAppLinks               `json:"applinks,omitempty" jsonschema:"description=Applinks"`
	Brand                  string                             `json:"brand,omitempty" jsonschema:"description=Brand"`
	Category               string                             `json:"category,omitempty" jsonschema:"description=Category"`
	CategorySpecificFields *CatalogSubVerticalList            `json:"category_specific_fields,omitempty" jsonschema:"description=Category Specific Fields"`
	Currency               string                             `json:"currency,omitempty" jsonschema:"description=Currency"`
	Description            string                             `json:"description,omitempty" jsonschema:"description=Description"`
	ID                     string                             `json:"id,omitempty" jsonschema:"description=OfflineProductItem ID,required,pattern=^[0-9]+$"`
	ImageFetchStatus       OfflineproductitemImageFetchStatus `json:"image_fetch_status,omitempty" jsonschema:"description=Image Fetch Status"`
	ImageURL               string                             `json:"image_url,omitempty" jsonschema:"description=Image URL,format=uri"`
	Images                 []string                           `json:"images,omitempty" jsonschema:"description=Images"`
	Name                   string                             `json:"name,omitempty" jsonschema:"description=Name of the OfflineProductItem,required"`
	OfflineProductItemID   string                             `json:"offline_product_item_id,omitempty" jsonschema:"description=ID of the Offline Product Item,pattern=^[0-9]+$"`
	Price                  string                             `json:"price,omitempty" jsonschema:"description=Price"`
	SanitizedImages        []string                           `json:"sanitized_images,omitempty" jsonschema:"description=Sanitized Images"`
	URL                    string                             `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
	Visibility             OfflineproductitemVisibility       `json:"visibility,omitempty" jsonschema:"description=Visibility"`
}

// OfflineTermsOfService represents the Facebook OfflineTermsOfService object
type OfflineTermsOfService struct {
	AcceptTime   int    `json:"accept_time,omitempty" jsonschema:"description=Accept Time"`
	ID           string `json:"id,omitempty" jsonschema:"description=OfflineTermsOfService ID,required,pattern=^[0-9]+$"`
	SignedByUser *User  `json:"signed_by_user,omitempty" jsonschema:"description=Signed By User"`
}

// OffsitePixel represents the Facebook OffsitePixel object
type OffsitePixel struct {
	Creator        string    `json:"creator,omitempty" jsonschema:"description=Creator"`
	ID             string    `json:"id,omitempty" jsonschema:"description=OffsitePixel ID,required,pattern=^[0-9]+$"`
	JsPixel        string    `json:"js_pixel,omitempty" jsonschema:"description=Js Pixel"`
	LastFiringTime time.Time `json:"last_firing_time,omitempty" jsonschema:"description=Last Firing Time,format=date-time"`
	Name           string    `json:"name,omitempty" jsonschema:"description=Name of the OffsitePixel,required"`
	Tag            string    `json:"tag,omitempty" jsonschema:"description=Tag"`
}

// OffsiteSignalContainerBusinessObject represents the Facebook OffsiteSignalContainerBusinessObject object
type OffsiteSignalContainerBusinessObject struct {
	Business                        *Business `json:"business,omitempty" jsonschema:"description=Business"`
	ID                              string    `json:"id,omitempty" jsonschema:"description=OffsiteSignalContainerBusinessObject ID,required,pattern=^[0-9]+$"`
	IsEligibleForSharingToAdAccount bool      `json:"is_eligible_for_sharing_to_ad_account,omitempty" jsonschema:"description=Is Eligible For Sharing To Ad Account"`
	IsEligibleForSharingToBusiness  bool      `json:"is_eligible_for_sharing_to_business,omitempty" jsonschema:"description=Is Eligible For Sharing To Business"`
	IsUnavailable                   bool      `json:"is_unavailable,omitempty" jsonschema:"description=Is Unavailable"`
	Name                            string    `json:"name,omitempty" jsonschema:"description=Name of the OffsiteSignalContainerBusinessObject,required"`
	PrimaryContainerID              string    `json:"primary_container_id,omitempty" jsonschema:"description=ID of the Primary Container,pattern=^[0-9]+$"`
}

// OmegaCustomerTrx represents the Facebook OmegaCustomerTrx object
type OmegaCustomerTrx struct {
	AdAccountIDs        []string               `json:"ad_account_ids,omitempty" jsonschema:"description=Ad Account Ids,pattern=^[0-9]+$"`
	AdvertiserName      string                 `json:"advertiser_name,omitempty" jsonschema:"description=Advertiser Name"`
	Amount              string                 `json:"amount,omitempty" jsonschema:"description=Amount"`
	AmountDue           *CurrencyAmount        `json:"amount_due,omitempty" jsonschema:"description=Amount Due"`
	BilledAmountDetails map[string]interface{} `json:"billed_amount_details,omitempty" jsonschema:"description=Billed Amount Details"`
	BillingPeriod       string                 `json:"billing_period,omitempty" jsonschema:"description=Billing Period"`
	CdnDownloadUri      string                 `json:"cdn_download_uri,omitempty" jsonschema:"description=Cdn Download Uri"`
	Currency            string                 `json:"currency,omitempty" jsonschema:"description=Currency"`
	DownloadUri         string                 `json:"download_uri,omitempty" jsonschema:"description=Download Uri"`
	DueDate             time.Time              `json:"due_date,omitempty" jsonschema:"description=Due Date,format=date-time"`
	Entity              string                 `json:"entity,omitempty" jsonschema:"description=Entity"`
	ID                  string                 `json:"id,omitempty" jsonschema:"description=OmegaCustomerTrx ID,required,pattern=^[0-9]+$"`
	InvoiceDate         time.Time              `json:"invoice_date,omitempty" jsonschema:"description=Invoice Date,format=date-time"`
	InvoiceID           string                 `json:"invoice_id,omitempty" jsonschema:"description=ID of the Invoice,pattern=^[0-9]+$"`
	InvoiceType         string                 `json:"invoice_type,omitempty" jsonschema:"description=Invoice Type"`
	LiabilityType       string                 `json:"liability_type,omitempty" jsonschema:"description=Liability Type"`
	PaymentStatus       string                 `json:"payment_status,omitempty" jsonschema:"description=Payment Status"`
	PaymentTerm         string                 `json:"payment_term,omitempty" jsonschema:"description=Payment Term"`
	Type                string                 `json:"type,omitempty" jsonschema:"description=Type"`
}

// OpenBridgeConfiguration represents the Facebook OpenBridgeConfiguration object
type OpenBridgeConfiguration struct {
	Active                  bool   `json:"active,omitempty" jsonschema:"description=Active"`
	CloudProvider           string `json:"cloud_provider,omitempty" jsonschema:"description=Cloud Provider"`
	CloudRegion             string `json:"cloud_region,omitempty" jsonschema:"description=Cloud Region"`
	DestinationID           string `json:"destination_id,omitempty" jsonschema:"description=ID of the Destination,pattern=^[0-9]+$"`
	Endpoint                string `json:"endpoint,omitempty" jsonschema:"description=Endpoint"`
	FallbackDomain          string `json:"fallback_domain,omitempty" jsonschema:"description=Fallback Domain"`
	FirstPartyDomain        string `json:"first_party_domain,omitempty" jsonschema:"description=First Party Domain"`
	HostBusinessID          string `json:"host_business_id,omitempty" jsonschema:"description=ID of the Host Business,pattern=^[0-9]+$"`
	ID                      string `json:"id,omitempty" jsonschema:"description=OpenBridgeConfiguration ID,required,pattern=^[0-9]+$"`
	InstanceID              string `json:"instance_id,omitempty" jsonschema:"description=ID of the Instance,pattern=^[0-9]+$"`
	InstanceVersion         string `json:"instance_version,omitempty" jsonschema:"description=Instance Version"`
	IsSgwInstance           bool   `json:"is_sgw_instance,omitempty" jsonschema:"description=Is Sgw Instance"`
	IsSgwPixelFromMetaPixel bool   `json:"is_sgw_pixel_from_meta_pixel,omitempty" jsonschema:"description=Is Sgw Pixel From Meta Pixel"`
	PartnerName             string `json:"partner_name,omitempty" jsonschema:"description=Partner Name"`
	PixelID                 string `json:"pixel_id,omitempty" jsonschema:"description=ID of the Pixel,pattern=^[0-9]+$"`
	SgwAccountID            string `json:"sgw_account_id,omitempty" jsonschema:"description=ID of the Sgw Account,pattern=^[0-9]+$"`
	SgwInstanceURL          string `json:"sgw_instance_url,omitempty" jsonschema:"description=Sgw Instance URL,format=uri"`
	SgwPixelID              string `json:"sgw_pixel_id,omitempty" jsonschema:"description=ID of the Sgw Pixel,pattern=^[0-9]+$"`
}

// OpenGraphContext represents the Facebook OpenGraphContext object
type OpenGraphContext struct {
	ID string `json:"id,omitempty" jsonschema:"description=OpenGraphContext ID,required,pattern=^[0-9]+$"`
}

// OrderIDAttributions represents the Facebook OrderIDAttributions object
type OrderIDAttributions struct {
	AppID            string                   `json:"app_id,omitempty" jsonschema:"description=ID of the App,pattern=^[0-9]+$"`
	AttributionType  string                   `json:"attribution_type,omitempty" jsonschema:"description=Attribution Type"`
	Attributions     []map[string]interface{} `json:"attributions,omitempty" jsonschema:"description=Attributions"`
	ConversionDevice string                   `json:"conversion_device,omitempty" jsonschema:"description=Conversion Device"`
	DatasetID        string                   `json:"dataset_id,omitempty" jsonschema:"description=ID of the Dataset,pattern=^[0-9]+$"`
	HoldoutStatus    []map[string]interface{} `json:"holdout_status,omitempty" jsonschema:"description=Holdout Status"`
	OrderID          string                   `json:"order_id,omitempty" jsonschema:"description=ID of the Order,pattern=^[0-9]+$"`
	OrderTimestamp   time.Time                `json:"order_timestamp,omitempty" jsonschema:"description=Order Timestamp,format=date-time"`
	PixelID          string                   `json:"pixel_id,omitempty" jsonschema:"description=ID of the Pixel,pattern=^[0-9]+$"`
}

// Organization represents the Facebook Organization object
type Organization struct {
	ID              string    `json:"id,omitempty" jsonschema:"description=Organization ID,required,pattern=^[0-9]+$"`
	LegalEntityName string    `json:"legal_entity_name,omitempty" jsonschema:"description=Legal Entity Name"`
	OwnerBusiness   *Business `json:"owner_business,omitempty" jsonschema:"description=Owner Business"`
}

// OutcomePredictionPoint represents the Facebook OutcomePredictionPoint object
type OutcomePredictionPoint struct {
	Actions     float64 `json:"actions,omitempty" jsonschema:"description=Actions"`
	Impressions float64 `json:"impressions,omitempty" jsonschema:"description=Impressions"`
	Reach       float64 `json:"reach,omitempty" jsonschema:"description=Reach"`
	Spend       int     `json:"spend,omitempty" jsonschema:"description=Spend"`
}

// OverrideDetails represents the Facebook OverrideDetails object
type OverrideDetails struct {
	Key    string                 `json:"key,omitempty" jsonschema:"description=Key"`
	Type   string                 `json:"type,omitempty" jsonschema:"description=Type"`
	Values map[string]interface{} `json:"values,omitempty" jsonschema:"description=Values"`
}

// OwnedDomain represents the Facebook OwnedDomain object
type OwnedDomain struct {
	DomainName       string    `json:"domain_name,omitempty" jsonschema:"description=Domain Name"`
	ID               string    `json:"id,omitempty" jsonschema:"description=OwnedDomain ID,required,pattern=^[0-9]+$"`
	OwnerBusiness    *Business `json:"owner_business,omitempty" jsonschema:"description=Owner Business"`
	Status           string    `json:"status,omitempty" jsonschema:"description=Current status of the OwnedDomain,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	VerificationCode string    `json:"verification_code,omitempty" jsonschema:"description=Verification Code"`
}

// P2MInvoicePayments represents the Facebook P2MInvoicePayments object
type P2MInvoicePayments struct {
	PageID   string                   `json:"page_id,omitempty" jsonschema:"description=ID of the Page,pattern=^[0-9]+$"`
	Payments []map[string]interface{} `json:"payments,omitempty" jsonschema:"description=Payments"`
}

// Page represents the Facebook Page object
type Page struct {
	About                                                string                           `json:"about,omitempty" jsonschema:"description=About"`
	AccessToken                                          string                           `json:"access_token,omitempty" jsonschema:"description=Access Token"`
	AdCampaign                                           *AdSet                           `json:"ad_campaign,omitempty" jsonschema:"description=Ad Campaign"`
	Affiliation                                          string                           `json:"affiliation,omitempty" jsonschema:"description=Affiliation"`
	AppID                                                string                           `json:"app_id,omitempty" jsonschema:"description=ID of the App,pattern=^[0-9]+$"`
	ArtistsWeLike                                        string                           `json:"artists_we_like,omitempty" jsonschema:"description=Artists We Like"`
	Attire                                               string                           `json:"attire,omitempty" jsonschema:"description=Attire"`
	AvailablePromoOfferIDs                               []map[string][]map[string]string `json:"available_promo_offer_ids,omitempty" jsonschema:"description=Available Promo Offer Ids,pattern=^[0-9]+$"`
	Awards                                               string                           `json:"awards,omitempty" jsonschema:"description=Awards"`
	BandInterests                                        string                           `json:"band_interests,omitempty" jsonschema:"description=Band Interests"`
	BandMembers                                          string                           `json:"band_members,omitempty" jsonschema:"description=Band Members"`
	BestPage                                             *Page                            `json:"best_page,omitempty" jsonschema:"description=Best Page"`
	Bio                                                  string                           `json:"bio,omitempty" jsonschema:"description=Bio"`
	Birthday                                             string                           `json:"birthday,omitempty" jsonschema:"description=Birthday"`
	BookingAgent                                         string                           `json:"booking_agent,omitempty" jsonschema:"description=Booking Agent"`
	BreakingNewsUsage                                    map[string]interface{}           `json:"breaking_news_usage,omitempty" jsonschema:"description=Breaking News Usage"`
	Built                                                string                           `json:"built,omitempty" jsonschema:"description=Built"`
	Business                                             map[string]interface{}           `json:"business,omitempty" jsonschema:"description=Business"`
	CanCheckin                                           bool                             `json:"can_checkin,omitempty" jsonschema:"description=Can Checkin"`
	CanPost                                              bool                             `json:"can_post,omitempty" jsonschema:"description=Can Post"`
	Category                                             string                           `json:"category,omitempty" jsonschema:"description=Category"`
	CategoryList                                         []*PageCategory                  `json:"category_list,omitempty" jsonschema:"description=Category List"`
	Checkins                                             uint                             `json:"checkins,omitempty" jsonschema:"description=Checkins"`
	CompanyOverview                                      string                           `json:"company_overview,omitempty" jsonschema:"description=Company Overview"`
	ConnectedInstagramAccount                            *IGUser                          `json:"connected_instagram_account,omitempty" jsonschema:"description=Connected Instagram Account"`
	ConnectedPageBackedInstagramAccount                  *IGUser                          `json:"connected_page_backed_instagram_account,omitempty" jsonschema:"description=Connected Page Backed Instagram Account"`
	ContactAddress                                       *MailingAddress                  `json:"contact_address,omitempty" jsonschema:"description=Contact Address"`
	CopyrightWhitelistedIgPartners                       []string                         `json:"copyright_whitelisted_ig_partners,omitempty" jsonschema:"description=Copyright Whitelisted Ig Partners"`
	CountryPageLikes                                     uint                             `json:"country_page_likes,omitempty" jsonschema:"description=Country Page Likes,minimum=13,maximum=100"`
	Cover                                                *CoverPhoto                      `json:"cover,omitempty" jsonschema:"description=Cover"`
	CulinaryTeam                                         string                           `json:"culinary_team,omitempty" jsonschema:"description=Culinary Team"`
	CurrentLocation                                      string                           `json:"current_location,omitempty" jsonschema:"description=Current Location"`
	DeliveryAndPickupOptionInfo                          []string                         `json:"delivery_and_pickup_option_info,omitempty" jsonschema:"description=Delivery And Pickup Option Info"`
	Description                                          string                           `json:"description,omitempty" jsonschema:"description=Description"`
	DescriptionHtml                                      string                           `json:"description_html,omitempty" jsonschema:"description=Description Html"`
	DifferentlyOpenOfferings                             []map[string]bool                `json:"differently_open_offerings,omitempty" jsonschema:"description=Differently Open Offerings"`
	DirectedBy                                           string                           `json:"directed_by,omitempty" jsonschema:"description=Directed By"`
	DisplaySubtext                                       string                           `json:"display_subtext,omitempty" jsonschema:"description=Display Subtext"`
	DisplayedMessageResponseTime                         string                           `json:"displayed_message_response_time,omitempty" jsonschema:"description=Displayed Message Response Time"`
	DoesViewerHavePagePermissionLinkIg                   bool                             `json:"does_viewer_have_page_permission_link_ig,omitempty" jsonschema:"description=Does Viewer Have Page Permission Link Ig"`
	Emails                                               []string                         `json:"emails,omitempty" jsonschema:"description=Emails"`
	Engagement                                           *Engagement                      `json:"engagement,omitempty" jsonschema:"description=Engagement"`
	FanCount                                             uint                             `json:"fan_count,omitempty" jsonschema:"description=Fan Count"`
	FeaturedVideo                                        *AdVideo                         `json:"featured_video,omitempty" jsonschema:"description=Featured Video"`
	Features                                             string                           `json:"features,omitempty" jsonschema:"description=Features"`
	FollowersCount                                       uint                             `json:"followers_count,omitempty" jsonschema:"description=Followers Count"`
	FoodStyles                                           []string                         `json:"food_styles,omitempty" jsonschema:"description=Food Styles"`
	Founded                                              string                           `json:"founded,omitempty" jsonschema:"description=Founded"`
	GeneralInfo                                          string                           `json:"general_info,omitempty" jsonschema:"description=General Info"`
	GeneralManager                                       string                           `json:"general_manager,omitempty" jsonschema:"description=General Manager"`
	Genre                                                string                           `json:"genre,omitempty" jsonschema:"description=Genre"`
	GlobalBrandPageName                                  string                           `json:"global_brand_page_name,omitempty" jsonschema:"description=Global Brand Page Name"`
	GlobalBrandRootID                                    string                           `json:"global_brand_root_id,omitempty" jsonschema:"description=ID of the Global Brand Root,pattern=^[0-9]+$"`
	HasAddedApp                                          bool                             `json:"has_added_app,omitempty" jsonschema:"description=Has Added App"`
	HasLeadAccess                                        *HasLeadAccess                   `json:"has_lead_access,omitempty" jsonschema:"description=Has Lead Access"`
	HasTransitionedToNewPageExperience                   bool                             `json:"has_transitioned_to_new_page_experience,omitempty" jsonschema:"description=Has Transitioned To New Page Experience"`
	HasWhatsappBusinessNumber                            bool                             `json:"has_whatsapp_business_number,omitempty" jsonschema:"description=Has Whatsapp Business Number"`
	HasWhatsappNumber                                    bool                             `json:"has_whatsapp_number,omitempty" jsonschema:"description=Has Whatsapp Number"`
	Hometown                                             string                           `json:"hometown,omitempty" jsonschema:"description=Hometown"`
	Hours                                                map[string]string                `json:"hours,omitempty" jsonschema:"description=Hours"`
	ID                                                   string                           `json:"id,omitempty" jsonschema:"description=Page ID,required,pattern=^[0-9]+$"`
	Impressum                                            string                           `json:"impressum,omitempty" jsonschema:"description=Impressum"`
	Influences                                           string                           `json:"influences,omitempty" jsonschema:"description=Influences"`
	InstagramBusinessAccount                             *IGUser                          `json:"instagram_business_account,omitempty" jsonschema:"description=Instagram Business Account"`
	IsAlwaysOpen                                         bool                             `json:"is_always_open,omitempty" jsonschema:"description=Is Always Open"`
	IsCallingEligible                                    bool                             `json:"is_calling_eligible,omitempty" jsonschema:"description=Is Calling Eligible"`
	IsChain                                              bool                             `json:"is_chain,omitempty" jsonschema:"description=Is Chain"`
	IsCommunityPage                                      bool                             `json:"is_community_page,omitempty" jsonschema:"description=Is Community Page"`
	IsEligibleForBrandedContent                          bool                             `json:"is_eligible_for_branded_content,omitempty" jsonschema:"description=Is Eligible For Branded Content"`
	IsEligibleForDisableConnectIgBtnForNonPageAdminAmWeb bool                             `json:"is_eligible_for_disable_connect_ig_btn_for_non_page_admin_am_web,omitempty" jsonschema:"description=Is Eligible For Disable Connect Ig Btn For Non Page Admin Am Web"`
	IsMessengerBotGetStartedEnabled                      bool                             `json:"is_messenger_bot_get_started_enabled,omitempty" jsonschema:"description=Is Messenger Bot Get Started Enabled"`
	IsMessengerPlatformBot                               bool                             `json:"is_messenger_platform_bot,omitempty" jsonschema:"description=Is Messenger Platform Bot"`
	IsOwned                                              bool                             `json:"is_owned,omitempty" jsonschema:"description=Is Owned"`
	IsPermanentlyClosed                                  bool                             `json:"is_permanently_closed,omitempty" jsonschema:"description=Is Permanently Closed"`
	IsPublished                                          bool                             `json:"is_published,omitempty" jsonschema:"description=Is Published"`
	IsUnclaimed                                          bool                             `json:"is_unclaimed,omitempty" jsonschema:"description=Is Unclaimed"`
	IsVerified                                           bool                             `json:"is_verified,omitempty" jsonschema:"description=Is Verified"`
	IsWebhooksSubscribed                                 bool                             `json:"is_webhooks_subscribed,omitempty" jsonschema:"description=Is Webhooks Subscribed"`
	Keywords                                             map[string]interface{}           `json:"keywords,omitempty" jsonschema:"description=Keywords"`
	LeadgenTosAcceptanceTime                             time.Time                        `json:"leadgen_tos_acceptance_time,omitempty" jsonschema:"description=Leadgen Tos Acceptance Time,format=date-time"`
	LeadgenTosAccepted                                   bool                             `json:"leadgen_tos_accepted,omitempty" jsonschema:"description=Leadgen Tos Accepted"`
	LeadgenTosAcceptingUser                              *User                            `json:"leadgen_tos_accepting_user,omitempty" jsonschema:"description=Leadgen Tos Accepting User"`
	Link                                                 string                           `json:"link,omitempty" jsonschema:"description=Link"`
	Location                                             *Location                        `json:"location,omitempty" jsonschema:"description=Location"`
	Members                                              string                           `json:"members,omitempty" jsonschema:"description=Members"`
	MerchantID                                           string                           `json:"merchant_id,omitempty" jsonschema:"description=ID of the Merchant,pattern=^[0-9]+$"`
	MerchantReviewStatus                                 string                           `json:"merchant_review_status,omitempty" jsonschema:"description=Merchant Review Status"`
	MessagingFeatureStatus                               *MessagingFeatureStatus          `json:"messaging_feature_status,omitempty" jsonschema:"description=Messaging Feature Status"`
	MessengerAdsDefaultIcebreakers                       []string                         `json:"messenger_ads_default_icebreakers,omitempty" jsonschema:"description=Messenger Ads Default Icebreakers"`
	MessengerAdsDefaultQuickReplies                      []string                         `json:"messenger_ads_default_quick_replies,omitempty" jsonschema:"description=Messenger Ads Default Quick Replies"`
	MessengerAdsQuickRepliesType                         string                           `json:"messenger_ads_quick_replies_type,omitempty" jsonschema:"description=Messenger Ads Quick Replies Type"`
	MiniShopStorefront                                   *Shop                            `json:"mini_shop_storefront,omitempty" jsonschema:"description=Mini Shop Storefront"`
	Mission                                              string                           `json:"mission,omitempty" jsonschema:"description=Mission"`
	Mpg                                                  string                           `json:"mpg,omitempty" jsonschema:"description=Mpg"`
	Name                                                 string                           `json:"name,omitempty" jsonschema:"description=Name of the Page,required"`
	NameWithLocationDescriptor                           string                           `json:"name_with_location_descriptor,omitempty" jsonschema:"description=Name With Location Descriptor"`
	Network                                              string                           `json:"network,omitempty" jsonschema:"description=Network"`
	NewLikeCount                                         uint                             `json:"new_like_count,omitempty" jsonschema:"description=New Like Count"`
	OfferEligible                                        bool                             `json:"offer_eligible,omitempty" jsonschema:"description=Offer Eligible"`
	OverallStarRating                                    float64                          `json:"overall_star_rating,omitempty" jsonschema:"description=Overall Star Rating"`
	OwnerBusiness                                        *Business                        `json:"owner_business,omitempty" jsonschema:"description=Owner Business"`
	PageToken                                            string                           `json:"page_token,omitempty" jsonschema:"description=Page Token"`
	ParentPage                                           *Page                            `json:"parent_page,omitempty" jsonschema:"description=Parent Page"`
	Parking                                              *PageParking                     `json:"parking,omitempty" jsonschema:"description=Parking"`
	PaymentOptions                                       *PagePaymentOptions              `json:"payment_options,omitempty" jsonschema:"description=Payment Options"`
	PersonalInfo                                         string                           `json:"personal_info,omitempty" jsonschema:"description=Personal Info"`
	PersonalInterests                                    string                           `json:"personal_interests,omitempty" jsonschema:"description=Personal Interests"`
	PharmaSafetyInfo                                     string                           `json:"pharma_safety_info,omitempty" jsonschema:"description=Pharma Safety Info"`
	Phone                                                string                           `json:"phone,omitempty" jsonschema:"description=Phone"`
	PickupOptions                                        []string                         `json:"pickup_options,omitempty" jsonschema:"description=Pickup Options"`
	PlaceType                                            string                           `json:"place_type,omitempty" jsonschema:"description=Place Type"`
	PlotOutline                                          string                           `json:"plot_outline,omitempty" jsonschema:"description=Plot Outline"`
	PreferredAudience                                    *Targeting                       `json:"preferred_audience,omitempty" jsonschema:"description=Preferred Audience"`
	PressContact                                         string                           `json:"press_contact,omitempty" jsonschema:"description=Press Contact"`
	PriceRange                                           string                           `json:"price_range,omitempty" jsonschema:"description=Price Range"`
	PrivacyInfoURL                                       string                           `json:"privacy_info_url,omitempty" jsonschema:"description=Privacy Info URL,format=uri"`
	ProducedBy                                           string                           `json:"produced_by,omitempty" jsonschema:"description=Produced By"`
	Products                                             string                           `json:"products,omitempty" jsonschema:"description=Products"`
	PromotionEligible                                    bool                             `json:"promotion_eligible,omitempty" jsonschema:"description=Promotion Eligible"`
	PromotionIneligibleReason                            string                           `json:"promotion_ineligible_reason,omitempty" jsonschema:"description=Promotion Ineligible Reason"`
	PublicTransit                                        string                           `json:"public_transit,omitempty" jsonschema:"description=Public Transit"`
	RatingCount                                          uint                             `json:"rating_count,omitempty" jsonschema:"description=Rating Count"`
	Recipient                                            string                           `json:"recipient,omitempty" jsonschema:"description=Recipient"`
	RecordLabel                                          string                           `json:"record_label,omitempty" jsonschema:"description=Record Label"`
	ReleaseDate                                          string                           `json:"release_date,omitempty" jsonschema:"description=Release Date"`
	RestaurantServices                                   *PageRestaurantServices          `json:"restaurant_services,omitempty" jsonschema:"description=Restaurant Services"`
	RestaurantSpecialties                                *PageRestaurantSpecialties       `json:"restaurant_specialties,omitempty" jsonschema:"description=Restaurant Specialties"`
	Schedule                                             string                           `json:"schedule,omitempty" jsonschema:"description=Schedule"`
	ScreenplayBy                                         string                           `json:"screenplay_by,omitempty" jsonschema:"description=Screenplay By"`
	Season                                               string                           `json:"season,omitempty" jsonschema:"description=Season"`
	SingleLineAddress                                    string                           `json:"single_line_address,omitempty" jsonschema:"description=Single Line Address"`
	Starring                                             string                           `json:"starring,omitempty" jsonschema:"description=Starring"`
	StartInfo                                            *PageStartInfo                   `json:"start_info,omitempty" jsonschema:"description=Start Info"`
	StoreCode                                            string                           `json:"store_code,omitempty" jsonschema:"description=Store Code"`
	StoreLocationDescriptor                              string                           `json:"store_location_descriptor,omitempty" jsonschema:"description=Store Location Descriptor"`
	StoreNumber                                          uint                             `json:"store_number,omitempty" jsonschema:"description=Store Number"`
	Studio                                               string                           `json:"studio,omitempty" jsonschema:"description=Studio"`
	SupportsDonateButtonInLiveVideo                      bool                             `json:"supports_donate_button_in_live_video,omitempty" jsonschema:"description=Supports Donate Button In Live Video"`
	TalkingAboutCount                                    uint                             `json:"talking_about_count,omitempty" jsonschema:"description=Talking About Count"`
	TemporaryStatus                                      string                           `json:"temporary_status,omitempty" jsonschema:"description=Temporary Status"`
	UnreadMessageCount                                   uint                             `json:"unread_message_count,omitempty" jsonschema:"description=Unread Message Count,minimum=13,maximum=100"`
	UnreadNotifCount                                     uint                             `json:"unread_notif_count,omitempty" jsonschema:"description=Unread Notif Count"`
	UnseenMessageCount                                   uint                             `json:"unseen_message_count,omitempty" jsonschema:"description=Unseen Message Count,minimum=13,maximum=100"`
	UserAccessExpireTime                                 time.Time                        `json:"user_access_expire_time,omitempty" jsonschema:"description=User Access Expire Time,format=date-time"`
	Username                                             string                           `json:"username,omitempty" jsonschema:"description=Username"`
	VerificationStatus                                   string                           `json:"verification_status,omitempty" jsonschema:"description=Verification Status"`
	VoipInfo                                             *VoipInfo                        `json:"voip_info,omitempty" jsonschema:"description=Voip Info"`
	Website                                              string                           `json:"website,omitempty" jsonschema:"description=Website"`
	WereHereCount                                        uint                             `json:"were_here_count,omitempty" jsonschema:"description=Were Here Count"`
	WhatsappNumber                                       string                           `json:"whatsapp_number,omitempty" jsonschema:"description=Whatsapp Number"`
	WrittenBy                                            string                           `json:"written_by,omitempty" jsonschema:"description=Written By"`
}

// PageAboutStoryComposedBlock represents the Facebook PageAboutStoryComposedBlock object
type PageAboutStoryComposedBlock struct {
	Depth             int                                        `json:"depth,omitempty" jsonschema:"description=Depth"`
	EntityRanges      []*PageAboutStoryComposedBlockEntityRanges `json:"entity_ranges,omitempty" jsonschema:"description=Entity Ranges"`
	InlineStyleRanges []*PageAboutStoryComposedBlockInlineStyle  `json:"inline_style_ranges,omitempty" jsonschema:"description=Inline Style Ranges"`
	Text              string                                     `json:"text,omitempty" jsonschema:"description=Text"`
	Type              string                                     `json:"type,omitempty" jsonschema:"description=Type"`
}

// PageAboutStoryComposedBlockEntityRanges represents the Facebook PageAboutStoryComposedBlockEntityRanges object
type PageAboutStoryComposedBlockEntityRanges struct {
	Key    string `json:"key,omitempty" jsonschema:"description=Key"`
	Length int    `json:"length,omitempty" jsonschema:"description=Length"`
	Offset int    `json:"offset,omitempty" jsonschema:"description=Offset"`
}

// PageAboutStoryComposedBlockInlineStyle represents the Facebook PageAboutStoryComposedBlockInlineStyle object
type PageAboutStoryComposedBlockInlineStyle struct {
	Length int    `json:"length,omitempty" jsonschema:"description=Length"`
	Offset int    `json:"offset,omitempty" jsonschema:"description=Offset"`
	Style  string `json:"style,omitempty" jsonschema:"description=Style"`
}

// PageAppWithLeadsAccess represents the Facebook PageAppWithLeadsAccess object
type PageAppWithLeadsAccess struct {
	CanAccessLeads bool   `json:"can_access_leads,omitempty" jsonschema:"description=Can Access Leads"`
	Type           string `json:"type,omitempty" jsonschema:"description=Type"`
}

// PageBroadcast represents the Facebook PageBroadcast object
type PageBroadcast struct {
	ID            string `json:"id,omitempty" jsonschema:"description=PageBroadcast ID,required,pattern=^[0-9]+$"`
	ScheduledTime string `json:"scheduled_time,omitempty" jsonschema:"description=Scheduled Time"`
	Status        string `json:"status,omitempty" jsonschema:"description=Current status of the PageBroadcast,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// PageCTSTopic represents the Facebook PageCTSTopic object
type PageCTSTopic struct {
	AppID      string `json:"app_id,omitempty" jsonschema:"description=ID of the App,pattern=^[0-9]+$"`
	Frequency  string `json:"frequency,omitempty" jsonschema:"description=Frequency"`
	ImageHash  string `json:"image_hash,omitempty" jsonschema:"description=Image Hash"`
	ImageURL   string `json:"image_url,omitempty" jsonschema:"description=Image URL,format=uri"`
	Subscriber int    `json:"subscriber,omitempty" jsonschema:"description=Subscriber"`
	Title      string `json:"title,omitempty" jsonschema:"description=Title"`
}

// PageCTXBudgetSimilarAdvertiserBudgetRecommendation represents the Facebook PageCTXBudgetSimilarAdvertiserBudgetRecommendation object
type PageCTXBudgetSimilarAdvertiserBudgetRecommendation struct {
	Budget             string `json:"budget,omitempty" jsonschema:"description=Budget"`
	ReportedConversion string `json:"reported_conversion,omitempty" jsonschema:"description=Reported Conversion"`
}

// PageCTXDefaultGreetingText represents the Facebook PageCTXDefaultGreetingText object
type PageCTXDefaultGreetingText struct {
	Ctd  string `json:"ctd,omitempty" jsonschema:"description=Ctd"`
	Ctm  string `json:"ctm,omitempty" jsonschema:"description=Ctm"`
	Ctwa string `json:"ctwa,omitempty" jsonschema:"description=Ctwa"`
}

// PageCTXMessagingFeatureLimit represents the Facebook PageCTXMessagingFeatureLimit object
type PageCTXMessagingFeatureLimit struct {
	MessagingFeatureLimitDuration int    `json:"messaging_feature_limit_duration,omitempty" jsonschema:"description=Messaging Feature Limit Duration"`
	MessagingFeatureLimitType     string `json:"messaging_feature_limit_type,omitempty" jsonschema:"description=Messaging Feature Limit Type"`
	MessagingViolationType        string `json:"messaging_violation_type,omitempty" jsonschema:"description=Messaging Violation Type"`
}

// PageCallToAction represents the Facebook PageCallToAction object
type PageCallToAction struct {
	AndroidApp             *Application `json:"android_app,omitempty" jsonschema:"description=Android App"`
	AndroidDeeplink        string       `json:"android_deeplink,omitempty" jsonschema:"description=Android Deeplink"`
	AndroidDestinationType string       `json:"android_destination_type,omitempty" jsonschema:"description=Android Destination Type"`
	AndroidPackageName     string       `json:"android_package_name,omitempty" jsonschema:"description=Android Package Name"`
	AndroidURL             string       `json:"android_url,omitempty" jsonschema:"description=Android URL,format=uri"`
	CreatedTime            time.Time    `json:"created_time,omitempty" jsonschema:"description=When the PageCallToAction was created,format=date-time"`
	EmailAddress           string       `json:"email_address,omitempty" jsonschema:"description=Email Address"`
	From                   *Page        `json:"from,omitempty" jsonschema:"description=From"`
	ID                     string       `json:"id,omitempty" jsonschema:"description=PageCallToAction ID,required,pattern=^[0-9]+$"`
	IntlNumberWithPlus     string       `json:"intl_number_with_plus,omitempty" jsonschema:"description=Intl Number With Plus"`
	IphoneApp              *Application `json:"iphone_app,omitempty" jsonschema:"description=Iphone App"`
	IphoneDeeplink         string       `json:"iphone_deeplink,omitempty" jsonschema:"description=Iphone Deeplink"`
	IphoneDestinationType  string       `json:"iphone_destination_type,omitempty" jsonschema:"description=Iphone Destination Type"`
	IphoneURL              string       `json:"iphone_url,omitempty" jsonschema:"description=Iphone URL,format=uri"`
	Status                 string       `json:"status,omitempty" jsonschema:"description=Current status of the PageCallToAction,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	Type                   string       `json:"type,omitempty" jsonschema:"description=Type"`
	UpdatedTime            time.Time    `json:"updated_time,omitempty" jsonschema:"description=When the PageCallToAction was last updated,format=date-time"`
	WebDestinationType     string       `json:"web_destination_type,omitempty" jsonschema:"description=Web Destination Type"`
	WebURL                 string       `json:"web_url,omitempty" jsonschema:"description=Web URL,format=uri"`
}

// PageCategory represents the Facebook PageCategory object
type PageCategory struct {
	APIEnum          string          `json:"api_enum,omitempty" jsonschema:"description=API Enum"`
	FbPageCategories []*PageCategory `json:"fb_page_categories,omitempty" jsonschema:"description=Fb Page Categories"`
	ID               string          `json:"id,omitempty" jsonschema:"description=PageCategory ID,required,pattern=^[0-9]+$"`
	Name             string          `json:"name,omitempty" jsonschema:"description=Name of the PageCategory,required"`
}

// PageChangeProposal represents the Facebook PageChangeProposal object
type PageChangeProposal struct {
	AcceptanceStatus   string              `json:"acceptance_status,omitempty" jsonschema:"description=Acceptance Status"`
	Category           string              `json:"category,omitempty" jsonschema:"description=Category"`
	ID                 string              `json:"id,omitempty" jsonschema:"description=PageChangeProposal ID,required,pattern=^[0-9]+$"`
	UpcomingChangeInfo *PageUpcomingChange `json:"upcoming_change_info,omitempty" jsonschema:"description=Upcoming Change Info"`
}

// PageCrmsWithLeadsAccess represents the Facebook PageCrmsWithLeadsAccess object
type PageCrmsWithLeadsAccess struct {
	CanAccessLeads  bool   `json:"can_access_leads,omitempty" jsonschema:"description=Can Access Leads"`
	ID              string `json:"id,omitempty" jsonschema:"description=PageCrmsWithLeadsAccess ID,required,pattern=^[0-9]+$"`
	IntegrationType string `json:"integration_type,omitempty" jsonschema:"description=Integration Type"`
	Name            string `json:"name,omitempty" jsonschema:"description=Name of the PageCrmsWithLeadsAccess,required"`
}

// PageDirectIntegrationCrmWithLeadsAccess represents the Facebook PageDirectIntegrationCrmWithLeadsAccess object
type PageDirectIntegrationCrmWithLeadsAccess struct {
	CanAccessLeads bool   `json:"can_access_leads,omitempty" jsonschema:"description=Can Access Leads"`
	ID             string `json:"id,omitempty" jsonschema:"description=PageDirectIntegrationCrmWithLeadsAccess ID,required,pattern=^[0-9]+$"`
	Name           string `json:"name,omitempty" jsonschema:"description=Name of the PageDirectIntegrationCrmWithLeadsAccess,required"`
}

// PageGameBotQuotaInformation represents the Facebook PageGameBotQuotaInformation object
type PageGameBotQuotaInformation struct {
	Count      int `json:"count,omitempty" jsonschema:"description=Count"`
	TimeWindow int `json:"time_window,omitempty" jsonschema:"description=Time Window"`
}

// PageGetStartedNullstate represents the Facebook PageGetStartedNullstate object
type PageGetStartedNullstate struct {
	CtaTitle          string `json:"cta_title,omitempty" jsonschema:"description=Cta Title"`
	ProcessedGreeting string `json:"processed_greeting,omitempty" jsonschema:"description=Processed Greeting"`
	Responsiveness    string `json:"responsiveness,omitempty" jsonschema:"description=Responsiveness"`
}

// PageInsightsAsyncExportRun represents the Facebook PageInsightsAsyncExportRun object
type PageInsightsAsyncExportRun struct {
	DataLevel       string                   `json:"data_level,omitempty" jsonschema:"description=Data Level"`
	Filters         []map[string]interface{} `json:"filters,omitempty" jsonschema:"description=Filters"`
	Format          string                   `json:"format,omitempty" jsonschema:"description=Format"`
	GenReportDate   int                      `json:"gen_report_date,omitempty" jsonschema:"description=Gen Report Date"`
	ID              string                   `json:"id,omitempty" jsonschema:"description=PageInsightsAsyncExportRun ID,required,pattern=^[0-9]+$"`
	ReportEndDate   int                      `json:"report_end_date,omitempty" jsonschema:"description=Report End Date"`
	ReportStartDate int                      `json:"report_start_date,omitempty" jsonschema:"description=Report Start Date"`
	Sorters         []map[string]interface{} `json:"sorters,omitempty" jsonschema:"description=Sorters"`
	Status          string                   `json:"status,omitempty" jsonschema:"description=Current status of the PageInsightsAsyncExportRun,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// PageLeadsAccessConfig represents the Facebook PageLeadsAccessConfig object
type PageLeadsAccessConfig struct {
	ID   string `json:"id,omitempty" jsonschema:"description=PageLeadsAccessConfig ID,required,pattern=^[0-9]+$"`
	Page *Page  `json:"page,omitempty" jsonschema:"description=Page"`
}

// PageLocationsBreakdown represents the Facebook PageLocationsBreakdown object
type PageLocationsBreakdown struct {
	LocationID                             string `json:"location_id,omitempty" jsonschema:"description=ID of the Location,pattern=^[0-9]+$"`
	LocationName                           string `json:"location_name,omitempty" jsonschema:"description=Location Name"`
	LocationType                           string `json:"location_type,omitempty" jsonschema:"description=Location Type"`
	NumPages                               int    `json:"num_pages,omitempty" jsonschema:"description=Num Pages,minimum=13,maximum=100"`
	NumPagesEligibleForStoreVisitReporting int    `json:"num_pages_eligible_for_store_visit_reporting,omitempty" jsonschema:"description=Num Pages Eligible For Store Visit Reporting,minimum=13,maximum=100"`
	NumUnpublishedOrClosedPages            int    `json:"num_unpublished_or_closed_pages,omitempty" jsonschema:"description=Num Unpublished Or Closed Pages,minimum=13,maximum=100"`
	ParentCountryCode                      string `json:"parent_country_code,omitempty" jsonschema:"description=Parent Country Code"`
	ParentRegionID                         int    `json:"parent_region_id,omitempty" jsonschema:"description=ID of the Parent Region,pattern=^[0-9]+$"`
	ParentRegionName                       string `json:"parent_region_name,omitempty" jsonschema:"description=Parent Region Name"`
}

// PageMessageResponsivenessMetrics represents the Facebook PageMessageResponsivenessMetrics object
type PageMessageResponsivenessMetrics struct {
	IsVeryResponsive bool    `json:"is_very_responsive,omitempty" jsonschema:"description=Is Very Responsive"`
	ResponseRate     float64 `json:"response_rate,omitempty" jsonschema:"description=Response Rate"`
	ResponseTime     float64 `json:"response_time,omitempty" jsonschema:"description=Response Time"`
}

// PageParking represents the Facebook PageParking object
type PageParking struct {
	Lot    uint `json:"lot,omitempty" jsonschema:"description=Lot"`
	Street uint `json:"street,omitempty" jsonschema:"description=Street"`
	Valet  uint `json:"valet,omitempty" jsonschema:"description=Valet"`
}

// PagePartnerWithLeadsAccess represents the Facebook PagePartnerWithLeadsAccess object
type PagePartnerWithLeadsAccess struct {
	CanAccessLeads  bool      `json:"can_access_leads,omitempty" jsonschema:"description=Can Access Leads"`
	PartnerBusiness *Business `json:"partner_business,omitempty" jsonschema:"description=Partner Business"`
	PermittedTasks  []string  `json:"permitted_tasks,omitempty" jsonschema:"description=Permitted Tasks"`
}

// PagePaymentOptions represents the Facebook PagePaymentOptions object
type PagePaymentOptions struct {
	Amex       uint `json:"amex,omitempty" jsonschema:"description=Amex"`
	CashOnly   uint `json:"cash_only,omitempty" jsonschema:"description=Cash Only"`
	Discover   uint `json:"discover,omitempty" jsonschema:"description=Discover"`
	Mastercard uint `json:"mastercard,omitempty" jsonschema:"description=Mastercard"`
	Visa       uint `json:"visa,omitempty" jsonschema:"description=Visa"`
}

// PagePost represents the Facebook PagePost object
type PagePost struct {
	Actions                      interface{}            `json:"actions,omitempty" jsonschema:"description=Actions"`
	AdminCreator                 map[string]interface{} `json:"admin_creator,omitempty" jsonschema:"description=Admin Creator"`
	AllowedAdvertisingObjectives []string               `json:"allowed_advertising_objectives,omitempty" jsonschema:"description=Allowed Advertising Objectives"`
	Application                  *Application           `json:"application,omitempty" jsonschema:"description=Application"`
	BackdatedTime                time.Time              `json:"backdated_time,omitempty" jsonschema:"description=Backdated Time,format=date-time"`
	CallToAction                 map[string]interface{} `json:"call_to_action,omitempty" jsonschema:"description=Call To Action"`
	CanReplyPrivately            bool                   `json:"can_reply_privately,omitempty" jsonschema:"description=Can Reply Privately"`
	ChildAttachments             interface{}            `json:"child_attachments,omitempty" jsonschema:"description=Child Attachments"`
	CommentsMirroringDomain      string                 `json:"comments_mirroring_domain,omitempty" jsonschema:"description=Comments Mirroring Domain"`
	Coordinates                  map[string]interface{} `json:"coordinates,omitempty" jsonschema:"description=Coordinates"`
	CreatedTime                  time.Time              `json:"created_time,omitempty" jsonschema:"description=When the PagePost was created,format=date-time"`
	Event                        *Event                 `json:"event,omitempty" jsonschema:"description=Event"`
	ExpandedHeight               uint                   `json:"expanded_height,omitempty" jsonschema:"description=Expanded Height"`
	ExpandedWidth                uint                   `json:"expanded_width,omitempty" jsonschema:"description=Expanded Width"`
	FeedTargeting                map[string]interface{} `json:"feed_targeting,omitempty" jsonschema:"description=Feed Targeting"`
	From                         map[string]interface{} `json:"from,omitempty" jsonschema:"description=From"`
	FullPicture                  string                 `json:"full_picture,omitempty" jsonschema:"description=Full Picture"`
	Height                       uint                   `json:"height,omitempty" jsonschema:"description=Height"`
	Icon                         string                 `json:"icon,omitempty" jsonschema:"description=Icon"`
	ID                           string                 `json:"id,omitempty" jsonschema:"description=PagePost ID,required,pattern=^[0-9]+$"`
	InstagramEligibility         string                 `json:"instagram_eligibility,omitempty" jsonschema:"description=Instagram Eligibility"`
	IsAppShare                   bool                   `json:"is_app_share,omitempty" jsonschema:"description=Is App Share"`
	IsEligibleForPromotion       bool                   `json:"is_eligible_for_promotion,omitempty" jsonschema:"description=Is Eligible For Promotion"`
	IsExpired                    bool                   `json:"is_expired,omitempty" jsonschema:"description=Is Expired"`
	IsHidden                     bool                   `json:"is_hidden,omitempty" jsonschema:"description=Is Hidden"`
	IsInlineCreated              bool                   `json:"is_inline_created,omitempty" jsonschema:"description=When the PagePost was created"`
	IsInstagramEligible          bool                   `json:"is_instagram_eligible,omitempty" jsonschema:"description=Is Instagram Eligible"`
	IsPopular                    bool                   `json:"is_popular,omitempty" jsonschema:"description=Is Popular"`
	IsPublished                  bool                   `json:"is_published,omitempty" jsonschema:"description=Is Published"`
	IsSpherical                  bool                   `json:"is_spherical,omitempty" jsonschema:"description=Is Spherical"`
	Message                      string                 `json:"message,omitempty" jsonschema:"description=Message"`
	MessageTags                  interface{}            `json:"message_tags,omitempty" jsonschema:"description=Message Tags"`
	MultiShareEndCard            bool                   `json:"multi_share_end_card,omitempty" jsonschema:"description=Multi Share End Card"`
	MultiShareOptimized          bool                   `json:"multi_share_optimized,omitempty" jsonschema:"description=Multi Share Optimized"`
	ParentID                     string                 `json:"parent_id,omitempty" jsonschema:"description=ID of the Parent,pattern=^[0-9]+$"`
	PermalinkURL                 string                 `json:"permalink_url,omitempty" jsonschema:"description=Permalink URL,format=uri"`
	Picture                      string                 `json:"picture,omitempty" jsonschema:"description=Picture"`
	Place                        *Place                 `json:"place,omitempty" jsonschema:"description=Place"`
	Privacy                      *Privacy               `json:"privacy,omitempty" jsonschema:"description=Privacy"`
	PromotableID                 string                 `json:"promotable_id,omitempty" jsonschema:"description=ID of the Promotable,pattern=^[0-9]+$"`
	PromotionStatus              string                 `json:"promotion_status,omitempty" jsonschema:"description=Promotion Status"`
	Properties                   interface{}            `json:"properties,omitempty" jsonschema:"description=Properties"`
	ScheduledPublishTime         float64                `json:"scheduled_publish_time,omitempty" jsonschema:"description=Scheduled Publish Time"`
	Shares                       map[string]interface{} `json:"shares,omitempty" jsonschema:"description=Shares"`
	StatusType                   string                 `json:"status_type,omitempty" jsonschema:"description=Status Type"`
	Story                        string                 `json:"story,omitempty" jsonschema:"description=Story"`
	StoryTags                    interface{}            `json:"story_tags,omitempty" jsonschema:"description=Story Tags"`
	Subscribed                   bool                   `json:"subscribed,omitempty" jsonschema:"description=Subscribed"`
	Target                       *Profile               `json:"target,omitempty" jsonschema:"description=Target"`
	Targeting                    map[string]interface{} `json:"targeting,omitempty" jsonschema:"description=Targeting"`
	TimelineVisibility           string                 `json:"timeline_visibility,omitempty" jsonschema:"description=Timeline Visibility"`
	UpdatedTime                  time.Time              `json:"updated_time,omitempty" jsonschema:"description=When the PagePost was last updated,format=date-time"`
	Via                          map[string]interface{} `json:"via,omitempty" jsonschema:"description=Via"`
	VideoBuyingEligibility       []string               `json:"video_buying_eligibility,omitempty" jsonschema:"description=Video Buying Eligibility"`
	Width                        uint                   `json:"width,omitempty" jsonschema:"description=Width"`
}

// PagePostExperiment represents the Facebook PagePostExperiment object
type PagePostExperiment struct {
	AutoResolveSettings          map[string]interface{}                           `json:"auto_resolve_settings,omitempty" jsonschema:"description=Auto Resolve Settings"`
	ControlVideoID               string                                           `json:"control_video_id,omitempty" jsonschema:"description=ID of the Control Video,pattern=^[0-9]+$"`
	CreationTime                 time.Time                                        `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	Creator                      *User                                            `json:"creator,omitempty" jsonschema:"description=Creator"`
	DeclaredWinningTime          time.Time                                        `json:"declared_winning_time,omitempty" jsonschema:"description=Declared Winning Time,format=date-time"`
	DeclaredWinningVideoID       string                                           `json:"declared_winning_video_id,omitempty" jsonschema:"description=ID of the Declared Winning Video,pattern=^[0-9]+$"`
	Description                  string                                           `json:"description,omitempty" jsonschema:"description=Description"`
	ExperimentVideoIDs           []string                                         `json:"experiment_video_ids,omitempty" jsonschema:"description=Experiment Video Ids,pattern=^[0-9]+$"`
	ID                           string                                           `json:"id,omitempty" jsonschema:"description=PagePostExperiment ID,required,pattern=^[0-9]+$"`
	InsightSnapshots             []map[time.Time][]map[int]map[string]interface{} `json:"insight_snapshots,omitempty" jsonschema:"description=Insight Snapshots"`
	Name                         string                                           `json:"name,omitempty" jsonschema:"description=Name of the PagePostExperiment,required"`
	OptimizationGoal             string                                           `json:"optimization_goal,omitempty" jsonschema:"description=Optimization Goal"`
	PublishStatus                string                                           `json:"publish_status,omitempty" jsonschema:"description=Publish Status"`
	PublishTime                  time.Time                                        `json:"publish_time,omitempty" jsonschema:"description=Publish Time,format=date-time"`
	ScheduledExperimentTimestamp time.Time                                        `json:"scheduled_experiment_timestamp,omitempty" jsonschema:"description=Scheduled Experiment Timestamp,format=date-time"`
	UpdatedTime                  time.Time                                        `json:"updated_time,omitempty" jsonschema:"description=When the PagePostExperiment was last updated,format=date-time"`
}

// PagePublisher represents the Facebook PagePublisher object
type PagePublisher struct {
	GlobalParentID string `json:"global_parent_id,omitempty" jsonschema:"description=ID of the Global Parent,pattern=^[0-9]+$"`
	Icon           string `json:"icon,omitempty" jsonschema:"description=Icon"`
	ID             string `json:"id,omitempty" jsonschema:"description=PagePublisher ID,required,pattern=^[0-9]+$"`
	Name           string `json:"name,omitempty" jsonschema:"description=Name of the PagePublisher,required"`
	URL            string `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
}

// PageRestaurantServices represents the Facebook PageRestaurantServices object
type PageRestaurantServices struct {
	Catering bool `json:"catering,omitempty" jsonschema:"description=Catering"`
	Delivery bool `json:"delivery,omitempty" jsonschema:"description=Delivery"`
	Groups   bool `json:"groups,omitempty" jsonschema:"description=Groups"`
	Kids     bool `json:"kids,omitempty" jsonschema:"description=Kids"`
	Outdoor  bool `json:"outdoor,omitempty" jsonschema:"description=Outdoor"`
	Pickup   bool `json:"pickup,omitempty" jsonschema:"description=Pickup"`
	Reserve  bool `json:"reserve,omitempty" jsonschema:"description=Reserve"`
	Takeout  bool `json:"takeout,omitempty" jsonschema:"description=Takeout"`
	Waiter   bool `json:"waiter,omitempty" jsonschema:"description=Waiter"`
	Walkins  bool `json:"walkins,omitempty" jsonschema:"description=Walkins"`
}

// PageRestaurantSpecialties represents the Facebook PageRestaurantSpecialties object
type PageRestaurantSpecialties struct {
	Breakfast uint `json:"breakfast,omitempty" jsonschema:"description=Breakfast"`
	Coffee    uint `json:"coffee,omitempty" jsonschema:"description=Coffee"`
	Dinner    uint `json:"dinner,omitempty" jsonschema:"description=Dinner"`
	Drinks    uint `json:"drinks,omitempty" jsonschema:"description=Drinks"`
	Lunch     uint `json:"lunch,omitempty" jsonschema:"description=Lunch"`
}

// PageSettings represents the Facebook PageSettings object
type PageSettings struct {
	Setting string                 `json:"setting,omitempty" jsonschema:"description=Setting"`
	Value   map[string]interface{} `json:"value,omitempty" jsonschema:"description=Value"`
}

// PageStartInfo represents the Facebook PageStartInfo object
type PageStartInfo struct {
	Date map[string]interface{} `json:"date,omitempty" jsonschema:"description=Date"`
	Type string                 `json:"type,omitempty" jsonschema:"description=Type"`
}

// PageThreadOwner represents the Facebook PageThreadOwner object
type PageThreadOwner struct {
	ThreadOwner map[string]interface{} `json:"thread_owner,omitempty" jsonschema:"description=Thread Owner"`
}

// PageUpcomingChange represents the Facebook PageUpcomingChange object
type PageUpcomingChange struct {
	ChangeType    string              `json:"change_type,omitempty" jsonschema:"description=Change Type"`
	EffectiveTime time.Time           `json:"effective_time,omitempty" jsonschema:"description=Effective Time,format=date-time"`
	ID            string              `json:"id,omitempty" jsonschema:"description=PageUpcomingChange ID,required,pattern=^[0-9]+$"`
	Page          *Page               `json:"page,omitempty" jsonschema:"description=Page"`
	Proposal      *PageChangeProposal `json:"proposal,omitempty" jsonschema:"description=Proposal"`
	TimerStatus   string              `json:"timer_status,omitempty" jsonschema:"description=Timer Status"`
}

// PageUserMessageThreadLabel represents the Facebook PageUserMessageThreadLabel object
type PageUserMessageThreadLabel struct {
	ID            string `json:"id,omitempty" jsonschema:"description=PageUserMessageThreadLabel ID,required,pattern=^[0-9]+$"`
	PageLabelName string `json:"page_label_name,omitempty" jsonschema:"description=Page Label Name"`
}

// PageUserPermissions represents the Facebook PageUserPermissions object
type PageUserPermissions struct {
	Business        *Business `json:"business,omitempty" jsonschema:"description=Business"`
	BusinessPersona string    `json:"business_persona,omitempty" jsonschema:"description=Business Persona"`
	CreatedBy       *Profile  `json:"created_by,omitempty" jsonschema:"description=When the PageUserPermissions was created"`
	CreatedTime     time.Time `json:"created_time,omitempty" jsonschema:"description=When the PageUserPermissions was created,format=date-time"`
	Email           string    `json:"email,omitempty" jsonschema:"description=Email"`
	Status          string    `json:"status,omitempty" jsonschema:"description=Current status of the PageUserPermissions,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	Tasks           []string  `json:"tasks,omitempty" jsonschema:"description=Tasks"`
	UpdatedBy       *Profile  `json:"updated_by,omitempty" jsonschema:"description=When the PageUserPermissions was last updated"`
	UpdatedTime     time.Time `json:"updated_time,omitempty" jsonschema:"description=When the PageUserPermissions was last updated,format=date-time"`
	User            *Profile  `json:"user,omitempty" jsonschema:"description=User"`
}

// PageUserWithLeadsAccess represents the Facebook PageUserWithLeadsAccess object
type PageUserWithLeadsAccess struct {
	ActiveOnBusiness bool   `json:"active_on_business,omitempty" jsonschema:"description=Active On Business"`
	BusinessRole     string `json:"business_role,omitempty" jsonschema:"description=Business Role"`
	CanAccessLeads   bool   `json:"can_access_leads,omitempty" jsonschema:"description=Can Access Leads"`
	PageRole         string `json:"page_role,omitempty" jsonschema:"description=Page Role"`
}

// PartnerAccountLinking represents the Facebook PartnerAccountLinking object
type PartnerAccountLinking struct {
	Adaccount             *AdAccount   `json:"adaccount,omitempty" jsonschema:"description=Adaccount"`
	App                   *Application `json:"app,omitempty" jsonschema:"description=App"`
	Business              *Business    `json:"business,omitempty" jsonschema:"description=Business"`
	Externalidentifier    string       `json:"externalidentifier,omitempty" jsonschema:"description=Externalidentifier"`
	Externalidentifieruri string       `json:"externalidentifieruri,omitempty" jsonschema:"description=Externalidentifieruri"`
	ID                    string       `json:"id,omitempty" jsonschema:"description=PartnerAccountLinking ID,required,pattern=^[0-9]+$"`
	Partnername           string       `json:"partnername,omitempty" jsonschema:"description=Partnername"`
	Pixel                 string       `json:"pixel,omitempty" jsonschema:"description=Pixel"`
}

// PartnerCategory represents the Facebook PartnerCategory object
type PartnerCategory struct {
	ApproximateCount int    `json:"approximate_count,omitempty" jsonschema:"description=Approximate Count"`
	Country          string `json:"country,omitempty" jsonschema:"description=Country"`
	Description      string `json:"description,omitempty" jsonschema:"description=Description"`
	Details          string `json:"details,omitempty" jsonschema:"description=Details"`
	ID               string `json:"id,omitempty" jsonschema:"description=PartnerCategory ID,required,pattern=^[0-9]+$"`
	IsPrivate        bool   `json:"is_private,omitempty" jsonschema:"description=Is Private"`
	Name             string `json:"name,omitempty" jsonschema:"description=Name of the PartnerCategory,required"`
	ParentCategory   string `json:"parent_category,omitempty" jsonschema:"description=Parent Category"`
	Source           string `json:"source,omitempty" jsonschema:"description=Source"`
	Status           string `json:"status,omitempty" jsonschema:"description=Current status of the PartnerCategory,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	TargetingType    string `json:"targeting_type,omitempty" jsonschema:"description=Targeting Type"`
}

// PartnerIntegrationLinked represents the Facebook PartnerIntegrationLinked object
type PartnerIntegrationLinked struct {
	AdsPixel                     *AdsPixel                 `json:"ads_pixel,omitempty" jsonschema:"description=Ads Pixel"`
	Application                  *Application              `json:"application,omitempty" jsonschema:"description=Application"`
	CompletedIntegrationTypes    []string                  `json:"completed_integration_types,omitempty" jsonschema:"description=Completed Integration Types"`
	ExternalBusinessConnectionID string                    `json:"external_business_connection_id,omitempty" jsonschema:"description=ID of the External Business Connection,pattern=^[0-9]+$"`
	ExternalID                   string                    `json:"external_id,omitempty" jsonschema:"description=ID of the External,pattern=^[0-9]+$"`
	HasOauthToken                bool                      `json:"has_oauth_token,omitempty" jsonschema:"description=Has Oauth Token"`
	ID                           string                    `json:"id,omitempty" jsonschema:"description=PartnerIntegrationLinked ID,required,pattern=^[0-9]+$"`
	MbeAppID                     string                    `json:"mbe_app_id,omitempty" jsonschema:"description=ID of the Mbe App,pattern=^[0-9]+$"`
	MbeAssetID                   string                    `json:"mbe_asset_id,omitempty" jsonschema:"description=ID of the Mbe Asset,pattern=^[0-9]+$"`
	MbeExternalBusinessID        string                    `json:"mbe_external_business_id,omitempty" jsonschema:"description=ID of the Mbe External Business,pattern=^[0-9]+$"`
	Name                         string                    `json:"name,omitempty" jsonschema:"description=Name of the PartnerIntegrationLinked,required"`
	OfflineConversionDataSet     *OfflineConversionDataSet `json:"offline_conversion_data_set,omitempty" jsonschema:"description=Offline Conversion Data Set"`
	Page                         *Page                     `json:"page,omitempty" jsonschema:"description=Page"`
	Partner                      string                    `json:"partner,omitempty" jsonschema:"description=Partner"`
	ProductCatalog               *ProductCatalog           `json:"product_catalog,omitempty" jsonschema:"description=Product Catalog"`
	SetupStatus                  string                    `json:"setup_status,omitempty" jsonschema:"description=Setup Status"`
}

// PartnerStudy represents the Facebook PartnerStudy object
type PartnerStudy struct {
	AdditionalInfo                 string    `json:"additional_info,omitempty" jsonschema:"description=Additional Info"`
	Brand                          string    `json:"brand,omitempty" jsonschema:"description=Brand"`
	ClientName                     string    `json:"client_name,omitempty" jsonschema:"description=Client Name"`
	Emails                         string    `json:"emails,omitempty" jsonschema:"description=Emails"`
	ID                             string    `json:"id,omitempty" jsonschema:"description=PartnerStudy ID,required,pattern=^[0-9]+$"`
	InputIDs                       []string  `json:"input_ids,omitempty" jsonschema:"description=Input Ids,pattern=^[0-9]+$"`
	IsExport                       bool      `json:"is_export,omitempty" jsonschema:"description=Is Export"`
	LiftStudy                      *AdStudy  `json:"lift_study,omitempty" jsonschema:"description=Lift Study"`
	Location                       string    `json:"location,omitempty" jsonschema:"description=Location"`
	MatchFileDs                    string    `json:"match_file_ds,omitempty" jsonschema:"description=Match File Ds"`
	Name                           string    `json:"name,omitempty" jsonschema:"description=Name of the PartnerStudy,required"`
	PartnerDefinedID               string    `json:"partner_defined_id,omitempty" jsonschema:"description=ID of the Partner Defined,pattern=^[0-9]+$"`
	PartnerHouseholdGraphDatasetID string    `json:"partner_household_graph_dataset_id,omitempty" jsonschema:"description=ID of the Partner Household Graph Dataset,pattern=^[0-9]+$"`
	Status                         string    `json:"status,omitempty" jsonschema:"description=Current status of the PartnerStudy,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	StudyEndDate                   time.Time `json:"study_end_date,omitempty" jsonschema:"description=Study End Date,format=date-time"`
	StudyStartDate                 time.Time `json:"study_start_date,omitempty" jsonschema:"description=Study Start Date,format=date-time"`
	StudyType                      string    `json:"study_type,omitempty" jsonschema:"description=Study Type"`
	SubmitDate                     time.Time `json:"submit_date,omitempty" jsonschema:"description=Submit Date,format=date-time"`
}

// PartnershipAdContentSearchMedia represents the Facebook PartnershipAdContentSearchMedia object
type PartnershipAdContentSearchMedia struct {
	IgAdCodeSponsorCount                     int                          `json:"ig_ad_code_sponsor_count,omitempty" jsonschema:"description=Ig Ad Code Sponsor Count"`
	IgAdCodeSponsors                         []*FBPageAndInstagramAccount `json:"ig_ad_code_sponsors,omitempty" jsonschema:"description=Ig Ad Code Sponsors"`
	IgMedia                                  *IGMedia                     `json:"ig_media,omitempty" jsonschema:"description=Ig Media"`
	IgMediaHasProductTags                    bool                         `json:"ig_media_has_product_tags,omitempty" jsonschema:"description=Ig Media Has Product Tags"`
	IsAdCodeEligibleForBoostingByTwoSponsors bool                         `json:"is_ad_code_eligible_for_boosting_by_two_sponsors,omitempty" jsonschema:"description=Is Ad Code Eligible For Boosting By Two Sponsors"`
	IsAdCodeEntry                            bool                         `json:"is_ad_code_entry,omitempty" jsonschema:"description=Is Ad Code Entry"`
}

// PartnershipAdsIdentity represents the Facebook PartnershipAdsIdentity object
type PartnershipAdsIdentity struct {
	IsSaved             bool                     `json:"is_saved,omitempty" jsonschema:"description=Is Saved"`
	PostTypes           []string                 `json:"post_types,omitempty" jsonschema:"description=Post Types"`
	SecondaryIDentities []map[string]interface{} `json:"secondary_identities,omitempty" jsonschema:"description=Secondary Identities,pattern=^[0-9]+$"`
}

// PaymentEnginePayment represents the Facebook PaymentEnginePayment object
type PaymentEnginePayment struct {
	Actions                   []map[string]interface{} `json:"actions,omitempty" jsonschema:"description=Actions"`
	Application               *Application             `json:"application,omitempty" jsonschema:"description=Application"`
	Country                   string                   `json:"country,omitempty" jsonschema:"description=Country"`
	CreatedTime               time.Time                `json:"created_time,omitempty" jsonschema:"description=When the PaymentEnginePayment was created,format=date-time"`
	Disputes                  []map[string]interface{} `json:"disputes,omitempty" jsonschema:"description=Disputes"`
	FraudStatus               string                   `json:"fraud_status,omitempty" jsonschema:"description=Fraud Status"`
	FulfillmentStatus         string                   `json:"fulfillment_status,omitempty" jsonschema:"description=Fulfillment Status"`
	ID                        string                   `json:"id,omitempty" jsonschema:"description=PaymentEnginePayment ID,required,pattern=^[0-9]+$"`
	IsFromAd                  bool                     `json:"is_from_ad,omitempty" jsonschema:"description=Is From Ad"`
	IsFromPagePost            bool                     `json:"is_from_page_post,omitempty" jsonschema:"description=Is From Page Post"`
	Items                     []map[string]interface{} `json:"items,omitempty" jsonschema:"description=Items"`
	PayoutForeignExchangeRate float64                  `json:"payout_foreign_exchange_rate,omitempty" jsonschema:"description=Payout Foreign Exchange Rate"`
	PhoneSupportEligible      bool                     `json:"phone_support_eligible,omitempty" jsonschema:"description=Phone Support Eligible"`
	Platform                  string                   `json:"platform,omitempty" jsonschema:"description=Platform"`
	RefundableAmount          *CurrencyAmount          `json:"refundable_amount,omitempty" jsonschema:"description=Refundable Amount"`
	RequestID                 string                   `json:"request_id,omitempty" jsonschema:"description=ID of the Request,pattern=^[0-9]+$"`
	Tax                       string                   `json:"tax,omitempty" jsonschema:"description=Tax"`
	TaxCountry                string                   `json:"tax_country,omitempty" jsonschema:"description=Tax Country"`
	Test                      uint                     `json:"test,omitempty" jsonschema:"description=Test"`
	User                      *User                    `json:"user,omitempty" jsonschema:"description=User"`
}

// PaymentPricepoints represents the Facebook PaymentPricepoints object
type PaymentPricepoints struct {
	Mobile []map[string]interface{} `json:"mobile,omitempty" jsonschema:"description=Mobile"`
}

// PaymentRequestDetails represents the Facebook PaymentRequestDetails object
type PaymentRequestDetails struct {
	Amount           map[string]interface{} `json:"amount,omitempty" jsonschema:"description=Amount"`
	CreationTime     int                    `json:"creation_time,omitempty" jsonschema:"description=Creation Time"`
	Note             string                 `json:"note,omitempty" jsonschema:"description=Note"`
	PaymentRequestID string                 `json:"payment_request_id,omitempty" jsonschema:"description=ID of the Payment Request,pattern=^[0-9]+$"`
	ReceiverID       string                 `json:"receiver_id,omitempty" jsonschema:"description=ID of the Receiver,pattern=^[0-9]+$"`
	ReferenceNumber  string                 `json:"reference_number,omitempty" jsonschema:"description=Reference Number"`
	SenderID         string                 `json:"sender_id,omitempty" jsonschema:"description=ID of the Sender,pattern=^[0-9]+$"`
	Status           string                 `json:"status,omitempty" jsonschema:"description=Current status of the PaymentRequestDetails,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	TransactionTime  int                    `json:"transaction_time,omitempty" jsonschema:"description=Transaction Time"`
}

// PaymentSubscription represents the Facebook PaymentSubscription object
type PaymentSubscription struct {
	Amount             string                `json:"amount,omitempty" jsonschema:"description=Amount"`
	AppParamData       string                `json:"app_param_data,omitempty" jsonschema:"description=App Param Data"`
	Application        *Application          `json:"application,omitempty" jsonschema:"description=Application"`
	BillingPeriod      string                `json:"billing_period,omitempty" jsonschema:"description=Billing Period"`
	CanceledReason     string                `json:"canceled_reason,omitempty" jsonschema:"description=Canceled Reason"`
	CreatedTime        time.Time             `json:"created_time,omitempty" jsonschema:"description=When the PaymentSubscription was created,format=date-time"`
	Currency           string                `json:"currency,omitempty" jsonschema:"description=Currency"`
	ID                 string                `json:"id,omitempty" jsonschema:"description=PaymentSubscription ID,required,pattern=^[0-9]+$"`
	LastPayment        *PaymentEnginePayment `json:"last_payment,omitempty" jsonschema:"description=Last Payment"`
	NextBillTime       time.Time             `json:"next_bill_time,omitempty" jsonschema:"description=Next Bill Time,format=date-time"`
	NextPeriodAmount   string                `json:"next_period_amount,omitempty" jsonschema:"description=Next Period Amount"`
	NextPeriodCurrency string                `json:"next_period_currency,omitempty" jsonschema:"description=Next Period Currency"`
	NextPeriodProduct  string                `json:"next_period_product,omitempty" jsonschema:"description=Next Period Product"`
	PaymentStatus      string                `json:"payment_status,omitempty" jsonschema:"description=Payment Status"`
	PendingCancel      bool                  `json:"pending_cancel,omitempty" jsonschema:"description=Pending Cancel"`
	PeriodStartTime    time.Time             `json:"period_start_time,omitempty" jsonschema:"description=Period Start Time,format=date-time"`
	Product            string                `json:"product,omitempty" jsonschema:"description=Product"`
	Status             string                `json:"status,omitempty" jsonschema:"description=Current status of the PaymentSubscription,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	Test               uint                  `json:"test,omitempty" jsonschema:"description=Test"`
	TrialAmount        string                `json:"trial_amount,omitempty" jsonschema:"description=Trial Amount"`
	TrialCurrency      string                `json:"trial_currency,omitempty" jsonschema:"description=Trial Currency"`
	TrialExpiryTime    time.Time             `json:"trial_expiry_time,omitempty" jsonschema:"description=Trial Expiry Time,format=date-time"`
	UpdatedTime        time.Time             `json:"updated_time,omitempty" jsonschema:"description=When the PaymentSubscription was last updated,format=date-time"`
	User               *User                 `json:"user,omitempty" jsonschema:"description=User"`
}

// Permission represents the Facebook Permission object
type Permission struct {
	Permission string `json:"permission,omitempty" jsonschema:"description=Permission"`
	Status     string `json:"status,omitempty" jsonschema:"description=Current status of the Permission,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// Persona represents the Facebook Persona object
type Persona struct {
	ID                string `json:"id,omitempty" jsonschema:"description=Persona ID,required,pattern=^[0-9]+$"`
	Name              string `json:"name,omitempty" jsonschema:"description=Name of the Persona,required"`
	ProfilePictureURL string `json:"profile_picture_url,omitempty" jsonschema:"description=Profile Picture URL,format=uri"`
}

// PersonalAdsPersona represents the Facebook PersonalAdsPersona object
type PersonalAdsPersona struct {
	Email        string `json:"email,omitempty" jsonschema:"description=Email"`
	FirstName    string `json:"first_name,omitempty" jsonschema:"description=First Name"`
	ID           string `json:"id,omitempty" jsonschema:"description=PersonalAdsPersona ID,required,pattern=^[0-9]+$"`
	LastName     string `json:"last_name,omitempty" jsonschema:"description=Last Name"`
	PendingEmail string `json:"pending_email,omitempty" jsonschema:"description=Pending Email"`
}

// Photo represents the Facebook Photo object
type Photo struct {
	Album                    *Album                 `json:"album,omitempty" jsonschema:"description=Album"`
	AltText                  string                 `json:"alt_text,omitempty" jsonschema:"description=Alt Text"`
	AltTextCustom            string                 `json:"alt_text_custom,omitempty" jsonschema:"description=Alt Text Custom"`
	BackdatedTime            time.Time              `json:"backdated_time,omitempty" jsonschema:"description=Backdated Time,format=date-time"`
	BackdatedTimeGranularity string                 `json:"backdated_time_granularity,omitempty" jsonschema:"description=Backdated Time Granularity"`
	CanBackdate              bool                   `json:"can_backdate,omitempty" jsonschema:"description=Can Backdate"`
	CanDelete                bool                   `json:"can_delete,omitempty" jsonschema:"description=Can Delete"`
	CanTag                   bool                   `json:"can_tag,omitempty" jsonschema:"description=Can Tag"`
	CreatedTime              time.Time              `json:"created_time,omitempty" jsonschema:"description=When the Photo was created,format=date-time"`
	Event                    *Event                 `json:"event,omitempty" jsonschema:"description=Event"`
	From                     map[string]interface{} `json:"from,omitempty" jsonschema:"description=From"`
	Height                   uint                   `json:"height,omitempty" jsonschema:"description=Height"`
	Icon                     string                 `json:"icon,omitempty" jsonschema:"description=Icon"`
	ID                       string                 `json:"id,omitempty" jsonschema:"description=Photo ID,required,pattern=^[0-9]+$"`
	Images                   []*PlatformImageSource `json:"images,omitempty" jsonschema:"description=Images"`
	Link                     string                 `json:"link,omitempty" jsonschema:"description=Link"`
	Name                     string                 `json:"name,omitempty" jsonschema:"description=Name of the Photo,required"`
	NameTags                 []*EntityAtTextRange   `json:"name_tags,omitempty" jsonschema:"description=Name Tags"`
	PageStoryID              string                 `json:"page_story_id,omitempty" jsonschema:"description=ID of the Page Story,pattern=^[0-9]+$"`
	Picture                  string                 `json:"picture,omitempty" jsonschema:"description=Picture"`
	Place                    *Place                 `json:"place,omitempty" jsonschema:"description=Place"`
	Position                 uint                   `json:"position,omitempty" jsonschema:"description=Position"`
	Source                   string                 `json:"source,omitempty" jsonschema:"description=Source"`
	Target                   *Profile               `json:"target,omitempty" jsonschema:"description=Target"`
	UpdatedTime              time.Time              `json:"updated_time,omitempty" jsonschema:"description=When the Photo was last updated,format=date-time"`
	WebpImages               []*PlatformImageSource `json:"webp_images,omitempty" jsonschema:"description=Webp Images"`
	Width                    uint                   `json:"width,omitempty" jsonschema:"description=Width"`
}

// PhotoMetadata represents the Facebook PhotoMetadata object
type PhotoMetadata struct {
	CameraMake       string    `json:"camera_make,omitempty" jsonschema:"description=Camera Make"`
	CameraModel      string    `json:"camera_model,omitempty" jsonschema:"description=Camera Model"`
	DatetimeModified time.Time `json:"datetime_modified,omitempty" jsonschema:"description=Datetime Modified,format=date-time"`
	DatetimeTaken    time.Time `json:"datetime_taken,omitempty" jsonschema:"description=Datetime Taken,format=date-time"`
	Exposure         string    `json:"exposure,omitempty" jsonschema:"description=Exposure"`
	FocalLength      string    `json:"focal_length,omitempty" jsonschema:"description=Focal Length"`
	Fstop            string    `json:"fstop,omitempty" jsonschema:"description=Fstop"`
	IsoSpeed         int       `json:"iso_speed,omitempty" jsonschema:"description=Iso Speed"`
	OfflineID        string    `json:"offline_id,omitempty" jsonschema:"description=ID of the Offline,pattern=^[0-9]+$"`
	Orientation      string    `json:"orientation,omitempty" jsonschema:"description=Orientation"`
	OriginalHeight   string    `json:"original_height,omitempty" jsonschema:"description=Original Height"`
	OriginalWidth    string    `json:"original_width,omitempty" jsonschema:"description=Original Width"`
}

// Place represents the Facebook Place object
type Place struct {
	ID            string    `json:"id,omitempty" jsonschema:"description=Place ID,required,pattern=^[0-9]+$"`
	Location      *Location `json:"location,omitempty" jsonschema:"description=Location"`
	Name          string    `json:"name,omitempty" jsonschema:"description=Name of the Place,required"`
	OverallRating float64   `json:"overall_rating,omitempty" jsonschema:"description=Overall Rating"`
}

// PlaceTag represents the Facebook PlaceTag object
type PlaceTag struct {
	CreatedTime time.Time `json:"created_time,omitempty" jsonschema:"description=When the PlaceTag was created,format=date-time"`
	ID          string    `json:"id,omitempty" jsonschema:"description=PlaceTag ID,required,pattern=^[0-9]+$"`
	Place       *Page     `json:"place,omitempty" jsonschema:"description=Place"`
}

// PlaceTopic represents the Facebook PlaceTopic object
type PlaceTopic struct {
	Count            uint     `json:"count,omitempty" jsonschema:"description=Count"`
	HasChildren      bool     `json:"has_children,omitempty" jsonschema:"description=Has Children"`
	IconURL          string   `json:"icon_url,omitempty" jsonschema:"description=Icon URL,format=uri"`
	ID               string   `json:"id,omitempty" jsonschema:"description=PlaceTopic ID,required,pattern=^[0-9]+$"`
	Name             string   `json:"name,omitempty" jsonschema:"description=Name of the PlaceTopic,required"`
	ParentIDs        []string `json:"parent_ids,omitempty" jsonschema:"description=Parent Ids,pattern=^[0-9]+$"`
	PluralName       string   `json:"plural_name,omitempty" jsonschema:"description=Plural Name"`
	TopSubtopicNames []string `json:"top_subtopic_names,omitempty" jsonschema:"description=Top Subtopic Names"`
}

// Placement represents the Facebook Placement object
type Placement struct {
	AudienceNetworkPositions          []string                            `json:"audience_network_positions,omitempty" jsonschema:"description=Audience Network Positions"`
	DevicePlatforms                   []PlacementDevicePlatforms          `json:"device_platforms,omitempty" jsonschema:"description=Device Platforms"`
	EffectiveAudienceNetworkPositions []string                            `json:"effective_audience_network_positions,omitempty" jsonschema:"description=Effective Audience Network Positions"`
	EffectiveDevicePlatforms          []PlacementEffectiveDevicePlatforms `json:"effective_device_platforms,omitempty" jsonschema:"description=Effective Device Platforms"`
	EffectiveFacebookPositions        []string                            `json:"effective_facebook_positions,omitempty" jsonschema:"description=Effective Facebook Positions"`
	EffectiveInstagramPositions       []string                            `json:"effective_instagram_positions,omitempty" jsonschema:"description=Effective Instagram Positions"`
	EffectiveMessengerPositions       []string                            `json:"effective_messenger_positions,omitempty" jsonschema:"description=Effective Messenger Positions"`
	EffectiveOculusPositions          []string                            `json:"effective_oculus_positions,omitempty" jsonschema:"description=Effective Oculus Positions"`
	EffectivePublisherPlatforms       []string                            `json:"effective_publisher_platforms,omitempty" jsonschema:"description=Effective Publisher Platforms"`
	EffectiveThreadsPositions         []string                            `json:"effective_threads_positions,omitempty" jsonschema:"description=Effective Threads Positions"`
	EffectiveWhatsappPositions        []string                            `json:"effective_whatsapp_positions,omitempty" jsonschema:"description=Effective Whatsapp Positions"`
	FacebookPositions                 []string                            `json:"facebook_positions,omitempty" jsonschema:"description=Facebook Positions"`
	InstagramPositions                []string                            `json:"instagram_positions,omitempty" jsonschema:"description=Instagram Positions"`
	MessengerPositions                []string                            `json:"messenger_positions,omitempty" jsonschema:"description=Messenger Positions"`
	OculusPositions                   []string                            `json:"oculus_positions,omitempty" jsonschema:"description=Oculus Positions"`
	PublisherPlatforms                []string                            `json:"publisher_platforms,omitempty" jsonschema:"description=Publisher Platforms"`
	ThreadsPositions                  []string                            `json:"threads_positions,omitempty" jsonschema:"description=Threads Positions"`
	WhatsappPositions                 []string                            `json:"whatsapp_positions,omitempty" jsonschema:"description=Whatsapp Positions"`
}

// PlatformImageSource represents the Facebook PlatformImageSource object
type PlatformImageSource struct {
	Height uint   `json:"height,omitempty" jsonschema:"description=Height"`
	Source string `json:"source,omitempty" jsonschema:"description=Source"`
	Width  uint   `json:"width,omitempty" jsonschema:"description=Width"`
}

// PlatformSessionKey represents the Facebook PlatformSessionKey object
type PlatformSessionKey struct {
	ID string `json:"id,omitempty" jsonschema:"description=PlatformSessionKey ID,required,pattern=^[0-9]+$"`
}

// PlayableContent represents the Facebook PlayableContent object
type PlayableContent struct {
	ID    string   `json:"id,omitempty" jsonschema:"description=PlayableContent ID,required,pattern=^[0-9]+$"`
	Name  string   `json:"name,omitempty" jsonschema:"description=Name of the PlayableContent,required"`
	Owner *Profile `json:"owner,omitempty" jsonschema:"description=Owner"`
}

// Post represents the Facebook Post object
type Post struct {
	Actions                      interface{}            `json:"actions,omitempty" jsonschema:"description=Actions"`
	AdminCreator                 map[string]interface{} `json:"admin_creator,omitempty" jsonschema:"description=Admin Creator"`
	AllowedAdvertisingObjectives []string               `json:"allowed_advertising_objectives,omitempty" jsonschema:"description=Allowed Advertising Objectives"`
	Application                  *Application           `json:"application,omitempty" jsonschema:"description=Application"`
	BackdatedTime                time.Time              `json:"backdated_time,omitempty" jsonschema:"description=Backdated Time,format=date-time"`
	CallToAction                 map[string]interface{} `json:"call_to_action,omitempty" jsonschema:"description=Call To Action"`
	CanReplyPrivately            bool                   `json:"can_reply_privately,omitempty" jsonschema:"description=Can Reply Privately"`
	Caption                      string                 `json:"caption,omitempty" jsonschema:"description=Caption"`
	ChildAttachments             interface{}            `json:"child_attachments,omitempty" jsonschema:"description=Child Attachments"`
	CommentsMirroringDomain      string                 `json:"comments_mirroring_domain,omitempty" jsonschema:"description=Comments Mirroring Domain"`
	Coordinates                  map[string]interface{} `json:"coordinates,omitempty" jsonschema:"description=Coordinates"`
	CreatedTime                  time.Time              `json:"created_time,omitempty" jsonschema:"description=When the Post was created,format=date-time"`
	Description                  string                 `json:"description,omitempty" jsonschema:"description=Description"`
	Event                        *Event                 `json:"event,omitempty" jsonschema:"description=Event"`
	ExpandedHeight               uint                   `json:"expanded_height,omitempty" jsonschema:"description=Expanded Height"`
	ExpandedWidth                uint                   `json:"expanded_width,omitempty" jsonschema:"description=Expanded Width"`
	FeedTargeting                map[string]interface{} `json:"feed_targeting,omitempty" jsonschema:"description=Feed Targeting"`
	From                         map[string]interface{} `json:"from,omitempty" jsonschema:"description=From"`
	FullPicture                  string                 `json:"full_picture,omitempty" jsonschema:"description=Full Picture"`
	Height                       uint                   `json:"height,omitempty" jsonschema:"description=Height"`
	Icon                         string                 `json:"icon,omitempty" jsonschema:"description=Icon"`
	ID                           string                 `json:"id,omitempty" jsonschema:"description=Post ID,required,pattern=^[0-9]+$"`
	InstagramEligibility         string                 `json:"instagram_eligibility,omitempty" jsonschema:"description=Instagram Eligibility"`
	IsAppShare                   bool                   `json:"is_app_share,omitempty" jsonschema:"description=Is App Share"`
	IsEligibleForPromotion       bool                   `json:"is_eligible_for_promotion,omitempty" jsonschema:"description=Is Eligible For Promotion"`
	IsExpired                    bool                   `json:"is_expired,omitempty" jsonschema:"description=Is Expired"`
	IsHidden                     bool                   `json:"is_hidden,omitempty" jsonschema:"description=Is Hidden"`
	IsInlineCreated              bool                   `json:"is_inline_created,omitempty" jsonschema:"description=When the Post was created"`
	IsInstagramEligible          bool                   `json:"is_instagram_eligible,omitempty" jsonschema:"description=Is Instagram Eligible"`
	IsPopular                    bool                   `json:"is_popular,omitempty" jsonschema:"description=Is Popular"`
	IsPublished                  bool                   `json:"is_published,omitempty" jsonschema:"description=Is Published"`
	IsSpherical                  bool                   `json:"is_spherical,omitempty" jsonschema:"description=Is Spherical"`
	Link                         string                 `json:"link,omitempty" jsonschema:"description=Link"`
	Message                      string                 `json:"message,omitempty" jsonschema:"description=Message"`
	MessageTags                  interface{}            `json:"message_tags,omitempty" jsonschema:"description=Message Tags"`
	MultiShareEndCard            bool                   `json:"multi_share_end_card,omitempty" jsonschema:"description=Multi Share End Card"`
	MultiShareOptimized          bool                   `json:"multi_share_optimized,omitempty" jsonschema:"description=Multi Share Optimized"`
	Name                         string                 `json:"name,omitempty" jsonschema:"description=Name of the Post,required"`
	ObjectID                     string                 `json:"object_id,omitempty" jsonschema:"description=ID of the Object,pattern=^[0-9]+$"`
	ParentID                     string                 `json:"parent_id,omitempty" jsonschema:"description=ID of the Parent,pattern=^[0-9]+$"`
	PermalinkURL                 string                 `json:"permalink_url,omitempty" jsonschema:"description=Permalink URL,format=uri"`
	Picture                      string                 `json:"picture,omitempty" jsonschema:"description=Picture"`
	Place                        *Place                 `json:"place,omitempty" jsonschema:"description=Place"`
	Privacy                      *Privacy               `json:"privacy,omitempty" jsonschema:"description=Privacy"`
	PromotableID                 string                 `json:"promotable_id,omitempty" jsonschema:"description=ID of the Promotable,pattern=^[0-9]+$"`
	PromotionStatus              string                 `json:"promotion_status,omitempty" jsonschema:"description=Promotion Status"`
	Properties                   interface{}            `json:"properties,omitempty" jsonschema:"description=Properties"`
	ScheduledPublishTime         float64                `json:"scheduled_publish_time,omitempty" jsonschema:"description=Scheduled Publish Time"`
	Shares                       map[string]interface{} `json:"shares,omitempty" jsonschema:"description=Shares"`
	Source                       string                 `json:"source,omitempty" jsonschema:"description=Source"`
	StatusType                   string                 `json:"status_type,omitempty" jsonschema:"description=Status Type"`
	Story                        string                 `json:"story,omitempty" jsonschema:"description=Story"`
	StoryTags                    interface{}            `json:"story_tags,omitempty" jsonschema:"description=Story Tags"`
	Subscribed                   bool                   `json:"subscribed,omitempty" jsonschema:"description=Subscribed"`
	Target                       *Profile               `json:"target,omitempty" jsonschema:"description=Target"`
	Targeting                    map[string]interface{} `json:"targeting,omitempty" jsonschema:"description=Targeting"`
	TimelineVisibility           string                 `json:"timeline_visibility,omitempty" jsonschema:"description=Timeline Visibility"`
	Type                         string                 `json:"type,omitempty" jsonschema:"description=Type"`
	UpdatedTime                  time.Time              `json:"updated_time,omitempty" jsonschema:"description=When the Post was last updated,format=date-time"`
	Via                          map[string]interface{} `json:"via,omitempty" jsonschema:"description=Via"`
	VideoBuyingEligibility       []string               `json:"video_buying_eligibility,omitempty" jsonschema:"description=Video Buying Eligibility"`
	Width                        uint                   `json:"width,omitempty" jsonschema:"description=Width"`
}

// PreapprovalReview represents the Facebook PreapprovalReview object
type PreapprovalReview struct {
	CompType        string                              `json:"comp_type,omitempty" jsonschema:"description=Comp Type"`
	CrowComponentID int                                 `json:"crow_component_id,omitempty" jsonschema:"description=ID of the Crow Component,pattern=^[0-9]+$"`
	IsHumanReviewed bool                                `json:"is_human_reviewed,omitempty" jsonschema:"description=Is Human Reviewed"`
	IsReviewed      bool                                `json:"is_reviewed,omitempty" jsonschema:"description=Is Reviewed"`
	PolicyInfo      []map[string]map[string]interface{} `json:"policy_info,omitempty" jsonschema:"description=Policy Info"`
}

// PremiumMusicVideo represents the Facebook PremiumMusicVideo object
type PremiumMusicVideo struct {
	CreationTime                    string                   `json:"creation_time,omitempty" jsonschema:"description=Creation Time"`
	CrossPostVideos                 []map[string]interface{} `json:"cross_post_videos,omitempty" jsonschema:"description=Cross Post Videos"`
	EligibleCrossPostPages          []map[string]interface{} `json:"eligible_cross_post_pages,omitempty" jsonschema:"description=Eligible Cross Post Pages"`
	ID                              string                   `json:"id,omitempty" jsonschema:"description=PremiumMusicVideo ID,required,pattern=^[0-9]+$"`
	PreferredVideoThumbnailImageUri string                   `json:"preferred_video_thumbnail_image_uri,omitempty" jsonschema:"description=Preferred Video Thumbnail Image Uri"`
	PremiumMusicVideoMetadata       map[string]interface{}   `json:"premium_music_video_metadata,omitempty" jsonschema:"description=Premium Music Video Metadata"`
	ScheduledPublishTime            int                      `json:"scheduled_publish_time,omitempty" jsonschema:"description=Scheduled Publish Time"`
	Title                           string                   `json:"title,omitempty" jsonschema:"description=Title"`
}

// Privacy represents the Facebook Privacy object
type Privacy struct {
	Allow       string `json:"allow,omitempty" jsonschema:"description=Allow"`
	Deny        string `json:"deny,omitempty" jsonschema:"description=Deny"`
	Description string `json:"description,omitempty" jsonschema:"description=Description"`
	Friends     string `json:"friends,omitempty" jsonschema:"description=Friends"`
	Networks    string `json:"networks,omitempty" jsonschema:"description=Networks"`
	Value       string `json:"value,omitempty" jsonschema:"description=Value"`
}

// PrivacyOption represents the Facebook PrivacyOption object
type PrivacyOption struct {
	Description         string `json:"description,omitempty" jsonschema:"description=Description"`
	IconSrc             string `json:"icon_src,omitempty" jsonschema:"description=Icon Src"`
	ID                  string `json:"id,omitempty" jsonschema:"description=PrivacyOption ID,required,pattern=^[0-9]+$"`
	IsCurrentlySelected bool   `json:"is_currently_selected,omitempty" jsonschema:"description=Is Currently Selected"`
	Type                string `json:"type,omitempty" jsonschema:"description=Type"`
	UserID              string `json:"user_id,omitempty" jsonschema:"description=ID of the User,pattern=^[0-9]+$"`
}

// PrivateLiftStudyInstance represents the Facebook PrivateLiftStudyInstance object
type PrivateLiftStudyInstance struct {
	BreakdownKey           string    `json:"breakdown_key,omitempty" jsonschema:"description=Breakdown Key"`
	CreatedTime            time.Time `json:"created_time,omitempty" jsonschema:"description=When the PrivateLiftStudyInstance was created,format=date-time"`
	FeatureList            []string  `json:"feature_list,omitempty" jsonschema:"description=Feature List"`
	ID                     string    `json:"id,omitempty" jsonschema:"description=PrivateLiftStudyInstance ID,required,pattern=^[0-9]+$"`
	IssuerCertificate      string    `json:"issuer_certificate,omitempty" jsonschema:"description=Issuer Certificate"`
	LatestStatusUpdateTime time.Time `json:"latest_status_update_time,omitempty" jsonschema:"description=Latest Status Update Time,format=date-time"`
	RunID                  string    `json:"run_id,omitempty" jsonschema:"description=ID of the Run,pattern=^[0-9]+$"`
	ServerHostnames        []string  `json:"server_hostnames,omitempty" jsonschema:"description=Server Hostnames"`
	ServerIps              []string  `json:"server_ips,omitempty" jsonschema:"description=Server Ips"`
	Status                 string    `json:"status,omitempty" jsonschema:"description=Current status of the PrivateLiftStudyInstance,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	Tier                   string    `json:"tier,omitempty" jsonschema:"description=Tier"`
}

// ProductCatalog represents the Facebook ProductCatalog object
type ProductCatalog struct {
	AdAccountToCollaborativeAdsShareSettings *CollaborativeAdsShareSettings `json:"ad_account_to_collaborative_ads_share_settings,omitempty" jsonschema:"description=Ad Account To Collaborative Ads Share Settings"`
	AgencyCollaborativeAdsShareSettings      *CollaborativeAdsShareSettings `json:"agency_collaborative_ads_share_settings,omitempty" jsonschema:"description=Agency Collaborative Ads Share Settings"`
	Business                                 *Business                      `json:"business,omitempty" jsonschema:"description=Business"`
	CatalogStore                             *StoreCatalogSettings          `json:"catalog_store,omitempty" jsonschema:"description=Catalog Store"`
	CommerceMerchantSettings                 *CommerceMerchantSettings      `json:"commerce_merchant_settings,omitempty" jsonschema:"description=Commerce Merchant Settings"`
	CreatorUser                              *User                          `json:"creator_user,omitempty" jsonschema:"description=Creator User"`
	DaDisplaySettings                        *ProductCatalogImageSettings   `json:"da_display_settings,omitempty" jsonschema:"description=Da Display Settings"`
	DefaultImageURL                          string                         `json:"default_image_url,omitempty" jsonschema:"description=Default Image URL,format=uri"`
	FallbackImageURL                         []string                       `json:"fallback_image_url,omitempty" jsonschema:"description=Fallback Image URL,format=uri"`
	FeedCount                                int                            `json:"feed_count,omitempty" jsonschema:"description=Feed Count"`
	ID                                       string                         `json:"id,omitempty" jsonschema:"description=ProductCatalog ID,required,pattern=^[0-9]+$"`
	IsCatalogSegment                         bool                           `json:"is_catalog_segment,omitempty" jsonschema:"description=Is Catalog Segment"`
	IsLocalCatalog                           bool                           `json:"is_local_catalog,omitempty" jsonschema:"description=Is Local Catalog"`
	Name                                     string                         `json:"name,omitempty" jsonschema:"description=Name of the ProductCatalog,required"`
	OwnerBusiness                            *Business                      `json:"owner_business,omitempty" jsonschema:"description=Owner Business"`
	ProductCount                             int                            `json:"product_count,omitempty" jsonschema:"description=Product Count"`
	StoreCatalogSettings                     *StoreCatalogSettings          `json:"store_catalog_settings,omitempty" jsonschema:"description=Store Catalog Settings"`
	UserAccessExpireTime                     time.Time                      `json:"user_access_expire_time,omitempty" jsonschema:"description=User Access Expire Time,format=date-time"`
	Vertical                                 string                         `json:"vertical,omitempty" jsonschema:"description=Vertical"`
}

// ProductCatalogCategory represents the Facebook ProductCatalogCategory object
type ProductCatalogCategory struct {
	CriteriaValue  string              `json:"criteria_value,omitempty" jsonschema:"description=Criteria Value"`
	Description    string              `json:"description,omitempty" jsonschema:"description=Description"`
	DestinationUri string              `json:"destination_uri,omitempty" jsonschema:"description=Destination Uri"`
	ImageURL       string              `json:"image_url,omitempty" jsonschema:"description=Image URL,format=uri"`
	Name           string              `json:"name,omitempty" jsonschema:"description=Name of the ProductCatalogCategory,required"`
	NumItems       int                 `json:"num_items,omitempty" jsonschema:"description=Num Items"`
	Tokens         []map[string]string `json:"tokens,omitempty" jsonschema:"description=Tokens"`
}

// ProductCatalogCheckMarketplacePartnerSellersStatus represents the Facebook ProductCatalogCheckMarketplacePartnerSellersStatus object
type ProductCatalogCheckMarketplacePartnerSellersStatus struct {
	SampleErrors []map[string]interface{} `json:"sample_errors,omitempty" jsonschema:"description=Sample Errors"`
	SessionID    string                   `json:"session_id,omitempty" jsonschema:"description=ID of the Session,pattern=^[0-9]+$"`
	Status       string                   `json:"status,omitempty" jsonschema:"description=Current status of the ProductCatalogCheckMarketplacePartnerSellersStatus,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// ProductCatalogDataSource represents the Facebook ProductCatalogDataSource object
type ProductCatalogDataSource struct {
	AppID               string `json:"app_id,omitempty" jsonschema:"description=ID of the App,pattern=^[0-9]+$"`
	ID                  string `json:"id,omitempty" jsonschema:"description=ProductCatalogDataSource ID,required,pattern=^[0-9]+$"`
	IngestionSourceType string `json:"ingestion_source_type,omitempty" jsonschema:"description=Ingestion Source Type"`
	Name                string `json:"name,omitempty" jsonschema:"description=Name of the ProductCatalogDataSource,required"`
	UploadType          string `json:"upload_type,omitempty" jsonschema:"description=Upload Type"`
}

// ProductCatalogDiagnosticGroup represents the Facebook ProductCatalogDiagnosticGroup object
type ProductCatalogDiagnosticGroup struct {
	AffectedChannels         []string                                        `json:"affected_channels,omitempty" jsonschema:"description=Affected Channels"`
	AffectedEntity           ProductcatalogdiagnosticgroupAffectedEntity     `json:"affected_entity,omitempty" jsonschema:"description=Affected Entity"`
	AffectedFeatures         []ProductcatalogdiagnosticgroupAffectedFeatures `json:"affected_features,omitempty" jsonschema:"description=Affected Features"`
	Diagnostics              []map[string]interface{}                        `json:"diagnostics,omitempty" jsonschema:"description=Diagnostics"`
	ErrorCode                int                                             `json:"error_code,omitempty" jsonschema:"description=Error Code"`
	NumberOfAffectedEntities int                                             `json:"number_of_affected_entities,omitempty" jsonschema:"description=Number Of Affected Entities"`
	NumberOfAffectedItems    int                                             `json:"number_of_affected_items,omitempty" jsonschema:"description=Number Of Affected Items"`
	Severity                 ProductcatalogdiagnosticgroupSeverity           `json:"severity,omitempty" jsonschema:"description=Severity"`
	Subtitle                 string                                          `json:"subtitle,omitempty" jsonschema:"description=Subtitle"`
	Title                    string                                          `json:"title,omitempty" jsonschema:"description=Title"`
	Type                     ProductcatalogdiagnosticgroupType               `json:"type,omitempty" jsonschema:"description=Type"`
}

// ProductCatalogFacets represents the Facebook ProductCatalogFacets object
type ProductCatalogFacets struct {
	Facets    []map[string][]map[string]interface{} `json:"facets,omitempty" jsonschema:"description=Facets"`
	ItemCount int                                   `json:"item_count,omitempty" jsonschema:"description=Item Count"`
}

// ProductCatalogHotelRoomsBatch represents the Facebook ProductCatalogHotelRoomsBatch object
type ProductCatalogHotelRoomsBatch struct {
	Errors           []map[string]interface{} `json:"errors,omitempty" jsonschema:"description=Errors"`
	ErrorsTotalCount int                      `json:"errors_total_count,omitempty" jsonschema:"description=Errors Total Count"`
	Handle           string                   `json:"handle,omitempty" jsonschema:"description=Handle"`
	Status           string                   `json:"status,omitempty" jsonschema:"description=Current status of the ProductCatalogHotelRoomsBatch,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// ProductCatalogImageSettings represents the Facebook ProductCatalogImageSettings object
type ProductCatalogImageSettings struct {
	CarouselAd *ProductCatalogImageSettingsOperation `json:"carousel_ad,omitempty" jsonschema:"description=Carousel Ad"`
	SingleAd   *ProductCatalogImageSettingsOperation `json:"single_ad,omitempty" jsonschema:"description=Single Ad"`
}

// ProductCatalogImageSettingsInternal represents the Facebook ProductCatalogImageSettingsInternal object
type ProductCatalogImageSettingsInternal struct {
	CarouselAd *ProductCatalogImageSettingsOperation `json:"carousel_ad,omitempty" jsonschema:"description=Carousel Ad"`
	ShopsPdp   *ProductCatalogImageSettingsOperation `json:"shops_pdp,omitempty" jsonschema:"description=Shops Pdp"`
	SingleAd   *ProductCatalogImageSettingsOperation `json:"single_ad,omitempty" jsonschema:"description=Single Ad"`
}

// ProductCatalogImageSettingsOperation represents the Facebook ProductCatalogImageSettingsOperation object
type ProductCatalogImageSettingsOperation struct {
	TransformationType string `json:"transformation_type,omitempty" jsonschema:"description=Transformation Type"`
}

// ProductCatalogLocalizationSettings represents the Facebook ProductCatalogLocalizationSettings object
type ProductCatalogLocalizationSettings struct {
	DefaultCountry  string `json:"default_country,omitempty" jsonschema:"description=Default Country"`
	DefaultLanguage string `json:"default_language,omitempty" jsonschema:"description=Default Language"`
	ID              string `json:"id,omitempty" jsonschema:"description=ProductCatalogLocalizationSettings ID,required,pattern=^[0-9]+$"`
}

// ProductCatalogPricingVariablesBatch represents the Facebook ProductCatalogPricingVariablesBatch object
type ProductCatalogPricingVariablesBatch struct {
	Errors           []map[string]interface{} `json:"errors,omitempty" jsonschema:"description=Errors"`
	ErrorsTotalCount int                      `json:"errors_total_count,omitempty" jsonschema:"description=Errors Total Count"`
	Handle           string                   `json:"handle,omitempty" jsonschema:"description=Handle"`
	Status           string                   `json:"status,omitempty" jsonschema:"description=Current status of the ProductCatalogPricingVariablesBatch,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// ProductCatalogProductSetsBatch represents the Facebook ProductCatalogProductSetsBatch object
type ProductCatalogProductSetsBatch struct {
	Errors           []map[string]interface{} `json:"errors,omitempty" jsonschema:"description=Errors"`
	ErrorsTotalCount int                      `json:"errors_total_count,omitempty" jsonschema:"description=Errors Total Count"`
	Handle           string                   `json:"handle,omitempty" jsonschema:"description=Handle"`
	Status           string                   `json:"status,omitempty" jsonschema:"description=Current status of the ProductCatalogProductSetsBatch,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// ProductCatalogUserActions represents the Facebook ProductCatalogUserActions object
type ProductCatalogUserActions struct {
	Actions []string `json:"actions,omitempty" jsonschema:"description=Actions"`
}

// ProductCatalogUserTasks represents the Facebook ProductCatalogUserTasks object
type ProductCatalogUserTasks struct {
	Business *Business `json:"business,omitempty" jsonschema:"description=Business"`
	Tasks    []string  `json:"tasks,omitempty" jsonschema:"description=Tasks"`
}

// ProductDaEventSamplesBatch represents the Facebook ProductDaEventSamplesBatch object
type ProductDaEventSamplesBatch struct {
	Samples   []map[string]interface{} `json:"samples,omitempty" jsonschema:"description=Samples"`
	TimeStart uint                     `json:"time_start,omitempty" jsonschema:"description=Time Start"`
	TimeStop  uint                     `json:"time_stop,omitempty" jsonschema:"description=Time Stop"`
}

// ProductDeliveryPreference represents the Facebook ProductDeliveryPreference object
type ProductDeliveryPreference struct {
	AdObjectID              string   `json:"ad_object_id,omitempty" jsonschema:"description=ID of the Ad Object,pattern=^[0-9]+$"`
	ID                      string   `json:"id,omitempty" jsonschema:"description=ProductDeliveryPreference ID,required,pattern=^[0-9]+$"`
	ProductPriority         string   `json:"product_priority,omitempty" jsonschema:"description=Product Priority"`
	ProductPriorityCategory []string `json:"product_priority_category,omitempty" jsonschema:"description=Product Priority Category"`
}

// ProductEventStat represents the Facebook ProductEventStat object
type ProductEventStat struct {
	DateStart                            string                     `json:"date_start,omitempty" jsonschema:"description=Date Start"`
	DateStop                             string                     `json:"date_stop,omitempty" jsonschema:"description=Date Stop"`
	DeviceType                           ProducteventstatDeviceType `json:"device_type,omitempty" jsonschema:"description=Device Type"`
	Event                                ProducteventstatEvent      `json:"event,omitempty" jsonschema:"description=Event"`
	EventSource                          *ExternalEventSource       `json:"event_source,omitempty" jsonschema:"description=Event Source"`
	TotalContentIDsMatchedOtherCatalogs  int                        `json:"total_content_ids_matched_other_catalogs,omitempty" jsonschema:"description=Total Content Ids Matched Other Catalogs,pattern=^[0-9]+$"`
	TotalMatchedContentIDs               int                        `json:"total_matched_content_ids,omitempty" jsonschema:"description=Total Matched Content Ids,pattern=^[0-9]+$"`
	TotalUnmatchedContentIDs             int                        `json:"total_unmatched_content_ids,omitempty" jsonschema:"description=Total Unmatched Content Ids,pattern=^[0-9]+$"`
	UniqueContentIDsMatchedOtherCatalogs int                        `json:"unique_content_ids_matched_other_catalogs,omitempty" jsonschema:"description=Unique Content Ids Matched Other Catalogs,pattern=^[0-9]+$"`
	UniqueMatchedContentIDs              int                        `json:"unique_matched_content_ids,omitempty" jsonschema:"description=Unique Matched Content Ids,pattern=^[0-9]+$"`
	UniqueUnmatchedContentIDs            int                        `json:"unique_unmatched_content_ids,omitempty" jsonschema:"description=Unique Unmatched Content Ids,pattern=^[0-9]+$"`
}

// ProductFeed represents the Facebook ProductFeed object
type ProductFeed struct {
	Country             string                         `json:"country,omitempty" jsonschema:"description=Country"`
	CreatedTime         time.Time                      `json:"created_time,omitempty" jsonschema:"description=When the ProductFeed was created,format=date-time"`
	DefaultCurrency     string                         `json:"default_currency,omitempty" jsonschema:"description=Default Currency"`
	DeletionEnabled     bool                           `json:"deletion_enabled,omitempty" jsonschema:"description=Deletion Enabled"`
	Delimiter           ProductfeedDelimiter           `json:"delimiter,omitempty" jsonschema:"description=Delimiter"`
	Encoding            string                         `json:"encoding,omitempty" jsonschema:"description=Encoding"`
	FileName            string                         `json:"file_name,omitempty" jsonschema:"description=File Name"`
	ID                  string                         `json:"id,omitempty" jsonschema:"description=ProductFeed ID,required,pattern=^[0-9]+$"`
	IngestionSourceType ProductfeedIngestionSourceType `json:"ingestion_source_type,omitempty" jsonschema:"description=Ingestion Source Type"`
	ItemSubType         string                         `json:"item_sub_type,omitempty" jsonschema:"description=Item Sub Type"`
	LatestUpload        *ProductFeedUpload             `json:"latest_upload,omitempty" jsonschema:"description=Latest Upload"`
	MigratedFromFeedID  string                         `json:"migrated_from_feed_id,omitempty" jsonschema:"description=ID of the Migrated From Feed,pattern=^[0-9]+$"`
	Name                string                         `json:"name,omitempty" jsonschema:"description=Name of the ProductFeed,required"`
	OverrideType        string                         `json:"override_type,omitempty" jsonschema:"description=Override Type"`
	PrimaryFeeds        []string                       `json:"primary_feeds,omitempty" jsonschema:"description=Primary Feeds"`
	ProductCount        int                            `json:"product_count,omitempty" jsonschema:"description=Product Count"`
	QuotedFieldsMode    ProductfeedQuotedFieldsMode    `json:"quoted_fields_mode,omitempty" jsonschema:"description=Quoted Fields Mode"`
	Schedule            *ProductFeedSchedule           `json:"schedule,omitempty" jsonschema:"description=Schedule"`
	SupplementaryFeeds  []string                       `json:"supplementary_feeds,omitempty" jsonschema:"description=Supplementary Feeds"`
	UpdateSchedule      *ProductFeedSchedule           `json:"update_schedule,omitempty" jsonschema:"description=Update Schedule"`
}

// ProductFeedRule represents the Facebook ProductFeedRule object
type ProductFeedRule struct {
	Attribute string              `json:"attribute,omitempty" jsonschema:"description=Attribute"`
	ID        string              `json:"id,omitempty" jsonschema:"description=ProductFeedRule ID,required,pattern=^[0-9]+$"`
	Params    []map[string]string `json:"params,omitempty" jsonschema:"description=Params"`
	RuleType  string              `json:"rule_type,omitempty" jsonschema:"description=Rule Type"`
}

// ProductFeedRulePreviewSample represents the Facebook ProductFeedRulePreviewSample object
type ProductFeedRulePreviewSample struct {
	PropertiesAfter  []map[string]string `json:"properties_after,omitempty" jsonschema:"description=Properties After"`
	PropertiesBefore []map[string]string `json:"properties_before,omitempty" jsonschema:"description=Properties Before"`
}

// ProductFeedRuleSuggestion represents the Facebook ProductFeedRuleSuggestion object
type ProductFeedRuleSuggestion struct {
	Attribute string              `json:"attribute,omitempty" jsonschema:"description=Attribute"`
	Params    []map[string]string `json:"params,omitempty" jsonschema:"description=Params"`
	Type      string              `json:"type,omitempty" jsonschema:"description=Type"`
}

// ProductFeedSchedule represents the Facebook ProductFeedSchedule object
type ProductFeedSchedule struct {
	DayOfMonth    uint                        `json:"day_of_month,omitempty" jsonschema:"description=Day Of Month"`
	DayOfWeek     string                      `json:"day_of_week,omitempty" jsonschema:"description=Day Of Week"`
	Hour          uint                        `json:"hour,omitempty" jsonschema:"description=Hour"`
	ID            string                      `json:"id,omitempty" jsonschema:"description=ProductFeedSchedule ID,required,pattern=^[0-9]+$"`
	Interval      ProductfeedscheduleInterval `json:"interval,omitempty" jsonschema:"description=Interval"`
	IntervalCount uint                        `json:"interval_count,omitempty" jsonschema:"description=Interval Count"`
	Minute        uint                        `json:"minute,omitempty" jsonschema:"description=Minute"`
	Timezone      string                      `json:"timezone,omitempty" jsonschema:"description=Timezone"`
	URL           string                      `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
	Username      string                      `json:"username,omitempty" jsonschema:"description=Username"`
}

// ProductFeedUpload represents the Facebook ProductFeedUpload object
type ProductFeedUpload struct {
	EndTime           time.Time                     `json:"end_time,omitempty" jsonschema:"description=End Time,format=date-time"`
	ErrorCount        int                           `json:"error_count,omitempty" jsonschema:"description=Error Count"`
	ErrorReport       *ProductFeedUploadErrorReport `json:"error_report,omitempty" jsonschema:"description=Error Report"`
	Filename          string                        `json:"filename,omitempty" jsonschema:"description=Filename"`
	ID                string                        `json:"id,omitempty" jsonschema:"description=ProductFeedUpload ID,required,pattern=^[0-9]+$"`
	InputMethod       ProductfeeduploadInputMethod  `json:"input_method,omitempty" jsonschema:"description=Input Method"`
	NumDeletedItems   int                           `json:"num_deleted_items,omitempty" jsonschema:"description=Num Deleted Items"`
	NumDetectedItems  int                           `json:"num_detected_items,omitempty" jsonschema:"description=Num Detected Items"`
	NumInvalidItems   int                           `json:"num_invalid_items,omitempty" jsonschema:"description=Num Invalid Items"`
	NumPersistedItems int                           `json:"num_persisted_items,omitempty" jsonschema:"description=Num Persisted Items"`
	StartTime         time.Time                     `json:"start_time,omitempty" jsonschema:"description=Start Time,format=date-time"`
	URL               string                        `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
	WarningCount      int                           `json:"warning_count,omitempty" jsonschema:"description=Warning Count"`
}

// ProductFeedUploadError represents the Facebook ProductFeedUploadError object
type ProductFeedUploadError struct {
	AffectedSurfaces []ProductfeeduploaderrorAffectedSurfaces `json:"affected_surfaces,omitempty" jsonschema:"description=Affected Surfaces"`
	Description      string                                   `json:"description,omitempty" jsonschema:"description=Description"`
	ErrorType        string                                   `json:"error_type,omitempty" jsonschema:"description=Error Type"`
	ID               string                                   `json:"id,omitempty" jsonschema:"description=ProductFeedUploadError ID,required,pattern=^[0-9]+$"`
	Severity         ProductfeeduploaderrorSeverity           `json:"severity,omitempty" jsonschema:"description=Severity"`
	Summary          string                                   `json:"summary,omitempty" jsonschema:"description=Summary"`
	TotalCount       uint                                     `json:"total_count,omitempty" jsonschema:"description=Total Count"`
}

// ProductFeedUploadErrorReport represents the Facebook ProductFeedUploadErrorReport object
type ProductFeedUploadErrorReport struct {
	FileHandle   string `json:"file_handle,omitempty" jsonschema:"description=File Handle"`
	ReportStatus string `json:"report_status,omitempty" jsonschema:"description=Report Status"`
}

// ProductFeedUploadErrorSample represents the Facebook ProductFeedUploadErrorSample object
type ProductFeedUploadErrorSample struct {
	ID         string `json:"id,omitempty" jsonschema:"description=ProductFeedUploadErrorSample ID,required,pattern=^[0-9]+$"`
	RetailerID string `json:"retailer_id,omitempty" jsonschema:"description=ID of the Retailer,pattern=^[0-9]+$"`
	RowNumber  int    `json:"row_number,omitempty" jsonschema:"description=Row Number"`
}

// ProductFeedUploadProgress represents the Facebook ProductFeedUploadProgress object
type ProductFeedUploadProgress struct {
	Pos         int       `json:"pos,omitempty" jsonschema:"description=Pos"`
	Size        int       `json:"size,omitempty" jsonschema:"description=Size"`
	Step        string    `json:"step,omitempty" jsonschema:"description=Step"`
	Unit        string    `json:"unit,omitempty" jsonschema:"description=Unit"`
	UpdatedTime time.Time `json:"updated_time,omitempty" jsonschema:"description=When the ProductFeedUploadProgress was last updated,format=date-time"`
}

// ProductGroup represents the Facebook ProductGroup object
type ProductGroup struct {
	ID             string            `json:"id,omitempty" jsonschema:"description=ProductGroup ID,required,pattern=^[0-9]+$"`
	ProductCatalog *ProductCatalog   `json:"product_catalog,omitempty" jsonschema:"description=Product Catalog"`
	RetailerID     string            `json:"retailer_id,omitempty" jsonschema:"description=ID of the Retailer,pattern=^[0-9]+$"`
	Variants       []*ProductVariant `json:"variants,omitempty" jsonschema:"description=Variants"`
}

// ProductImage represents the Facebook ProductImage object
type ProductImage struct {
	Height   int    `json:"height,omitempty" jsonschema:"description=Height"`
	ID       string `json:"id,omitempty" jsonschema:"description=ProductImage ID,required,pattern=^[0-9]+$"`
	ImageURL string `json:"image_url,omitempty" jsonschema:"description=Image URL,format=uri"`
	Width    int    `json:"width,omitempty" jsonschema:"description=Width"`
}

// ProductItem represents the Facebook ProductItem object
type ProductItem struct {
	AdditionalImageCdnURLs                                [][]map[string]string                            `json:"additional_image_cdn_urls,omitempty" jsonschema:"description=Additional Image Cdn Urls,format=uri"`
	AdditionalImageURLs                                   []string                                         `json:"additional_image_urls,omitempty" jsonschema:"description=Additional Image Urls,format=uri"`
	AdditionalVariantAttributes                           []map[string]string                              `json:"additional_variant_attributes,omitempty" jsonschema:"description=Additional Variant Attributes"`
	AgeGroup                                              ProductitemAgeGroup                              `json:"age_group,omitempty" jsonschema:"description=Age Group"`
	Applinks                                              *CatalogItemAppLinks                             `json:"applinks,omitempty" jsonschema:"description=Applinks"`
	Availability                                          ProductitemAvailability                          `json:"availability,omitempty" jsonschema:"description=Availability"`
	Brand                                                 string                                           `json:"brand,omitempty" jsonschema:"description=Brand"`
	BundleItems                                           []string                                         `json:"bundle_items,omitempty" jsonschema:"description=Bundle Items"`
	BundleRetailerIDs                                     []string                                         `json:"bundle_retailer_ids,omitempty" jsonschema:"description=Bundle Retailer Ids,pattern=^[0-9]+$"`
	CapabilityToReviewStatus                              []map[string]ProductitemCapabilityToReviewStatus `json:"capability_to_review_status,omitempty" jsonschema:"description=Capability To Review Status"`
	Category                                              string                                           `json:"category,omitempty" jsonschema:"description=Category"`
	CategorySpecificFields                                *CatalogSubVerticalList                          `json:"category_specific_fields,omitempty" jsonschema:"description=Category Specific Fields"`
	Color                                                 string                                           `json:"color,omitempty" jsonschema:"description=Color"`
	CommerceInsights                                      *ProductItemCommerceInsights                     `json:"commerce_insights,omitempty" jsonschema:"description=Commerce Insights"`
	Condition                                             ProductitemCondition                             `json:"condition,omitempty" jsonschema:"description=Condition"`
	Currency                                              string                                           `json:"currency,omitempty" jsonschema:"description=Currency"`
	CustomData                                            []map[string]string                              `json:"custom_data,omitempty" jsonschema:"description=Custom Data"`
	CustomLabel0                                          string                                           `json:"custom_label_0,omitempty" jsonschema:"description=Custom Label 0"`
	CustomLabel1                                          string                                           `json:"custom_label_1,omitempty" jsonschema:"description=Custom Label 1"`
	CustomLabel2                                          string                                           `json:"custom_label_2,omitempty" jsonschema:"description=Custom Label 2"`
	CustomLabel3                                          string                                           `json:"custom_label_3,omitempty" jsonschema:"description=Custom Label 3"`
	CustomLabel4                                          string                                           `json:"custom_label_4,omitempty" jsonschema:"description=Custom Label 4"`
	CustomNumber0                                         string                                           `json:"custom_number_0,omitempty" jsonschema:"description=Custom Number 0"`
	CustomNumber1                                         string                                           `json:"custom_number_1,omitempty" jsonschema:"description=Custom Number 1"`
	CustomNumber2                                         string                                           `json:"custom_number_2,omitempty" jsonschema:"description=Custom Number 2"`
	CustomNumber3                                         string                                           `json:"custom_number_3,omitempty" jsonschema:"description=Custom Number 3"`
	CustomNumber4                                         string                                           `json:"custom_number_4,omitempty" jsonschema:"description=Custom Number 4"`
	Description                                           string                                           `json:"description,omitempty" jsonschema:"description=Description"`
	Errors                                                []*ProductItemError                              `json:"errors,omitempty" jsonschema:"description=Errors"`
	ExpirationDate                                        string                                           `json:"expiration_date,omitempty" jsonschema:"description=Expiration Date"`
	FbProductCategory                                     string                                           `json:"fb_product_category,omitempty" jsonschema:"description=Fb Product Category"`
	Gender                                                ProductitemGender                                `json:"gender,omitempty" jsonschema:"description=Gender"`
	GeneratedBackgroundImages                             []*AIGeneratedProductImage                       `json:"generated_background_images,omitempty" jsonschema:"description=Generated Background Images"`
	GeneratedBackgroundImagesAdUsage                      bool                                             `json:"generated_background_images_ad_usage,omitempty" jsonschema:"description=Generated Background Images Ad Usage"`
	Gtin                                                  string                                           `json:"gtin,omitempty" jsonschema:"description=Gtin"`
	ID                                                    string                                           `json:"id,omitempty" jsonschema:"description=ProductItem ID,required,pattern=^[0-9]+$"`
	ImageCdnURLs                                          []map[string]string                              `json:"image_cdn_urls,omitempty" jsonschema:"description=Image Cdn Urls,format=uri"`
	ImageFetchStatus                                      ProductitemImageFetchStatus                      `json:"image_fetch_status,omitempty" jsonschema:"description=Image Fetch Status"`
	ImageURL                                              string                                           `json:"image_url,omitempty" jsonschema:"description=Image URL,format=uri"`
	Images                                                []string                                         `json:"images,omitempty" jsonschema:"description=Images"`
	ImporterAddress                                       *ProductItemImporterAddress                      `json:"importer_address,omitempty" jsonschema:"description=Importer Address"`
	ImporterName                                          string                                           `json:"importer_name,omitempty" jsonschema:"description=Importer Name"`
	InvalidationErrors                                    []*ProductItemInvalidationError                  `json:"invalidation_errors,omitempty" jsonschema:"description=Invalidation Errors"`
	Inventory                                             int                                              `json:"inventory,omitempty" jsonschema:"description=Inventory"`
	IsBundleHero                                          bool                                             `json:"is_bundle_hero,omitempty" jsonschema:"description=Is Bundle Hero"`
	ManufacturerInfo                                      string                                           `json:"manufacturer_info,omitempty" jsonschema:"description=Manufacturer Info"`
	ManufacturerPartNumber                                string                                           `json:"manufacturer_part_number,omitempty" jsonschema:"description=Manufacturer Part Number"`
	MarkedForProductLaunch                                string                                           `json:"marked_for_product_launch,omitempty" jsonschema:"description=Marked For Product Launch"`
	Material                                              string                                           `json:"material,omitempty" jsonschema:"description=Material"`
	MobileLink                                            string                                           `json:"mobile_link,omitempty" jsonschema:"description=Mobile Link"`
	Name                                                  string                                           `json:"name,omitempty" jsonschema:"description=Name of the ProductItem,required"`
	OrderingIndex                                         int                                              `json:"ordering_index,omitempty" jsonschema:"description=Ordering Index"`
	OriginCountry                                         string                                           `json:"origin_country,omitempty" jsonschema:"description=Origin Country"`
	ParentProductID                                       string                                           `json:"parent_product_id,omitempty" jsonschema:"description=ID of the Parent Product,pattern=^[0-9]+$"`
	Pattern                                               string                                           `json:"pattern,omitempty" jsonschema:"description=Pattern"`
	PostConversionSignalBasedEnforcementAppealEligibility bool                                             `json:"post_conversion_signal_based_enforcement_appeal_eligibility,omitempty" jsonschema:"description=Post Conversion Signal Based Enforcement Appeal Eligibility"`
	Price                                                 string                                           `json:"price,omitempty" jsonschema:"description=Price"`
	ProductCatalog                                        *ProductCatalog                                  `json:"product_catalog,omitempty" jsonschema:"description=Product Catalog"`
	ProductFeed                                           *ProductFeed                                     `json:"product_feed,omitempty" jsonschema:"description=Product Feed"`
	ProductGroup                                          *ProductGroup                                    `json:"product_group,omitempty" jsonschema:"description=Product Group"`
	ProductLocalInfo                                      *ProductItemLocalInfo                            `json:"product_local_info,omitempty" jsonschema:"description=Product Local Info"`
	ProductRelationship                                   string                                           `json:"product_relationship,omitempty" jsonschema:"description=Product Relationship"`
	ProductType                                           string                                           `json:"product_type,omitempty" jsonschema:"description=Product Type"`
	QuantityToSellOnFacebook                              int                                              `json:"quantity_to_sell_on_facebook,omitempty" jsonschema:"description=Quantity To Sell On Facebook"`
	RetailerID                                            string                                           `json:"retailer_id,omitempty" jsonschema:"description=ID of the Retailer,pattern=^[0-9]+$"`
	RetailerProductGroupID                                string                                           `json:"retailer_product_group_id,omitempty" jsonschema:"description=ID of the Retailer Product Group,pattern=^[0-9]+$"`
	ReviewRejectionReasons                                []string                                         `json:"review_rejection_reasons,omitempty" jsonschema:"description=Review Rejection Reasons"`
	ReviewStatus                                          ProductitemReviewStatus                          `json:"review_status,omitempty" jsonschema:"description=Review Status"`
	SalePrice                                             string                                           `json:"sale_price,omitempty" jsonschema:"description=Sale Price"`
	SalePriceEndDate                                      string                                           `json:"sale_price_end_date,omitempty" jsonschema:"description=Sale Price End Date"`
	SalePriceStartDate                                    string                                           `json:"sale_price_start_date,omitempty" jsonschema:"description=Sale Price Start Date"`
	ShippingWeightUnit                                    ProductitemShippingWeightUnit                    `json:"shipping_weight_unit,omitempty" jsonschema:"description=Shipping Weight Unit"`
	ShippingWeightValue                                   float64                                          `json:"shipping_weight_value,omitempty" jsonschema:"description=Shipping Weight Value"`
	ShortDescription                                      string                                           `json:"short_description,omitempty" jsonschema:"description=Short Description"`
	Size                                                  string                                           `json:"size,omitempty" jsonschema:"description=Size"`
	StartDate                                             string                                           `json:"start_date,omitempty" jsonschema:"description=Start Date"`
	Tags                                                  []string                                         `json:"tags,omitempty" jsonschema:"description=Tags"`
	URL                                                   string                                           `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
	VendorID                                              string                                           `json:"vendor_id,omitempty" jsonschema:"description=ID of the Vendor,pattern=^[0-9]+$"`
	VideoFetchStatus                                      ProductitemVideoFetchStatus                      `json:"video_fetch_status,omitempty" jsonschema:"description=Video Fetch Status"`
	Videos                                                []*ProductItemVideoData                          `json:"videos,omitempty" jsonschema:"description=Videos"`
	Visibility                                            ProductitemVisibility                            `json:"visibility,omitempty" jsonschema:"description=Visibility"`
	WaComplianceCategory                                  string                                           `json:"wa_compliance_category,omitempty" jsonschema:"description=Wa Compliance Category"`
}

// ProductItemCommerceInsights represents the Facebook ProductItemCommerceInsights object
type ProductItemCommerceInsights struct {
	MessageSends       uint `json:"message_sends,omitempty" jsonschema:"description=Message Sends,minimum=13,maximum=100"`
	OrganicImpressions uint `json:"organic_impressions,omitempty" jsonschema:"description=Organic Impressions"`
	PaidImpressions    uint `json:"paid_impressions,omitempty" jsonschema:"description=Paid Impressions"`
}

// ProductItemError represents the Facebook ProductItemError object
type ProductItemError struct {
	Description   string `json:"description,omitempty" jsonschema:"description=Description"`
	ErrorPriority string `json:"error_priority,omitempty" jsonschema:"description=Error Priority"`
	ErrorType     string `json:"error_type,omitempty" jsonschema:"description=Error Type"`
	Title         string `json:"title,omitempty" jsonschema:"description=Title"`
}

// ProductItemImporterAddress represents the Facebook ProductItemImporterAddress object
type ProductItemImporterAddress struct {
	City       string `json:"city,omitempty" jsonschema:"description=City"`
	Country    string `json:"country,omitempty" jsonschema:"description=Country"`
	PostalCode string `json:"postal_code,omitempty" jsonschema:"description=Postal Code"`
	Region     string `json:"region,omitempty" jsonschema:"description=Region"`
	Street1    string `json:"street1,omitempty" jsonschema:"description=Street1"`
	Street2    string `json:"street2,omitempty" jsonschema:"description=Street2"`
}

// ProductItemInsights represents the Facebook ProductItemInsights object
type ProductItemInsights struct {
	AdClickCount      int `json:"ad_click_count,omitempty" jsonschema:"description=Ad Click Count"`
	AdImpressionCount int `json:"ad_impression_count,omitempty" jsonschema:"description=Ad Impression Count"`
	AddToCartCount    int `json:"add_to_cart_count,omitempty" jsonschema:"description=Add To Cart Count"`
	PurchaseCount     int `json:"purchase_count,omitempty" jsonschema:"description=Purchase Count"`
	ViewContentCount  int `json:"view_content_count,omitempty" jsonschema:"description=View Content Count"`
}

// ProductItemInvalidationError represents the Facebook ProductItemInvalidationError object
type ProductItemInvalidationError struct {
}

// ProductItemLandingPageData represents the Facebook ProductItemLandingPageData object
type ProductItemLandingPageData struct {
	Availability ProductitemlandingpagedataAvailability `json:"availability,omitempty" jsonschema:"description=Availability"`
}

// ProductItemLocalInfo represents the Facebook ProductItemLocalInfo object
type ProductItemLocalInfo struct {
	AvailabilityCircleOrigin       *ProductItemLocalInfoLatLongShape   `json:"availability_circle_origin,omitempty" jsonschema:"description=Availability Circle Origin"`
	AvailabilityCircleRadius       float64                             `json:"availability_circle_radius,omitempty" jsonschema:"description=Availability Circle Radius"`
	AvailabilityCircleRadiusUnit   string                              `json:"availability_circle_radius_unit,omitempty" jsonschema:"description=Availability Circle Radius Unit"`
	AvailabilityPolygonCoordinates []*ProductItemLocalInfoLatLongShape `json:"availability_polygon_coordinates,omitempty" jsonschema:"description=Availability Polygon Coordinates"`
	AvailabilityPostalCodes        []string                            `json:"availability_postal_codes,omitempty" jsonschema:"description=Availability Postal Codes"`
	AvailabilitySource             string                              `json:"availability_source,omitempty" jsonschema:"description=Availability Source"`
	ID                             string                              `json:"id,omitempty" jsonschema:"description=ProductItemLocalInfo ID,required,pattern=^[0-9]+$"`
	InferredCircleOrigin           *ProductItemLocalInfoLatLongShape   `json:"inferred_circle_origin,omitempty" jsonschema:"description=Inferred Circle Origin"`
	InferredCircleRadius           float64                             `json:"inferred_circle_radius,omitempty" jsonschema:"description=Inferred Circle Radius"`
}

// ProductItemLocalInfoLatLongShape represents the Facebook ProductItemLocalInfoLatLongShape object
type ProductItemLocalInfoLatLongShape struct {
	Latitude  float64 `json:"latitude,omitempty" jsonschema:"description=Latitude"`
	Longitude float64 `json:"longitude,omitempty" jsonschema:"description=Longitude"`
}

// ProductItemOffer represents the Facebook ProductItemOffer object
type ProductItemOffer struct {
	AvailabilityArea   []map[string]interface{} `json:"availability_area,omitempty" jsonschema:"description=Availability Area"`
	AvailabilityRadius float64                  `json:"availability_radius,omitempty" jsonschema:"description=Availability Radius"`
	ID                 string                   `json:"id,omitempty" jsonschema:"description=ProductItemOffer ID,required,pattern=^[0-9]+$"`
}

// ProductItemShipping represents the Facebook ProductItemShipping object
type ProductItemShipping struct {
	ShippingCountry       string  `json:"shipping_country,omitempty" jsonschema:"description=Shipping Country"`
	ShippingPriceCurrency string  `json:"shipping_price_currency,omitempty" jsonschema:"description=Shipping Price Currency"`
	ShippingPriceValue    float64 `json:"shipping_price_value,omitempty" jsonschema:"description=Shipping Price Value"`
	ShippingRegion        string  `json:"shipping_region,omitempty" jsonschema:"description=Shipping Region"`
	ShippingService       string  `json:"shipping_service,omitempty" jsonschema:"description=Shipping Service"`
}

// ProductItemSubscriptionInfo represents the Facebook ProductItemSubscriptionInfo object
type ProductItemSubscriptionInfo struct {
	IsSubscribable            bool   `json:"is_subscribable,omitempty" jsonschema:"description=Is Subscribable"`
	SubscriptionBillingPeriod uint   `json:"subscription_billing_period,omitempty" jsonschema:"description=Subscription Billing Period"`
	SubscriptionBillingType   string `json:"subscription_billing_type,omitempty" jsonschema:"description=Subscription Billing Type"`
}

// ProductItemUnitPrice represents the Facebook ProductItemUnitPrice object
type ProductItemUnitPrice struct {
}

// ProductItemVideoData represents the Facebook ProductItemVideoData object
type ProductItemVideoData struct {
	Tags []string `json:"tags,omitempty" jsonschema:"description=Tags"`
	URL  string   `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
}

// ProductSet represents the Facebook ProductSet object
type ProductSet struct {
	AutoCreationURL string              `json:"auto_creation_url,omitempty" jsonschema:"description=Auto Creation URL,format=uri"`
	Filter          string              `json:"filter,omitempty" jsonschema:"description=Filter"`
	ID              string              `json:"id,omitempty" jsonschema:"description=ProductSet ID,required,pattern=^[0-9]+$"`
	LatestMetadata  *ProductSetMetadata `json:"latest_metadata,omitempty" jsonschema:"description=Latest Metadata"`
	LiveMetadata    *ProductSetMetadata `json:"live_metadata,omitempty" jsonschema:"description=Live Metadata"`
	Name            string              `json:"name,omitempty" jsonschema:"description=Name of the ProductSet,required"`
	OrderingInfo    []int               `json:"ordering_info,omitempty" jsonschema:"description=Ordering Info"`
	ProductCatalog  *ProductCatalog     `json:"product_catalog,omitempty" jsonschema:"description=Product Catalog"`
	ProductCount    uint                `json:"product_count,omitempty" jsonschema:"description=Product Count"`
	RetailerID      string              `json:"retailer_id,omitempty" jsonschema:"description=ID of the Retailer,pattern=^[0-9]+$"`
}

// ProductSetMetadata represents the Facebook ProductSetMetadata object
type ProductSetMetadata struct {
	CoverImageURL         string `json:"cover_image_url,omitempty" jsonschema:"description=Cover Image URL,format=uri"`
	Description           string `json:"description,omitempty" jsonschema:"description=Description"`
	ExternalURL           string `json:"external_url,omitempty" jsonschema:"description=External URL,format=uri"`
	IntegrityReviewStatus string `json:"integrity_review_status,omitempty" jsonschema:"description=Integrity Review Status"`
}

// ProductSetTaxonCategory represents the Facebook ProductSetTaxonCategory object
type ProductSetTaxonCategory struct {
	CategoryID   int    `json:"category_id,omitempty" jsonschema:"description=ID of the Category,pattern=^[0-9]+$"`
	CategoryName string `json:"category_name,omitempty" jsonschema:"description=Category Name"`
	ImageURL     string `json:"image_url,omitempty" jsonschema:"description=Image URL,format=uri"`
}

// ProductSetUsage represents the Facebook ProductSetUsage object
type ProductSetUsage struct {
	ID         string      `json:"id,omitempty" jsonschema:"description=ProductSetUsage ID,required,pattern=^[0-9]+$"`
	ProductSet *ProductSet `json:"product_set,omitempty" jsonschema:"description=Product Set"`
	UsageType  string      `json:"usage_type,omitempty" jsonschema:"description=Usage Type"`
}

// ProductVariant represents the Facebook ProductVariant object
type ProductVariant struct {
	Label        string   `json:"label,omitempty" jsonschema:"description=Label"`
	Options      []string `json:"options,omitempty" jsonschema:"description=Options"`
	ProductField string   `json:"product_field,omitempty" jsonschema:"description=Product Field"`
}

// ProductVisualVariant represents the Facebook ProductVisualVariant object
type ProductVisualVariant struct {
	Items     []*ProductItem `json:"items,omitempty" jsonschema:"description=Items"`
	UniqueKey string         `json:"unique_key,omitempty" jsonschema:"description=Unique Key"`
}

// Profile represents the Facebook Profile object
type Profile struct {
	CanPost     bool                  `json:"can_post,omitempty" jsonschema:"description=Can Post"`
	ID          string                `json:"id,omitempty" jsonschema:"description=Profile ID,required,pattern=^[0-9]+$"`
	Link        string                `json:"link,omitempty" jsonschema:"description=Link"`
	Name        string                `json:"name,omitempty" jsonschema:"description=Name of the Profile,required"`
	Pic         string                `json:"pic,omitempty" jsonschema:"description=Pic"`
	PicCrop     *ProfilePictureSource `json:"pic_crop,omitempty" jsonschema:"description=Pic Crop"`
	PicLarge    string                `json:"pic_large,omitempty" jsonschema:"description=Pic Large"`
	PicSmall    string                `json:"pic_small,omitempty" jsonschema:"description=Pic Small"`
	PicSquare   string                `json:"pic_square,omitempty" jsonschema:"description=Pic Square"`
	ProfileType ProfileProfileType    `json:"profile_type,omitempty" jsonschema:"description=Profile Type"`
	Username    string                `json:"username,omitempty" jsonschema:"description=Username"`
}

// ProfilePictureSource represents the Facebook ProfilePictureSource object
type ProfilePictureSource struct {
	Bottom       uint   `json:"bottom,omitempty" jsonschema:"description=Bottom"`
	CacheKey     string `json:"cache_key,omitempty" jsonschema:"description=Cache Key"`
	Height       uint   `json:"height,omitempty" jsonschema:"description=Height"`
	IsSilhouette bool   `json:"is_silhouette,omitempty" jsonschema:"description=Is Silhouette"`
	Left         uint   `json:"left,omitempty" jsonschema:"description=Left"`
	Right        uint   `json:"right,omitempty" jsonschema:"description=Right"`
	Top          uint   `json:"top,omitempty" jsonschema:"description=Top"`
	URL          string `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
	Width        uint   `json:"width,omitempty" jsonschema:"description=Width"`
}

// PublisherBlockList represents the Facebook PublisherBlockList object
type PublisherBlockList struct {
	AppPublishers             []*AppPublisher `json:"app_publishers,omitempty" jsonschema:"description=App Publishers"`
	BusinessOwnerID           string          `json:"business_owner_id,omitempty" jsonschema:"description=ID of the Business Owner,pattern=^[0-9]+$"`
	ID                        string          `json:"id,omitempty" jsonschema:"description=PublisherBlockList ID,required,pattern=^[0-9]+$"`
	IsAutoBlockingOn          bool            `json:"is_auto_blocking_on,omitempty" jsonschema:"description=Is Auto Blocking On"`
	IsEligibleAtCampaignLevel bool            `json:"is_eligible_at_campaign_level,omitempty" jsonschema:"description=Is Eligible At Campaign Level"`
	LastUpdateTime            time.Time       `json:"last_update_time,omitempty" jsonschema:"description=Last Update Time,format=date-time"`
	LastUpdateUser            string          `json:"last_update_user,omitempty" jsonschema:"description=Last Update User"`
	Name                      string          `json:"name,omitempty" jsonschema:"description=Name of the PublisherBlockList,required"`
	OwnerAdAccountID          string          `json:"owner_ad_account_id,omitempty" jsonschema:"description=ID of the Owner Ad Account,pattern=^[0-9]+$"`
	WebPublishers             []*WebPublisher `json:"web_publishers,omitempty" jsonschema:"description=Web Publishers"`
}

// PublisherDeliveryReport represents the Facebook PublisherDeliveryReport object
type PublisherDeliveryReport struct {
	ContentTypes         []string `json:"content_types,omitempty" jsonschema:"description=Content Types"`
	EstimatedImpressions uint     `json:"estimated_impressions,omitempty" jsonschema:"description=Estimated Impressions"`
	Name                 string   `json:"name,omitempty" jsonschema:"description=Name of the PublisherDeliveryReport,required"`
	Status               string   `json:"status,omitempty" jsonschema:"description=Current status of the PublisherDeliveryReport,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	URL                  string   `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
}

// PublisherWhiteList represents the Facebook PublisherWhiteList object
type PublisherWhiteList struct {
	BusinessOwnerID string    `json:"business_owner_id,omitempty" jsonschema:"description=ID of the Business Owner,pattern=^[0-9]+$"`
	ID              string    `json:"id,omitempty" jsonschema:"description=PublisherWhiteList ID,required,pattern=^[0-9]+$"`
	LastUpdatedTime time.Time `json:"last_updated_time,omitempty" jsonschema:"description=When the PublisherWhiteList was last updated,format=date-time"`
	LastUpdatedUser string    `json:"last_updated_user,omitempty" jsonschema:"description=When the PublisherWhiteList was last updated"`
	Name            string    `json:"name,omitempty" jsonschema:"description=Name of the PublisherWhiteList,required"`
	PlacementType   string    `json:"placement_type,omitempty" jsonschema:"description=Placement Type"`
}

// RTBDynamicPost represents the Facebook RTBDynamicPost object
type RTBDynamicPost struct {
	ChildAttachments []*DynamicPostChildAttachment `json:"child_attachments,omitempty" jsonschema:"description=Child Attachments"`
	Created          time.Time                     `json:"created,omitempty" jsonschema:"description=When the RTBDynamicPost was created,format=date-time"`
	Description      string                        `json:"description,omitempty" jsonschema:"description=Description"`
	ID               string                        `json:"id,omitempty" jsonschema:"description=RTBDynamicPost ID,required,pattern=^[0-9]+$"`
	ImageURL         string                        `json:"image_url,omitempty" jsonschema:"description=Image URL,format=uri"`
	Link             string                        `json:"link,omitempty" jsonschema:"description=Link"`
	Message          string                        `json:"message,omitempty" jsonschema:"description=Message"`
	OwnerID          string                        `json:"owner_id,omitempty" jsonschema:"description=ID of the Owner,pattern=^[0-9]+$"`
	PlaceID          string                        `json:"place_id,omitempty" jsonschema:"description=ID of the Place,pattern=^[0-9]+$"`
	ProductID        string                        `json:"product_id,omitempty" jsonschema:"description=ID of the Product,pattern=^[0-9]+$"`
	Title            string                        `json:"title,omitempty" jsonschema:"description=Title"`
}

// RawCustomAudience represents the Facebook RawCustomAudience object
type RawCustomAudience struct {
	ID   string `json:"id,omitempty" jsonschema:"description=RawCustomAudience ID,required,pattern=^[0-9]+$"`
	Name string `json:"name,omitempty" jsonschema:"description=Name of the RawCustomAudience,required"`
}

// ReachFrequencyActivity represents the Facebook ReachFrequencyActivity object
type ReachFrequencyActivity struct {
	AccountID        string `json:"account_id,omitempty" jsonschema:"description=ID of the Account,pattern=^[0-9]+$"`
	CampaignActive   bool   `json:"campaign_active,omitempty" jsonschema:"description=Campaign Active"`
	CampaignStarted  bool   `json:"campaign_started,omitempty" jsonschema:"description=Campaign Started"`
	CreativeUploaded bool   `json:"creative_uploaded,omitempty" jsonschema:"description=Creative Uploaded"`
	IoApproved       bool   `json:"io_approved,omitempty" jsonschema:"description=Io Approved"`
	SfLink           string `json:"sf_link,omitempty" jsonschema:"description=Sf Link"`
}

// ReachFrequencyAdFormat represents the Facebook ReachFrequencyAdFormat object
type ReachFrequencyAdFormat struct {
	Details map[string]interface{} `json:"details,omitempty" jsonschema:"description=Details"`
	Type    string                 `json:"type,omitempty" jsonschema:"description=Type"`
}

// ReachFrequencyCurveLowerConfidenceRange represents the Facebook ReachFrequencyCurveLowerConfidenceRange object
type ReachFrequencyCurveLowerConfidenceRange struct {
	ImpressionLower       []int `json:"impression_lower,omitempty" jsonschema:"description=Impression Lower"`
	NumPoints             uint  `json:"num_points,omitempty" jsonschema:"description=Num Points"`
	Reach                 []int `json:"reach,omitempty" jsonschema:"description=Reach"`
	ReachLower            []int `json:"reach_lower,omitempty" jsonschema:"description=Reach Lower"`
	UniqVideoViews2sLower []int `json:"uniq_video_views_2s_lower,omitempty" jsonschema:"description=Uniq Video Views 2s Lower"`
	VideoViews2sLower     []int `json:"video_views_2s_lower,omitempty" jsonschema:"description=Video Views 2s Lower"`
}

// ReachFrequencyCurveUpperConfidenceRange represents the Facebook ReachFrequencyCurveUpperConfidenceRange object
type ReachFrequencyCurveUpperConfidenceRange struct {
	ImpressionUpper       []int `json:"impression_upper,omitempty" jsonschema:"description=Impression Upper"`
	NumPoints             uint  `json:"num_points,omitempty" jsonschema:"description=Num Points"`
	Reach                 []int `json:"reach,omitempty" jsonschema:"description=Reach"`
	ReachUpper            []int `json:"reach_upper,omitempty" jsonschema:"description=Reach Upper"`
	UniqVideoViews2sUpper []int `json:"uniq_video_views_2s_upper,omitempty" jsonschema:"description=Uniq Video Views 2s Upper"`
	VideoViews2sUpper     []int `json:"video_views_2s_upper,omitempty" jsonschema:"description=Video Views 2s Upper"`
}

// ReachFrequencyDayPart represents the Facebook ReachFrequencyDayPart object
type ReachFrequencyDayPart struct {
	Days        []int `json:"days,omitempty" jsonschema:"description=Days"`
	EndMinute   int   `json:"end_minute,omitempty" jsonschema:"description=End Minute"`
	StartMinute int   `json:"start_minute,omitempty" jsonschema:"description=Start Minute"`
}

// ReachFrequencyEstimatesCurve represents the Facebook ReachFrequencyEstimatesCurve object
type ReachFrequencyEstimatesCurve struct {
	Budget            []int   `json:"budget,omitempty" jsonschema:"description=Budget,minimum=1"`
	Conversion        []int   `json:"conversion,omitempty" jsonschema:"description=Conversion"`
	Impression        []int   `json:"impression,omitempty" jsonschema:"description=Impression"`
	InterpolatedReach float64 `json:"interpolated_reach,omitempty" jsonschema:"description=Interpolated Reach"`
	NumPoints         uint    `json:"num_points,omitempty" jsonschema:"description=Num Points"`
	RawImpression     []int   `json:"raw_impression,omitempty" jsonschema:"description=Raw Impression"`
	RawReach          []int   `json:"raw_reach,omitempty" jsonschema:"description=Raw Reach"`
	Reach             []int   `json:"reach,omitempty" jsonschema:"description=Reach"`
}

// ReachFrequencyEstimatesPlacementBreakdown represents the Facebook ReachFrequencyEstimatesPlacementBreakdown object
type ReachFrequencyEstimatesPlacementBreakdown struct {
	Android         []float64 `json:"android,omitempty" jsonschema:"description=Android"`
	AudienceNetwork []float64 `json:"audience_network,omitempty" jsonschema:"description=Audience Network"`
	Desktop         []float64 `json:"desktop,omitempty" jsonschema:"description=Desktop"`
	FacebookSearch  []float64 `json:"facebook_search,omitempty" jsonschema:"description=Facebook Search"`
	FbReels         []float64 `json:"fb_reels,omitempty" jsonschema:"description=Fb Reels"`
	FbReelsOverlay  []float64 `json:"fb_reels_overlay,omitempty" jsonschema:"description=Fb Reels Overlay"`
	IgAndroid       []float64 `json:"ig_android,omitempty" jsonschema:"description=Ig Android"`
	IgIOS           []float64 `json:"ig_ios,omitempty" jsonschema:"description=Ig Ios"`
	IgOther         []float64 `json:"ig_other,omitempty" jsonschema:"description=Ig Other"`
	IgReels         []float64 `json:"ig_reels,omitempty" jsonschema:"description=Ig Reels"`
	IgStory         []float64 `json:"ig_story,omitempty" jsonschema:"description=Ig Story"`
	InstantArticles []float64 `json:"instant_articles,omitempty" jsonschema:"description=Instant Articles"`
	InstreamVideos  []float64 `json:"instream_videos,omitempty" jsonschema:"description=Instream Videos"`
	IOS             []float64 `json:"ios,omitempty" jsonschema:"description=Ios"`
	Msite           []float64 `json:"msite,omitempty" jsonschema:"description=Msite"`
	SuggestedVideos []float64 `json:"suggested_videos,omitempty" jsonschema:"description=Suggested Videos"`
}

// ReachFrequencyPrediction represents the Facebook ReachFrequencyPrediction object
type ReachFrequencyPrediction struct {
	AccountID                       int                                                   `json:"account_id,omitempty" jsonschema:"description=ID of the Account,pattern=^[0-9]+$"`
	ActivityStatus                  *ReachFrequencyActivity                               `json:"activity_status,omitempty" jsonschema:"description=Activity Status"`
	AdFormats                       []*ReachFrequencyAdFormat                             `json:"ad_formats,omitempty" jsonschema:"description=Ad Formats"`
	AuctionEntryOptionIndex         int                                                   `json:"auction_entry_option_index,omitempty" jsonschema:"description=Auction Entry Option Index"`
	AudienceSizeLowerBound          uint                                                  `json:"audience_size_lower_bound,omitempty" jsonschema:"description=Audience Size Lower Bound"`
	AudienceSizeUpperBound          uint                                                  `json:"audience_size_upper_bound,omitempty" jsonschema:"description=Audience Size Upper Bound"`
	BusinessID                      int                                                   `json:"business_id,omitempty" jsonschema:"description=ID of the Business,pattern=^[0-9]+$"`
	BuyingType                      string                                                `json:"buying_type,omitempty" jsonschema:"description=Buying Type"`
	CampaignGroupID                 int                                                   `json:"campaign_group_id,omitempty" jsonschema:"description=ID of the Campaign Group,pattern=^[0-9]+$"`
	CampaignID                      string                                                `json:"campaign_id,omitempty" jsonschema:"description=ID of the Campaign,pattern=^[0-9]+$"`
	CampaignTimeStart               time.Time                                             `json:"campaign_time_start,omitempty" jsonschema:"description=Campaign Time Start,format=date-time"`
	CampaignTimeStop                time.Time                                             `json:"campaign_time_stop,omitempty" jsonschema:"description=Campaign Time Stop,format=date-time"`
	Currency                        string                                                `json:"currency,omitempty" jsonschema:"description=Currency"`
	CurveBudgetReach                *ReachFrequencyEstimatesCurve                         `json:"curve_budget_reach,omitempty" jsonschema:"description=Curve Budget Reach"`
	CurveReach                      []uint                                                `json:"curve_reach,omitempty" jsonschema:"description=Curve Reach"`
	DailyGrpCurve                   []float64                                             `json:"daily_grp_curve,omitempty" jsonschema:"description=Daily Grp Curve"`
	DailyImpressionCurve            []float64                                             `json:"daily_impression_curve,omitempty" jsonschema:"description=Daily Impression Curve"`
	DailyImpressionCurveMap         []map[uint][]float64                                  `json:"daily_impression_curve_map,omitempty" jsonschema:"description=Daily Impression Curve Map"`
	DayPartingSchedule              []*ReachFrequencyDayPart                              `json:"day_parting_schedule,omitempty" jsonschema:"description=Day Parting Schedule"`
	DestinationID                   string                                                `json:"destination_id,omitempty" jsonschema:"description=ID of the Destination,pattern=^[0-9]+$"`
	EndTime                         time.Time                                             `json:"end_time,omitempty" jsonschema:"description=End Time,format=date-time"`
	ExpirationTime                  time.Time                                             `json:"expiration_time,omitempty" jsonschema:"description=Expiration Time,format=date-time"`
	ExternalBudget                  int                                                   `json:"external_budget,omitempty" jsonschema:"description=External Budget,minimum=1"`
	ExternalImpression              uint                                                  `json:"external_impression,omitempty" jsonschema:"description=External Impression"`
	ExternalMaximumBudget           int                                                   `json:"external_maximum_budget,omitempty" jsonschema:"description=External Maximum Budget,minimum=1"`
	ExternalMaximumImpression       string                                                `json:"external_maximum_impression,omitempty" jsonschema:"description=External Maximum Impression"`
	ExternalMaximumReach            uint                                                  `json:"external_maximum_reach,omitempty" jsonschema:"description=External Maximum Reach"`
	ExternalMinimumBudget           int                                                   `json:"external_minimum_budget,omitempty" jsonschema:"description=External Minimum Budget,minimum=1"`
	ExternalMinimumImpression       uint                                                  `json:"external_minimum_impression,omitempty" jsonschema:"description=External Minimum Impression"`
	ExternalMinimumReach            uint                                                  `json:"external_minimum_reach,omitempty" jsonschema:"description=External Minimum Reach"`
	ExternalReach                   uint                                                  `json:"external_reach,omitempty" jsonschema:"description=External Reach"`
	FeedRatio0000                   uint                                                  `json:"feed_ratio_0000,omitempty" jsonschema:"description=Feed Ratio 0000"`
	FrequencyCap                    uint                                                  `json:"frequency_cap,omitempty" jsonschema:"description=Frequency Cap"`
	FrequencyDistributionMap        []map[uint][]float64                                  `json:"frequency_distribution_map,omitempty" jsonschema:"description=Frequency Distribution Map"`
	FrequencyDistributionMapAgg     []map[uint][]uint                                     `json:"frequency_distribution_map_agg,omitempty" jsonschema:"description=Frequency Distribution Map Agg"`
	GrpAudienceSize                 float64                                               `json:"grp_audience_size,omitempty" jsonschema:"description=Grp Audience Size"`
	GrpAvgProbabilityMap            string                                                `json:"grp_avg_probability_map,omitempty" jsonschema:"description=Grp Avg Probability Map"`
	GrpCountryAudienceSize          float64                                               `json:"grp_country_audience_size,omitempty" jsonschema:"description=Grp Country Audience Size"`
	GrpCurve                        []float64                                             `json:"grp_curve,omitempty" jsonschema:"description=Grp Curve"`
	GrpDmasAudienceSize             float64                                               `json:"grp_dmas_audience_size,omitempty" jsonschema:"description=Grp Dmas Audience Size"`
	GrpFilteringThreshold00         uint                                                  `json:"grp_filtering_threshold_00,omitempty" jsonschema:"description=Grp Filtering Threshold 00"`
	GrpPoints                       float64                                               `json:"grp_points,omitempty" jsonschema:"description=Grp Points"`
	GrpRatio                        float64                                               `json:"grp_ratio,omitempty" jsonschema:"description=Grp Ratio"`
	GrpReachRatio                   float64                                               `json:"grp_reach_ratio,omitempty" jsonschema:"description=Grp Reach Ratio"`
	GrpStatus                       string                                                `json:"grp_status,omitempty" jsonschema:"description=Grp Status"`
	HoldoutPercentage               uint                                                  `json:"holdout_percentage,omitempty" jsonschema:"description=Holdout Percentage,minimum=13,maximum=100"`
	ID                              string                                                `json:"id,omitempty" jsonschema:"description=ReachFrequencyPrediction ID,required,pattern=^[0-9]+$"`
	ImpressionCurve                 []uint                                                `json:"impression_curve,omitempty" jsonschema:"description=Impression Curve"`
	InstagramDestinationID          string                                                `json:"instagram_destination_id,omitempty" jsonschema:"description=ID of the Instagram Destination,pattern=^[0-9]+$"`
	InstreamPackages                []string                                              `json:"instream_packages,omitempty" jsonschema:"description=Instream Packages"`
	IntervalFrequencyCap            uint                                                  `json:"interval_frequency_cap,omitempty" jsonschema:"description=Interval Frequency Cap"`
	IntervalFrequencyCapResetPeriod uint                                                  `json:"interval_frequency_cap_reset_period,omitempty" jsonschema:"description=Interval Frequency Cap Reset Period"`
	IsBalancedFrequency             bool                                                  `json:"is_balanced_frequency,omitempty" jsonschema:"description=Is Balanced Frequency"`
	IsBonusMedia                    uint                                                  `json:"is_bonus_media,omitempty" jsonschema:"description=Is Bonus Media"`
	IsConversionGoal                uint                                                  `json:"is_conversion_goal,omitempty" jsonschema:"description=Is Conversion Goal"`
	IsHigherAverageFrequency        bool                                                  `json:"is_higher_average_frequency,omitempty" jsonschema:"description=Is Higher Average Frequency"`
	IsIo                            bool                                                  `json:"is_io,omitempty" jsonschema:"description=Is Io"`
	IsReservedBuying                uint                                                  `json:"is_reserved_buying,omitempty" jsonschema:"description=Is Reserved Buying"`
	IsTrp                           bool                                                  `json:"is_trp,omitempty" jsonschema:"description=Is Trp"`
	Name                            string                                                `json:"name,omitempty" jsonschema:"description=Name of the ReachFrequencyPrediction,required"`
	Objective                       uint                                                  `json:"objective,omitempty" jsonschema:"description=Objective"`
	ObjectiveName                   string                                                `json:"objective_name,omitempty" jsonschema:"description=Objective Name"`
	OdaxObjective                   uint                                                  `json:"odax_objective,omitempty" jsonschema:"description=Odax Objective"`
	OdaxObjectiveName               string                                                `json:"odax_objective_name,omitempty" jsonschema:"description=Odax Objective Name"`
	OptimizationGoal                uint                                                  `json:"optimization_goal,omitempty" jsonschema:"description=Optimization Goal"`
	OptimizationGoalName            string                                                `json:"optimization_goal_name,omitempty" jsonschema:"description=Optimization Goal Name"`
	PausePeriods                    []map[string]interface{}                              `json:"pause_periods,omitempty" jsonschema:"description=Pause Periods"`
	PercentReachAtTargetFrequency   int                                                   `json:"percent_reach_at_target_frequency,omitempty" jsonschema:"description=Percent Reach At Target Frequency"`
	PlacementBreakdown              *ReachFrequencyEstimatesPlacementBreakdown            `json:"placement_breakdown,omitempty" jsonschema:"description=Placement Breakdown"`
	PlacementBreakdownMap           []map[uint]*ReachFrequencyEstimatesPlacementBreakdown `json:"placement_breakdown_map,omitempty" jsonschema:"description=Placement Breakdown Map"`
	PlanName                        string                                                `json:"plan_name,omitempty" jsonschema:"description=Plan Name"`
	PlanType                        string                                                `json:"plan_type,omitempty" jsonschema:"description=Plan Type"`
	PredictionMode                  uint                                                  `json:"prediction_mode,omitempty" jsonschema:"description=Prediction Mode"`
	PredictionProgress              uint                                                  `json:"prediction_progress,omitempty" jsonschema:"description=Prediction Progress"`
	ReferenceID                     string                                                `json:"reference_id,omitempty" jsonschema:"description=ID of the Reference,pattern=^[0-9]+$"`
	ReservationStatus               uint                                                  `json:"reservation_status,omitempty" jsonschema:"description=Reservation Status"`
	StartTime                       time.Time                                             `json:"start_time,omitempty" jsonschema:"description=Start Time,format=date-time"`
	Status                          uint                                                  `json:"status,omitempty" jsonschema:"description=Current status of the ReachFrequencyPrediction"`
	StoryEventType                  uint                                                  `json:"story_event_type,omitempty" jsonschema:"description=Story Event Type"`
	TargetCpm                       uint                                                  `json:"target_cpm,omitempty" jsonschema:"description=Target Cpm"`
	TargetFrequency                 uint                                                  `json:"target_frequency,omitempty" jsonschema:"description=Target Frequency"`
	TargetFrequencyResetPeriod      uint                                                  `json:"target_frequency_reset_period,omitempty" jsonschema:"description=Target Frequency Reset Period"`
	TargetSpec                      *Targeting                                            `json:"target_spec,omitempty" jsonschema:"description=Target Spec"`
	TimeCreated                     time.Time                                             `json:"time_created,omitempty" jsonschema:"description=When the ReachFrequencyPrediction was created,format=date-time"`
	TimeUpdated                     time.Time                                             `json:"time_updated,omitempty" jsonschema:"description=When the ReachFrequencyPrediction was last updated,format=date-time"`
	TimezoneID                      uint                                                  `json:"timezone_id,omitempty" jsonschema:"description=ID of the Timezone,pattern=^[0-9]+$"`
	TimezoneName                    string                                                `json:"timezone_name,omitempty" jsonschema:"description=Timezone Name"`
	ToplineID                       uint                                                  `json:"topline_id,omitempty" jsonschema:"description=ID of the Topline,pattern=^[0-9]+$"`
	VideoViewLengthConstraint       uint                                                  `json:"video_view_length_constraint,omitempty" jsonschema:"description=Video View Length Constraint"`
	Viewtag                         string                                                `json:"viewtag,omitempty" jsonschema:"description=Viewtag"`
}

// ReachFrequencySpec represents the Facebook ReachFrequencySpec object
type ReachFrequencySpec struct {
	Countries                      []string               `json:"countries,omitempty" jsonschema:"description=Countries"`
	DefaultCreationData            map[string]interface{} `json:"default_creation_data,omitempty" jsonschema:"description=Default Creation Data"`
	GlobalIoMaxCampaignDuration    uint                   `json:"global_io_max_campaign_duration,omitempty" jsonschema:"description=Global Io Max Campaign Duration"`
	MaxCampaignDuration            map[string]interface{} `json:"max_campaign_duration,omitempty" jsonschema:"description=Max Campaign Duration"`
	MaxDaysToFinish                map[string]interface{} `json:"max_days_to_finish,omitempty" jsonschema:"description=Max Days To Finish"`
	MaxPauseWithoutPredictionRerun map[string]interface{} `json:"max_pause_without_prediction_rerun,omitempty" jsonschema:"description=Max Pause Without Prediction Rerun"`
	MinCampaignDuration            map[string]interface{} `json:"min_campaign_duration,omitempty" jsonschema:"description=Min Campaign Duration"`
	MinReachLimits                 map[string]interface{} `json:"min_reach_limits,omitempty" jsonschema:"description=Min Reach Limits"`
}

// Recommendation represents the Facebook Recommendation object
type Recommendation struct {
	CreatedTime        time.Time              `json:"created_time,omitempty" jsonschema:"description=When the Recommendation was created,format=date-time"`
	HasRating          bool                   `json:"has_rating,omitempty" jsonschema:"description=Has Rating"`
	HasReview          bool                   `json:"has_review,omitempty" jsonschema:"description=Has Review"`
	OpenGraphStory     map[string]interface{} `json:"open_graph_story,omitempty" jsonschema:"description=Open Graph Story"`
	Rating             int                    `json:"rating,omitempty" jsonschema:"description=Rating"`
	RecommendationType string                 `json:"recommendation_type,omitempty" jsonschema:"description=Recommendation Type"`
	ReviewText         string                 `json:"review_text,omitempty" jsonschema:"description=Review Text"`
	Reviewer           *User                  `json:"reviewer,omitempty" jsonschema:"description=Reviewer"`
}

// RecommendedIGMedia represents the Facebook RecommendedIGMedia object
type RecommendedIGMedia struct {
	IntentScore float64 `json:"intent_score,omitempty" jsonschema:"description=Intent Score"`
}

// RecommendedPagePost represents the Facebook RecommendedPagePost object
type RecommendedPagePost struct {
	IntentScore float64 `json:"intent_score,omitempty" jsonschema:"description=Intent Score"`
	IsIgMedia   bool    `json:"is_ig_media,omitempty" jsonschema:"description=Is Ig Media"`
	PostID      string  `json:"post_id,omitempty" jsonschema:"description=ID of the Post,pattern=^[0-9]+$"`
}

// RegionalRegulationIdentities represents the Facebook RegionalRegulationIdentities object
type RegionalRegulationIdentities struct {
	AustraliaFinservBeneficiary   string `json:"australia_finserv_beneficiary,omitempty" jsonschema:"description=Australia Finserv Beneficiary"`
	AustraliaFinservPayer         string `json:"australia_finserv_payer,omitempty" jsonschema:"description=Australia Finserv Payer"`
	IndiaFinservBeneficiary       string `json:"india_finserv_beneficiary,omitempty" jsonschema:"description=India Finserv Beneficiary"`
	IndiaFinservPayer             string `json:"india_finserv_payer,omitempty" jsonschema:"description=India Finserv Payer"`
	SingaporeUniversalBeneficiary string `json:"singapore_universal_beneficiary,omitempty" jsonschema:"description=Singapore Universal Beneficiary"`
	SingaporeUniversalPayer       string `json:"singapore_universal_payer,omitempty" jsonschema:"description=Singapore Universal Payer"`
	TaiwanFinservBeneficiary      string `json:"taiwan_finserv_beneficiary,omitempty" jsonschema:"description=Taiwan Finserv Beneficiary"`
	TaiwanFinservPayer            string `json:"taiwan_finserv_payer,omitempty" jsonschema:"description=Taiwan Finserv Payer"`
	TaiwanUniversalBeneficiary    string `json:"taiwan_universal_beneficiary,omitempty" jsonschema:"description=Taiwan Universal Beneficiary"`
	TaiwanUniversalPayer          string `json:"taiwan_universal_payer,omitempty" jsonschema:"description=Taiwan Universal Payer"`
}

// ReportingAudience represents the Facebook ReportingAudience object
type ReportingAudience struct {
	CustomAudiences             []*RawCustomAudience `json:"custom_audiences,omitempty" jsonschema:"description=Custom Audiences"`
	CustomAudiencesURLParamName string               `json:"custom_audiences_url_param_name,omitempty" jsonschema:"description=Custom Audiences URL Param Name,format=uri"`
	CustomAudiencesURLParamType string               `json:"custom_audiences_url_param_type,omitempty" jsonschema:"description=Custom Audiences URL Param Type,format=uri"`
}

// ResearchPollStudy represents the Facebook ResearchPollStudy object
type ResearchPollStudy struct {
	Account *AdAccount `json:"account,omitempty" jsonschema:"description=Account"`
	ID      string     `json:"id,omitempty" jsonschema:"description=ResearchPollStudy ID,required,pattern=^[0-9]+$"`
	Name    string     `json:"name,omitempty" jsonschema:"description=Name of the ResearchPollStudy,required"`
}

// ResellerGuidance represents the Facebook ResellerGuidance object
type ResellerGuidance struct {
	AdAccountFirstSpendDate string    `json:"ad_account_first_spend_date,omitempty" jsonschema:"description=Ad Account First Spend Date"`
	AdAccountID             string    `json:"ad_account_id,omitempty" jsonschema:"description=ID of the Ad Account,pattern=^[0-9]+$"`
	AdoptedGuidanceL7d      []string  `json:"adopted_guidance_l7d,omitempty" jsonschema:"description=Adopted Guidance L7d"`
	AdvertiserName          string    `json:"advertiser_name,omitempty" jsonschema:"description=Advertiser Name"`
	AttributedToResellerL7d bool      `json:"attributed_to_reseller_l7d,omitempty" jsonschema:"description=Attributed To Reseller L7d"`
	AvailableGuidance       []string  `json:"available_guidance,omitempty" jsonschema:"description=Available Guidance"`
	GuidanceAdoptionRateL7d float64   `json:"guidance_adoption_rate_l7d,omitempty" jsonschema:"description=Guidance Adoption Rate L7d"`
	NurturedByResellerL7d   bool      `json:"nurtured_by_reseller_l7d,omitempty" jsonschema:"description=Nurtured By Reseller L7d"`
	PlanningAgencyName      string    `json:"planning_agency_name,omitempty" jsonschema:"description=Planning Agency Name"`
	RecommendationTime      time.Time `json:"recommendation_time,omitempty" jsonschema:"description=Recommendation Time,format=date-time"`
	ReportingDs             string    `json:"reporting_ds,omitempty" jsonschema:"description=Reporting Ds"`
	Reseller                *Business `json:"reseller,omitempty" jsonschema:"description=Reseller"`
	RevenueL30d             float64   `json:"revenue_l30d,omitempty" jsonschema:"description=Revenue L30d"`
	UltimateAdvertiserName  string    `json:"ultimate_advertiser_name,omitempty" jsonschema:"description=Ultimate Advertiser Name"`
}

// RevSharePolicy represents the Facebook RevSharePolicy object
type RevSharePolicy struct {
	PolicyID   string `json:"policy_id,omitempty" jsonschema:"description=ID of the Policy,pattern=^[0-9]+$"`
	PolicyName string `json:"policy_name,omitempty" jsonschema:"description=Policy Name"`
}

// RichMediaElement represents the Facebook RichMediaElement object
type RichMediaElement struct {
	Element     map[string]interface{} `json:"element,omitempty" jsonschema:"description=Element"`
	ElementType string                 `json:"element_type,omitempty" jsonschema:"description=Element Type"`
	Name        string                 `json:"name,omitempty" jsonschema:"description=Name of the RichMediaElement,required"`
}

// RightsManagerDataExport represents the Facebook RightsManagerDataExport object
type RightsManagerDataExport struct {
	DownloadUri    string    `json:"download_uri,omitempty" jsonschema:"description=Download Uri"`
	ExportScope    string    `json:"export_scope,omitempty" jsonschema:"description=Export Scope"`
	ID             string    `json:"id,omitempty" jsonschema:"description=RightsManagerDataExport ID,required,pattern=^[0-9]+$"`
	Name           string    `json:"name,omitempty" jsonschema:"description=Name of the RightsManagerDataExport,required"`
	RecordType     string    `json:"record_type,omitempty" jsonschema:"description=Record Type"`
	TimeRangeEnd   time.Time `json:"time_range_end,omitempty" jsonschema:"description=Time Range End,format=date-time"`
	TimeRangeStart time.Time `json:"time_range_start,omitempty" jsonschema:"description=Time Range Start,format=date-time"`
}

// RightsManagerInsights represents the Facebook RightsManagerInsights object
type RightsManagerInsights struct {
	Error          string                                `json:"error,omitempty" jsonschema:"description=Error"`
	ErrorMessage   string                                `json:"error_message,omitempty" jsonschema:"description=Error Message"`
	Metadata       []map[string]map[string]interface{}   `json:"metadata,omitempty" jsonschema:"description=Metadata"`
	Totals         []map[string]map[string]interface{}   `json:"totals,omitempty" jsonschema:"description=Totals"`
	XAxisBreakdown [][]map[string]map[string]interface{} `json:"x_axis_breakdown,omitempty" jsonschema:"description=X Axis Breakdown"`
}

// Robot represents the Facebook Robot object
type Robot struct {
	BringupVars       []map[string]string  `json:"bringup_vars,omitempty" jsonschema:"description=Bringup Vars"`
	Configurations    []map[string]string  `json:"configurations,omitempty" jsonschema:"description=Configurations"`
	DataCenter        string               `json:"data_center,omitempty" jsonschema:"description=Data Center"`
	ID                string               `json:"id,omitempty" jsonschema:"description=Robot ID,required,pattern=^[0-9]+$"`
	InitPos           []map[string]float64 `json:"init_pos,omitempty" jsonschema:"description=Init Pos"`
	LastPos           []map[string]float64 `json:"last_pos,omitempty" jsonschema:"description=Last Pos"`
	MeetupLinkHash    string               `json:"meetup_link_hash,omitempty" jsonschema:"description=Meetup Link Hash"`
	Suite             string               `json:"suite,omitempty" jsonschema:"description=Suite"`
	TargetMapImageUri string               `json:"target_map_image_uri,omitempty" jsonschema:"description=Target Map Image Uri"`
	TargetOsImageUri  string               `json:"target_os_image_uri,omitempty" jsonschema:"description=Target Os Image Uri"`
	TargetSwImageUri  string               `json:"target_sw_image_uri,omitempty" jsonschema:"description=Target Sw Image Uri"`
	User              *User                `json:"user,omitempty" jsonschema:"description=User"`
}

// SalesRightsInventoryManagement represents the Facebook SalesRightsInventoryManagement object
type SalesRightsInventoryManagement struct {
	AvailableImpressions   int      `json:"available_impressions,omitempty" jsonschema:"description=Available Impressions"`
	BookedImpressions      int      `json:"booked_impressions,omitempty" jsonschema:"description=Booked Impressions"`
	OverbookedImpressions  int      `json:"overbooked_impressions,omitempty" jsonschema:"description=Overbooked Impressions"`
	SupportedCountries     []string `json:"supported_countries,omitempty" jsonschema:"description=Supported Countries"`
	TotalImpressions       int      `json:"total_impressions,omitempty" jsonschema:"description=Total Impressions"`
	UnavailableImpressions int      `json:"unavailable_impressions,omitempty" jsonschema:"description=Unavailable Impressions"`
	WarningMessages        []string `json:"warning_messages,omitempty" jsonschema:"description=Warning Messages"`
}

// SavedAudience represents the Facebook SavedAudience object
type SavedAudience struct {
	Account                      *AdAccount                    `json:"account,omitempty" jsonschema:"description=Account"`
	ApproximateCountLowerBound   int                           `json:"approximate_count_lower_bound,omitempty" jsonschema:"description=Approximate Count Lower Bound"`
	ApproximateCountUpperBound   int                           `json:"approximate_count_upper_bound,omitempty" jsonschema:"description=Approximate Count Upper Bound"`
	DeleteTime                   int                           `json:"delete_time,omitempty" jsonschema:"description=Delete Time"`
	Description                  string                        `json:"description,omitempty" jsonschema:"description=Description"`
	ID                           string                        `json:"id,omitempty" jsonschema:"description=SavedAudience ID,required,pattern=^[0-9]+$"`
	Name                         string                        `json:"name,omitempty" jsonschema:"description=Name of the SavedAudience,required"`
	OperationStatus              *CustomAudienceStatus         `json:"operation_status,omitempty" jsonschema:"description=Operation Status"`
	OwnerBusiness                *Business                     `json:"owner_business,omitempty" jsonschema:"description=Owner Business"`
	PageDeletionMarkedDeleteTime int                           `json:"page_deletion_marked_delete_time,omitempty" jsonschema:"description=Page Deletion Marked Delete Time,minimum=13,maximum=100"`
	PermissionForActions         *AudiencePermissionForActions `json:"permission_for_actions,omitempty" jsonschema:"description=Permission For Actions"`
	RunStatus                    string                        `json:"run_status,omitempty" jsonschema:"description=Run Status"`
	SentenceLines                interface{}                   `json:"sentence_lines,omitempty" jsonschema:"description=Sentence Lines"`
	Targeting                    *Targeting                    `json:"targeting,omitempty" jsonschema:"description=Targeting"`
	TimeCreated                  time.Time                     `json:"time_created,omitempty" jsonschema:"description=When the SavedAudience was created,format=date-time"`
	TimeUpdated                  time.Time                     `json:"time_updated,omitempty" jsonschema:"description=When the SavedAudience was last updated,format=date-time"`
}

// SavedMessageResponse represents the Facebook SavedMessageResponse object
type SavedMessageResponse struct {
	ID        string `json:"id,omitempty" jsonschema:"description=SavedMessageResponse ID,required,pattern=^[0-9]+$"`
	Image     string `json:"image,omitempty" jsonschema:"description=Image"`
	IsEnabled bool   `json:"is_enabled,omitempty" jsonschema:"description=Is Enabled"`
	Message   string `json:"message,omitempty" jsonschema:"description=Message"`
	Title     string `json:"title,omitempty" jsonschema:"description=Title"`
}

// ScheduledPost represents the Facebook ScheduledPost object
type ScheduledPost struct {
	AdminCreator            *User      `json:"admin_creator,omitempty" jsonschema:"description=Admin Creator"`
	CreationTime            time.Time  `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	FeedAudienceDescription string     `json:"feed_audience_description,omitempty" jsonschema:"description=Feed Audience Description"`
	FeedTargeting           *Targeting `json:"feed_targeting,omitempty" jsonschema:"description=Feed Targeting"`
	ID                      string     `json:"id,omitempty" jsonschema:"description=ScheduledPost ID,required,pattern=^[0-9]+$"`
	IsPostInGoodState       bool       `json:"is_post_in_good_state,omitempty" jsonschema:"description=Is Post In Good State"`
	Message                 string     `json:"message,omitempty" jsonschema:"description=Message"`
	ModifiedTime            time.Time  `json:"modified_time,omitempty" jsonschema:"description=Modified Time,format=date-time"`
	OgActionSummary         string     `json:"og_action_summary,omitempty" jsonschema:"description=Og Action Summary"`
	PermalinkURL            string     `json:"permalink_url,omitempty" jsonschema:"description=Permalink URL,format=uri"`
	Place                   *Place     `json:"place,omitempty" jsonschema:"description=Place"`
	PrivacyDescription      string     `json:"privacy_description,omitempty" jsonschema:"description=Privacy Description"`
	ScheduledFailureNotice  string     `json:"scheduled_failure_notice,omitempty" jsonschema:"description=Scheduled Failure Notice"`
	ScheduledPublishTime    time.Time  `json:"scheduled_publish_time,omitempty" jsonschema:"description=Scheduled Publish Time,format=date-time"`
	StoryToken              string     `json:"story_token,omitempty" jsonschema:"description=Story Token"`
	Thumbnail               string     `json:"thumbnail,omitempty" jsonschema:"description=Thumbnail"`
	VideoID                 string     `json:"video_id,omitempty" jsonschema:"description=ID of the Video,pattern=^[0-9]+$"`
}

// ScimCompanyUserPhoneNumber represents the Facebook ScimCompanyUserPhoneNumber object
type ScimCompanyUserPhoneNumber struct {
	Number  string `json:"number,omitempty" jsonschema:"description=Number"`
	Primary bool   `json:"primary,omitempty" jsonschema:"description=Primary"`
	Type    string `json:"type,omitempty" jsonschema:"description=Type"`
}

// SecuritySettings represents the Facebook SecuritySettings object
type SecuritySettings struct {
}

// ShadowIGHashtag represents the Facebook ShadowIGHashtag object
type ShadowIGHashtag struct {
	ID   string `json:"id,omitempty" jsonschema:"description=ShadowIGHashtag ID,required,pattern=^[0-9]+$"`
	Name string `json:"name,omitempty" jsonschema:"description=Name of the ShadowIGHashtag,required"`
}

// ShadowIGMediaBuilder represents the Facebook ShadowIGMediaBuilder object
type ShadowIGMediaBuilder struct {
	CopyrightCheckStatus *IGVideoCopyrightCheckStatus  `json:"copyright_check_status,omitempty" jsonschema:"description=Copyright Check Status"`
	ID                   string                        `json:"id,omitempty" jsonschema:"description=ShadowIGMediaBuilder ID,required,pattern=^[0-9]+$"`
	Status               string                        `json:"status,omitempty" jsonschema:"description=Current status of the ShadowIGMediaBuilder,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	StatusCode           string                        `json:"status_code,omitempty" jsonschema:"description=Status Code"`
	VideoStatus          *IGResumableVideoUploadStatus `json:"video_status,omitempty" jsonschema:"description=Video Status"`
}

// ShadowIGMediaCollaborators represents the Facebook ShadowIGMediaCollaborators object
type ShadowIGMediaCollaborators struct {
	ID           string `json:"id,omitempty" jsonschema:"description=ShadowIGMediaCollaborators ID,required,pattern=^[0-9]+$"`
	InviteStatus string `json:"invite_status,omitempty" jsonschema:"description=Invite Status"`
	Username     string `json:"username,omitempty" jsonschema:"description=Username"`
}

// ShadowIGMediaProductTags represents the Facebook ShadowIGMediaProductTags object
type ShadowIGMediaProductTags struct {
	ImageURL                string  `json:"image_url,omitempty" jsonschema:"description=Image URL,format=uri"`
	IsCheckout              bool    `json:"is_checkout,omitempty" jsonschema:"description=Is Checkout"`
	MerchantID              int     `json:"merchant_id,omitempty" jsonschema:"description=ID of the Merchant,pattern=^[0-9]+$"`
	Name                    string  `json:"name,omitempty" jsonschema:"description=Name of the ShadowIGMediaProductTags,required"`
	PriceString             string  `json:"price_string,omitempty" jsonschema:"description=Price String"`
	ProductID               int     `json:"product_id,omitempty" jsonschema:"description=ID of the Product,pattern=^[0-9]+$"`
	ReviewStatus            string  `json:"review_status,omitempty" jsonschema:"description=Review Status"`
	StrippedPriceString     string  `json:"stripped_price_string,omitempty" jsonschema:"description=Stripped Price String"`
	StrippedSalePriceString string  `json:"stripped_sale_price_string,omitempty" jsonschema:"description=Stripped Sale Price String"`
	X                       float64 `json:"x,omitempty" jsonschema:"description=X"`
	Y                       float64 `json:"y,omitempty" jsonschema:"description=Y"`
}

// ShadowIGUserCTXPartnerAppWelcomeMessageFlow represents the Facebook ShadowIGUserCTXPartnerAppWelcomeMessageFlow object
type ShadowIGUserCTXPartnerAppWelcomeMessageFlow struct {
	CompatiblePlatforms []string  `json:"compatible_platforms,omitempty" jsonschema:"description=Compatible Platforms"`
	EligiblePlatforms   []string  `json:"eligible_platforms,omitempty" jsonschema:"description=Eligible Platforms"`
	ID                  string    `json:"id,omitempty" jsonschema:"description=ShadowIGUserCTXPartnerAppWelcomeMessageFlow ID,required,pattern=^[0-9]+$"`
	IsIgOnlyFlow        bool      `json:"is_ig_only_flow,omitempty" jsonschema:"description=Is Ig Only Flow"`
	IsUsedInAd          bool      `json:"is_used_in_ad,omitempty" jsonschema:"description=Is Used In Ad"`
	LastUpdateTime      time.Time `json:"last_update_time,omitempty" jsonschema:"description=Last Update Time,format=date-time"`
	Name                string    `json:"name,omitempty" jsonschema:"description=Name of the ShadowIGUserCTXPartnerAppWelcomeMessageFlow,required"`
	WelcomeMessageFlow  string    `json:"welcome_message_flow,omitempty" jsonschema:"description=Welcome Message Flow"`
}

// ShadowIGUserCatalogProductSearch represents the Facebook ShadowIGUserCatalogProductSearch object
type ShadowIGUserCatalogProductSearch struct {
	ImageURL        string                               `json:"image_url,omitempty" jsonschema:"description=Image URL,format=uri"`
	IsCheckoutFlow  bool                                 `json:"is_checkout_flow,omitempty" jsonschema:"description=Is Checkout Flow"`
	MerchantID      int                                  `json:"merchant_id,omitempty" jsonschema:"description=ID of the Merchant,pattern=^[0-9]+$"`
	ProductID       int                                  `json:"product_id,omitempty" jsonschema:"description=ID of the Product,pattern=^[0-9]+$"`
	ProductName     string                               `json:"product_name,omitempty" jsonschema:"description=Product Name"`
	ProductVariants []*ShadowIGUserCatalogProductVariant `json:"product_variants,omitempty" jsonschema:"description=Product Variants"`
	RetailerID      string                               `json:"retailer_id,omitempty" jsonschema:"description=ID of the Retailer,pattern=^[0-9]+$"`
	ReviewStatus    string                               `json:"review_status,omitempty" jsonschema:"description=Review Status"`
}

// ShadowIGUserCatalogProductVariant represents the Facebook ShadowIGUserCatalogProductVariant object
type ShadowIGUserCatalogProductVariant struct {
	ProductID   int    `json:"product_id,omitempty" jsonschema:"description=ID of the Product,pattern=^[0-9]+$"`
	VariantName string `json:"variant_name,omitempty" jsonschema:"description=Variant Name"`
}

// ShadowIGUserPartnershipAdsMediaErrors represents the Facebook ShadowIGUserPartnershipAdsMediaErrors object
type ShadowIGUserPartnershipAdsMediaErrors struct {
	AdCode     string   `json:"ad_code,omitempty" jsonschema:"description=Ad Code"`
	ErrorCodes string   `json:"error_codes,omitempty" jsonschema:"description=Error Codes"`
	Errors     []string `json:"errors,omitempty" jsonschema:"description=Errors"`
	Permalink  string   `json:"permalink,omitempty" jsonschema:"description=Permalink"`
}

// Shop represents the Facebook Shop object
type Shop struct {
	CommerceMerchantSettings *CommerceMerchantSettings `json:"commerce_merchant_settings,omitempty" jsonschema:"description=Commerce Merchant Settings"`
	FbSalesChannel           map[string]interface{}    `json:"fb_sales_channel,omitempty" jsonschema:"description=Fb Sales Channel"`
	ID                       string                    `json:"id,omitempty" jsonschema:"description=Shop ID,required,pattern=^[0-9]+$"`
	IgSalesChannel           map[string]interface{}    `json:"ig_sales_channel,omitempty" jsonschema:"description=Ig Sales Channel"`
	IsOnsiteEnabled          bool                      `json:"is_onsite_enabled,omitempty" jsonschema:"description=Is Onsite Enabled"`
	ShopStatus               string                    `json:"shop_status,omitempty" jsonschema:"description=Shop Status"`
	Workspace                map[string]interface{}    `json:"workspace,omitempty" jsonschema:"description=Workspace"`
}

// SignalsIWLExtractor represents the Facebook SignalsIWLExtractor object
type SignalsIWLExtractor struct {
	DomainUri     string `json:"domain_uri,omitempty" jsonschema:"description=Domain Uri"`
	EventType     string `json:"event_type,omitempty" jsonschema:"description=Event Type"`
	ExtractorType string `json:"extractor_type,omitempty" jsonschema:"description=Extractor Type"`
	ID            string `json:"id,omitempty" jsonschema:"description=SignalsIWLExtractor ID,required,pattern=^[0-9]+$"`
}

// SingleOwnerAdditionalProfile represents the Facebook SingleOwnerAdditionalProfile object
type SingleOwnerAdditionalProfile struct {
	ID       string `json:"id,omitempty" jsonschema:"description=SingleOwnerAdditionalProfile ID,required,pattern=^[0-9]+$"`
	Name     string `json:"name,omitempty" jsonschema:"description=Name of the SingleOwnerAdditionalProfile,required"`
	UserName string `json:"user_name,omitempty" jsonschema:"description=User Name"`
}

// SiteLink represents the Facebook SiteLink object
type SiteLink struct {
	ID            string `json:"id,omitempty" jsonschema:"description=SiteLink ID,required,pattern=^[0-9]+$"`
	LinkImageHash string `json:"link_image_hash,omitempty" jsonschema:"description=Link Image Hash"`
	LinkTitle     string `json:"link_title,omitempty" jsonschema:"description=Link Title"`
	LinkType      string `json:"link_type,omitempty" jsonschema:"description=Link Type"`
	LinkURL       string `json:"link_url,omitempty" jsonschema:"description=Link URL,format=uri"`
}

// SlicedEventSourceGroup represents the Facebook SlicedEventSourceGroup object
type SlicedEventSourceGroup struct {
	EventSourceGroup *EventSourceGroup `json:"event_source_group,omitempty" jsonschema:"description=Event Source Group"`
	Filter           string            `json:"filter,omitempty" jsonschema:"description=Filter"`
	ID               string            `json:"id,omitempty" jsonschema:"description=SlicedEventSourceGroup ID,required,pattern=^[0-9]+$"`
	Name             string            `json:"name,omitempty" jsonschema:"description=Name of the SlicedEventSourceGroup,required"`
}

// SmartPixelInsights represents the Facebook SmartPixelInsights object
type SmartPixelInsights struct {
	Source string                   `json:"source,omitempty" jsonschema:"description=Source"`
	Stats  []map[string]interface{} `json:"stats,omitempty" jsonschema:"description=Stats"`
}

// SocialWifiSite represents the Facebook SocialWifiSite object
type SocialWifiSite struct {
	ID string `json:"id,omitempty" jsonschema:"description=SocialWifiSite ID,required,pattern=^[0-9]+$"`
}

// SplitTestWinner represents the Facebook SplitTestWinner object
type SplitTestWinner struct {
	AdObjectLevel    string               `json:"ad_object_level,omitempty" jsonschema:"description=Ad Object Level"`
	Confidences      []map[string]float64 `json:"confidences,omitempty" jsonschema:"description=Confidences"`
	WinnerAdObjectID string               `json:"winner_ad_object_id,omitempty" jsonschema:"description=ID of the Winner Ad Object,pattern=^[0-9]+$"`
}

// Status represents the Facebook Status object
type Status struct {
	Event       *Event                 `json:"event,omitempty" jsonschema:"description=Event"`
	From        map[string]interface{} `json:"from,omitempty" jsonschema:"description=From"`
	ID          string                 `json:"id,omitempty" jsonschema:"description=Status ID,required,pattern=^[0-9]+$"`
	Message     string                 `json:"message,omitempty" jsonschema:"description=Message"`
	Place       *Place                 `json:"place,omitempty" jsonschema:"description=Place"`
	UpdatedTime time.Time              `json:"updated_time,omitempty" jsonschema:"description=When the Status was last updated,format=date-time"`
}

// StoreCatalogSettings represents the Facebook StoreCatalogSettings object
type StoreCatalogSettings struct {
	ID   string `json:"id,omitempty" jsonschema:"description=StoreCatalogSettings ID,required,pattern=^[0-9]+$"`
	Page *Page  `json:"page,omitempty" jsonschema:"description=Page"`
}

// StoreLocation represents the Facebook StoreLocation object
type StoreLocation struct {
	FullAddress   string                 `json:"full_address,omitempty" jsonschema:"description=Full Address"`
	Hours         map[string]interface{} `json:"hours,omitempty" jsonschema:"description=Hours"`
	ID            string                 `json:"id,omitempty" jsonschema:"description=StoreLocation ID,required,pattern=^[0-9]+$"`
	PhoneNumber   string                 `json:"phone_number,omitempty" jsonschema:"description=Phone Number"`
	PickupOptions []string               `json:"pickup_options,omitempty" jsonschema:"description=Pickup Options"`
	PriceRange    string                 `json:"price_range,omitempty" jsonschema:"description=Price Range"`
	StoreCode     string                 `json:"store_code,omitempty" jsonschema:"description=Store Code"`
	ZipCode       string                 `json:"zip_code,omitempty" jsonschema:"description=Zip Code"`
}

// Stories represents the Facebook Stories object
type Stories struct {
	CreationTime string `json:"creation_time,omitempty" jsonschema:"description=Creation Time"`
	MediaID      string `json:"media_id,omitempty" jsonschema:"description=ID of the Media,pattern=^[0-9]+$"`
	MediaType    string `json:"media_type,omitempty" jsonschema:"description=Media Type"`
	PostID       string `json:"post_id,omitempty" jsonschema:"description=ID of the Post,pattern=^[0-9]+$"`
	Status       string `json:"status,omitempty" jsonschema:"description=Current status of the Stories,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	URL          string `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
}

// StreamFilter represents the Facebook StreamFilter object
type StreamFilter struct {
	FilterKey string `json:"filter_key,omitempty" jsonschema:"description=Filter Key"`
	Name      string `json:"name,omitempty" jsonschema:"description=Name of the StreamFilter,required"`
	Type      string `json:"type,omitempty" jsonschema:"description=Type"`
}

// SystemUser represents the Facebook SystemUser object
type SystemUser struct {
	CreatedBy         *User     `json:"created_by,omitempty" jsonschema:"description=When the SystemUser was created"`
	CreatedTime       time.Time `json:"created_time,omitempty" jsonschema:"description=When the SystemUser was created,format=date-time"`
	FinancePermission string    `json:"finance_permission,omitempty" jsonschema:"description=Finance Permission"`
	ID                string    `json:"id,omitempty" jsonschema:"description=SystemUser ID,required,pattern=^[0-9]+$"`
	IpPermission      string    `json:"ip_permission,omitempty" jsonschema:"description=Ip Permission"`
	Name              string    `json:"name,omitempty" jsonschema:"description=Name of the SystemUser,required"`
}

// Tab represents the Facebook Tab object
type Tab struct {
	Application               *Application `json:"application,omitempty" jsonschema:"description=Application"`
	CustomImageURL            string       `json:"custom_image_url,omitempty" jsonschema:"description=Custom Image URL,format=uri"`
	CustomName                string       `json:"custom_name,omitempty" jsonschema:"description=Custom Name"`
	ID                        string       `json:"id,omitempty" jsonschema:"description=Tab ID,required,pattern=^[0-9]+$"`
	ImageURL                  string       `json:"image_url,omitempty" jsonschema:"description=Image URL,format=uri"`
	IsNonConnectionLandingTab bool         `json:"is_non_connection_landing_tab,omitempty" jsonschema:"description=Is Non Connection Landing Tab"`
	IsPermanent               bool         `json:"is_permanent,omitempty" jsonschema:"description=Is Permanent"`
	Link                      string       `json:"link,omitempty" jsonschema:"description=Link"`
	Name                      string       `json:"name,omitempty" jsonschema:"description=Name of the Tab,required"`
	Position                  uint         `json:"position,omitempty" jsonschema:"description=Position"`
}

// TaggableSubject represents the Facebook TaggableSubject object
type TaggableSubject struct {
	ID   string `json:"id,omitempty" jsonschema:"description=TaggableSubject ID,required,pattern=^[0-9]+$"`
	Name string `json:"name,omitempty" jsonschema:"description=Name of the TaggableSubject,required"`
}

// Targeting represents the Facebook Targeting object
type Targeting struct {
	AdgroupID                         string                              `json:"adgroup_id,omitempty" jsonschema:"description=ID of the Adgroup,pattern=^[0-9]+$"`
	AgeMax                            uint                                `json:"age_max,omitempty" jsonschema:"description=Age Max,minimum=13,maximum=100"`
	AgeMin                            uint                                `json:"age_min,omitempty" jsonschema:"description=Age Min,minimum=13,maximum=100"`
	AgeRange                          []uint                              `json:"age_range,omitempty" jsonschema:"description=Age Range,minimum=13,maximum=100"`
	AlternateAutoTargetingOption      string                              `json:"alternate_auto_targeting_option,omitempty" jsonschema:"description=Alternate Auto Targeting Option"`
	AppInstallState                   string                              `json:"app_install_state,omitempty" jsonschema:"description=App Install State"`
	AudienceNetworkPositions          []string                            `json:"audience_network_positions,omitempty" jsonschema:"description=Audience Network Positions"`
	Behaviors                         []*IDName                           `json:"behaviors,omitempty" jsonschema:"description=Behaviors"`
	BrandSafetyContentFilterLevels    []string                            `json:"brand_safety_content_filter_levels,omitempty" jsonschema:"description=Brand Safety Content Filter Levels"`
	CatalogBasedTargeting             *CatalogBasedTargeting              `json:"catalog_based_targeting,omitempty" jsonschema:"description=Catalog Based Targeting"`
	Cities                            []*IDName                           `json:"cities,omitempty" jsonschema:"description=Cities"`
	CollegeYears                      []uint                              `json:"college_years,omitempty" jsonschema:"description=College Years"`
	Connections                       []*ConnectionsTargeting             `json:"connections,omitempty" jsonschema:"description=Connections"`
	ContextualTargetingCategories     []*IDName                           `json:"contextual_targeting_categories,omitempty" jsonschema:"description=Contextual Targeting Categories"`
	Countries                         []string                            `json:"countries,omitempty" jsonschema:"description=Countries"`
	Country                           []string                            `json:"country,omitempty" jsonschema:"description=Country"`
	CountryGroups                     []string                            `json:"country_groups,omitempty" jsonschema:"description=Country Groups"`
	CustomAudiences                   []*RawCustomAudience                `json:"custom_audiences,omitempty" jsonschema:"description=Custom Audiences"`
	DevicePlatforms                   []TargetingDevicePlatforms          `json:"device_platforms,omitempty" jsonschema:"description=Device Platforms"`
	DirectInstallDevices              bool                                `json:"direct_install_devices,omitempty" jsonschema:"description=Direct Install Devices"`
	DynamicAudienceIDs                []string                            `json:"dynamic_audience_ids,omitempty" jsonschema:"description=Dynamic Audience Ids,pattern=^[0-9]+$"`
	EducationMajors                   []*IDName                           `json:"education_majors,omitempty" jsonschema:"description=Education Majors"`
	EducationSchools                  []*IDName                           `json:"education_schools,omitempty" jsonschema:"description=Education Schools"`
	EducationStatuses                 []uint                              `json:"education_statuses,omitempty" jsonschema:"description=Education Statuses"`
	EffectiveAudienceNetworkPositions []string                            `json:"effective_audience_network_positions,omitempty" jsonschema:"description=Effective Audience Network Positions"`
	EffectiveDevicePlatforms          []TargetingEffectiveDevicePlatforms `json:"effective_device_platforms,omitempty" jsonschema:"description=Effective Device Platforms"`
	EffectiveFacebookPositions        []string                            `json:"effective_facebook_positions,omitempty" jsonschema:"description=Effective Facebook Positions"`
	EffectiveInstagramPositions       []string                            `json:"effective_instagram_positions,omitempty" jsonschema:"description=Effective Instagram Positions"`
	EffectiveMessengerPositions       []string                            `json:"effective_messenger_positions,omitempty" jsonschema:"description=Effective Messenger Positions"`
	EffectivePublisherPlatforms       []string                            `json:"effective_publisher_platforms,omitempty" jsonschema:"description=Effective Publisher Platforms"`
	EffectiveThreadsPositions         []string                            `json:"effective_threads_positions,omitempty" jsonschema:"description=Effective Threads Positions"`
	EngagementSpecs                   []*TargetingDynamicRule             `json:"engagement_specs,omitempty" jsonschema:"description=Engagement Specs"`
	EthnicAffinity                    []*IDName                           `json:"ethnic_affinity,omitempty" jsonschema:"description=Ethnic Affinity"`
	ExcludeReachedSince               []string                            `json:"exclude_reached_since,omitempty" jsonschema:"description=Exclude Reached Since"`
	ExcludedBrandSafetyContentTypes   []string                            `json:"excluded_brand_safety_content_types,omitempty" jsonschema:"description=Excluded Brand Safety Content Types"`
	ExcludedConnections               []*ConnectionsTargeting             `json:"excluded_connections,omitempty" jsonschema:"description=Excluded Connections"`
	ExcludedCustomAudiences           []*RawCustomAudience                `json:"excluded_custom_audiences,omitempty" jsonschema:"description=Excluded Custom Audiences"`
	ExcludedDynamicAudienceIDs        []string                            `json:"excluded_dynamic_audience_ids,omitempty" jsonschema:"description=Excluded Dynamic Audience Ids,pattern=^[0-9]+$"`
	ExcludedEngagementSpecs           []*TargetingDynamicRule             `json:"excluded_engagement_specs,omitempty" jsonschema:"description=Excluded Engagement Specs"`
	ExcludedGeoLocations              *TargetingGeoLocation               `json:"excluded_geo_locations,omitempty" jsonschema:"description=Excluded Geo Locations"`
	ExcludedMobileDeviceModel         []string                            `json:"excluded_mobile_device_model,omitempty" jsonschema:"description=Excluded Mobile Device Model"`
	ExcludedProductAudienceSpecs      []*TargetingProductAudienceSpec     `json:"excluded_product_audience_specs,omitempty" jsonschema:"description=Excluded Product Audience Specs"`
	ExcludedPublisherCategories       []string                            `json:"excluded_publisher_categories,omitempty" jsonschema:"description=Excluded Publisher Categories"`
	ExcludedPublisherListIDs          []string                            `json:"excluded_publisher_list_ids,omitempty" jsonschema:"description=Excluded Publisher List Ids,pattern=^[0-9]+$"`
	ExcludedUserDevice                []string                            `json:"excluded_user_device,omitempty" jsonschema:"description=Excluded User Device"`
	Exclusions                        *FlexibleTargeting                  `json:"exclusions,omitempty" jsonschema:"description=Exclusions"`
	FacebookPositions                 []string                            `json:"facebook_positions,omitempty" jsonschema:"description=Facebook Positions"`
	FamilyStatuses                    []*IDName                           `json:"family_statuses,omitempty" jsonschema:"description=Family Statuses"`
	FbDealID                          string                              `json:"fb_deal_id,omitempty" jsonschema:"description=ID of the Fb Deal,pattern=^[0-9]+$"`
	FlexibleSpec                      []*FlexibleTargeting                `json:"flexible_spec,omitempty" jsonschema:"description=Flexible Spec"`
	FriendsOfConnections              []*ConnectionsTargeting             `json:"friends_of_connections,omitempty" jsonschema:"description=Friends Of Connections"`
	Genders                           []uint                              `json:"genders,omitempty" jsonschema:"description=Genders"`
	Generation                        []*IDName                           `json:"generation,omitempty" jsonschema:"description=Generation"`
	GeoLocations                      *TargetingGeoLocation               `json:"geo_locations,omitempty" jsonschema:"description=Geo Locations"`
	HomeOwnership                     []*IDName                           `json:"home_ownership,omitempty" jsonschema:"description=Home Ownership"`
	HomeType                          []*IDName                           `json:"home_type,omitempty" jsonschema:"description=Home Type"`
	HomeValue                         []*IDName                           `json:"home_value,omitempty" jsonschema:"description=Home Value"`
	HouseholdComposition              []*IDName                           `json:"household_composition,omitempty" jsonschema:"description=Household Composition"`
	Income                            []*IDName                           `json:"income,omitempty" jsonschema:"description=Income"`
	Industries                        []*IDName                           `json:"industries,omitempty" jsonschema:"description=Industries"`
	InstagramPositions                []string                            `json:"instagram_positions,omitempty" jsonschema:"description=Instagram Positions"`
	InstreamVideoSkippableExcluded    bool                                `json:"instream_video_skippable_excluded,omitempty" jsonschema:"description=Instream Video Skippable Excluded"`
	InterestedIn                      []uint                              `json:"interested_in,omitempty" jsonschema:"description=Interested In"`
	Interests                         []*IDName                           `json:"interests,omitempty" jsonschema:"description=Interests"`
	IsWhatsappDestinationAd           bool                                `json:"is_whatsapp_destination_ad,omitempty" jsonschema:"description=Is Whatsapp Destination Ad"`
	Keywords                          []string                            `json:"keywords,omitempty" jsonschema:"description=Keywords"`
	LifeEvents                        []*IDName                           `json:"life_events,omitempty" jsonschema:"description=Life Events"`
	Locales                           []uint                              `json:"locales,omitempty" jsonschema:"description=Locales"`
	MessengerPositions                []string                            `json:"messenger_positions,omitempty" jsonschema:"description=Messenger Positions"`
	Moms                              []*IDName                           `json:"moms,omitempty" jsonschema:"description=Moms"`
	NetWorth                          []*IDName                           `json:"net_worth,omitempty" jsonschema:"description=Net Worth"`
	OfficeType                        []*IDName                           `json:"office_type,omitempty" jsonschema:"description=Office Type"`
	PlacePageSetIDs                   []string                            `json:"place_page_set_ids,omitempty" jsonschema:"description=Place Page Set Ids,pattern=^[0-9]+$"`
	PoliticalViews                    []uint                              `json:"political_views,omitempty" jsonschema:"description=Political Views"`
	Politics                          []*IDName                           `json:"politics,omitempty" jsonschema:"description=Politics"`
	ProductAudienceSpecs              []*TargetingProductAudienceSpec     `json:"product_audience_specs,omitempty" jsonschema:"description=Product Audience Specs"`
	ProspectingAudience               *TargetingProspectingAudience       `json:"prospecting_audience,omitempty" jsonschema:"description=Prospecting Audience"`
	PublisherPlatforms                []string                            `json:"publisher_platforms,omitempty" jsonschema:"description=Publisher Platforms"`
	Radius                            string                              `json:"radius,omitempty" jsonschema:"description=Radius"`
	Regions                           []*IDName                           `json:"regions,omitempty" jsonschema:"description=Regions"`
	RelationshipStatuses              []uint                              `json:"relationship_statuses,omitempty" jsonschema:"description=Relationship Statuses"`
	SiteCategory                      []string                            `json:"site_category,omitempty" jsonschema:"description=Site Category"`
	TargetingAutomation               *TargetingAutomation                `json:"targeting_automation,omitempty" jsonschema:"description=Targeting Automation"`
	TargetingOptimization             string                              `json:"targeting_optimization,omitempty" jsonschema:"description=Targeting Optimization"`
	TargetingRelaxationTypes          *TargetingRelaxation                `json:"targeting_relaxation_types,omitempty" jsonschema:"description=Targeting Relaxation Types"`
	ThreadsPositions                  []string                            `json:"threads_positions,omitempty" jsonschema:"description=Threads Positions"`
	UserAdclusters                    []*IDName                           `json:"user_adclusters,omitempty" jsonschema:"description=User Adclusters"`
	UserDevice                        []string                            `json:"user_device,omitempty" jsonschema:"description=User Device"`
	UserEvent                         []uint                              `json:"user_event,omitempty" jsonschema:"description=User Event"`
	UserOs                            []string                            `json:"user_os,omitempty" jsonschema:"description=User Os"`
	WirelessCarrier                   []string                            `json:"wireless_carrier,omitempty" jsonschema:"description=Wireless Carrier"`
	WorkEmployers                     []*IDName                           `json:"work_employers,omitempty" jsonschema:"description=Work Employers"`
	WorkPositions                     []*IDName                           `json:"work_positions,omitempty" jsonschema:"description=Work Positions"`
	Zips                              []string                            `json:"zips,omitempty" jsonschema:"description=Zips"`
}

// TargetingAutomation represents the Facebook TargetingAutomation object
type TargetingAutomation struct {
	AdvantageAudience uint                   `json:"advantage_audience,omitempty" jsonschema:"description=Advantage Audience,minimum=13,maximum=100"`
	IndividualSetting map[string]interface{} `json:"individual_setting,omitempty" jsonschema:"description=Individual Setting"`
	SharedAudiences   uint                   `json:"shared_audiences,omitempty" jsonschema:"description=Shared Audiences"`
	ValueExpression   uint                   `json:"value_expression,omitempty" jsonschema:"description=Value Expression"`
}

// TargetingDynamicRule represents the Facebook TargetingDynamicRule object
type TargetingDynamicRule struct {
	ActionType       string `json:"action.type,omitempty" jsonschema:"description=Action.Type"`
	AdGroupID        string `json:"ad_group_id,omitempty" jsonschema:"description=ID of the Ad Group,pattern=^[0-9]+$"`
	CampaignGroupID  string `json:"campaign_group_id,omitempty" jsonschema:"description=ID of the Campaign Group,pattern=^[0-9]+$"`
	CampaignID       string `json:"campaign_id,omitempty" jsonschema:"description=ID of the Campaign,pattern=^[0-9]+$"`
	ImpressionCount  string `json:"impression_count,omitempty" jsonschema:"description=Impression Count"`
	PageID           string `json:"page_id,omitempty" jsonschema:"description=ID of the Page,pattern=^[0-9]+$"`
	Post             string `json:"post,omitempty" jsonschema:"description=Post"`
	RetentionSeconds string `json:"retention_seconds,omitempty" jsonschema:"description=Retention Seconds"`
}

// TargetingGeoLocation represents the Facebook TargetingGeoLocation object
type TargetingGeoLocation struct {
	Cities             []*TargetingGeoLocationCity              `json:"cities,omitempty" jsonschema:"description=Cities"`
	Countries          []string                                 `json:"countries,omitempty" jsonschema:"description=Countries"`
	CountryGroups      []string                                 `json:"country_groups,omitempty" jsonschema:"description=Country Groups"`
	CustomLocations    []*TargetingGeoLocationCustomLocation    `json:"custom_locations,omitempty" jsonschema:"description=Custom Locations"`
	ElectoralDistricts []*TargetingGeoLocationElectoralDistrict `json:"electoral_districts,omitempty" jsonschema:"description=Electoral Districts"`
	GeoMarkets         []*TargetingGeoLocationMarket            `json:"geo_markets,omitempty" jsonschema:"description=Geo Markets"`
	LargeGeoAreas      []*TargetingGeoLocationGeoEntities       `json:"large_geo_areas,omitempty" jsonschema:"description=Large Geo Areas"`
	LocationClusterIDs []*TargetingGeoLocationLocationCluster   `json:"location_cluster_ids,omitempty" jsonschema:"description=Location Cluster Ids,pattern=^[0-9]+$"`
	LocationTypes      []string                                 `json:"location_types,omitempty" jsonschema:"description=Location Types"`
	MediumGeoAreas     []*TargetingGeoLocationGeoEntities       `json:"medium_geo_areas,omitempty" jsonschema:"description=Medium Geo Areas"`
	MetroAreas         []*TargetingGeoLocationGeoEntities       `json:"metro_areas,omitempty" jsonschema:"description=Metro Areas"`
	Neighborhoods      []*TargetingGeoLocationGeoEntities       `json:"neighborhoods,omitempty" jsonschema:"description=Neighborhoods"`
	Places             []*TargetingGeoLocationPlace             `json:"places,omitempty" jsonschema:"description=Places"`
	PoliticalDistricts []*TargetingGeoLocationPoliticalDistrict `json:"political_districts,omitempty" jsonschema:"description=Political Districts"`
	Regions            []*TargetingGeoLocationRegion            `json:"regions,omitempty" jsonschema:"description=Regions"`
	SmallGeoAreas      []*TargetingGeoLocationGeoEntities       `json:"small_geo_areas,omitempty" jsonschema:"description=Small Geo Areas"`
	Subcities          []*TargetingGeoLocationGeoEntities       `json:"subcities,omitempty" jsonschema:"description=Subcities"`
	Subneighborhoods   []*TargetingGeoLocationGeoEntities       `json:"subneighborhoods,omitempty" jsonschema:"description=Subneighborhoods"`
	Zips               []*TargetingGeoLocationZip               `json:"zips,omitempty" jsonschema:"description=Zips"`
}

// TargetingGeoLocationCity represents the Facebook TargetingGeoLocationCity object
type TargetingGeoLocationCity struct {
	Country      string `json:"country,omitempty" jsonschema:"description=Country"`
	DistanceUnit string `json:"distance_unit,omitempty" jsonschema:"description=Distance Unit"`
	Key          string `json:"key,omitempty" jsonschema:"description=Key"`
	Name         string `json:"name,omitempty" jsonschema:"description=Name of the TargetingGeoLocationCity,required"`
	Radius       uint   `json:"radius,omitempty" jsonschema:"description=Radius"`
	Region       string `json:"region,omitempty" jsonschema:"description=Region"`
	RegionID     string `json:"region_id,omitempty" jsonschema:"description=ID of the Region,pattern=^[0-9]+$"`
}

// TargetingGeoLocationCustomLocation represents the Facebook TargetingGeoLocationCustomLocation object
type TargetingGeoLocationCustomLocation struct {
	AddressString string  `json:"address_string,omitempty" jsonschema:"description=Address String"`
	Country       string  `json:"country,omitempty" jsonschema:"description=Country"`
	CountryGroup  string  `json:"country_group,omitempty" jsonschema:"description=Country Group"`
	CustomType    string  `json:"custom_type,omitempty" jsonschema:"description=Custom Type"`
	DistanceUnit  string  `json:"distance_unit,omitempty" jsonschema:"description=Distance Unit"`
	Key           string  `json:"key,omitempty" jsonschema:"description=Key"`
	Latitude      float64 `json:"latitude,omitempty" jsonschema:"description=Latitude"`
	Longitude     float64 `json:"longitude,omitempty" jsonschema:"description=Longitude"`
	MaxPopulation int     `json:"max_population,omitempty" jsonschema:"description=Max Population"`
	MinPopulation int     `json:"min_population,omitempty" jsonschema:"description=Min Population"`
	Name          string  `json:"name,omitempty" jsonschema:"description=Name of the TargetingGeoLocationCustomLocation,required"`
	PrimaryCityID int     `json:"primary_city_id,omitempty" jsonschema:"description=ID of the Primary City,pattern=^[0-9]+$"`
	Radius        float64 `json:"radius,omitempty" jsonschema:"description=Radius"`
	RegionID      int     `json:"region_id,omitempty" jsonschema:"description=ID of the Region,pattern=^[0-9]+$"`
}

// TargetingGeoLocationElectoralDistrict represents the Facebook TargetingGeoLocationElectoralDistrict object
type TargetingGeoLocationElectoralDistrict struct {
	Country           string `json:"country,omitempty" jsonschema:"description=Country"`
	DeprecationCode   string `json:"deprecation_code,omitempty" jsonschema:"description=Deprecation Code"`
	ElectoralDistrict string `json:"electoral_district,omitempty" jsonschema:"description=Electoral District"`
	Key               string `json:"key,omitempty" jsonschema:"description=Key"`
	Name              string `json:"name,omitempty" jsonschema:"description=Name of the TargetingGeoLocationElectoralDistrict,required"`
}

// TargetingGeoLocationGeoEntities represents the Facebook TargetingGeoLocationGeoEntities object
type TargetingGeoLocationGeoEntities struct {
	Country  string `json:"country,omitempty" jsonschema:"description=Country"`
	Key      string `json:"key,omitempty" jsonschema:"description=Key"`
	Name     string `json:"name,omitempty" jsonschema:"description=Name of the TargetingGeoLocationGeoEntities,required"`
	Region   string `json:"region,omitempty" jsonschema:"description=Region"`
	RegionID string `json:"region_id,omitempty" jsonschema:"description=ID of the Region,pattern=^[0-9]+$"`
}

// TargetingGeoLocationLocationCluster represents the Facebook TargetingGeoLocationLocationCluster object
type TargetingGeoLocationLocationCluster struct {
	Key int `json:"key,omitempty" jsonschema:"description=Key"`
}

// TargetingGeoLocationLocationExpansion represents the Facebook TargetingGeoLocationLocationExpansion object
type TargetingGeoLocationLocationExpansion struct {
	Allowed bool   `json:"allowed,omitempty" jsonschema:"description=Allowed"`
	Intent  string `json:"intent,omitempty" jsonschema:"description=Intent"`
}

// TargetingGeoLocationMarket represents the Facebook TargetingGeoLocationMarket object
type TargetingGeoLocationMarket struct {
	Country    string `json:"country,omitempty" jsonschema:"description=Country"`
	Key        string `json:"key,omitempty" jsonschema:"description=Key"`
	MarketType string `json:"market_type,omitempty" jsonschema:"description=Market Type"`
	Name       string `json:"name,omitempty" jsonschema:"description=Name of the TargetingGeoLocationMarket,required"`
}

// TargetingGeoLocationPlace represents the Facebook TargetingGeoLocationPlace object
type TargetingGeoLocationPlace struct {
	Country       string  `json:"country,omitempty" jsonschema:"description=Country"`
	DistanceUnit  string  `json:"distance_unit,omitempty" jsonschema:"description=Distance Unit"`
	Key           string  `json:"key,omitempty" jsonschema:"description=Key"`
	Latitude      float64 `json:"latitude,omitempty" jsonschema:"description=Latitude"`
	Longitude     float64 `json:"longitude,omitempty" jsonschema:"description=Longitude"`
	Name          string  `json:"name,omitempty" jsonschema:"description=Name of the TargetingGeoLocationPlace,required"`
	PrimaryCityID int     `json:"primary_city_id,omitempty" jsonschema:"description=ID of the Primary City,pattern=^[0-9]+$"`
	Radius        float64 `json:"radius,omitempty" jsonschema:"description=Radius"`
	RegionID      int     `json:"region_id,omitempty" jsonschema:"description=ID of the Region,pattern=^[0-9]+$"`
}

// TargetingGeoLocationPoliticalDistrict represents the Facebook TargetingGeoLocationPoliticalDistrict object
type TargetingGeoLocationPoliticalDistrict struct {
	Country           string `json:"country,omitempty" jsonschema:"description=Country"`
	Key               string `json:"key,omitempty" jsonschema:"description=Key"`
	Name              string `json:"name,omitempty" jsonschema:"description=Name of the TargetingGeoLocationPoliticalDistrict,required"`
	PoliticalDistrict string `json:"political_district,omitempty" jsonschema:"description=Political District"`
}

// TargetingGeoLocationRegion represents the Facebook TargetingGeoLocationRegion object
type TargetingGeoLocationRegion struct {
	Country string `json:"country,omitempty" jsonschema:"description=Country"`
	Key     string `json:"key,omitempty" jsonschema:"description=Key"`
	Name    string `json:"name,omitempty" jsonschema:"description=Name of the TargetingGeoLocationRegion,required"`
}

// TargetingGeoLocationZip represents the Facebook TargetingGeoLocationZip object
type TargetingGeoLocationZip struct {
	Country       string `json:"country,omitempty" jsonschema:"description=Country"`
	Key           string `json:"key,omitempty" jsonschema:"description=Key"`
	Name          string `json:"name,omitempty" jsonschema:"description=Name of the TargetingGeoLocationZip,required"`
	PrimaryCityID int    `json:"primary_city_id,omitempty" jsonschema:"description=ID of the Primary City,pattern=^[0-9]+$"`
	RegionID      int    `json:"region_id,omitempty" jsonschema:"description=ID of the Region,pattern=^[0-9]+$"`
}

// TargetingMarketingMessageChannels represents the Facebook TargetingMarketingMessageChannels object
type TargetingMarketingMessageChannels struct {
	Whatsapp *IDName `json:"whatsapp,omitempty" jsonschema:"description=Whatsapp"`
}

// TargetingProductAudienceSpec represents the Facebook TargetingProductAudienceSpec object
type TargetingProductAudienceSpec struct {
	Exclusions   []*TargetingProductAudienceSubSpec `json:"exclusions,omitempty" jsonschema:"description=Exclusions"`
	Inclusions   []*TargetingProductAudienceSubSpec `json:"inclusions,omitempty" jsonschema:"description=Inclusions"`
	ProductSetID string                             `json:"product_set_id,omitempty" jsonschema:"description=ID of the Product Set,pattern=^[0-9]+$"`
}

// TargetingProductAudienceSubSpec represents the Facebook TargetingProductAudienceSubSpec object
type TargetingProductAudienceSubSpec struct {
	RetentionSeconds string `json:"retention_seconds,omitempty" jsonschema:"description=Retention Seconds"`
	Rule             string `json:"rule,omitempty" jsonschema:"description=Rule"`
}

// TargetingProspectingAudience represents the Facebook TargetingProspectingAudience object
type TargetingProspectingAudience struct {
	Sources []map[string]interface{} `json:"sources,omitempty" jsonschema:"description=Sources"`
}

// TargetingRelaxation represents the Facebook TargetingRelaxation object
type TargetingRelaxation struct {
	CustomAudience uint `json:"custom_audience,omitempty" jsonschema:"description=Custom Audience"`
	Lookalike      uint `json:"lookalike,omitempty" jsonschema:"description=Lookalike"`
}

// TargetingSentenceLine represents the Facebook TargetingSentenceLine object
type TargetingSentenceLine struct {
	ID                     string      `json:"id,omitempty" jsonschema:"description=TargetingSentenceLine ID,required,pattern=^[0-9]+$"`
	Params                 *Targeting  `json:"params,omitempty" jsonschema:"description=Params"`
	Targetingsentencelines interface{} `json:"targetingsentencelines,omitempty" jsonschema:"description=Targetingsentencelines"`
}

// TargetingSubscriberUniverse represents the Facebook TargetingSubscriberUniverse object
type TargetingSubscriberUniverse struct {
	MessengerSubscriberSource *IDName `json:"messenger_subscriber_source,omitempty" jsonschema:"description=Messenger Subscriber Source"`
	WhatsappSubscriberPool    *IDName `json:"whatsapp_subscriber_pool,omitempty" jsonschema:"description=Whatsapp Subscriber Pool"`
	WhatsappSubscriberSource  *IDName `json:"whatsapp_subscriber_source,omitempty" jsonschema:"description=Whatsapp Subscriber Source"`
}

// TextWithEntities represents the Facebook TextWithEntities object
type TextWithEntities struct {
	Text string `json:"text,omitempty" jsonschema:"description=Text"`
}

// ThirdPartyMeasurementReportDataset represents the Facebook ThirdPartyMeasurementReportDataset object
type ThirdPartyMeasurementReportDataset struct {
	Category string                   `json:"category,omitempty" jsonschema:"description=Category"`
	ID       string                   `json:"id,omitempty" jsonschema:"description=ThirdPartyMeasurementReportDataset ID,required,pattern=^[0-9]+$"`
	Partner  *Business                `json:"partner,omitempty" jsonschema:"description=Partner"`
	Product  string                   `json:"product,omitempty" jsonschema:"description=Product"`
	Schema   []map[string]interface{} `json:"schema,omitempty" jsonschema:"description=Schema"`
}

// ThirdPartyPartnerLiftRequest represents the Facebook ThirdPartyPartnerLiftRequest object
type ThirdPartyPartnerLiftRequest struct {
	AdEntities                     []string                           `json:"ad_entities,omitempty" jsonschema:"description=Ad Entities"`
	Country                        string                             `json:"country,omitempty" jsonschema:"description=Country"`
	CreatedTime                    time.Time                          `json:"created_time,omitempty" jsonschema:"description=When the ThirdPartyPartnerLiftRequest was created,format=date-time"`
	Description                    string                             `json:"description,omitempty" jsonschema:"description=Description"`
	HoldoutSize                    float64                            `json:"holdout_size,omitempty" jsonschema:"description=Holdout Size"`
	ID                             string                             `json:"id,omitempty" jsonschema:"description=ThirdPartyPartnerLiftRequest ID,required,pattern=^[0-9]+$"`
	LegacyAdsDataPartnerID         string                             `json:"legacy_ads_data_partner_id,omitempty" jsonschema:"description=ID of the Legacy Ads Data Partner,pattern=^[0-9]+$"`
	LegacyAdsDataPartnerName       string                             `json:"legacy_ads_data_partner_name,omitempty" jsonschema:"description=Legacy Ads Data Partner Name"`
	ModifiedTime                   time.Time                          `json:"modified_time,omitempty" jsonschema:"description=Modified Time,format=date-time"`
	OwnerInstanceID                string                             `json:"owner_instance_id,omitempty" jsonschema:"description=ID of the Owner Instance,pattern=^[0-9]+$"`
	PartnerHouseholdGraphDatasetID string                             `json:"partner_household_graph_dataset_id,omitempty" jsonschema:"description=ID of the Partner Household Graph Dataset,pattern=^[0-9]+$"`
	Region                         string                             `json:"region,omitempty" jsonschema:"description=Region"`
	Status                         ThirdpartypartnerliftrequestStatus `json:"status,omitempty" jsonschema:"description=Current status of the ThirdPartyPartnerLiftRequest,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	StudyCells                     []string                           `json:"study_cells,omitempty" jsonschema:"description=Study Cells"`
	StudyEndTime                   time.Time                          `json:"study_end_time,omitempty" jsonschema:"description=Study End Time,format=date-time"`
	StudyStartTime                 time.Time                          `json:"study_start_time,omitempty" jsonschema:"description=Study Start Time,format=date-time"`
}

// ThirdPartyPartnerPanelRequest represents the Facebook ThirdPartyPartnerPanelRequest object
type ThirdPartyPartnerPanelRequest struct {
	AdentitiesIDs   []string                               `json:"adentities_ids,omitempty" jsonschema:"description=Adentities Ids,pattern=^[0-9]+$"`
	Country         string                                 `json:"country,omitempty" jsonschema:"description=Country"`
	CreatedTime     time.Time                              `json:"created_time,omitempty" jsonschema:"description=When the ThirdPartyPartnerPanelRequest was created,format=date-time"`
	Description     string                                 `json:"description,omitempty" jsonschema:"description=Description"`
	ID              string                                 `json:"id,omitempty" jsonschema:"description=ThirdPartyPartnerPanelRequest ID,required,pattern=^[0-9]+$"`
	ModifiedTime    time.Time                              `json:"modified_time,omitempty" jsonschema:"description=Modified Time,format=date-time"`
	OwnerInstanceID string                                 `json:"owner_instance_id,omitempty" jsonschema:"description=ID of the Owner Instance,pattern=^[0-9]+$"`
	OwnerPanelID    string                                 `json:"owner_panel_id,omitempty" jsonschema:"description=ID of the Owner Panel,pattern=^[0-9]+$"`
	OwnerPanelName  string                                 `json:"owner_panel_name,omitempty" jsonschema:"description=Owner Panel Name"`
	Status          ThirdpartypartnerpanelrequestStatus    `json:"status,omitempty" jsonschema:"description=Current status of the ThirdPartyPartnerPanelRequest,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	StudyEndTime    time.Time                              `json:"study_end_time,omitempty" jsonschema:"description=Study End Time,format=date-time"`
	StudyStartTime  time.Time                              `json:"study_start_time,omitempty" jsonschema:"description=Study Start Time,format=date-time"`
	StudyType       ThirdpartypartnerpanelrequestStudyType `json:"study_type,omitempty" jsonschema:"description=Study Type"`
}

// ThirdPartyPartnerPanelScheduled represents the Facebook ThirdPartyPartnerPanelScheduled object
type ThirdPartyPartnerPanelScheduled struct {
	AdentitiesIDs   []string                                 `json:"adentities_ids,omitempty" jsonschema:"description=Adentities Ids,pattern=^[0-9]+$"`
	Cadence         string                                   `json:"cadence,omitempty" jsonschema:"description=Cadence"`
	Country         string                                   `json:"country,omitempty" jsonschema:"description=Country"`
	CreatedTime     time.Time                                `json:"created_time,omitempty" jsonschema:"description=When the ThirdPartyPartnerPanelScheduled was created,format=date-time"`
	Description     string                                   `json:"description,omitempty" jsonschema:"description=Description"`
	EndTime         time.Time                                `json:"end_time,omitempty" jsonschema:"description=End Time,format=date-time"`
	ID              string                                   `json:"id,omitempty" jsonschema:"description=ThirdPartyPartnerPanelScheduled ID,required,pattern=^[0-9]+$"`
	ModifiedTime    time.Time                                `json:"modified_time,omitempty" jsonschema:"description=Modified Time,format=date-time"`
	OwnerInstanceID string                                   `json:"owner_instance_id,omitempty" jsonschema:"description=ID of the Owner Instance,pattern=^[0-9]+$"`
	OwnerPanelID    string                                   `json:"owner_panel_id,omitempty" jsonschema:"description=ID of the Owner Panel,pattern=^[0-9]+$"`
	OwnerPanelName  string                                   `json:"owner_panel_name,omitempty" jsonschema:"description=Owner Panel Name"`
	StartTime       time.Time                                `json:"start_time,omitempty" jsonschema:"description=Start Time,format=date-time"`
	Status          ThirdpartypartnerpanelscheduledStatus    `json:"status,omitempty" jsonschema:"description=Current status of the ThirdPartyPartnerPanelScheduled,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	StudyType       ThirdpartypartnerpanelscheduledStudyType `json:"study_type,omitempty" jsonschema:"description=Study Type"`
}

// ThirdPartyPartnerViewabilityRequest represents the Facebook ThirdPartyPartnerViewabilityRequest object
type ThirdPartyPartnerViewabilityRequest struct {
	CreatedTime     time.Time                                   `json:"created_time,omitempty" jsonschema:"description=When the ThirdPartyPartnerViewabilityRequest was created,format=date-time"`
	Description     string                                      `json:"description,omitempty" jsonschema:"description=Description"`
	Ds              string                                      `json:"ds,omitempty" jsonschema:"description=Ds"`
	Hour            time.Time                                   `json:"hour,omitempty" jsonschema:"description=Hour,format=date-time"`
	ID              string                                      `json:"id,omitempty" jsonschema:"description=ThirdPartyPartnerViewabilityRequest ID,required,pattern=^[0-9]+$"`
	Metric          ThirdpartypartnerviewabilityrequestMetric   `json:"metric,omitempty" jsonschema:"description=Metric"`
	ModifiedTime    time.Time                                   `json:"modified_time,omitempty" jsonschema:"description=Modified Time,format=date-time"`
	OwnerInstanceID string                                      `json:"owner_instance_id,omitempty" jsonschema:"description=ID of the Owner Instance,pattern=^[0-9]+$"`
	Platform        ThirdpartypartnerviewabilityrequestPlatform `json:"platform,omitempty" jsonschema:"description=Platform"`
	Status          ThirdpartypartnerviewabilityrequestStatus   `json:"status,omitempty" jsonschema:"description=Current status of the ThirdPartyPartnerViewabilityRequest,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	TotalFileCount  uint                                        `json:"total_file_count,omitempty" jsonschema:"description=Total File Count"`
}

// ThreadsUser represents the Facebook ThreadsUser object
type ThreadsUser struct {
	ThreadsUserID         string `json:"threads_user_id,omitempty" jsonschema:"description=ID of the Threads User,pattern=^[0-9]+$"`
	ThreadsUserProfilePic string `json:"threads_user_profile_pic,omitempty" jsonschema:"description=Threads User Profile Pic"`
}

// TimeSuggestion represents the Facebook TimeSuggestion object
type TimeSuggestion struct {
	HighDemandPeriods []map[string]interface{} `json:"high_demand_periods,omitempty" jsonschema:"description=High Demand Periods"`
	IsEnabled         bool                     `json:"is_enabled,omitempty" jsonschema:"description=Is Enabled"`
}

// TimezoneOffset represents the Facebook TimezoneOffset object
type TimezoneOffset struct {
	Abbr   string `json:"abbr,omitempty" jsonschema:"description=Abbr"`
	Isdst  bool   `json:"isdst,omitempty" jsonschema:"description=Isdst"`
	Offset int    `json:"offset,omitempty" jsonschema:"description=Offset"`
	Time   string `json:"time,omitempty" jsonschema:"description=Time"`
	Ts     uint   `json:"ts,omitempty" jsonschema:"description=Ts"`
}

// TrackingAndConversionWithDefaults represents the Facebook TrackingAndConversionWithDefaults object
type TrackingAndConversionWithDefaults struct {
	CustomConversion  []map[string]interface{} `json:"custom_conversion,omitempty" jsonschema:"description=Custom Conversion"`
	CustomTracking    []map[string]interface{} `json:"custom_tracking,omitempty" jsonschema:"description=Custom Tracking"`
	DefaultConversion []map[string]interface{} `json:"default_conversion,omitempty" jsonschema:"description=Default Conversion"`
	DefaultTracking   []map[string]interface{} `json:"default_tracking,omitempty" jsonschema:"description=Default Tracking"`
}

// TransactableItem represents the Facebook TransactableItem object
type TransactableItem struct {
	ActionTitle            string                           `json:"action_title,omitempty" jsonschema:"description=Action Title"`
	Applinks               *CatalogItemAppLinks             `json:"applinks,omitempty" jsonschema:"description=Applinks"`
	CategorySpecificFields *CatalogSubVerticalList          `json:"category_specific_fields,omitempty" jsonschema:"description=Category Specific Fields"`
	Currency               string                           `json:"currency,omitempty" jsonschema:"description=Currency"`
	Description            string                           `json:"description,omitempty" jsonschema:"description=Description"`
	DurationTime           uint                             `json:"duration_time,omitempty" jsonschema:"description=Duration Time"`
	DurationType           string                           `json:"duration_type,omitempty" jsonschema:"description=Duration Type"`
	ID                     string                           `json:"id,omitempty" jsonschema:"description=TransactableItem ID,required,pattern=^[0-9]+$"`
	ImageFetchStatus       TransactableitemImageFetchStatus `json:"image_fetch_status,omitempty" jsonschema:"description=Image Fetch Status"`
	Images                 []string                         `json:"images,omitempty" jsonschema:"description=Images"`
	OrderIndex             uint                             `json:"order_index,omitempty" jsonschema:"description=Order Index"`
	Price                  string                           `json:"price,omitempty" jsonschema:"description=Price"`
	PriceType              string                           `json:"price_type,omitempty" jsonschema:"description=Price Type"`
	SanitizedImages        []string                         `json:"sanitized_images,omitempty" jsonschema:"description=Sanitized Images"`
	SessionType            string                           `json:"session_type,omitempty" jsonschema:"description=Session Type"`
	TimePaddingAfterEnd    uint                             `json:"time_padding_after_end,omitempty" jsonschema:"description=Time Padding After End"`
	Title                  string                           `json:"title,omitempty" jsonschema:"description=Title"`
	TransactableItemID     string                           `json:"transactable_item_id,omitempty" jsonschema:"description=ID of the Transactable Item,pattern=^[0-9]+$"`
	URL                    string                           `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
	Visibility             TransactableitemVisibility       `json:"visibility,omitempty" jsonschema:"description=Visibility"`
}

// Transaction represents the Facebook Transaction object
type Transaction struct {
	AccountID               string                 `json:"account_id,omitempty" jsonschema:"description=ID of the Account,pattern=^[0-9]+$"`
	AppAmount               map[string]interface{} `json:"app_amount,omitempty" jsonschema:"description=App Amount"`
	BillingEndTime          uint                   `json:"billing_end_time,omitempty" jsonschema:"description=Billing End Time"`
	BillingReason           string                 `json:"billing_reason,omitempty" jsonschema:"description=Billing Reason"`
	BillingStartTime        uint                   `json:"billing_start_time,omitempty" jsonschema:"description=Billing Start Time"`
	CardChargeMode          uint                   `json:"card_charge_mode,omitempty" jsonschema:"description=Card Charge Mode"`
	ChargeType              string                 `json:"charge_type,omitempty" jsonschema:"description=Charge Type"`
	CheckoutCampaignGroupID string                 `json:"checkout_campaign_group_id,omitempty" jsonschema:"description=ID of the Checkout Campaign Group,pattern=^[0-9]+$"`
	CredentialID            string                 `json:"credential_id,omitempty" jsonschema:"description=ID of the Credential,pattern=^[0-9]+$"`
	FaturaID                uint                   `json:"fatura_id,omitempty" jsonschema:"description=ID of the Fatura,pattern=^[0-9]+$"`
	ID                      string                 `json:"id,omitempty" jsonschema:"description=Transaction ID,required,pattern=^[0-9]+$"`
	IsBusinessEcCharge      bool                   `json:"is_business_ec_charge,omitempty" jsonschema:"description=Is Business Ec Charge"`
	IsFundingEvent          bool                   `json:"is_funding_event,omitempty" jsonschema:"description=Is Funding Event"`
	PaymentOption           string                 `json:"payment_option,omitempty" jsonschema:"description=Payment Option"`
	ProductType             TransactionProductType `json:"product_type,omitempty" jsonschema:"description=Product Type"`
	ProviderAmount          map[string]interface{} `json:"provider_amount,omitempty" jsonschema:"description=Provider Amount"`
	Status                  string                 `json:"status,omitempty" jsonschema:"description=Current status of the Transaction,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	Time                    uint                   `json:"time,omitempty" jsonschema:"description=Time"`
	TrackingID              string                 `json:"tracking_id,omitempty" jsonschema:"description=ID of the Tracking,pattern=^[0-9]+$"`
	TransactionType         string                 `json:"transaction_type,omitempty" jsonschema:"description=Transaction Type"`
	TxType                  uint                   `json:"tx_type,omitempty" jsonschema:"description=Tx Type"`
	VatInvoiceID            string                 `json:"vat_invoice_id,omitempty" jsonschema:"description=ID of the Vat Invoice,pattern=^[0-9]+$"`
}

// URL represents the Facebook URL object
type URL struct {
	Engagement           map[string]interface{} `json:"engagement,omitempty" jsonschema:"description=Engagement"`
	ID                   string                 `json:"id,omitempty" jsonschema:"description=URL ID,required,pattern=^[0-9]+$"`
	OgObject             map[string]interface{} `json:"og_object,omitempty" jsonschema:"description=Og Object"`
	OwnershipPermissions map[string]interface{} `json:"ownership_permissions,omitempty" jsonschema:"description=Ownership Permissions"`
	Scopes               map[string]interface{} `json:"scopes,omitempty" jsonschema:"description=Scopes"`
}

// UnifiedThread represents the Facebook UnifiedThread object
type UnifiedThread struct {
	CanReply           bool                   `json:"can_reply,omitempty" jsonschema:"description=Can Reply"`
	Folder             string                 `json:"folder,omitempty" jsonschema:"description=Folder"`
	FormerParticipants map[string]interface{} `json:"former_participants,omitempty" jsonschema:"description=Former Participants"`
	ID                 string                 `json:"id,omitempty" jsonschema:"description=UnifiedThread ID,required,pattern=^[0-9]+$"`
	IsSubscribed       bool                   `json:"is_subscribed,omitempty" jsonschema:"description=Is Subscribed"`
	Link               string                 `json:"link,omitempty" jsonschema:"description=Link"`
	LinkedGroup        *Group                 `json:"linked_group,omitempty" jsonschema:"description=Linked Group"`
	MessageCount       int                    `json:"message_count,omitempty" jsonschema:"description=Message Count,minimum=13,maximum=100"`
	Name               string                 `json:"name,omitempty" jsonschema:"description=Name of the UnifiedThread,required"`
	Participants       map[string]interface{} `json:"participants,omitempty" jsonschema:"description=Participants"`
	ScopedThreadKey    string                 `json:"scoped_thread_key,omitempty" jsonschema:"description=Scoped Thread Key"`
	Senders            map[string]interface{} `json:"senders,omitempty" jsonschema:"description=Senders"`
	Snippet            string                 `json:"snippet,omitempty" jsonschema:"description=Snippet"`
	Subject            string                 `json:"subject,omitempty" jsonschema:"description=Subject"`
	UnreadCount        int                    `json:"unread_count,omitempty" jsonschema:"description=Unread Count"`
	UpdatedTime        time.Time              `json:"updated_time,omitempty" jsonschema:"description=When the UnifiedThread was last updated,format=date-time"`
	Wallpaper          string                 `json:"wallpaper,omitempty" jsonschema:"description=Wallpaper"`
}

// UniqueAdCreative represents the Facebook UniqueAdCreative object
type UniqueAdCreative struct {
	SampleCreative *AdCreative `json:"sample_creative,omitempty" jsonschema:"description=Sample Creative"`
	VisualHash     uint        `json:"visual_hash,omitempty" jsonschema:"description=Visual Hash"`
}

// User represents the Facebook User object
type User struct {
	About                           string                 `json:"about,omitempty" jsonschema:"description=About"`
	AgeRange                        *AgeRange              `json:"age_range,omitempty" jsonschema:"description=Age Range"`
	Avatar2dProfilePicture          *AvatarProfilePicture  `json:"avatar_2d_profile_picture,omitempty" jsonschema:"description=Avatar 2d Profile Picture"`
	Birthday                        string                 `json:"birthday,omitempty" jsonschema:"description=Birthday"`
	ClientBusinessID                string                 `json:"client_business_id,omitempty" jsonschema:"description=ID of the Client Business,pattern=^[0-9]+$"`
	Community                       *Group                 `json:"community,omitempty" jsonschema:"description=Community"`
	Cover                           *UserCoverPhoto        `json:"cover,omitempty" jsonschema:"description=Cover"`
	Currency                        *Currency              `json:"currency,omitempty" jsonschema:"description=Currency"`
	Education                       []*EducationExperience `json:"education,omitempty" jsonschema:"description=Education"`
	Email                           string                 `json:"email,omitempty" jsonschema:"description=Email"`
	FavoriteAthletes                []*Experience          `json:"favorite_athletes,omitempty" jsonschema:"description=Favorite Athletes"`
	FavoriteTeams                   []*Experience          `json:"favorite_teams,omitempty" jsonschema:"description=Favorite Teams"`
	FirstName                       string                 `json:"first_name,omitempty" jsonschema:"description=First Name"`
	Gender                          string                 `json:"gender,omitempty" jsonschema:"description=Gender"`
	Hometown                        *Page                  `json:"hometown,omitempty" jsonschema:"description=Hometown"`
	ID                              string                 `json:"id,omitempty" jsonschema:"description=User ID,required,pattern=^[0-9]+$"`
	IDForAvatars                    string                 `json:"id_for_avatars,omitempty" jsonschema:"description=ID For Avatars"`
	InspirationalPeople             []*Experience          `json:"inspirational_people,omitempty" jsonschema:"description=Inspirational People"`
	InstallType                     string                 `json:"install_type,omitempty" jsonschema:"description=Install Type"`
	Installed                       bool                   `json:"installed,omitempty" jsonschema:"description=Installed"`
	IsGuestUser                     bool                   `json:"is_guest_user,omitempty" jsonschema:"description=Is Guest User"`
	IsWorkAccount                   bool                   `json:"is_work_account,omitempty" jsonschema:"description=Is Work Account"`
	Languages                       []*Experience          `json:"languages,omitempty" jsonschema:"description=Languages"`
	LastName                        string                 `json:"last_name,omitempty" jsonschema:"description=Last Name"`
	Link                            string                 `json:"link,omitempty" jsonschema:"description=Link"`
	LocalNewsMegaphoneDismissStatus bool                   `json:"local_news_megaphone_dismiss_status,omitempty" jsonschema:"description=Local News Megaphone Dismiss Status"`
	LocalNewsSubscriptionStatus     bool                   `json:"local_news_subscription_status,omitempty" jsonschema:"description=Local News Subscription Status"`
	Locale                          string                 `json:"locale,omitempty" jsonschema:"description=Locale"`
	Location                        *Page                  `json:"location,omitempty" jsonschema:"description=Location"`
	MeetingFor                      []string               `json:"meeting_for,omitempty" jsonschema:"description=Meeting For"`
	MiddleName                      string                 `json:"middle_name,omitempty" jsonschema:"description=Middle Name"`
	Name                            string                 `json:"name,omitempty" jsonschema:"description=Name of the User,required"`
	NameFormat                      string                 `json:"name_format,omitempty" jsonschema:"description=Name Format"`
	PaymentPricepoints              *PaymentPricepoints    `json:"payment_pricepoints,omitempty" jsonschema:"description=Payment Pricepoints"`
	Political                       string                 `json:"political,omitempty" jsonschema:"description=Political"`
	ProfilePic                      string                 `json:"profile_pic,omitempty" jsonschema:"description=Profile Pic"`
	Quotes                          string                 `json:"quotes,omitempty" jsonschema:"description=Quotes"`
	RelationshipStatus              string                 `json:"relationship_status,omitempty" jsonschema:"description=Relationship Status"`
	Religion                        string                 `json:"religion,omitempty" jsonschema:"description=Religion"`
	SharedLoginUpgradeRequiredBy    time.Time              `json:"shared_login_upgrade_required_by,omitempty" jsonschema:"description=Shared Login Upgrade Required By,format=date-time"`
	ShortName                       string                 `json:"short_name,omitempty" jsonschema:"description=Short Name"`
	SignificantOther                *User                  `json:"significant_other,omitempty" jsonschema:"description=Significant Other"`
	Sports                          []*Experience          `json:"sports,omitempty" jsonschema:"description=Sports"`
	SupportsDonateButtonInLiveVideo bool                   `json:"supports_donate_button_in_live_video,omitempty" jsonschema:"description=Supports Donate Button In Live Video"`
	ThirdPartyID                    string                 `json:"third_party_id,omitempty" jsonschema:"description=ID of the Third Party,pattern=^[0-9]+$"`
	Timezone                        float64                `json:"timezone,omitempty" jsonschema:"description=Timezone"`
	TokenForBusiness                string                 `json:"token_for_business,omitempty" jsonschema:"description=Token For Business"`
	UpdatedTime                     time.Time              `json:"updated_time,omitempty" jsonschema:"description=When the User was last updated,format=date-time"`
	Verified                        bool                   `json:"verified,omitempty" jsonschema:"description=Verified"`
	VideoUploadLimits               *VideoUploadLimits     `json:"video_upload_limits,omitempty" jsonschema:"description=Video Upload Limits"`
	Website                         string                 `json:"website,omitempty" jsonschema:"description=Website"`
}

// UserAvailableCatalogs represents the Facebook UserAvailableCatalogs object
type UserAvailableCatalogs struct {
	CatalogID    string `json:"catalog_id,omitempty" jsonschema:"description=ID of the Catalog,pattern=^[0-9]+$"`
	CatalogName  string `json:"catalog_name,omitempty" jsonschema:"description=Catalog Name"`
	ProductCount int    `json:"product_count,omitempty" jsonschema:"description=Product Count"`
	ShopName     string `json:"shop_name,omitempty" jsonschema:"description=Shop Name"`
}

// UserContext represents the Facebook UserContext object
type UserContext struct {
	ID string `json:"id,omitempty" jsonschema:"description=UserContext ID,required,pattern=^[0-9]+$"`
}

// UserCoverPhoto represents the Facebook UserCoverPhoto object
type UserCoverPhoto struct {
	OffsetX float64 `json:"offset_x,omitempty" jsonschema:"description=Offset X"`
	OffsetY float64 `json:"offset_y,omitempty" jsonschema:"description=Offset Y"`
	Source  string  `json:"source,omitempty" jsonschema:"description=Source"`
}

// UserDevice represents the Facebook UserDevice object
type UserDevice struct {
	Hardware string `json:"hardware,omitempty" jsonschema:"description=Hardware"`
	Os       string `json:"os,omitempty" jsonschema:"description=Os"`
}

// UserIDForApp represents the Facebook UserIDForApp object
type UserIDForApp struct {
	App *Application `json:"app,omitempty" jsonschema:"description=App"`
	ID  string       `json:"id,omitempty" jsonschema:"description=UserIDForApp ID,required,pattern=^[0-9]+$"`
}

// UserIDForPage represents the Facebook UserIDForPage object
type UserIDForPage struct {
	ID   string `json:"id,omitempty" jsonschema:"description=UserIDForPage ID,required,pattern=^[0-9]+$"`
	Page *Page  `json:"page,omitempty" jsonschema:"description=Page"`
}

// UserLeadGenDisclaimerResponse represents the Facebook UserLeadGenDisclaimerResponse object
type UserLeadGenDisclaimerResponse struct {
	CheckboxKey string `json:"checkbox_key,omitempty" jsonschema:"description=Checkbox Key"`
	IsChecked   string `json:"is_checked,omitempty" jsonschema:"description=Is Checked"`
}

// UserLeadGenFieldData represents the Facebook UserLeadGenFieldData object
type UserLeadGenFieldData struct {
	Name   string   `json:"name,omitempty" jsonschema:"description=Name of the UserLeadGenFieldData,required"`
	Values []string `json:"values,omitempty" jsonschema:"description=Values"`
}

// UserMobileConfig represents the Facebook UserMobileConfig object
type UserMobileConfig struct {
	SectionName string                 `json:"section_name,omitempty" jsonschema:"description=Section Name"`
	Value       map[string]interface{} `json:"value,omitempty" jsonschema:"description=Value"`
}

// UserNotificationSeenStateData represents the Facebook UserNotificationSeenStateData object
type UserNotificationSeenStateData struct {
	ID        string `json:"id,omitempty" jsonschema:"description=UserNotificationSeenStateData ID,required,pattern=^[0-9]+$"`
	SeenState string `json:"seen_state,omitempty" jsonschema:"description=Seen State"`
}

// UserPageOneTimeOptInTokenSettings represents the Facebook UserPageOneTimeOptInTokenSettings object
type UserPageOneTimeOptInTokenSettings struct {
	CreationTimestamp             int    `json:"creation_timestamp,omitempty" jsonschema:"description=Creation Timestamp"`
	NextEligibleTime              int    `json:"next_eligible_time,omitempty" jsonschema:"description=Next Eligible Time"`
	NotificationMessagesFrequency string `json:"notification_messages_frequency,omitempty" jsonschema:"description=Notification Messages Frequency"`
	NotificationMessagesReoptin   string `json:"notification_messages_reoptin,omitempty" jsonschema:"description=Notification Messages Reoptin"`
	NotificationMessagesTimezone  string `json:"notification_messages_timezone,omitempty" jsonschema:"description=Notification Messages Timezone"`
	NotificationMessagesToken     string `json:"notification_messages_token,omitempty" jsonschema:"description=Notification Messages Token"`
	RecipientID                   string `json:"recipient_id,omitempty" jsonschema:"description=ID of the Recipient,pattern=^[0-9]+$"`
	TokenExpiryTimestamp          int    `json:"token_expiry_timestamp,omitempty" jsonschema:"description=Token Expiry Timestamp"`
	TopicTitle                    string `json:"topic_title,omitempty" jsonschema:"description=Topic Title"`
	UserTokenStatus               string `json:"user_token_status,omitempty" jsonschema:"description=User Token Status"`
}

// UserPaymentMethodsInfo represents the Facebook UserPaymentMethodsInfo object
type UserPaymentMethodsInfo struct {
	AccountID                      string                   `json:"account_id,omitempty" jsonschema:"description=ID of the Account,pattern=^[0-9]+$"`
	AvailableCardTypes             []string                 `json:"available_card_types,omitempty" jsonschema:"description=Available Card Types"`
	AvailablePaymentMethods        []string                 `json:"available_payment_methods,omitempty" jsonschema:"description=Available Payment Methods"`
	AvailablePaymentMethodsDetails []map[string]interface{} `json:"available_payment_methods_details,omitempty" jsonschema:"description=Available Payment Methods Details"`
	Country                        string                   `json:"country,omitempty" jsonschema:"description=Country"`
	Currency                       string                   `json:"currency,omitempty" jsonschema:"description=Currency"`
	ExistingPaymentMethods         []map[string]interface{} `json:"existing_payment_methods,omitempty" jsonschema:"description=Existing Payment Methods"`
}

// UserPaymentMobilePricepoints represents the Facebook UserPaymentMobilePricepoints object
type UserPaymentMobilePricepoints struct {
	MobileCountry    string                   `json:"mobile_country,omitempty" jsonschema:"description=Mobile Country"`
	PhoneNumberLast4 string                   `json:"phone_number_last4,omitempty" jsonschema:"description=Phone Number Last4"`
	Pricepoints      []map[string]interface{} `json:"pricepoints,omitempty" jsonschema:"description=Pricepoints"`
	UserCurrency     string                   `json:"user_currency,omitempty" jsonschema:"description=User Currency"`
}

// UserPaymentModulesOptions represents the Facebook UserPaymentModulesOptions object
type UserPaymentModulesOptions struct {
	AccountID               string                   `json:"account_id,omitempty" jsonschema:"description=ID of the Account,pattern=^[0-9]+$"`
	AvailablePaymentOptions []map[string]interface{} `json:"available_payment_options,omitempty" jsonschema:"description=Available Payment Options"`
	Country                 string                   `json:"country,omitempty" jsonschema:"description=Country"`
	Currency                string                   `json:"currency,omitempty" jsonschema:"description=Currency"`
}

// ValueBasedEligibleSource represents the Facebook ValueBasedEligibleSource object
type ValueBasedEligibleSource struct {
	ID    string `json:"id,omitempty" jsonschema:"description=ValueBasedEligibleSource ID,required,pattern=^[0-9]+$"`
	Title string `json:"title,omitempty" jsonschema:"description=Title"`
	Type  string `json:"type,omitempty" jsonschema:"description=Type"`
}

// Vehicle represents the Facebook Vehicle object
type Vehicle struct {
	Address                      map[string]interface{}   `json:"address,omitempty" jsonschema:"description=Address"`
	Applinks                     *CatalogItemAppLinks     `json:"applinks,omitempty" jsonschema:"description=Applinks"`
	Availability                 string                   `json:"availability,omitempty" jsonschema:"description=Availability"`
	AvailabilityCircleRadius     float64                  `json:"availability_circle_radius,omitempty" jsonschema:"description=Availability Circle Radius"`
	AvailabilityCircleRadiusUnit string                   `json:"availability_circle_radius_unit,omitempty" jsonschema:"description=Availability Circle Radius Unit"`
	BodyStyle                    string                   `json:"body_style,omitempty" jsonschema:"description=Body Style"`
	CategorySpecificFields       *CatalogSubVerticalList  `json:"category_specific_fields,omitempty" jsonschema:"description=Category Specific Fields"`
	Condition                    string                   `json:"condition,omitempty" jsonschema:"description=Condition"`
	Currency                     string                   `json:"currency,omitempty" jsonschema:"description=Currency"`
	CustomLabel0                 string                   `json:"custom_label_0,omitempty" jsonschema:"description=Custom Label 0"`
	CustomLabel1                 string                   `json:"custom_label_1,omitempty" jsonschema:"description=Custom Label 1"`
	CustomLabel2                 string                   `json:"custom_label_2,omitempty" jsonschema:"description=Custom Label 2"`
	CustomLabel3                 string                   `json:"custom_label_3,omitempty" jsonschema:"description=Custom Label 3"`
	CustomLabel4                 string                   `json:"custom_label_4,omitempty" jsonschema:"description=Custom Label 4"`
	CustomNumber0                uint                     `json:"custom_number_0,omitempty" jsonschema:"description=Custom Number 0"`
	CustomNumber1                uint                     `json:"custom_number_1,omitempty" jsonschema:"description=Custom Number 1"`
	CustomNumber2                uint                     `json:"custom_number_2,omitempty" jsonschema:"description=Custom Number 2"`
	CustomNumber3                uint                     `json:"custom_number_3,omitempty" jsonschema:"description=Custom Number 3"`
	CustomNumber4                uint                     `json:"custom_number_4,omitempty" jsonschema:"description=Custom Number 4"`
	DateFirstOnLot               string                   `json:"date_first_on_lot,omitempty" jsonschema:"description=Date First On Lot"`
	DealerCommunicationChannel   string                   `json:"dealer_communication_channel,omitempty" jsonschema:"description=Dealer Communication Channel"`
	DealerEmail                  string                   `json:"dealer_email,omitempty" jsonschema:"description=Dealer Email"`
	DealerID                     string                   `json:"dealer_id,omitempty" jsonschema:"description=ID of the Dealer,pattern=^[0-9]+$"`
	DealerName                   string                   `json:"dealer_name,omitempty" jsonschema:"description=Dealer Name"`
	DealerPhone                  string                   `json:"dealer_phone,omitempty" jsonschema:"description=Dealer Phone"`
	DealerPrivacyPolicyURL       string                   `json:"dealer_privacy_policy_url,omitempty" jsonschema:"description=Dealer Privacy Policy URL,format=uri"`
	Description                  string                   `json:"description,omitempty" jsonschema:"description=Description"`
	Drivetrain                   string                   `json:"drivetrain,omitempty" jsonschema:"description=Drivetrain"`
	ExteriorColor                string                   `json:"exterior_color,omitempty" jsonschema:"description=Exterior Color"`
	FbPageID                     *Page                    `json:"fb_page_id,omitempty" jsonschema:"description=ID of the Fb Page,pattern=^[0-9]+$"`
	Features                     []map[string]interface{} `json:"features,omitempty" jsonschema:"description=Features"`
	FuelType                     string                   `json:"fuel_type,omitempty" jsonschema:"description=Fuel Type"`
	ID                           string                   `json:"id,omitempty" jsonschema:"description=Vehicle ID,required,pattern=^[0-9]+$"`
	ImageFetchStatus             VehicleImageFetchStatus  `json:"image_fetch_status,omitempty" jsonschema:"description=Image Fetch Status"`
	Images                       []string                 `json:"images,omitempty" jsonschema:"description=Images"`
	InteriorColor                string                   `json:"interior_color,omitempty" jsonschema:"description=Interior Color"`
	LegalDisclosureImpressumURL  string                   `json:"legal_disclosure_impressum_url,omitempty" jsonschema:"description=Legal Disclosure Impressum URL,format=uri"`
	Make                         string                   `json:"make,omitempty" jsonschema:"description=Make"`
	Mileage                      map[string]interface{}   `json:"mileage,omitempty" jsonschema:"description=Mileage"`
	Model                        string                   `json:"model,omitempty" jsonschema:"description=Model"`
	PreviousCurrency             string                   `json:"previous_currency,omitempty" jsonschema:"description=Previous Currency"`
	PreviousPrice                string                   `json:"previous_price,omitempty" jsonschema:"description=Previous Price"`
	Price                        string                   `json:"price,omitempty" jsonschema:"description=Price"`
	ProductPriority0             float64                  `json:"product_priority_0,omitempty" jsonschema:"description=Product Priority 0"`
	ProductPriority1             float64                  `json:"product_priority_1,omitempty" jsonschema:"description=Product Priority 1"`
	ProductPriority2             float64                  `json:"product_priority_2,omitempty" jsonschema:"description=Product Priority 2"`
	ProductPriority3             float64                  `json:"product_priority_3,omitempty" jsonschema:"description=Product Priority 3"`
	ProductPriority4             float64                  `json:"product_priority_4,omitempty" jsonschema:"description=Product Priority 4"`
	SaleCurrency                 string                   `json:"sale_currency,omitempty" jsonschema:"description=Sale Currency"`
	SalePrice                    string                   `json:"sale_price,omitempty" jsonschema:"description=Sale Price"`
	SanitizedImages              []string                 `json:"sanitized_images,omitempty" jsonschema:"description=Sanitized Images"`
	StateOfVehicle               string                   `json:"state_of_vehicle,omitempty" jsonschema:"description=State Of Vehicle"`
	Tags                         []string                 `json:"tags,omitempty" jsonschema:"description=Tags"`
	Title                        string                   `json:"title,omitempty" jsonschema:"description=Title"`
	Transmission                 string                   `json:"transmission,omitempty" jsonschema:"description=Transmission"`
	Trim                         string                   `json:"trim,omitempty" jsonschema:"description=Trim"`
	UnitPrice                    map[string]interface{}   `json:"unit_price,omitempty" jsonschema:"description=Unit Price"`
	URL                          string                   `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
	VehicleID                    string                   `json:"vehicle_id,omitempty" jsonschema:"description=ID of the Vehicle,pattern=^[0-9]+$"`
	VehicleRegistrationPlate     string                   `json:"vehicle_registration_plate,omitempty" jsonschema:"description=Vehicle Registration Plate"`
	VehicleSpecifications        []map[string]interface{} `json:"vehicle_specifications,omitempty" jsonschema:"description=Vehicle Specifications"`
	VehicleType                  string                   `json:"vehicle_type,omitempty" jsonschema:"description=Vehicle Type"`
	Vin                          string                   `json:"vin,omitempty" jsonschema:"description=Vin"`
	Visibility                   VehicleVisibility        `json:"visibility,omitempty" jsonschema:"description=Visibility"`
	Year                         uint                     `json:"year,omitempty" jsonschema:"description=Year"`
}

// VehicleOffer represents the Facebook VehicleOffer object
type VehicleOffer struct {
	AmountCurrency         string                       `json:"amount_currency,omitempty" jsonschema:"description=Amount Currency"`
	AmountPercentage       float64                      `json:"amount_percentage,omitempty" jsonschema:"description=Amount Percentage"`
	AmountPrice            string                       `json:"amount_price,omitempty" jsonschema:"description=Amount Price"`
	AmountQualifier        string                       `json:"amount_qualifier,omitempty" jsonschema:"description=Amount Qualifier"`
	Applinks               *CatalogItemAppLinks         `json:"applinks,omitempty" jsonschema:"description=Applinks"`
	Availability           string                       `json:"availability,omitempty" jsonschema:"description=Availability"`
	BodyStyle              string                       `json:"body_style,omitempty" jsonschema:"description=Body Style"`
	CashbackCurrency       string                       `json:"cashback_currency,omitempty" jsonschema:"description=Cashback Currency"`
	CashbackPrice          string                       `json:"cashback_price,omitempty" jsonschema:"description=Cashback Price"`
	CategorySpecificFields *CatalogSubVerticalList      `json:"category_specific_fields,omitempty" jsonschema:"description=Category Specific Fields"`
	Currency               string                       `json:"currency,omitempty" jsonschema:"description=Currency"`
	CustomLabel0           string                       `json:"custom_label_0,omitempty" jsonschema:"description=Custom Label 0"`
	CustomLabel1           string                       `json:"custom_label_1,omitempty" jsonschema:"description=Custom Label 1"`
	CustomLabel2           string                       `json:"custom_label_2,omitempty" jsonschema:"description=Custom Label 2"`
	CustomLabel3           string                       `json:"custom_label_3,omitempty" jsonschema:"description=Custom Label 3"`
	CustomLabel4           string                       `json:"custom_label_4,omitempty" jsonschema:"description=Custom Label 4"`
	CustomNumber0          uint                         `json:"custom_number_0,omitempty" jsonschema:"description=Custom Number 0"`
	CustomNumber1          uint                         `json:"custom_number_1,omitempty" jsonschema:"description=Custom Number 1"`
	CustomNumber2          uint                         `json:"custom_number_2,omitempty" jsonschema:"description=Custom Number 2"`
	CustomNumber3          uint                         `json:"custom_number_3,omitempty" jsonschema:"description=Custom Number 3"`
	CustomNumber4          uint                         `json:"custom_number_4,omitempty" jsonschema:"description=Custom Number 4"`
	DmaCodes               []string                     `json:"dma_codes,omitempty" jsonschema:"description=Dma Codes"`
	DownpaymentCurrency    string                       `json:"downpayment_currency,omitempty" jsonschema:"description=Downpayment Currency"`
	DownpaymentPrice       string                       `json:"downpayment_price,omitempty" jsonschema:"description=Downpayment Price"`
	DownpaymentQualifier   string                       `json:"downpayment_qualifier,omitempty" jsonschema:"description=Downpayment Qualifier"`
	Drivetrain             string                       `json:"drivetrain,omitempty" jsonschema:"description=Drivetrain"`
	EndDate                string                       `json:"end_date,omitempty" jsonschema:"description=End Date"`
	EndTime                int                          `json:"end_time,omitempty" jsonschema:"description=End Time"`
	ExteriorColor          string                       `json:"exterior_color,omitempty" jsonschema:"description=Exterior Color"`
	FuelType               string                       `json:"fuel_type,omitempty" jsonschema:"description=Fuel Type"`
	Generation             string                       `json:"generation,omitempty" jsonschema:"description=Generation"`
	ID                     string                       `json:"id,omitempty" jsonschema:"description=VehicleOffer ID,required,pattern=^[0-9]+$"`
	ImageFetchStatus       VehicleofferImageFetchStatus `json:"image_fetch_status,omitempty" jsonschema:"description=Image Fetch Status"`
	Images                 []string                     `json:"images,omitempty" jsonschema:"description=Images"`
	InteriorColor          string                       `json:"interior_color,omitempty" jsonschema:"description=Interior Color"`
	InteriorUpholstery     string                       `json:"interior_upholstery,omitempty" jsonschema:"description=Interior Upholstery"`
	Make                   string                       `json:"make,omitempty" jsonschema:"description=Make"`
	Model                  string                       `json:"model,omitempty" jsonschema:"description=Model"`
	OfferDescription       string                       `json:"offer_description,omitempty" jsonschema:"description=Offer Description"`
	OfferDisclaimer        string                       `json:"offer_disclaimer,omitempty" jsonschema:"description=Offer Disclaimer"`
	OfferType              string                       `json:"offer_type,omitempty" jsonschema:"description=Offer Type"`
	Price                  string                       `json:"price,omitempty" jsonschema:"description=Price"`
	ProductPriority0       float64                      `json:"product_priority_0,omitempty" jsonschema:"description=Product Priority 0"`
	ProductPriority1       float64                      `json:"product_priority_1,omitempty" jsonschema:"description=Product Priority 1"`
	ProductPriority2       float64                      `json:"product_priority_2,omitempty" jsonschema:"description=Product Priority 2"`
	ProductPriority3       float64                      `json:"product_priority_3,omitempty" jsonschema:"description=Product Priority 3"`
	ProductPriority4       float64                      `json:"product_priority_4,omitempty" jsonschema:"description=Product Priority 4"`
	SanitizedImages        []string                     `json:"sanitized_images,omitempty" jsonschema:"description=Sanitized Images"`
	StartDate              string                       `json:"start_date,omitempty" jsonschema:"description=Start Date"`
	StartTime              int                          `json:"start_time,omitempty" jsonschema:"description=Start Time"`
	Tags                   []string                     `json:"tags,omitempty" jsonschema:"description=Tags"`
	TermLength             uint                         `json:"term_length,omitempty" jsonschema:"description=Term Length"`
	TermQualifier          string                       `json:"term_qualifier,omitempty" jsonschema:"description=Term Qualifier"`
	Title                  string                       `json:"title,omitempty" jsonschema:"description=Title"`
	Transmission           string                       `json:"transmission,omitempty" jsonschema:"description=Transmission"`
	Trim                   string                       `json:"trim,omitempty" jsonschema:"description=Trim"`
	UnitPrice              map[string]interface{}       `json:"unit_price,omitempty" jsonschema:"description=Unit Price"`
	URL                    string                       `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
	VehicleOfferID         string                       `json:"vehicle_offer_id,omitempty" jsonschema:"description=ID of the Vehicle Offer,pattern=^[0-9]+$"`
	Visibility             VehicleofferVisibility       `json:"visibility,omitempty" jsonschema:"description=Visibility"`
	Year                   int                          `json:"year,omitempty" jsonschema:"description=Year"`
}

// VideoCopyright represents the Facebook VideoCopyright object
type VideoCopyright struct {
	ContentCategory            string                       `json:"content_category,omitempty" jsonschema:"description=Content Category"`
	CopyrightContentID         string                       `json:"copyright_content_id,omitempty" jsonschema:"description=ID of the Copyright Content,pattern=^[0-9]+$"`
	Creator                    *User                        `json:"creator,omitempty" jsonschema:"description=Creator"`
	ExcludedOwnershipSegments  []*VideoCopyrightSegment     `json:"excluded_ownership_segments,omitempty" jsonschema:"description=Excluded Ownership Segments"`
	ID                         string                       `json:"id,omitempty" jsonschema:"description=VideoCopyright ID,required,pattern=^[0-9]+$"`
	InConflict                 bool                         `json:"in_conflict,omitempty" jsonschema:"description=In Conflict"`
	MonitoringStatus           string                       `json:"monitoring_status,omitempty" jsonschema:"description=Monitoring Status"`
	MonitoringType             string                       `json:"monitoring_type,omitempty" jsonschema:"description=Monitoring Type"`
	OwnershipCountries         *VideoCopyrightGeoGate       `json:"ownership_countries,omitempty" jsonschema:"description=Ownership Countries"`
	ReferenceFile              *CopyrightReferenceContainer `json:"reference_file,omitempty" jsonschema:"description=Reference File"`
	ReferenceFileDisabled      bool                         `json:"reference_file_disabled,omitempty" jsonschema:"description=Reference File Disabled"`
	ReferenceFileDisabledByOps bool                         `json:"reference_file_disabled_by_ops,omitempty" jsonschema:"description=Reference File Disabled By Ops"`
	ReferenceOwnerID           string                       `json:"reference_owner_id,omitempty" jsonschema:"description=ID of the Reference Owner,pattern=^[0-9]+$"`
	RuleIDs                    []*VideoCopyrightRule        `json:"rule_ids,omitempty" jsonschema:"description=Rule Ids,pattern=^[0-9]+$"`
	Tags                       []string                     `json:"tags,omitempty" jsonschema:"description=Tags"`
	WhitelistedIDs             []string                     `json:"whitelisted_ids,omitempty" jsonschema:"description=Whitelisted Ids,pattern=^[0-9]+$"`
}

// VideoCopyrightCheckStatus represents the Facebook VideoCopyrightCheckStatus object
type VideoCopyrightCheckStatus struct {
	MatchesFound bool   `json:"matches_found,omitempty" jsonschema:"description=Matches Found"`
	Status       string `json:"status,omitempty" jsonschema:"description=Current status of the VideoCopyrightCheckStatus,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// VideoCopyrightConditionGroup represents the Facebook VideoCopyrightConditionGroup object
type VideoCopyrightConditionGroup struct {
	Action         string                   `json:"action,omitempty" jsonschema:"description=Action"`
	Conditions     []map[string]interface{} `json:"conditions,omitempty" jsonschema:"description=Conditions"`
	ValidityStatus string                   `json:"validity_status,omitempty" jsonschema:"description=Validity Status"`
}

// VideoCopyrightGeoGate represents the Facebook VideoCopyrightGeoGate object
type VideoCopyrightGeoGate struct {
	ExcludedCountries []string `json:"excluded_countries,omitempty" jsonschema:"description=Excluded Countries"`
	IncludedCountries []string `json:"included_countries,omitempty" jsonschema:"description=Included Countries"`
}

// VideoCopyrightMatch represents the Facebook VideoCopyrightMatch object
type VideoCopyrightMatch struct {
	CreatedDate      time.Time                `json:"created_date,omitempty" jsonschema:"description=When the VideoCopyrightMatch was created,format=date-time"`
	ID               string                   `json:"id,omitempty" jsonschema:"description=VideoCopyrightMatch ID,required,pattern=^[0-9]+$"`
	LastModifiedUser *User                    `json:"last_modified_user,omitempty" jsonschema:"description=Last Modified User"`
	MatchData        []map[string]interface{} `json:"match_data,omitempty" jsonschema:"description=Match Data"`
	MatchStatus      string                   `json:"match_status,omitempty" jsonschema:"description=Match Status"`
	Notes            string                   `json:"notes,omitempty" jsonschema:"description=Notes"`
	Permalink        string                   `json:"permalink,omitempty" jsonschema:"description=Permalink"`
	UgcContentFormat string                   `json:"ugc_content_format,omitempty" jsonschema:"description=Ugc Content Format"`
}

// VideoCopyrightRule represents the Facebook VideoCopyrightRule object
type VideoCopyrightRule struct {
	ConditionGroups []*VideoCopyrightConditionGroup `json:"condition_groups,omitempty" jsonschema:"description=Condition Groups"`
	Copyrights      []string                        `json:"copyrights,omitempty" jsonschema:"description=Copyrights"`
	CreatedDate     time.Time                       `json:"created_date,omitempty" jsonschema:"description=When the VideoCopyrightRule was created,format=date-time"`
	Creator         *User                           `json:"creator,omitempty" jsonschema:"description=Creator"`
	ID              string                          `json:"id,omitempty" jsonschema:"description=VideoCopyrightRule ID,required,pattern=^[0-9]+$"`
	IsInMigration   bool                            `json:"is_in_migration,omitempty" jsonschema:"description=Is In Migration"`
	Name            string                          `json:"name,omitempty" jsonschema:"description=Name of the VideoCopyrightRule,required"`
}

// VideoCopyrightSegment represents the Facebook VideoCopyrightSegment object
type VideoCopyrightSegment struct {
	DurationInSec  float64 `json:"duration_in_sec,omitempty" jsonschema:"description=Duration In Sec"`
	MediaType      string  `json:"media_type,omitempty" jsonschema:"description=Media Type"`
	StartTimeInSec float64 `json:"start_time_in_sec,omitempty" jsonschema:"description=Start Time In Sec"`
}

// VideoGroup represents the Facebook VideoGroup object
type VideoGroup struct {
	CreatedTime     string   `json:"created_time,omitempty" jsonschema:"description=When the VideoGroup was created"`
	Description     string   `json:"description,omitempty" jsonschema:"description=Description"`
	DisableReason   string   `json:"disable_reason,omitempty" jsonschema:"description=Disable Reason"`
	ID              string   `json:"id,omitempty" jsonschema:"description=VideoGroup ID,required,pattern=^[0-9]+$"`
	IgProfileIDs    []string `json:"ig_profile_ids,omitempty" jsonschema:"description=Ig Profile Ids,pattern=^[0-9]+$"`
	IsDisabled      bool     `json:"is_disabled,omitempty" jsonschema:"description=Is Disabled"`
	IsFbVideoGroup  bool     `json:"is_fb_video_group,omitempty" jsonschema:"description=Is Fb Video Group"`
	LastUsedTime    string   `json:"last_used_time,omitempty" jsonschema:"description=Last Used Time"`
	Length          float64  `json:"length,omitempty" jsonschema:"description=Length"`
	Name            string   `json:"name,omitempty" jsonschema:"description=Name of the VideoGroup,required"`
	PageID          string   `json:"page_id,omitempty" jsonschema:"description=ID of the Page,pattern=^[0-9]+$"`
	PageIDs         []string `json:"page_ids,omitempty" jsonschema:"description=Page Ids,pattern=^[0-9]+$"`
	Picture         string   `json:"picture,omitempty" jsonschema:"description=Picture"`
	Placements      []string `json:"placements,omitempty" jsonschema:"description=Placements"`
	VideoGroupTypes []string `json:"video_group_types,omitempty" jsonschema:"description=Video Group Types"`
	Videos          []string `json:"videos,omitempty" jsonschema:"description=Videos"`
	Views           uint     `json:"views,omitempty" jsonschema:"description=Views"`
}

// VideoList represents the Facebook VideoList object
type VideoList struct {
	CreationTime time.Time              `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	Description  string                 `json:"description,omitempty" jsonschema:"description=Description"`
	ID           string                 `json:"id,omitempty" jsonschema:"description=VideoList ID,required,pattern=^[0-9]+$"`
	LastModified time.Time              `json:"last_modified,omitempty" jsonschema:"description=Last Modified,format=date-time"`
	Owner        map[string]interface{} `json:"owner,omitempty" jsonschema:"description=Owner"`
	SeasonNumber int                    `json:"season_number,omitempty" jsonschema:"description=Season Number"`
	Thumbnail    string                 `json:"thumbnail,omitempty" jsonschema:"description=Thumbnail"`
	Title        string                 `json:"title,omitempty" jsonschema:"description=Title"`
	VideosCount  int                    `json:"videos_count,omitempty" jsonschema:"description=Videos Count"`
}

// VideoPoll represents the Facebook VideoPoll object
type VideoPoll struct {
	CloseAfterVoting bool            `json:"close_after_voting,omitempty" jsonschema:"description=Close After Voting"`
	DefaultOpen      bool            `json:"default_open,omitempty" jsonschema:"description=Default Open"`
	ID               string          `json:"id,omitempty" jsonschema:"description=VideoPoll ID,required,pattern=^[0-9]+$"`
	Question         string          `json:"question,omitempty" jsonschema:"description=Question"`
	ShowGradient     bool            `json:"show_gradient,omitempty" jsonschema:"description=Show Gradient"`
	ShowResults      bool            `json:"show_results,omitempty" jsonschema:"description=Show Results"`
	Status           VideopollStatus `json:"status,omitempty" jsonschema:"description=Current status of the VideoPoll,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// VideoStats represents the Facebook VideoStats object
type VideoStats struct {
	Aggregate      []map[string]map[string]interface{}   `json:"aggregate,omitempty" jsonschema:"description=Aggregate"`
	Error          string                                `json:"error,omitempty" jsonschema:"description=Error"`
	Metadata       []map[string]map[string]interface{}   `json:"metadata,omitempty" jsonschema:"description=Metadata"`
	TimeSeries     []map[string][]map[string]interface{} `json:"time_series,omitempty" jsonschema:"description=Time Series"`
	Totals         []map[string]map[string]interface{}   `json:"totals,omitempty" jsonschema:"description=Totals"`
	XAxisBreakdown [][]map[string]map[string]interface{} `json:"x_axis_breakdown,omitempty" jsonschema:"description=X Axis Breakdown"`
}

// VideoStatus represents the Facebook VideoStatus object
type VideoStatus struct {
	CopyrightCheckStatus *VideoCopyrightCheckStatus  `json:"copyright_check_status,omitempty" jsonschema:"description=Copyright Check Status"`
	ProcessingPhase      *VideoStatusProcessingPhase `json:"processing_phase,omitempty" jsonschema:"description=Processing Phase"`
	ProcessingProgress   uint                        `json:"processing_progress,omitempty" jsonschema:"description=Processing Progress"`
	PublishingPhase      *VideoStatusPublishingPhase `json:"publishing_phase,omitempty" jsonschema:"description=Publishing Phase"`
	UploadingPhase       *VideoStatusUploadingPhase  `json:"uploading_phase,omitempty" jsonschema:"description=Uploading Phase"`
	VideoStatus          string                      `json:"video_status,omitempty" jsonschema:"description=Video Status"`
}

// VideoStatusError represents the Facebook VideoStatusError object
type VideoStatusError struct {
	Code    int    `json:"code,omitempty" jsonschema:"description=Code"`
	Message string `json:"message,omitempty" jsonschema:"description=Message"`
}

// VideoStatusProcessingPhase represents the Facebook VideoStatusProcessingPhase object
type VideoStatusProcessingPhase struct {
	Errors []*VideoStatusError `json:"errors,omitempty" jsonschema:"description=Errors"`
	Status string              `json:"status,omitempty" jsonschema:"description=Current status of the VideoStatusProcessingPhase,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// VideoStatusPublishingPhase represents the Facebook VideoStatusPublishingPhase object
type VideoStatusPublishingPhase struct {
	Errors        []*VideoStatusError `json:"errors,omitempty" jsonschema:"description=Errors"`
	PublishStatus string              `json:"publish_status,omitempty" jsonschema:"description=Publish Status"`
	PublishTime   time.Time           `json:"publish_time,omitempty" jsonschema:"description=Publish Time,format=date-time"`
	Status        string              `json:"status,omitempty" jsonschema:"description=Current status of the VideoStatusPublishingPhase,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// VideoStatusUploadingPhase represents the Facebook VideoStatusUploadingPhase object
type VideoStatusUploadingPhase struct {
	BytesTransferred uint                `json:"bytes_transferred,omitempty" jsonschema:"description=Bytes Transferred"`
	Errors           []*VideoStatusError `json:"errors,omitempty" jsonschema:"description=Errors"`
	SourceFileSize   uint                `json:"source_file_size,omitempty" jsonschema:"description=Source File Size"`
	Status           string              `json:"status,omitempty" jsonschema:"description=Current status of the VideoStatusUploadingPhase,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// VideoTextQuestion represents the Facebook VideoTextQuestion object
type VideoTextQuestion struct {
	ID               string `json:"id,omitempty" jsonschema:"description=VideoTextQuestion ID,required,pattern=^[0-9]+$"`
	QuestionTargetID string `json:"question_target_id,omitempty" jsonschema:"description=ID of the Question Target,pattern=^[0-9]+$"`
	QuestionText     string `json:"question_text,omitempty" jsonschema:"description=Question Text"`
	Status           string `json:"status,omitempty" jsonschema:"description=Current status of the VideoTextQuestion,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
}

// VideoThumbnail represents the Facebook VideoThumbnail object
type VideoThumbnail struct {
	Height      uint    `json:"height,omitempty" jsonschema:"description=Height"`
	ID          string  `json:"id,omitempty" jsonschema:"description=VideoThumbnail ID,required,pattern=^[0-9]+$"`
	IsPreferred bool    `json:"is_preferred,omitempty" jsonschema:"description=Is Preferred"`
	Name        string  `json:"name,omitempty" jsonschema:"description=Name of the VideoThumbnail,required"`
	Scale       float64 `json:"scale,omitempty" jsonschema:"description=Scale"`
	Uri         string  `json:"uri,omitempty" jsonschema:"description=Uri"`
	Width       uint    `json:"width,omitempty" jsonschema:"description=Width"`
}

// VideoUploadLimits represents the Facebook VideoUploadLimits object
type VideoUploadLimits struct {
	Length uint `json:"length,omitempty" jsonschema:"description=Length"`
	Size   int  `json:"size,omitempty" jsonschema:"description=Size"`
}

// VoipInfo represents the Facebook VoipInfo object
type VoipInfo struct {
	HasMobileApp      bool   `json:"has_mobile_app,omitempty" jsonschema:"description=Has Mobile App"`
	HasPermission     bool   `json:"has_permission,omitempty" jsonschema:"description=Has Permission"`
	IsCallable        bool   `json:"is_callable,omitempty" jsonschema:"description=Is Callable"`
	IsCallableWebrtc  bool   `json:"is_callable_webrtc,omitempty" jsonschema:"description=Is Callable Webrtc"`
	IsPushable        bool   `json:"is_pushable,omitempty" jsonschema:"description=Is Pushable"`
	ReasonCode        uint   `json:"reason_code,omitempty" jsonschema:"description=Reason Code"`
	ReasonDescription string `json:"reason_description,omitempty" jsonschema:"description=Reason Description"`
}

// WITUser represents the Facebook WITUser object
type WITUser struct {
	AccessToken string `json:"access_token,omitempty" jsonschema:"description=Access Token"`
	ID          string `json:"id,omitempty" jsonschema:"description=WITUser ID,required,pattern=^[0-9]+$"`
	Name        string `json:"name,omitempty" jsonschema:"description=Name of the WITUser,required"`
}

// WearableDevicePublicKey represents the Facebook WearableDevicePublicKey object
type WearableDevicePublicKey struct {
	Base64EncodedPublicKey string    `json:"base64_encoded_public_key,omitempty" jsonschema:"description=Base64 Encoded Public Key"`
	CreationTimeOnDevice   time.Time `json:"creation_time_on_device,omitempty" jsonschema:"description=Creation Time On Device,format=date-time"`
	DeviceUuid             string    `json:"device_uuid,omitempty" jsonschema:"description=Device Uuid"`
	ID                     string    `json:"id,omitempty" jsonschema:"description=WearableDevicePublicKey ID,required,pattern=^[0-9]+$"`
	KeyType                string    `json:"key_type,omitempty" jsonschema:"description=Key Type"`
	OwnerID                string    `json:"owner_id,omitempty" jsonschema:"description=ID of the Owner,pattern=^[0-9]+$"`
	ProductUseCase         string    `json:"product_use_case,omitempty" jsonschema:"description=Product Use Case"`
	Version                string    `json:"version,omitempty" jsonschema:"description=Version"`
}

// WebAppLink represents the Facebook WebAppLink object
type WebAppLink struct {
	ShouldFallback bool   `json:"should_fallback,omitempty" jsonschema:"description=Should Fallback"`
	URL            string `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
}

// WebPublisher represents the Facebook WebPublisher object
type WebPublisher struct {
	DomainURL     string `json:"domain_url,omitempty" jsonschema:"description=Domain URL,format=uri"`
	ID            string `json:"id,omitempty" jsonschema:"description=WebPublisher ID,required,pattern=^[0-9]+$"`
	PublisherName string `json:"publisher_name,omitempty" jsonschema:"description=Publisher Name"`
}

// WebsiteCreativeAssetSource represents the Facebook WebsiteCreativeAssetSource object
type WebsiteCreativeAssetSource struct {
	ID        string `json:"id,omitempty" jsonschema:"description=WebsiteCreativeAssetSource ID,required,pattern=^[0-9]+$"`
	SourceURL string `json:"source_url,omitempty" jsonschema:"description=Source URL,format=uri"`
}

// WebsiteCreativeAssetSuggestions represents the Facebook WebsiteCreativeAssetSuggestions object
type WebsiteCreativeAssetSuggestions struct {
	AdAccountID      string `json:"ad_account_id,omitempty" jsonschema:"description=ID of the Ad Account,pattern=^[0-9]+$"`
	ExtractionStatus string `json:"extraction_status,omitempty" jsonschema:"description=Extraction Status"`
	ID               string `json:"id,omitempty" jsonschema:"description=WebsiteCreativeAssetSuggestions ID,required,pattern=^[0-9]+$"`
	LinkURL          string `json:"link_url,omitempty" jsonschema:"description=Link URL,format=uri"`
}

// WebsiteCreativeInfo represents the Facebook WebsiteCreativeInfo object
type WebsiteCreativeInfo struct {
	ID        string   `json:"id,omitempty" jsonschema:"description=WebsiteCreativeInfo ID,required,pattern=^[0-9]+$"`
	ImageURLs []string `json:"image_urls,omitempty" jsonschema:"description=Image Urls,format=uri"`
	LinkURL   string   `json:"link_url,omitempty" jsonschema:"description=Link URL,format=uri"`
}

// WhatsAppBusinessAccount represents the Facebook WhatsAppBusinessAccount object
type WhatsAppBusinessAccount struct {
	AccountReviewStatus              string                                            `json:"account_review_status,omitempty" jsonschema:"description=Account Review Status"`
	Analytics                        map[string]interface{}                            `json:"analytics,omitempty" jsonschema:"description=Analytics"`
	AuthInternationalRateEligibility map[string]interface{}                            `json:"auth_international_rate_eligibility,omitempty" jsonschema:"description=Auth International Rate Eligibility"`
	BusinessVerificationStatus       WhatsappbusinessaccountBusinessVerificationStatus `json:"business_verification_status,omitempty" jsonschema:"description=Business Verification Status"`
	Country                          string                                            `json:"country,omitempty" jsonschema:"description=Country"`
	CreationTime                     int                                               `json:"creation_time,omitempty" jsonschema:"description=Creation Time"`
	Currency                         string                                            `json:"currency,omitempty" jsonschema:"description=Currency"`
	HealthStatus                     *WhatsAppBusinessHealthStatusForMessageSend       `json:"health_status,omitempty" jsonschema:"description=Health Status"`
	ID                               string                                            `json:"id,omitempty" jsonschema:"description=WhatsAppBusinessAccount ID,required,pattern=^[0-9]+$"`
	IsEnabledForInsights             bool                                              `json:"is_enabled_for_insights,omitempty" jsonschema:"description=Is Enabled For Insights"`
	IsSharedWithPartners             bool                                              `json:"is_shared_with_partners,omitempty" jsonschema:"description=Is Shared With Partners"`
	LinkedCommerceAccount            *CommerceMerchantSettings                         `json:"linked_commerce_account,omitempty" jsonschema:"description=Linked Commerce Account"`
	MarketingMessagesLiteAPIStatus   string                                            `json:"marketing_messages_lite_api_status,omitempty" jsonschema:"description=Marketing Messages Lite API Status"`
	MessageTemplateNamespace         string                                            `json:"message_template_namespace,omitempty" jsonschema:"description=Message Template Namespace"`
	Name                             string                                            `json:"name,omitempty" jsonschema:"description=Name of the WhatsAppBusinessAccount,required"`
	OnBehalfOfBusinessInfo           map[string]interface{}                            `json:"on_behalf_of_business_info,omitempty" jsonschema:"description=On Behalf Of Business Info"`
	OwnerBusiness                    *Business                                         `json:"owner_business,omitempty" jsonschema:"description=Owner Business"`
	OwnerBusinessInfo                map[string]interface{}                            `json:"owner_business_info,omitempty" jsonschema:"description=Owner Business Info"`
	OwnershipType                    string                                            `json:"ownership_type,omitempty" jsonschema:"description=Ownership Type"`
	PrimaryBusinessLocation          string                                            `json:"primary_business_location,omitempty" jsonschema:"description=Primary Business Location"`
	PrimaryFundingID                 string                                            `json:"primary_funding_id,omitempty" jsonschema:"description=ID of the Primary Funding,pattern=^[0-9]+$"`
	PurchaseOrderNumber              string                                            `json:"purchase_order_number,omitempty" jsonschema:"description=Purchase Order Number"`
	Status                           string                                            `json:"status,omitempty" jsonschema:"description=Current status of the WhatsAppBusinessAccount,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	TimezoneID                       string                                            `json:"timezone_id,omitempty" jsonschema:"description=ID of the Timezone,pattern=^[0-9]+$"`
}

// WhatsAppBusinessHealthStatus represents the Facebook WhatsAppBusinessHealthStatus object
type WhatsAppBusinessHealthStatus struct {
	AdditionalInfo []string                 `json:"additional_info,omitempty" jsonschema:"description=Additional Info"`
	CanSendMessage string                   `json:"can_send_message,omitempty" jsonschema:"description=Can Send Message"`
	EntityType     string                   `json:"entity_type,omitempty" jsonschema:"description=Entity Type"`
	Errors         []map[string]interface{} `json:"errors,omitempty" jsonschema:"description=Errors"`
	ID             string                   `json:"id,omitempty" jsonschema:"description=WhatsAppBusinessHealthStatus ID,required,pattern=^[0-9]+$"`
}

// WhatsAppBusinessHealthStatusForMessageSend represents the Facebook WhatsAppBusinessHealthStatusForMessageSend object
type WhatsAppBusinessHealthStatusForMessageSend struct {
	CanSendMessage string                          `json:"can_send_message,omitempty" jsonschema:"description=Can Send Message"`
	Entities       []*WhatsAppBusinessHealthStatus `json:"entities,omitempty" jsonschema:"description=Entities"`
}

// WhatsAppBusinessPartnerClientVerificationSubmission represents the Facebook WhatsAppBusinessPartnerClientVerificationSubmission object
type WhatsAppBusinessPartnerClientVerificationSubmission struct {
	ClientBusinessID   string                                                                `json:"client_business_id,omitempty" jsonschema:"description=ID of the Client Business,pattern=^[0-9]+$"`
	ID                 string                                                                `json:"id,omitempty" jsonschema:"description=WhatsAppBusinessPartnerClientVerificationSubmission ID,required,pattern=^[0-9]+$"`
	RejectionReasons   []WhatsappbusinesspartnerclientverificationsubmissionRejectionReasons `json:"rejection_reasons,omitempty" jsonschema:"description=Rejection Reasons"`
	SubmittedInfo      map[string]interface{}                                                `json:"submitted_info,omitempty" jsonschema:"description=Submitted Info"`
	SubmittedTime      time.Time                                                             `json:"submitted_time,omitempty" jsonschema:"description=Submitted Time,format=date-time"`
	UpdateTime         time.Time                                                             `json:"update_time,omitempty" jsonschema:"description=Update Time,format=date-time"`
	VerificationStatus WhatsappbusinesspartnerclientverificationsubmissionVerificationStatus `json:"verification_status,omitempty" jsonschema:"description=Verification Status"`
}

// WhatsAppBusinessPreVerifiedPhoneNumber represents the Facebook WhatsAppBusinessPreVerifiedPhoneNumber object
type WhatsAppBusinessPreVerifiedPhoneNumber struct {
	CodeVerificationStatus WhatsappbusinesspreverifiedphonenumberCodeVerificationStatus `json:"code_verification_status,omitempty" jsonschema:"description=Code Verification Status"`
	CodeVerificationTime   time.Time                                                    `json:"code_verification_time,omitempty" jsonschema:"description=Code Verification Time,format=date-time"`
	ID                     string                                                       `json:"id,omitempty" jsonschema:"description=WhatsAppBusinessPreVerifiedPhoneNumber ID,required,pattern=^[0-9]+$"`
	OwnerBusiness          *Business                                                    `json:"owner_business,omitempty" jsonschema:"description=Owner Business"`
	PhoneNumber            string                                                       `json:"phone_number,omitempty" jsonschema:"description=Phone Number"`
	VerificationExpiryTime time.Time                                                    `json:"verification_expiry_time,omitempty" jsonschema:"description=Verification Expiry Time,format=date-time"`
}

// WhatsAppBusinessProfile represents the Facebook WhatsAppBusinessProfile object
type WhatsAppBusinessProfile struct {
	ID                      string                 `json:"id,omitempty" jsonschema:"description=WhatsAppBusinessProfile ID,required,pattern=^[0-9]+$"`
	NameVerification        map[string]interface{} `json:"name_verification,omitempty" jsonschema:"description=Name Verification"`
	WhatsappBusinessAPIData map[string]interface{} `json:"whatsapp_business_api_data,omitempty" jsonschema:"description=Whatsapp Business API Data"`
}

// WhatsAppPaymentCapabilities represents the Facebook WhatsAppPaymentCapabilities object
type WhatsAppPaymentCapabilities struct {
	IsEnabled                bool                     `json:"is_enabled,omitempty" jsonschema:"description=Is Enabled"`
	PaymentCapabilityDetails []map[string]interface{} `json:"payment_capability_details,omitempty" jsonschema:"description=Payment Capability Details"`
}

// WhatsappSubscribedAppsInfo represents the Facebook WhatsappSubscribedAppsInfo object
type WhatsappSubscribedAppsInfo struct {
	PageWhatsappNumber string                   `json:"page_whatsapp_number,omitempty" jsonschema:"description=Page Whatsapp Number"`
	SubscribedApps     []map[string]interface{} `json:"subscribed_apps,omitempty" jsonschema:"description=Subscribed Apps"`
}

// WhitehatFBDLRun represents the Facebook WhitehatFBDLRun object
type WhitehatFBDLRun struct {
	CreationTime time.Time           `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	ID           string              `json:"id,omitempty" jsonschema:"description=WhitehatFBDLRun ID,required,pattern=^[0-9]+$"`
	IsPinned     bool                `json:"is_pinned,omitempty" jsonschema:"description=Is Pinned"`
	Note         string              `json:"note,omitempty" jsonschema:"description=Note"`
	Result       []map[string]string `json:"result,omitempty" jsonschema:"description=Result"`
	RunCode      string              `json:"run_code,omitempty" jsonschema:"description=Run Code"`
	Status       string              `json:"status,omitempty" jsonschema:"description=Current status of the WhitehatFBDLRun,enum=ACTIVE,enum=PAUSED,enum=DELETED,enum=ARCHIVED"`
	UserType     string              `json:"user_type,omitempty" jsonschema:"description=User Type"`
}

// WifiInformation represents the Facebook WifiInformation object
type WifiInformation struct {
	ID                string `json:"id,omitempty" jsonschema:"description=WifiInformation ID,required,pattern=^[0-9]+$"`
	Name              string `json:"name,omitempty" jsonschema:"description=Name of the WifiInformation,required"`
	NetworkAccessType string `json:"network_access_type,omitempty" jsonschema:"description=Network Access Type"`
}

// WindowsAppLink represents the Facebook WindowsAppLink object
type WindowsAppLink struct {
	AppID             string `json:"app_id,omitempty" jsonschema:"description=ID of the App,pattern=^[0-9]+$"`
	AppName           string `json:"app_name,omitempty" jsonschema:"description=App Name"`
	PackageFamilyName string `json:"package_family_name,omitempty" jsonschema:"description=Package Family Name"`
	URL               string `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
}

// WindowsPhoneAppLink represents the Facebook WindowsPhoneAppLink object
type WindowsPhoneAppLink struct {
	AppID   string `json:"app_id,omitempty" jsonschema:"description=ID of the App,pattern=^[0-9]+$"`
	AppName string `json:"app_name,omitempty" jsonschema:"description=App Name"`
	URL     string `json:"url,omitempty" jsonschema:"description=URL,format=uri"`
}

// WithAsset3D represents the Facebook WithAsset3D object
type WithAsset3D struct {
	ID string `json:"id,omitempty" jsonschema:"description=WithAsset3D ID,required,pattern=^[0-9]+$"`
}

// WoodhengePurchasedPAYGReceipt represents the Facebook WoodhengePurchasedPAYGReceipt object
type WoodhengePurchasedPAYGReceipt struct {
	ID                             string    `json:"id,omitempty" jsonschema:"description=WoodhengePurchasedPAYGReceipt ID,required,pattern=^[0-9]+$"`
	NumberOfSubscriptionsPurchased int       `json:"number_of_subscriptions_purchased,omitempty" jsonschema:"description=Number Of Subscriptions Purchased"`
	PurchaseTime                   time.Time `json:"purchase_time,omitempty" jsonschema:"description=Purchase Time,format=date-time"`
	User                           *User     `json:"user,omitempty" jsonschema:"description=User"`
}

// WoodhengeSupporter represents the Facebook WoodhengeSupporter object
type WoodhengeSupporter struct {
	CreationTime               time.Time `json:"creation_time,omitempty" jsonschema:"description=Creation Time,format=date-time"`
	ID                         string    `json:"id,omitempty" jsonschema:"description=WoodhengeSupporter ID,required,pattern=^[0-9]+$"`
	IsGiftedSubscription       bool      `json:"is_gifted_subscription,omitempty" jsonschema:"description=Is Gifted Subscription"`
	MostRecentSubscriptionTime time.Time `json:"most_recent_subscription_time,omitempty" jsonschema:"description=Most Recent Subscription Time,format=date-time"`
	NumberOfMonthsSubscribed   uint      `json:"number_of_months_subscribed,omitempty" jsonschema:"description=Number Of Months Subscribed"`
	User                       *User     `json:"user,omitempty" jsonschema:"description=User"`
}

// WorkAccessCode represents the Facebook WorkAccessCode object
type WorkAccessCode struct {
	Code           string    `json:"code,omitempty" jsonschema:"description=Code"`
	ExpirationTime time.Time `json:"expiration_time,omitempty" jsonschema:"description=Expiration Time,format=date-time"`
}

// WorkExperience represents the Facebook WorkExperience object
type WorkExperience struct {
	Description string                   `json:"description,omitempty" jsonschema:"description=Description"`
	Employer    *Page                    `json:"employer,omitempty" jsonschema:"description=Employer"`
	EndDate     string                   `json:"end_date,omitempty" jsonschema:"description=End Date"`
	From        *User                    `json:"from,omitempty" jsonschema:"description=From"`
	ID          string                   `json:"id,omitempty" jsonschema:"description=WorkExperience ID,required,pattern=^[0-9]+$"`
	Location    *Page                    `json:"location,omitempty" jsonschema:"description=Location"`
	Position    *Page                    `json:"position,omitempty" jsonschema:"description=Position"`
	Projects    []map[string]interface{} `json:"projects,omitempty" jsonschema:"description=Projects"`
	StartDate   string                   `json:"start_date,omitempty" jsonschema:"description=Start Date"`
	With        []*User                  `json:"with,omitempty" jsonschema:"description=With"`
}

// WorkSkill represents the Facebook WorkSkill object
type WorkSkill struct {
	ID   string `json:"id,omitempty" jsonschema:"description=WorkSkill ID,required,pattern=^[0-9]+$"`
	Name string `json:"name,omitempty" jsonschema:"description=Name of the WorkSkill,required"`
}

// WorkUserBadges represents the Facebook WorkUserBadges object
type WorkUserBadges struct {
	Category    string `json:"category,omitempty" jsonschema:"description=Category"`
	Description string `json:"description,omitempty" jsonschema:"description=Description"`
	Icon        string `json:"icon,omitempty" jsonschema:"description=Icon"`
	ID          string `json:"id,omitempty" jsonschema:"description=WorkUserBadges ID,required,pattern=^[0-9]+$"`
	Name        string `json:"name,omitempty" jsonschema:"description=Name of the WorkUserBadges,required"`
}

// WorkUserFrontline represents the Facebook WorkUserFrontline object
type WorkUserFrontline struct {
	HasAccess   bool `json:"has_access,omitempty" jsonschema:"description=Has Access"`
	IsFrontline bool `json:"is_frontline,omitempty" jsonschema:"description=Is Frontline"`
}

// Total objects with fields: 938
// Total fields: 8286
