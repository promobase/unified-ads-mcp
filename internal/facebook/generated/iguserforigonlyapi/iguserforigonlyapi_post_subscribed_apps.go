// Code generated by Facebook Business API codegen. DO NOT EDIT.

package iguserforigonlyapi

import (
	"context"
	"encoding/json"
	"fmt"

	"github.com/mark3labs/mcp-go/mcp"
	"unified-ads-mcp/internal/facebook/utils"
	"unified-ads-mcp/internal/shared"
)

// ToolIguserforigonlyapi_post_subscribed_apps returns the MCP tool definition for iguserforigonlyapi_post_subscribed_apps
func ToolIguserforigonlyapi_post_subscribed_apps() mcp.Tool {

	// Params object accepts: subscribed_fields (list<iggraphusersubscribed_apps_subscribed_fields_enum_param>)
	return mcp.NewTool("iguserforigonlyapi_post_subscribed_apps",
		mcp.WithDescription("POST subscribed_apps for IGUserForIGOnlyAPI"),
		mcp.WithObject("params",
			mcp.Required(),
			mcp.Properties(map[string]any{
				"subscribed_fields": map[string]any{
					"type":        "array",
					"description": "subscribed_fields parameter",
					"required":    true,
					"enum":        []string{"comment_poll_response", "comments", "creator_marketplace_invited_creator_onboarding", "creator_marketplace_projects", "delta", "follow", "live_comments", "mentions", "message_reactions", "messages", "messaging_handover", "messaging_optins", "messaging_postbacks", "messaging_referral", "messaging_seen", "onboarding_welcome_message_series", "standby", "story_insights", "story_poll_response", "story_reactions", "story_share"},
					"items":       map[string]any{"type": "string"},
				},
			}),
			mcp.Description("Parameters object containing: subscribed_fields (array<enum>) [comment_poll_response, comments, creator_marketplace_invited_creator_onboarding, creator_marketplace_projects, delta, ...] [required]"),
		),
	)
}

// HandleIguserforigonlyapi_post_subscribed_apps handles the iguserforigonlyapi_post_subscribed_apps tool with context-based auth
func HandleIguserforigonlyapi_post_subscribed_apps(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {
	// Get access token from context
	accessToken, ok := shared.FacebookAccessTokenFromContext(ctx)
	if !ok {
		return mcp.NewToolResultError("Facebook access token not found in context"), nil
	}

	// Build arguments map
	args := make(map[string]interface{})

	// Required: params
	// Parse required params object and expand into args
	val, err := request.RequireString("params")
	if err != nil {
		return mcp.NewToolResultError(fmt.Sprintf("missing required parameter params: %v", err)), nil
	}
	var paramsObj map[string]interface{}
	if err := json.Unmarshal([]byte(val), &paramsObj); err != nil {
		return mcp.NewToolResultError(fmt.Sprintf("invalid params object: %v", err)), nil
	}
	for key, value := range paramsObj {
		args[key] = value
	}

	// Call the API method
	result, err := Iguserforigonlyapi_post_subscribed_apps(accessToken, args)
	if err != nil {
		return mcp.NewToolResultError(fmt.Sprintf("failed to execute iguserforigonlyapi_post_subscribed_apps: %v", err)), nil
	}

	// Return the result as JSON
	resultJSON, err := json.Marshal(result)
	if err != nil {
		return mcp.NewToolResultError(fmt.Sprintf("failed to marshal result: %v", err)), nil
	}

	return mcp.NewToolResultText(string(resultJSON)), nil
}

// Iguserforigonlyapi_post_subscribed_apps performs POST subscribed_apps for IGUserForIGOnlyAPI
func Iguserforigonlyapi_post_subscribed_apps(accessToken string, args map[string]interface{}) (interface{}, error) {
	var baseURL string

	baseURL = FacebookGraphAPIBaseURL + "/subscribed_apps"

	// Build URL parameters, skipping ID parameters that are in the path
	skipParams := []string{}
	urlParams := utils.BuildURLParams(accessToken, args, skipParams...)

	// Execute the API request
	return utils.ExecuteAPIRequest("POST", baseURL, urlParams)
}
