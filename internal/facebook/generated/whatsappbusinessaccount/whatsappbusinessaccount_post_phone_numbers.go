// Code generated by Facebook Business API codegen. DO NOT EDIT.

package whatsappbusinessaccount

import (
	"context"
	"encoding/json"
	"fmt"

	"github.com/mark3labs/mcp-go/mcp"
	"unified-ads-mcp/internal/facebook/utils"
	"unified-ads-mcp/internal/shared"
)

// ToolWhatsappbusinessaccount_post_phone_numbers returns the MCP tool definition for whatsappbusinessaccount_post_phone_numbers
func ToolWhatsappbusinessaccount_post_phone_numbers() mcp.Tool {

	// Params object accepts: cc (string), migrate_phone_number (bool), phone_number (string), preverified_id (string), verified_name (string)
	return mcp.NewTool("whatsappbusinessaccount_post_phone_numbers",
		mcp.WithDescription("POST phone_numbers for WhatsAppBusinessAccount"),
		mcp.WithObject("params",
			mcp.Properties(map[string]any{
				"cc": map[string]any{
					"type":        "string",
					"description": "cc parameter",
				},
				"migrate_phone_number": map[string]any{
					"type":        "boolean",
					"description": "migrate_phone_number parameter",
				},
				"phone_number": map[string]any{
					"type":        "string",
					"description": "phone_number parameter",
				},
				"preverified_id": map[string]any{
					"type":        "string",
					"description": "preverified_id parameter",
				},
				"verified_name": map[string]any{
					"type":        "string",
					"description": "verified_name parameter",
				},
			}),
			mcp.Description("Parameters object containing: cc (string), migrate_phone_number (boolean), phone_number (string), preverified_id (string), verified_name (string)"),
		),
	)
}

// HandleWhatsappbusinessaccount_post_phone_numbers handles the whatsappbusinessaccount_post_phone_numbers tool with context-based auth
func HandleWhatsappbusinessaccount_post_phone_numbers(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {
	// Get access token from context
	accessToken, ok := shared.FacebookAccessTokenFromContext(ctx)
	if !ok {
		return mcp.NewToolResultError("Facebook access token not found in context"), nil
	}

	// Build arguments map
	args := make(map[string]interface{})

	// Optional: params
	utils.ParseParamsObject(request, args)

	// Call the API method
	result, err := Whatsappbusinessaccount_post_phone_numbers(accessToken, args)
	if err != nil {
		return mcp.NewToolResultError(fmt.Sprintf("failed to execute whatsappbusinessaccount_post_phone_numbers: %v", err)), nil
	}

	// Return the result as JSON
	resultJSON, err := json.Marshal(result)
	if err != nil {
		return mcp.NewToolResultError(fmt.Sprintf("failed to marshal result: %v", err)), nil
	}

	return mcp.NewToolResultText(string(resultJSON)), nil
}

// Whatsappbusinessaccount_post_phone_numbers performs POST phone_numbers for WhatsAppBusinessAccount
func Whatsappbusinessaccount_post_phone_numbers(accessToken string, args map[string]interface{}) (interface{}, error) {
	var baseURL string

	baseURL = FacebookGraphAPIBaseURL + "phone_numbers"

	// Build URL parameters, skipping ID parameters that are in the path
	skipParams := []string{}
	urlParams := utils.BuildURLParams(accessToken, args, skipParams...)

	// Execute the API request
	return utils.ExecuteAPIRequest("POST", baseURL, urlParams)
}
