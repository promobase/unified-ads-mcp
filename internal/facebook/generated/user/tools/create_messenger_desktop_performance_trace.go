// Code generated by codegen. DO NOT EDIT.

package tools

import (
	"context"
	"encoding/json"

	"unified-ads-mcp/internal/facebook/generated/common"

	"github.com/mark3labs/mcp-go/mcp"
	"github.com/mark3labs/mcp-go/server"
)

// user_create_messenger_desktop_performance_traceArgs defines the typed arguments for user_create_messenger_desktop_performance_trace
type user_create_messenger_desktop_performance_traceArgs struct {
}

// RegisterUserCreateMessengerDesktopPerformanceTraceHandler registers the user_create_messenger_desktop_performance_trace tool
func RegisterUserCreateMessengerDesktopPerformanceTraceHandler(s *server.MCPServer) error {
	tool := mcp.NewToolWithRawSchema(
		"user_create_messenger_desktop_performance_trace",
		"Create or update messenger_desktop_performance_traces for this User Returns User.",
		json.RawMessage(`{"additionalProperties":false,"properties":{},"required":[],"type":"object"}`),
	)

	s.AddTool(tool, UserCreateMessengerDesktopPerformanceTraceHandler)
	return nil
}

// UserCreateMessengerDesktopPerformanceTraceHandler handles the user_create_messenger_desktop_performance_trace tool
func UserCreateMessengerDesktopPerformanceTraceHandler(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {
	var args user_create_messenger_desktop_performance_traceArgs
	if err := request.BindArguments(&args); err != nil {
		return common.HandleBindError(err)
	}
	endpoint := "/messenger_desktop_performance_traces"
	// Prepare request body
	body := make(map[string]interface{})

	result, err := common.MakeGraphAPIRequest(ctx, "POST", endpoint, nil, body)

	if err != nil {
		return common.HandleAPIError(err)
	}

	return &mcp.CallToolResult{
		Content: []mcp.Content{
			mcp.NewTextContent(string(result)),
		},
	}, nil
}
