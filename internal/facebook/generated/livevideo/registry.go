// Code generated by Facebook Business API codegen. DO NOT EDIT.

package livevideo

import (
	"context"

	"github.com/mark3labs/mcp-go/mcp"
)

// GetTools returns all MCP tools for LiveVideo
func GetTools() []mcp.Tool {
	var tools []mcp.Tool

	tools = append(tools, ToolLivevideo_get_blocked_users())
	tools = append(tools, ToolLivevideo_get_comments())
	tools = append(tools, ToolLivevideo_get_crosspost_shared_pages())
	tools = append(tools, ToolLivevideo_get_crossposted_broadcasts())
	tools = append(tools, ToolLivevideo_get_errors())
	tools = append(tools, ToolLivevideo_post_input_streams())
	tools = append(tools, ToolLivevideo_get_polls())
	tools = append(tools, ToolLivevideo_post_polls())
	tools = append(tools, ToolLivevideo_get_reactions())
	tools = append(tools, ToolLivevideo_delete_())
	tools = append(tools, ToolLivevideo_get_())
	tools = append(tools, ToolLivevideo_post_())

	return tools
}

// GetHandlers returns all MCP handlers for LiveVideo
func GetHandlers() map[string]func(context.Context, mcp.CallToolRequest) (*mcp.CallToolResult, error) {
	handlers := make(map[string]func(context.Context, mcp.CallToolRequest) (*mcp.CallToolResult, error))

	handlers["livevideo_get_blocked_users"] = HandleLivevideo_get_blocked_users
	handlers["livevideo_get_comments"] = HandleLivevideo_get_comments
	handlers["livevideo_get_crosspost_shared_pages"] = HandleLivevideo_get_crosspost_shared_pages
	handlers["livevideo_get_crossposted_broadcasts"] = HandleLivevideo_get_crossposted_broadcasts
	handlers["livevideo_get_errors"] = HandleLivevideo_get_errors
	handlers["livevideo_post_input_streams"] = HandleLivevideo_post_input_streams
	handlers["livevideo_get_polls"] = HandleLivevideo_get_polls
	handlers["livevideo_post_polls"] = HandleLivevideo_post_polls
	handlers["livevideo_get_reactions"] = HandleLivevideo_get_reactions
	handlers["livevideo_delete_"] = HandleLivevideo_delete_
	handlers["livevideo_get_"] = HandleLivevideo_get_
	handlers["livevideo_post_"] = HandleLivevideo_post_

	return handlers
}
