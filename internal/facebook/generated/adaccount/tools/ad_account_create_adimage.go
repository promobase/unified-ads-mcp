// Code generated by codegen. DO NOT EDIT.

package tools

import (
	"context"
	"encoding/json"
	"fmt"

	"unified-ads-mcp/internal/facebook/generated/common"

	"github.com/mark3labs/mcp-go/mcp"
	"github.com/mark3labs/mcp-go/server"
)

// ad_account_create_adimageArgs defines the typed arguments for ad_account_create_adimage
type ad_account_create_adimageArgs struct {
	ID       string                 `json:"id" jsonschema:"required,description=AdAccount ID,pattern=^[0-9]+$"`
	Bytes    string                 `json:"bytes,omitempty" jsonschema:"description=Bytes"`
	CopyFrom map[string]interface{} `json:"copy_from,omitempty" jsonschema:"description=Copy From"`
}

// RegisterAdAccountCreateAdimageHandler registers the ad_account_create_adimage tool
func RegisterAdAccountCreateAdimageHandler(s *server.MCPServer) error {
	tool := mcp.NewToolWithRawSchema(
		"ad_account_create_adimage",
		"Associate adimages with this AdAccount",
		json.RawMessage(`{"additionalProperties":false,"properties":{"bytes":{"description":"Bytes","type":"string"},"copy_from":{"additionalProperties":true,"description":"Copy From","type":"object"},"id":{"description":"AdAccount ID","pattern":"^[0-9]+$","type":"string"}},"required":["id"],"type":"object"}`),
	)

	s.AddTool(tool, AdAccountCreateAdimageHandler)
	return nil
}

// AdAccountCreateAdimageHandler handles the ad_account_create_adimage tool
func AdAccountCreateAdimageHandler(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {
	var args ad_account_create_adimageArgs
	if err := request.BindArguments(&args); err != nil {
		return common.HandleBindError(err)
	}
	endpoint := fmt.Sprintf("/%s/adimages", args.ID)
	// Prepare request body
	body := make(map[string]interface{})
	if args.Bytes != "" {
		body["bytes"] = args.Bytes
	}
	body["copy_from"] = args.CopyFrom

	result, err := common.MakeGraphAPIRequest(ctx, "POST", endpoint, nil, body)

	if err != nil {
		return common.HandleAPIError(err)
	}

	return &mcp.CallToolResult{
		Content: []mcp.Content{
			mcp.NewTextContent(string(result)),
		},
	}, nil
}
