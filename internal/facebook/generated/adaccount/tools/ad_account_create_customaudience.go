// Code generated by codegen. DO NOT EDIT.

package tools

import (
	"context"
	"encoding/json"
	"fmt"

	"unified-ads-mcp/internal/facebook/generated/common"

	"github.com/mark3labs/mcp-go/mcp"
	"github.com/mark3labs/mcp-go/server"
)

// ad_account_create_customaudienceArgs defines the typed arguments for ad_account_create_customaudience
type ad_account_create_customaudienceArgs struct {
	ID                            string                   `json:"id" jsonschema:"required,description=AdAccount ID,pattern=^[0-9]+$"`
	AllowedDomains                []string                 `json:"allowed_domains,omitempty" jsonschema:"description=Allowed Domains"`
	AssociatedAudienceId          int                      `json:"associated_audience_id,omitempty" jsonschema:"description=ID of the Associated Audience,pattern=^[0-9]+$"`
	ClaimObjective                string                   `json:"claim_objective,omitempty" jsonschema:"description=Claim Objective"`
	ContentType                   string                   `json:"content_type,omitempty" jsonschema:"description=Content Type"`
	Countries                     string                   `json:"countries,omitempty" jsonschema:"description=Countries"`
	CreationParams                map[string]interface{}   `json:"creation_params,omitempty" jsonschema:"description=Creation Params"`
	CustomerFileSource            string                   `json:"customer_file_source,omitempty" jsonschema:"description=Customer File Source"`
	DatasetId                     string                   `json:"dataset_id,omitempty" jsonschema:"description=ID of the Dataset,pattern=^[0-9]+$"`
	Description                   string                   `json:"description,omitempty" jsonschema:"description=Description"`
	EnableFetchOrCreate           bool                     `json:"enable_fetch_or_create,omitempty" jsonschema:"description=Enable Fetch Or Create"`
	EventSourceGroup              string                   `json:"event_source_group,omitempty" jsonschema:"description=Event Source Group"`
	EventSources                  []map[string]interface{} `json:"event_sources,omitempty" jsonschema:"description=Event Sources"`
	Exclusions                    []map[string]interface{} `json:"exclusions,omitempty" jsonschema:"description=Exclusions"`
	FacebookPageId                string                   `json:"facebook_page_id,omitempty" jsonschema:"description=ID of the Facebook Page,pattern=^[0-9]+$"`
	Inclusions                    []map[string]interface{} `json:"inclusions,omitempty" jsonschema:"description=Inclusions"`
	IsSnapshot                    bool                     `json:"is_snapshot,omitempty" jsonschema:"description=Is Snapshot"`
	IsValueBased                  bool                     `json:"is_value_based,omitempty" jsonschema:"description=Is Value Based"`
	ListOfAccounts                []interface{}            `json:"list_of_accounts,omitempty" jsonschema:"description=List Of Accounts"`
	LookalikeSpec                 string                   `json:"lookalike_spec,omitempty" jsonschema:"description=Lookalike Spec"`
	MarketingMessageChannels      map[string]interface{}   `json:"marketing_message_channels,omitempty" jsonschema:"description=Marketing Message Channels,minimum=13,maximum=100"`
	Name                          string                   `json:"name,omitempty" jsonschema:"description=Name"`
	OptOutLink                    string                   `json:"opt_out_link,omitempty" jsonschema:"description=Opt Out Link"`
	OriginAudienceId              string                   `json:"origin_audience_id,omitempty" jsonschema:"description=ID of the Origin Audience,pattern=^[0-9]+$"`
	ParentAudienceId              int                      `json:"parent_audience_id,omitempty" jsonschema:"description=ID of the Parent Audience,pattern=^[0-9]+$"`
	PartnerReferenceKey           string                   `json:"partner_reference_key,omitempty" jsonschema:"description=Partner Reference Key"`
	PixelId                       string                   `json:"pixel_id,omitempty" jsonschema:"description=ID of the Pixel,pattern=^[0-9]+$"`
	Prefill                       bool                     `json:"prefill,omitempty" jsonschema:"description=Prefill"`
	ProductSetId                  string                   `json:"product_set_id,omitempty" jsonschema:"description=ID of the Product Set,pattern=^[0-9]+$"`
	RegulatedAudienceSpec         string                   `json:"regulated_audience_spec,omitempty" jsonschema:"description=Regulated Audience Spec"`
	RetentionDays                 int                      `json:"retention_days,omitempty" jsonschema:"description=Retention Days"`
	RevSharePolicyId              int                      `json:"rev_share_policy_id,omitempty" jsonschema:"description=ID of the Rev Share Policy,pattern=^[0-9]+$"`
	Rule                          string                   `json:"rule,omitempty" jsonschema:"description=Rule"`
	RuleAggregation               string                   `json:"rule_aggregation,omitempty" jsonschema:"description=Rule Aggregation"`
	SubscriptionInfo              []string                 `json:"subscription_info,omitempty" jsonschema:"description=Subscription Info"`
	Subtype                       string                   `json:"subtype,omitempty" jsonschema:"description=Subtype"`
	UseForProducts                []string                 `json:"use_for_products,omitempty" jsonschema:"description=Use For Products"`
	UseInCampaigns                bool                     `json:"use_in_campaigns,omitempty" jsonschema:"description=Use In Campaigns"`
	VideoGroupIds                 []string                 `json:"video_group_ids,omitempty" jsonschema:"description=Video Group Ids,pattern=^[0-9]+$"`
	WhatsAppBusinessPhoneNumberId string                   `json:"whats_app_business_phone_number_id,omitempty" jsonschema:"description=ID of the Whats App Business Phone Number,pattern=^[0-9]+$"`
}

// RegisterAdAccountCreateCustomaudienceHandler registers the ad_account_create_customaudience tool
func RegisterAdAccountCreateCustomaudienceHandler(s *server.MCPServer) error {
	tool := mcp.NewToolWithRawSchema(
		"ad_account_create_customaudience",
		"Create or update customaudiences for this AdAccount Returns CustomAudience.",
		json.RawMessage(`{"additionalProperties":false,"properties":{"allowed_domains":{"description":"Allowed Domains","items":{"type":"string"},"type":"array"},"associated_audience_id":{"description":"ID of the Associated Audience","pattern":"^[0-9]+$","type":"integer"},"claim_objective":{"description":"Claim Objective (enum: adaccountcustomaudiences_claim_objective_enum_param)","enum":["AUTOMOTIVE_MODEL","COLLABORATIVE_ADS","HOME_LISTING","MEDIA_TITLE","PRODUCT","TRAVEL","VEHICLE","VEHICLE_OFFER"],"type":"string"},"content_type":{"description":"Content Type (enum: adaccountcustomaudiences_content_type_enum_param)","enum":["AUTOMOTIVE_MODEL","DESTINATION","FLIGHT","GENERIC","HOME_LISTING","HOTEL","LOCAL_SERVICE_BUSINESS","MEDIA_TITLE","OFFLINE_PRODUCT","PRODUCT","VEHICLE","VEHICLE_OFFER"],"type":"string"},"countries":{"description":"Countries","type":"string"},"creation_params":{"description":"Creation Params","type":"string"},"customer_file_source":{"description":"Customer File Source (enum: adaccountcustomaudiences_customer_file_source_enum_param)","enum":["BOTH_USER_AND_PARTNER_PROVIDED","PARTNER_PROVIDED_ONLY","USER_PROVIDED_ONLY"],"type":"string"},"dataset_id":{"description":"ID of the Dataset","pattern":"^[0-9]+$","type":"string"},"description":{"description":"Description","type":"string"},"enable_fetch_or_create":{"description":"Enable Fetch Or Create","type":"boolean"},"event_source_group":{"description":"Event Source Group","type":"string"},"event_sources":{"description":"Event Sources","items":{"additionalProperties":true,"type":"object"},"type":"array"},"exclusions":{"description":"Exclusions","items":{"additionalProperties":true,"type":"object"},"type":"array"},"facebook_page_id":{"description":"ID of the Facebook Page","pattern":"^[0-9]+$","type":"string"},"id":{"description":"AdAccount ID","pattern":"^[0-9]+$","type":"string"},"inclusions":{"description":"Inclusions","items":{"additionalProperties":true,"type":"object"},"type":"array"},"is_snapshot":{"description":"Is Snapshot","type":"boolean"},"is_value_based":{"description":"Is Value Based","type":"boolean"},"list_of_accounts":{"description":"List Of Accounts","items":{"type":"integer"},"type":"array"},"lookalike_spec":{"description":"Lookalike Spec","type":"string"},"marketing_message_channels":{"additionalProperties":true,"description":"Marketing Message Channels","type":"object"},"name":{"description":"Name","type":"string"},"opt_out_link":{"description":"Opt Out Link","type":"string"},"origin_audience_id":{"description":"ID of the Origin Audience","pattern":"^[0-9]+$","type":"string"},"parent_audience_id":{"description":"ID of the Parent Audience","pattern":"^[0-9]+$","type":"integer"},"partner_reference_key":{"description":"Partner Reference Key","type":"string"},"pixel_id":{"description":"ID of the Pixel","pattern":"^[0-9]+$","type":"string"},"prefill":{"description":"Prefill","type":"boolean"},"product_set_id":{"description":"ID of the Product Set","pattern":"^[0-9]+$","type":"string"},"regulated_audience_spec":{"description":"Regulated Audience Spec","type":"string"},"retention_days":{"description":"Retention Days","type":"integer"},"rev_share_policy_id":{"description":"ID of the Rev Share Policy","pattern":"^[0-9]+$","type":"integer"},"rule":{"description":"Rule","type":"string"},"rule_aggregation":{"description":"Rule Aggregation","type":"string"},"subscription_info":{"description":"Subscription Info","items":{"type":"string"},"type":"array"},"subtype":{"description":"Subtype (enum: adaccountcustomaudiences_subtype_enum_param)","enum":["APP","BAG_OF_ACCOUNTS","BIDDING","CLAIM","CUSTOM","ENGAGEMENT","EXCLUSION","FOX","LOOKALIKE","MANAGED","MEASUREMENT","MESSENGER_SUBSCRIBER_LIST","OFFLINE_CONVERSION","PARTNER","PRIMARY","REGULATED_CATEGORIES_AUDIENCE","STUDY_RULE_AUDIENCE","VIDEO","WEBSITE"],"type":"string"},"use_for_products":{"description":"Use For Products","items":{"type":"string"},"type":"array"},"use_in_campaigns":{"description":"Use In Campaigns","type":"boolean"},"video_group_ids":{"description":"Video Group Ids","items":{"type":"string"},"type":"array"},"whats_app_business_phone_number_id":{"description":"ID of the Whats App Business Phone Number","pattern":"^[0-9]+$","type":"string"}},"required":["id"],"type":"object"}`),
	)

	s.AddTool(tool, AdAccountCreateCustomaudienceHandler)
	return nil
}

// AdAccountCreateCustomaudienceHandler handles the ad_account_create_customaudience tool
func AdAccountCreateCustomaudienceHandler(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {
	var args ad_account_create_customaudienceArgs
	if err := request.BindArguments(&args); err != nil {
		return common.HandleBindError(err)
	}
	endpoint := fmt.Sprintf("/%s/customaudiences", args.ID)
	// Prepare request body
	body := make(map[string]interface{})
	if len(args.AllowedDomains) > 0 {
		body["allowed_domains"] = args.AllowedDomains
	}
	if args.AssociatedAudienceId > 0 {
		body["associated_audience_id"] = args.AssociatedAudienceId
	}
	if args.ClaimObjective != "" {
		body["claim_objective"] = args.ClaimObjective
	}
	if args.ContentType != "" {
		body["content_type"] = args.ContentType
	}
	if args.Countries != "" {
		body["countries"] = args.Countries
	}
	body["creation_params"] = args.CreationParams
	if args.CustomerFileSource != "" {
		body["customer_file_source"] = args.CustomerFileSource
	}
	if args.DatasetId != "" {
		body["dataset_id"] = args.DatasetId
	}
	if args.Description != "" {
		body["description"] = args.Description
	}
	body["enable_fetch_or_create"] = args.EnableFetchOrCreate
	if args.EventSourceGroup != "" {
		body["event_source_group"] = args.EventSourceGroup
	}
	if len(args.EventSources) > 0 {
		body["event_sources"] = args.EventSources
	}
	if len(args.Exclusions) > 0 {
		body["exclusions"] = args.Exclusions
	}
	if args.FacebookPageId != "" {
		body["facebook_page_id"] = args.FacebookPageId
	}
	if len(args.Inclusions) > 0 {
		body["inclusions"] = args.Inclusions
	}
	body["is_snapshot"] = args.IsSnapshot
	body["is_value_based"] = args.IsValueBased
	if len(args.ListOfAccounts) > 0 {
		body["list_of_accounts"] = args.ListOfAccounts
	}
	if args.LookalikeSpec != "" {
		body["lookalike_spec"] = args.LookalikeSpec
	}
	body["marketing_message_channels"] = args.MarketingMessageChannels
	if args.Name != "" {
		body["name"] = args.Name
	}
	if args.OptOutLink != "" {
		body["opt_out_link"] = args.OptOutLink
	}
	if args.OriginAudienceId != "" {
		body["origin_audience_id"] = args.OriginAudienceId
	}
	if args.ParentAudienceId > 0 {
		body["parent_audience_id"] = args.ParentAudienceId
	}
	if args.PartnerReferenceKey != "" {
		body["partner_reference_key"] = args.PartnerReferenceKey
	}
	if args.PixelId != "" {
		body["pixel_id"] = args.PixelId
	}
	body["prefill"] = args.Prefill
	if args.ProductSetId != "" {
		body["product_set_id"] = args.ProductSetId
	}
	if args.RegulatedAudienceSpec != "" {
		body["regulated_audience_spec"] = args.RegulatedAudienceSpec
	}
	if args.RetentionDays > 0 {
		body["retention_days"] = args.RetentionDays
	}
	if args.RevSharePolicyId > 0 {
		body["rev_share_policy_id"] = args.RevSharePolicyId
	}
	if args.Rule != "" {
		body["rule"] = args.Rule
	}
	if args.RuleAggregation != "" {
		body["rule_aggregation"] = args.RuleAggregation
	}
	if len(args.SubscriptionInfo) > 0 {
		body["subscription_info"] = args.SubscriptionInfo
	}
	if args.Subtype != "" {
		body["subtype"] = args.Subtype
	}
	if len(args.UseForProducts) > 0 {
		body["use_for_products"] = args.UseForProducts
	}
	body["use_in_campaigns"] = args.UseInCampaigns
	if len(args.VideoGroupIds) > 0 {
		body["video_group_ids"] = args.VideoGroupIds
	}
	if args.WhatsAppBusinessPhoneNumberId != "" {
		body["whats_app_business_phone_number_id"] = args.WhatsAppBusinessPhoneNumberId
	}

	result, err := common.MakeGraphAPIRequest(ctx, "POST", endpoint, nil, body)

	if err != nil {
		return common.HandleAPIError(err)
	}

	return &mcp.CallToolResult{
		Content: []mcp.Content{
			mcp.NewTextContent(string(result)),
		},
	}, nil
}
