// Code generated by Facebook Business API codegen. DO NOT EDIT.

package adaccount

import (
	"context"
	"encoding/json"
	"fmt"

	"github.com/mark3labs/mcp-go/mcp"
	"unified-ads-mcp/internal/facebook/utils"
	"unified-ads-mcp/internal/shared"
)

// ToolAdaccount_post_adsets returns the MCP tool definition for adaccount_post_adsets
func ToolAdaccount_post_adsets() mcp.Tool {

	// Params object accepts: adlabels (list<Object>), adset_schedule (list<Object>), attribution_spec (list<map>), bid_adjustments (Object), bid_amount (int), bid_constraints (map<string, Object>), bid_strategy (adaccountadsets_bid_strategy_enum_param), billing_event (adaccountadsets_billing_event_enum_param), budget_source (adaccountadsets_budget_source_enum_param), budget_split_set_id (string), campaign_attribution (Object), campaign_id (string), campaign_spec (Object), creative_sequence (list<string>), creative_sequence_repetition_pattern (adaccountadsets_creative_sequence_repetition_pattern_enum_param), daily_budget (unsigned int), daily_imps (unsigned int), daily_min_spend_target (unsigned int), daily_spend_cap (unsigned int), date_format (string), destination_type (adaccountadsets_destination_type_enum_param), dsa_beneficiary (string), dsa_payor (string), end_time (datetime), execution_options (list<adaccountadsets_execution_options_enum_param>), existing_customer_budget_percentage (unsigned int), frequency_control_specs (list<Object>), full_funnel_exploration_mode (adaccountadsets_full_funnel_exploration_mode_enum_param), is_ba_skip_delayed_eligible (bool), is_dynamic_creative (bool), is_incremental_attribution_enabled (bool), is_sac_cfca_terms_certified (bool), lifetime_budget (unsigned int), lifetime_imps (unsigned int), lifetime_min_spend_target (unsigned int), lifetime_spend_cap (unsigned int), line_number (unsigned int), max_budget_spend_percentage (unsigned int), min_budget_spend_percentage (unsigned int), multi_optimization_goal_weight (adaccountadsets_multi_optimization_goal_weight_enum_param), name (string), optimization_goal (adaccountadsets_optimization_goal_enum_param), optimization_sub_event (adaccountadsets_optimization_sub_event_enum_param), pacing_type (list<string>), promoted_object (Object), rb_prediction_id (string), regional_regulated_categories (list<adaccountadsets_regional_regulated_categories_enum_param>), regional_regulation_identities (map), rf_prediction_id (string), source_adset_id (string), start_time (datetime), status (adaccountadsets_status_enum_param), targeting (Targeting), time_based_ad_rotation_id_blocks (list<list<unsigned int>>), time_based_ad_rotation_intervals (list<unsigned int>), time_start (datetime), time_stop (datetime), topline_id (string), tune_for_category (adaccountadsets_tune_for_category_enum_param)
	return mcp.NewTool("adaccount_post_adsets",
		mcp.WithDescription("POST adsets for AdAccount"),
		mcp.WithString("account_id",
			mcp.Required(),
			mcp.Description("Facebook Ad Account ID (without 'act_' prefix)"),
		),
		mcp.WithObject("params",
			mcp.Required(),
			mcp.Properties(map[string]any{
				"adlabels": map[string]any{
					"type":        "array",
					"description": "adlabels parameter",
					"items":       map[string]any{"type": "object"},
				},
				"adset_schedule": map[string]any{
					"type":        "array",
					"description": "adset_schedule parameter",
					"items":       map[string]any{"type": "object"},
				},
				"attribution_spec": map[string]any{
					"type":        "array",
					"description": "attribution_spec parameter",
					"items":       map[string]any{"type": "object"},
				},
				"bid_adjustments": map[string]any{
					"type":        "object",
					"description": "bid_adjustments parameter",
				},
				"bid_amount": map[string]any{
					"type":        "integer",
					"description": "bid_amount parameter",
				},
				"bid_constraints": map[string]any{
					"type":        "string",
					"description": "bid_constraints parameter",
				},
				"bid_strategy": map[string]any{
					"type":        "string",
					"description": "bid_strategy parameter",
					"enum":        []string{"COST_CAP", "LOWEST_COST_WITHOUT_CAP", "LOWEST_COST_WITH_BID_CAP", "LOWEST_COST_WITH_MIN_ROAS"},
				},
				"billing_event": map[string]any{
					"type":        "string",
					"description": "billing_event parameter",
					"enum":        []string{"APP_INSTALLS", "CLICKS", "IMPRESSIONS", "LINK_CLICKS", "LISTING_INTERACTION", "NONE", "OFFER_CLAIMS", "PAGE_LIKES", "POST_ENGAGEMENT", "PURCHASE", "THRUPLAY"},
				},
				"budget_source": map[string]any{
					"type":        "string",
					"description": "budget_source parameter",
					"enum":        []string{"NONE", "RMN"},
				},
				"budget_split_set_id": map[string]any{
					"type":        "string",
					"description": "budget_split_set_id parameter",
				},
				"campaign_attribution": map[string]any{
					"type":        "object",
					"description": "campaign_attribution parameter",
				},
				"campaign_id": map[string]any{
					"type":        "string",
					"description": "campaign_id parameter",
				},
				"campaign_spec": map[string]any{
					"type":        "object",
					"description": "campaign_spec parameter",
				},
				"creative_sequence": map[string]any{
					"type":        "array",
					"description": "creative_sequence parameter",
					"items":       map[string]any{"type": "string"},
				},
				"creative_sequence_repetition_pattern": map[string]any{
					"type":        "string",
					"description": "creative_sequence_repetition_pattern parameter",
					"enum":        []string{"FULL_SEQUENCE", "LAST_AD"},
				},
				"daily_budget": map[string]any{
					"type":        "integer",
					"description": "daily_budget parameter",
				},
				"daily_imps": map[string]any{
					"type":        "integer",
					"description": "daily_imps parameter",
				},
				"daily_min_spend_target": map[string]any{
					"type":        "integer",
					"description": "daily_min_spend_target parameter",
				},
				"daily_spend_cap": map[string]any{
					"type":        "integer",
					"description": "daily_spend_cap parameter",
				},
				"date_format": map[string]any{
					"type":        "string",
					"description": "date_format parameter",
				},
				"destination_type": map[string]any{
					"type":        "string",
					"description": "destination_type parameter",
					"enum":        []string{"APP", "APPLINKS_AUTOMATIC", "FACEBOOK", "FACEBOOK_LIVE", "FACEBOOK_PAGE", "IMAGINE", "INSTAGRAM_DIRECT", "INSTAGRAM_LIVE", "INSTAGRAM_PROFILE", "INSTAGRAM_PROFILE_AND_FACEBOOK_PAGE", "MESSAGING_INSTAGRAM_DIRECT_MESSENGER", "MESSAGING_INSTAGRAM_DIRECT_MESSENGER_WHATSAPP", "MESSAGING_INSTAGRAM_DIRECT_WHATSAPP", "MESSAGING_MESSENGER_WHATSAPP", "MESSENGER", "ON_AD", "ON_EVENT", "ON_PAGE", "ON_POST", "ON_VIDEO", "SHOP_AUTOMATIC", "WEBSITE", "WHATSAPP"},
				},
				"dsa_beneficiary": map[string]any{
					"type":        "string",
					"description": "dsa_beneficiary parameter",
				},
				"dsa_payor": map[string]any{
					"type":        "string",
					"description": "dsa_payor parameter",
				},
				"end_time": map[string]any{
					"type":        "string",
					"description": "end_time parameter",
				},
				"execution_options": map[string]any{
					"type":        "array",
					"description": "execution_options parameter",
					"enum":        []string{"include_recommendations", "validate_only"},
					"items":       map[string]any{"type": "string"},
				},
				"existing_customer_budget_percentage": map[string]any{
					"type":        "integer",
					"description": "existing_customer_budget_percentage parameter",
				},
				"frequency_control_specs": map[string]any{
					"type":        "array",
					"description": "frequency_control_specs parameter",
					"items":       map[string]any{"type": "object"},
				},
				"full_funnel_exploration_mode": map[string]any{
					"type":        "string",
					"description": "full_funnel_exploration_mode parameter",
					"enum":        []string{"EXTENDED_EXPLORATION", "LIMITED_EXPLORATION", "NONE_EXPLORATION"},
				},
				"is_ba_skip_delayed_eligible": map[string]any{
					"type":        "boolean",
					"description": "is_ba_skip_delayed_eligible parameter",
				},
				"is_dynamic_creative": map[string]any{
					"type":        "boolean",
					"description": "is_dynamic_creative parameter",
				},
				"is_incremental_attribution_enabled": map[string]any{
					"type":        "boolean",
					"description": "is_incremental_attribution_enabled parameter",
				},
				"is_sac_cfca_terms_certified": map[string]any{
					"type":        "boolean",
					"description": "is_sac_cfca_terms_certified parameter",
				},
				"lifetime_budget": map[string]any{
					"type":        "integer",
					"description": "lifetime_budget parameter",
				},
				"lifetime_imps": map[string]any{
					"type":        "integer",
					"description": "lifetime_imps parameter",
				},
				"lifetime_min_spend_target": map[string]any{
					"type":        "integer",
					"description": "lifetime_min_spend_target parameter",
				},
				"lifetime_spend_cap": map[string]any{
					"type":        "integer",
					"description": "lifetime_spend_cap parameter",
				},
				"line_number": map[string]any{
					"type":        "integer",
					"description": "line_number parameter",
				},
				"max_budget_spend_percentage": map[string]any{
					"type":        "integer",
					"description": "max_budget_spend_percentage parameter",
				},
				"min_budget_spend_percentage": map[string]any{
					"type":        "integer",
					"description": "min_budget_spend_percentage parameter",
				},
				"multi_optimization_goal_weight": map[string]any{
					"type":        "string",
					"description": "multi_optimization_goal_weight parameter",
					"enum":        []string{"BALANCED", "PREFER_EVENT", "PREFER_INSTALL", "UNDEFINED"},
				},
				"name": map[string]any{
					"type":        "string",
					"description": "name parameter",
					"required":    true,
				},
				"optimization_goal": map[string]any{
					"type":        "string",
					"description": "optimization_goal parameter",
					"enum":        []string{"ADVERTISER_SILOED_VALUE", "AD_RECALL_LIFT", "APP_INSTALLS", "APP_INSTALLS_AND_OFFSITE_CONVERSIONS", "CONVERSATIONS", "DERIVED_EVENTS", "ENGAGED_USERS", "EVENT_RESPONSES", "IMPRESSIONS", "IN_APP_VALUE", "LANDING_PAGE_VIEWS", "LEAD_GENERATION", "LINK_CLICKS", "MEANINGFUL_CALL_ATTEMPT", "MESSAGING_APPOINTMENT_CONVERSION", "MESSAGING_PURCHASE_CONVERSION", "NONE", "OFFSITE_CONVERSIONS", "PAGE_LIKES", "POST_ENGAGEMENT", "PROFILE_AND_PAGE_ENGAGEMENT", "PROFILE_VISIT", "QUALITY_CALL", "QUALITY_LEAD", "REACH", "REMINDERS_SET", "SUBSCRIBERS", "THRUPLAY", "VALUE", "VISIT_INSTAGRAM_PROFILE"},
				},
				"optimization_sub_event": map[string]any{
					"type":        "string",
					"description": "optimization_sub_event parameter",
					"enum":        []string{"NONE", "TRAVEL_INTENT", "TRAVEL_INTENT_BUCKET_01", "TRAVEL_INTENT_BUCKET_02", "TRAVEL_INTENT_BUCKET_03", "TRAVEL_INTENT_BUCKET_04", "TRAVEL_INTENT_BUCKET_05", "TRAVEL_INTENT_NO_DESTINATION_INTENT", "TRIP_CONSIDERATION", "VIDEO_SOUND_ON"},
				},
				"pacing_type": map[string]any{
					"type":        "array",
					"description": "pacing_type parameter",
					"items":       map[string]any{"type": "string"},
				},
				"promoted_object": map[string]any{
					"type":        "object",
					"description": "promoted_object parameter",
				},
				"rb_prediction_id": map[string]any{
					"type":        "string",
					"description": "rb_prediction_id parameter",
				},
				"regional_regulated_categories": map[string]any{
					"type":        "array",
					"description": "regional_regulated_categories parameter",
					"enum":        []string{"0", "1", "2", "3", "4", "5", "6"},
					"items":       map[string]any{"type": "string"},
				},
				"regional_regulation_identities": map[string]any{
					"type":        "object",
					"description": "regional_regulation_identities parameter",
				},
				"rf_prediction_id": map[string]any{
					"type":        "string",
					"description": "rf_prediction_id parameter",
				},
				"source_adset_id": map[string]any{
					"type":        "string",
					"description": "source_adset_id parameter",
				},
				"start_time": map[string]any{
					"type":        "string",
					"description": "start_time parameter",
				},
				"status": map[string]any{
					"type":        "string",
					"description": "status parameter",
					"enum":        []string{"ACTIVE", "ARCHIVED", "DELETED", "PAUSED"},
				},
				"targeting": map[string]any{
					"type":        "string",
					"description": "targeting parameter",
				},
				"time_based_ad_rotation_id_blocks": map[string]any{
					"type":        "array",
					"description": "time_based_ad_rotation_id_blocks parameter",
					"items":       map[string]any{"type": "array"},
				},
				"time_based_ad_rotation_intervals": map[string]any{
					"type":        "array",
					"description": "time_based_ad_rotation_intervals parameter",
					"items":       map[string]any{"type": "integer"},
				},
				"time_start": map[string]any{
					"type":        "string",
					"description": "time_start parameter",
				},
				"time_stop": map[string]any{
					"type":        "string",
					"description": "time_stop parameter",
				},
				"topline_id": map[string]any{
					"type":        "string",
					"description": "topline_id parameter",
				},
				"tune_for_category": map[string]any{
					"type":        "string",
					"description": "tune_for_category parameter",
					"enum":        []string{"CREDIT", "EMPLOYMENT", "FINANCIAL_PRODUCTS_SERVICES", "HOUSING", "ISSUES_ELECTIONS_POLITICS", "NONE", "ONLINE_GAMBLING_AND_GAMING"},
				},
			}),
			mcp.Description("Parameters object containing: adlabels (array<object>), adset_schedule (array<object>), attribution_spec (array<object>), bid_adjustments (object), bid_amount (integer), bid_constraints (map<string, Object>), bid_strategy (enum) [COST_CAP, LOWEST_COST_WITHOUT_CAP, LOWEST_COST_WITH_BID_CAP, LOWEST_COST_WITH_MIN_ROAS], billing_event (enum) [APP_INSTALLS, CLICKS, IMPRESSIONS, LINK_CLICKS, LISTING_INTERACTION, ...], budget_source (enum) [NONE, RMN], budget_split_set_id (string), campaign_attribution (object), campaign_id (string), campaign_spec (object), creative_sequence (array<string>), creative_sequence_repetition_pattern (enum) [FULL_SEQUENCE, LAST_AD], daily_budget (integer), daily_imps (integer), daily_min_spend_target (integer), daily_spend_cap (integer), date_format (string), destination_type (enum) [APP, APPLINKS_AUTOMATIC, FACEBOOK, FACEBOOK_LIVE, FACEBOOK_PAGE, ...], dsa_beneficiary (string), dsa_payor (string), end_time (datetime), execution_options (array<enum>) [include_recommendations, validate_only], existing_customer_budget_percentage (integer), frequency_control_specs (array<object>), full_funnel_exploration_mode (enum) [EXTENDED_EXPLORATION, LIMITED_EXPLORATION, NONE_EXPLORATION], is_ba_skip_delayed_eligible (boolean), is_dynamic_creative (boolean), is_incremental_attribution_enabled (boolean), is_sac_cfca_terms_certified (boolean), lifetime_budget (integer), lifetime_imps (integer), lifetime_min_spend_target (integer), lifetime_spend_cap (integer), line_number (integer), max_budget_spend_percentage (integer), min_budget_spend_percentage (integer), multi_optimization_goal_weight (enum) [BALANCED, PREFER_EVENT, PREFER_INSTALL, UNDEFINED], name (string) [required], optimization_goal (enum) [ADVERTISER_SILOED_VALUE, AD_RECALL_LIFT, APP_INSTALLS, APP_INSTALLS_AND_OFFSITE_CONVERSIONS, CONVERSATIONS, ...], optimization_sub_event (enum) [NONE, TRAVEL_INTENT, TRAVEL_INTENT_BUCKET_01, TRAVEL_INTENT_BUCKET_02, TRAVEL_INTENT_BUCKET_03, ...], pacing_type (array<string>), promoted_object (object), rb_prediction_id (string), regional_regulated_categories (array<enum>) [0, 1, 2, 3, 4, ...], regional_regulation_identities (object), rf_prediction_id (string), source_adset_id (string), start_time (datetime), status (enum) [ACTIVE, ARCHIVED, DELETED, PAUSED], targeting (Targeting), time_based_ad_rotation_id_blocks (array<array<integer>>), time_based_ad_rotation_intervals (array<integer>), time_start (datetime), time_stop (datetime), topline_id (string), tune_for_category (enum) [CREDIT, EMPLOYMENT, FINANCIAL_PRODUCTS_SERVICES, HOUSING, ISSUES_ELECTIONS_POLITICS, ...]"),
		),
	)
}

// HandleAdaccount_post_adsets handles the adaccount_post_adsets tool with context-based auth
func HandleAdaccount_post_adsets(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {
	// Get access token from context
	accessToken, ok := shared.FacebookAccessTokenFromContext(ctx)
	if !ok {
		return mcp.NewToolResultError("Facebook access token not found in context"), nil
	}

	// Build arguments map
	args := make(map[string]interface{})

	// Required: account_id
	if err := utils.ParseRequiredString(request, "account_id", args); err != nil {
		return mcp.NewToolResultError(err.Error()), nil
	}

	// Required: params
	// Parse required params object and expand into args
	val, err := request.RequireString("params")
	if err != nil {
		return mcp.NewToolResultError(fmt.Sprintf("missing required parameter params: %v", err)), nil
	}
	var paramsObj map[string]interface{}
	if err := json.Unmarshal([]byte(val), &paramsObj); err != nil {
		return mcp.NewToolResultError(fmt.Sprintf("invalid params object: %v", err)), nil
	}
	for key, value := range paramsObj {
		args[key] = value
	}

	// Call the API method
	result, err := Adaccount_post_adsets(accessToken, args)
	if err != nil {
		return mcp.NewToolResultError(fmt.Sprintf("failed to execute adaccount_post_adsets: %v", err)), nil
	}

	// Return the result as JSON
	resultJSON, err := json.Marshal(result)
	if err != nil {
		return mcp.NewToolResultError(fmt.Sprintf("failed to marshal result: %v", err)), nil
	}

	return mcp.NewToolResultText(string(resultJSON)), nil
}

// Adaccount_post_adsets performs POST adsets for AdAccount
func Adaccount_post_adsets(accessToken string, args map[string]interface{}) (interface{}, error) {
	var baseURL string

	// Extract account_id for URL construction
	accountId, ok := args["account_id"].(string)
	if !ok {
		return nil, fmt.Errorf("account_id is required for adaccount_post_adsets")
	}

	baseURL = fmt.Sprintf("%s/act_%s/adsets", FacebookGraphAPIBaseURL, accountId)

	// Build URL parameters, skipping ID parameters that are in the path
	skipParams := []string{
		"account_id",
	}
	urlParams := utils.BuildURLParams(accessToken, args, skipParams...)

	// Execute the API request
	return utils.ExecuteAPIRequest("POST", baseURL, urlParams)
}
