// Code generated by Facebook Business API codegen. DO NOT EDIT.

package tools

import (
	"context"
	"strings"

	"github.com/mark3labs/mcp-go/mcp"
	"github.com/mark3labs/mcp-go/server"
)

// GetAllTools returns all Facebook Business API MCP tools
func GetAllTools() []mcp.Tool {
	var allTools []mcp.Tool
	
{{range .NodeTypes}}	allTools = append(allTools, Get{{.}}Tools()...)
{{end}}
	return allTools
}

// GetFilteredTools returns filtered tools based on enabled objects
func GetFilteredTools(enabledObjects map[string]bool) []mcp.Tool {
	var filteredTools []mcp.Tool
	
{{range .NodeTypes}}	if enabled, ok := enabledObjects[strings.ToLower("{{.}}")]; ok && enabled {
		filteredTools = append(filteredTools, Get{{.}}Tools()...)
	}
{{end}}
	return filteredTools
}

// GetHandlers returns all tool handlers mapped by tool name
func GetHandlers() map[string]func(context.Context, mcp.CallToolRequest) (*mcp.CallToolResult, error) {
	handlers := make(map[string]func(context.Context, mcp.CallToolRequest) (*mcp.CallToolResult, error))
	
{{range .Handlers}}	handlers["{{.ToolName}}"] = {{.HandlerFunc}}
{{end}}
	return handlers
}

// RegisterTools registers all tools with an MCP server
func RegisterTools(s *server.MCPServer) error {
	tools := GetAllTools()
	handlers := GetHandlers()
	
	for _, tool := range tools {
		handler, exists := handlers[tool.Name]
		if !exists {
			continue // Skip tools without handlers
		}
		s.AddTool(tool, handler)
	}
	
	return nil
}